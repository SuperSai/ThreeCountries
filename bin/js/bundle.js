var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
const ScaleAnimScript_1 = require("./module/common/component/ScaleAnimScript");
const DaySignItem_1 = require("./module/daySign/view/DaySignItem");
const GuideSpeakView_1 = require("./module/guide/view/GuideSpeakView");
const HallScene_1 = require("./module/hall/view/HallScene");
const CurrencyView_1 = require("./module/hall/view/CurrencyView");
const HeadItem_1 = require("./module/hall/view/item/HeadItem");
const SystemBtn_1 = require("./module/hall/view/item/SystemBtn");
const LoginScene_1 = require("./module/login/view/LoginScene");
const RankItem_1 = require("./module/rank/view/RankItem");
const ShopItem_1 = require("./module/shop/view/ShopItem");
const TaskItem_1 = require("./module/task/view/TaskItem");
/*
* 游戏初始化配置;
*/
class GameConfig {
    constructor() { }
    static init() {
        var reg = Laya.ClassUtils.regClass;
        reg("module/common/component/ScaleAnimScript.ts", ScaleAnimScript_1.default);
        reg("module/daySign/view/DaySignItem.ts", DaySignItem_1.default);
        reg("module/guide/view/GuideSpeakView.ts", GuideSpeakView_1.default);
        reg("module/hall/view/HallScene.ts", HallScene_1.default);
        reg("module/hall/view/CurrencyView.ts", CurrencyView_1.default);
        reg("module/hall/view/item/HeadItem.ts", HeadItem_1.default);
        reg("module/hall/view/item/SystemBtn.ts", SystemBtn_1.default);
        reg("module/login/view/LoginScene.ts", LoginScene_1.default);
        reg("module/rank/view/RankItem.ts", RankItem_1.default);
        reg("module/shop/view/ShopItem.ts", ShopItem_1.default);
        reg("module/task/view/TaskItem.ts", TaskItem_1.default);
    }
}
GameConfig.width = 750;
GameConfig.height = 1334;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "vertical";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "moduleView/login/LoginScene.scene";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;
exports.default = GameConfig;
GameConfig.init();

},{"./module/common/component/ScaleAnimScript":53,"./module/daySign/view/DaySignItem":58,"./module/guide/view/GuideSpeakView":61,"./module/hall/view/CurrencyView":67,"./module/hall/view/HallScene":68,"./module/hall/view/item/HeadItem":72,"./module/hall/view/item/SystemBtn":73,"./module/login/view/LoginScene":75,"./module/rank/view/RankItem":77,"./module/shop/view/ShopItem":79,"./module/task/view/TaskItem":81}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const GameConfig_1 = require("./GameConfig");
const PathConfig_1 = require("./core_wq/config/PathConfig");
const AppConfig_1 = require("./core_wq/config/AppConfig");
class Main {
    constructor() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = Laya.Stage.SCALE_EXACTFIT;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        if (!AppConfig_1.default.isDebug || Laya.Browser.onMiniGame) { //是否读取外部地址的资源
            Laya.URL.basePath = PathConfig_1.default.AppResUrl;
        }
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    onVersionLoaded() {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    }
    onConfigLoaded() {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    }
}
//激活启动类
new Main();

},{"./GameConfig":1,"./core_wq/config/AppConfig":4,"./core_wq/config/PathConfig":5}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PathConfig_1 = require("../config/PathConfig");
/** 龙骨动画 */
class BoneAnim extends Laya.Sprite {
    constructor(boneName, isLoop = false, isHeroBone = false) {
        super();
        this._currIndex = 0;
        this._isLoop = false;
        this._isLoop = isLoop;
        if (isHeroBone) {
            this._aniPath = PathConfig_1.default.BONE_PATH.replace("{0}", boneName);
        }
        else {
            this._aniPath = "images/boneAnim/common/" + boneName + ".sk";
        }
        this._factory = new Laya.Templet();
        this.addEvents();
        this._factory.loadAni(this._aniPath);
    }
    addEvents() {
        this._factory.on(Laya.Event.COMPLETE, this, this.parseComplete);
        this._factory.on(Laya.Event.ERROR, this, this.onError);
    }
    removeEvents() {
        this._factory.off(Laya.Event.COMPLETE, this, this.parseComplete);
        this._factory.off(Laya.Event.ERROR, this, this.onError);
        this._armature.off(Laya.Event.STOPPED, this, this.completeHandler);
    }
    onError() {
        console.log("@David 龙骨动画路径：" + this._aniPath + " - 创建失败！");
    }
    parseComplete() {
        if (Laya.loader.getRes(this._aniPath)) {
            this._armature = this._factory.buildArmature(0);
            this.addChild(this._armature);
            this._armature.on(Laya.Event.STOPPED, this, this.completeHandler);
            this._armature.play(0, this._isLoop);
        }
        else {
            this.destroy();
        }
    }
    completeHandler() {
        if (this._armature && !this._isLoop) {
            this.completeBack && this.completeBack();
        }
    }
    play(playName = 0, isLoop = false) {
        if (this._armature) {
            this._armature.play(playName, this._isLoop);
        }
    }
    destroy() {
        if (this._armature) {
            this.removeEvents();
            this._armature.stop(); //停止龙骨动画播放
            this._armature.removeSelf(); //从显示列表移除龙骨动画本身
            this._armature.removeChildren(); //从显示列表移除龙骨动画子对象
            this._armature.destroy(true); //从显存销毁龙骨动画及其子对象
            this._armature = null;
            this._factory.destroy(); //释放动画模板类下的纹理数据
            this.removeChildren();
            this.removeSelf();
        }
    }
    get armature() {
        return this._armature;
    }
    set armature(value) {
        this._armature = value;
    }
}
exports.default = BoneAnim;

},{"../config/PathConfig":5}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class AppConfig {
}
AppConfig.isDebug = true;
AppConfig.HallScene = "moduleView/hall/HallScene.scene";
exports.default = AppConfig;

},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class PathConfig extends Laya.Script {
}
PathConfig.AppUrl = "https://sanguo.xiaoduogame.cn/api/"; //正式服地址
PathConfig.AppResUrl = "https://miniapp.vuggame.com/sanguo_xiaoduogame_cn/v1/";
PathConfig.RES_URL = PathConfig.AppResUrl + "images/";
PathConfig.HEAD_PATH = PathConfig.RES_URL + "headImg/";
PathConfig.BONE_PATH = PathConfig.RES_URL + "boneAnim/{0}.sk";
PathConfig.BONE_MONSTER_PATH = PathConfig.RES_URL + "boneAnim/enemy/{0}.sk";
/** 声音路径 */
PathConfig.SOUND_PATH = "musics/{0}.mp3";
/** 排行榜排名图片路径 */
PathConfig.RANK_PATH = "images/rank/cell_top{0}.png";
/** 功能按钮图片路径 */
PathConfig.SYSTEM_BTN_PATH = "images/hall/{0}.png";
exports.default = PathConfig;

},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class TimeConfig {
}
/**
 * 以秒为单位时，表示1秒的值，即1
 */
TimeConfig.SEC = 1;
/**
 * 以秒为单位时，表示1分钟的值，即60
 */
TimeConfig.MIN = 60;
/**
 * 以秒为单位时，表示1小时的值，即60 x 60
 */
TimeConfig.HOUR = 60 * 60;
/**
 * 以毫秒为单位时，表示1秒的值，即1000
 */
TimeConfig.SEC_IN_MILI = 1000;
/**
 * 以毫秒为单位时，表示1分钟的值，即1000 x 60
 */
TimeConfig.MIN_IN_MILI = 1000 * 60;
/**
 * 以毫秒为单位时，表示1小时的值，即1000 x 60 x 60
 */
TimeConfig.HOUR_IN_MILI = 1000 * 60 * 60;
exports.default = TimeConfig;

},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const HeroVO_1 = require("./vo/HeroVO");
const TSDictionary_1 = require("../utils/TSDictionary");
const CSVParser_1 = require("./base/CSVParser");
const HeroConfigVO_1 = require("./vo/HeroConfigVO");
const LevelVO_1 = require("./vo/LevelVO");
const SoundVO_1 = require("./vo/SoundVO");
const GuideVO_1 = require("./vo/GuideVO");
const MapVO_1 = require("./vo/MapVO");
const SystemVO_1 = require("./vo/SystemVO");
class GlobalData extends Laya.Script {
    constructor() {
        super();
        /** json数据是否全部解析完毕 */
        this._hasParasComplete = false;
        this._needParseCount = 0;
        this._currParseCount = 0;
        this._jsonCount = 0;
    }
    setup(callback) {
        this._callBack = callback;
        this._totalStepCsvList = new TSDictionary_1.default();
        GlobalData.AllCacheData = new TSDictionary_1.default();
        this.initModel();
        this.initStep();
    }
    initModel() {
        this._totalStepCsvList.Add(GlobalData.HeroVO, HeroVO_1.default);
        this._totalStepCsvList.Add(GlobalData.HeroConfigVO, HeroConfigVO_1.default);
        this._totalStepCsvList.Add(GlobalData.LevelVO, LevelVO_1.default);
        this._totalStepCsvList.Add(GlobalData.SoundVO, SoundVO_1.default);
        this._totalStepCsvList.Add(GlobalData.GuideVO, GuideVO_1.default);
        this._totalStepCsvList.Add(GlobalData.MapVO, MapVO_1.default);
        this._totalStepCsvList.Add(GlobalData.SystemVO, SystemVO_1.default);
    }
    // 解析初始数据表
    initStep() {
        this._needParseCount = this._totalStepCsvList.GetLenght();
        this.onEnterFrameLoader();
    }
    onEnterFrameLoader() {
        if (this._currParseCount >= this._needParseCount) {
            this._hasParasComplete = true;
            this._callBack && this._callBack();
        }
        else {
            //一次解析两个文件
            this.getCsvFile();
            // this.getCsvFile();
        }
    }
    /** 开始逐个逐个解析JSON文件 */
    getCsvFile() {
        if (this._jsonCount < this._needParseCount) {
            let key = this._totalStepCsvList.getKeyByIndex(this._jsonCount);
            key = "config/csvJson/" + key;
            key = key.replace('_', '.');
            Laya.loader.load(key, Laya.Handler.create(this, this.onLoaded, [key]), null, Laya.Loader.TEXT, 0, true);
            this._jsonCount++;
        }
    }
    onLoaded(key) {
        let data = Laya.loader.getRes(key);
        try {
            if (data) {
                let data_json = JSON.parse(data);
                let csvStr = JSON.stringify(data_json);
                this.starSingleParse(csvStr);
            }
        }
        catch (error) {
            this._jsonCount--;
        }
        finally {
            this.onEnterFrameLoader();
        }
    }
    starSingleParse(csvStr) {
        let key = this._totalStepCsvList.getKeyByIndex(this._currParseCount);
        let DataClass = this._totalStepCsvList.getValueByIndex(this._currParseCount);
        let dic = CSVParser_1.default.ParseJsonData(DataClass, csvStr);
        GlobalData.AllCacheData.Add(key, dic);
        // console.log("@David 表数据：key:", key, " --- data:", dic);
        this._currParseCount++;
    }
    /** 获取对应表的指定某条数据 */
    static getData(type, key) {
        let dic = GlobalData.AllCacheData.TryGetValue(type);
        return dic.TryGetValue(key);
    }
    /**
     * 获取对应表的某条数据中指定名字下的数据
     * @param type 那张表
     * @param filterType 某一项名字
     * @param filterValue 值
     * 例如：parseInt(GlobleVOData.getDataByFilter(GlobleVOData.ServerConfigVO, "id", "MAX_MAP_COUNT")[0].value)
     */
    static getDataByFilter(type, filterType, filterValue) {
        let dic = GlobalData.AllCacheData.TryGetValue(type);
        if (dic == null)
            return [];
        let filterd = dic.TryGetListByCondition((bean) => bean[filterType] == filterValue);
        return filterd;
    }
    /** 获取对应表的所有数据 */
    static getAllValue(type) {
        let dic = GlobalData.AllCacheData.TryGetValue(type);
        return dic == null ? [] : dic.getValues();
    }
    /**
     * 查找对应条件的数据
     */
    static getDataByCondition(type, value) {
        let dic = GlobalData.AllCacheData.TryGetValue(type);
        if (dic == null)
            return [];
        let arr = dic.TryGetListByCondition(value);
        return arr;
    }
    static get Ins() {
        if (!GlobalData._instance) {
            GlobalData._instance = new GlobalData();
        }
        return GlobalData._instance;
    }
}
/** 英雄基础表 */
GlobalData.HeroVO = "Hero_json";
/** 英雄配置表 */
GlobalData.HeroConfigVO = "HeroConfig_json";
/** 等级配置表 */
GlobalData.LevelVO = "Level_json";
/** 声音表 */
GlobalData.SoundVO = "Sound_json";
/** 新手引导表 */
GlobalData.GuideVO = "Guide_json";
/** 地图表 */
GlobalData.MapVO = "Map_json";
/** 功能开放表 */
GlobalData.SystemVO = "System_json";
exports.default = GlobalData;

},{"../utils/TSDictionary":47,"./base/CSVParser":8,"./vo/GuideVO":9,"./vo/HeroConfigVO":10,"./vo/HeroVO":11,"./vo/LevelVO":12,"./vo/MapVO":13,"./vo/SoundVO":14,"./vo/SystemVO":15}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const TSDictionary_1 = require("../../utils/TSDictionary");
/**
 * CSV解析类
 */
class CSVParser {
    //用json替换csv,json解析文件
    static ParseJsonData(infoClass, sourceText) {
        let self = this;
        var result = new TSDictionary_1.default();
        sourceText = sourceText.trim();
        let obj = JSON.parse(sourceText);
        var keyList = null;
        var typeList = null;
        var dataList = null;
        var itemList = null;
        keyList = obj.titles;
        if (obj.data == null)
            return result; //空表不做处理
        dataList = obj.data; //数据是从0开始
        typeList = dataList[0];
        var i = 0;
        var dataLen = dataList.length;
        for (i = 0; i < dataLen; i++) {
            var record = new infoClass();
            itemList = dataList[i];
            self.ParseRecord(keyList, itemList, record);
            result.Add(parseInt(itemList[0]), record);
        }
        sourceText = null;
        return result;
    }
    static ParseRecord(keyList, itemList, record) {
        let self = this;
        var n = itemList.length;
        for (var i = 0; i < n; i++) {
            record[keyList[i]] = itemList[i];
        }
    }
}
exports.default = CSVParser;

},{"../../utils/TSDictionary":47}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const MathUtil_1 = require("../../utils/MathUtil");
class GuideVO {
    set isForce(value) {
        this._isForce = Number(value) == 0 ? false : true;
    }
    /** 是否强制引导 */
    get isForce() {
        return this._isForce;
    }
    set clickAreaParam(value) {
        this._clickAreaParam = MathUtil_1.default.splitToNumber(value);
    }
    /** 可点击区域参数  x#y#w#h */
    get clickAreaParam() {
        return this._clickAreaParam;
    }
    set fingerParam(value) {
        this._fingerParam = MathUtil_1.default.splitToNumber(value);
    }
    /** 手指指引位置参数 x#y */
    get fingerParam() {
        return this._fingerParam;
    }
    set speakParam(value) {
        this._speakParam = MathUtil_1.default.splitToNumber(value);
    }
    /** 对话框位置参数  x#y */
    get speakParam() {
        return this._speakParam;
    }
}
exports.default = GuideVO;

},{"../../utils/MathUtil":43}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class HeroConfigVO {
}
exports.default = HeroConfigVO;

},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class HeroVO {
    constructor() {
        this.id = 0;
        this.type = 0;
        this.name = "";
        /** 头像图片 */
        this.imgUrl = "";
        /** 对白 */
        this.dialogue = "";
        /** 龙骨动画 */
        this.modelImgUrl = "";
        /** 坐骑 */
        this.horse = "";
        /** 攻击动作 */
        this.atkAnimKey = "";
    }
}
exports.default = HeroVO;

},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class LevelVO {
}
exports.default = LevelVO;

},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class MapVO {
}
exports.default = MapVO;

},{}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class SoundVO {
}
exports.default = SoundVO;

},{}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 功能开放表
 */
class SystemVO {
    constructor() {
        this.id = 0;
        /** 名字 */
        this.name = "";
        /** 描述 */
        this.des = "";
        /** 开放等级 */
        this.openLevel = 0;
        /** 排序位置 */
        this.sort = 0;
        /** 图片 */
        this.icon = "";
    }
}
exports.default = SystemVO;

},{}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const MathUtil_1 = require("../utils/MathUtil");
const TimeConfig_1 = require("../config/TimeConfig");
const PoolMgr_1 = require("../msg/PoolMgr");
class ItemExplode extends Laya.Sprite {
    constructor(animationName = "rollingCoin") {
        super();
        this._animationName = animationName;
    }
    play(fromX, fromY) {
        const timestamp = new Date().getTime();
        if (timestamp - ItemExplode.lastTimestamp > ItemExplode.COOL_DOWN) {
            ItemExplode.lastTimestamp = timestamp;
            this._animNum = 0;
            this._animLen = 7;
            this.pos(fromX, fromY);
            this.createAnim();
        }
        else {
            Laya.timer.frameOnce(5, this, this.onAnimComplete);
        }
        return this;
    }
    createAnim() {
        this._animNum++;
        const anim = PoolMgr_1.default.Ins.get(Laya.Animation, this._animationName);
        // @ts-ignore
        if (!anim.url_loaded) {
            // @ts-ignore
            anim.url_loaded = true;
            anim.loadAtlas("images/boneAnim/effect/" + this._animationName + ".json");
            anim.interval = 25;
        }
        const scale = MathUtil_1.default.range(0.6, 0.8);
        anim
            .pivot(30, 30)
            .pos(MathUtil_1.default.rangeInt(-5, 5), MathUtil_1.default.rangeInt(-5, 5))
            .scale(scale, scale);
        anim.play(0, true);
        anim.alpha = 1;
        const tx = (Math.abs(anim.x) / anim.x) * MathUtil_1.default.rangeInt(30, 220);
        // @ts-ignore
        anim.speedY = MathUtil_1.default.range(-7.5, -5);
        // @ts-ignore
        anim.g = 0.3;
        // @ts-ignore
        anim.updateHandler = Laya.Handler.create(this, this.onAnimUpdate, [anim], false);
        const duration = TimeConfig_1.default.SEC_IN_MILI * MathUtil_1.default.range(0.6, 0.8);
        // prettier-ignore
        // @ts-ignore
        Laya.Tween.to(anim, { x: tx, update: anim.updateHandler }, duration * 1.5, Laya.Ease.quadOut);
        // prettier-ignore
        Laya.Tween.to(anim, { alpha: 0, complete: Laya.Handler.create(this, this.onAnimComplete, [anim]) }, duration * 0.4, Laya.Ease.quadOut, null, duration * 0.6);
        Laya.timer.frameOnce(1, this, () => {
            this.addChild(anim);
        });
        if (this._animNum < this._animLen) {
            // prettier-ignore
            this.createAnim();
        }
    }
    onAnimUpdate(anim) {
        // @ts-ignore
        anim.y += anim.speedY;
        // @ts-ignore
        anim.speedY += anim.g;
    }
    onAnimComplete(anim) {
        if (anim) {
            anim.stop();
            anim.removeSelf();
            // @ts-ignore
            anim.updateHandler.clear();
            PoolMgr_1.default.Ins.return(anim, this._animationName);
        }
        try {
            if (this && this.numChildren <= 0) {
                this.destroy(true);
            }
        }
        catch (e) {
            console.log('@FREEMAN: ItemExplode.ts => ', e);
        }
    }
}
ItemExplode.lastTimestamp = 0;
ItemExplode.COOL_DOWN = 500;
exports.default = ItemExplode;

},{"../config/TimeConfig":6,"../msg/PoolMgr":26,"../utils/MathUtil":43}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class EventType {
}
/** 更新货币 */
EventType.UPDATE_CURRENCY = "UPDATE_CURRENCY";
/** 更新用户等级 */
EventType.UPDATE_USER_LEVEL = "UPDATE_USER_LEVEL";
/** 更新用户经验 */
EventType.UPDATE_USER_EXP = "UPDATE_USER_EXP";
/** 更新每秒收益 */
EventType.UPDATE_INCOME = "UPDATE_INCOME";
/** 回到游戏中 */
EventType.COME_BACK_GAME = "COME_BACK_GAME";
/** 英雄储存箱 */
EventType.HERO_BOX = "HERO_BOX";
/** 加速 */
EventType.GAME_ACCE_START = "GAME_ACCE_START";
/** 每日签到奖励领取完毕 */
EventType.DAYSIGN_REWARD_COMPLETE = "DAYSIGN_REWARD_COMPLETE";
/** 显示离线奖励 */
EventType.SHOW_OFFLINE_REWARD = "SHOW_OFFLINE_REWARD";
/** 新手下一步 */
EventType.GUIDE_NEXT_STEP = "GUIDE_NEXT_STEP";
/** 打开功能界面 */
EventType.OPEN_VIEW = "OPEN_VIEW";
/** 移除商店红点 */
EventType.REMOVE_SHOP_REN_POINT = "REMOVE_SHOP_REN_POINT";
/** 移除任务红点 */
EventType.REMOVE_TASK_REN_POINT = "REMOVE_TASK_REN_POINT";
/** 移除转盘红点 */
EventType.REMOVE_LUCK_PRIZE_REN_POINT = "REMOVE_LUCK_PRIZE_REN_POINT";
/** 移除签到红点 */
EventType.REMOVE_SIGN_REN_POINT = "REMOVE_SIGN_REN_POINT";
/** 移除关注红点 */
EventType.REMOVE_FOLLOW_REN_POINT = "REMOVE_FOLLOW_REN_POINT";
/** 更新系统功能红点 */
EventType.UPDATE_SYSTEM_RED_POINT = "UPDATE_SYSTEM_RED_POINT";
/** 更新系统功能按钮 */
EventType.UPDATE_SYSTEM_BTN = "UPDATE_SYSTEM_BTN";
exports.default = EventType;

},{}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class EventsMgr extends Laya.Sprite {
    constructor() {
        super();
        this.type = 1;
        this.dict = {};
        this.eVec = new Array();
        this.lastRunTime = 0;
        if (this.type == 0) {
            this.frameLoop(1, this, this.onRun);
        }
    }
    /**
     * 添加消息监听
     * @param type 消息唯一标识
     * @param listener 侦听函数
     * @param listenerObj 侦听函数所属对象
     *
     */
    addListener(type, listener, listenerObj) {
        let arr = this.dict[type];
        if (arr == null) {
            arr = new Array();
            this.dict[type] = arr;
        }
        //检测是否已经存在
        let i = 0;
        let len = arr.length;
        for (i; i < len; i++) {
            if (arr[i][0] == listener && arr[i][1] == listenerObj) {
                return;
            }
        }
        arr.push([listener, listenerObj]);
    }
    /**
     * 移除消息监听
     * @param type 消息唯一标识
     * @param listener 侦听函数
     * @param listenerObj 侦听函数所属对象
     */
    removeListener(type, listener, listenerObj) {
        let arr = this.dict[type];
        if (arr == null)
            return;
        let i = 0;
        let len = arr.length;
        for (i; i < len; i++) {
            if (arr[i][0] == listener && arr[i][1] == listenerObj) {
                arr.splice(i, 1);
                break;
            }
        }
        if (arr.length == 0) {
            this.dict[type] = null;
            delete this.dict[type];
        }
    }
    /**
     * 移除某一对象的所有监听
     * @param listenerObj 侦听函数所属对象
     */
    removeAll(listenerObj) {
        let keys = Object.keys(this.dict);
        for (let i = 0, len = keys.length; i < len; i++) {
            let type = keys[i];
            let arr = this.dict[type];
            for (let j = 0; j < arr.length; j++) {
                if (arr[j][1] == listenerObj) {
                    arr.splice(j, 1);
                    j--;
                }
            }
            if (arr.length == 0) {
                this.dict[type] = null;
                delete this.dict[type];
            }
        }
    }
    /**
     * 触发消息
     * @param type 消息唯一标识
     * @param param 消息参数
     */
    dispatch(type, ...param) {
        if (this.dict[type] == null) {
            return;
        }
        let vo = Laya.Pool.getItemByClass("MessageVo", MessageVo);
        vo.type = type;
        vo.param = param;
        if (this.type == 0) {
            this.eVec.push(vo);
        }
        else if (this.type == 1) {
            this.dealMsg(vo);
        }
        else {
            // Log.trace("MessageCenter未实现的类型");
        }
    }
    /** 运行 */
    onRun() {
        let currTime = Laya.Browser.now();
        let inSleep = currTime - this.lastRunTime > 100;
        this.lastRunTime = currTime;
        if (inSleep) {
            while (this.eVec.length > 0) {
                this.dealMsg(this.eVec.shift());
            }
        }
        else {
            while (this.eVec.length > 0) {
                this.dealMsg(this.eVec.shift());
                if ((Laya.Browser.now() - currTime) > 5) {
                    break;
                }
            }
        }
    }
    /** 处理一条消息 */
    dealMsg(msgVo) {
        let listeners = this.dict[msgVo.type];
        let i = 0;
        let len = listeners.length;
        let listener = null;
        while (i < len) {
            listener = listeners[i];
            listener[0].apply(listener[1], msgVo.param);
            if (listeners.length != len) {
                len = listeners.length;
                i--;
            }
            i++;
        }
        msgVo.dispose();
        Laya.Pool.recover("MessageVo", msgVo);
    }
    /** 清空处理 */
    clear() {
        this.dict = {};
        this.eVec.splice(0);
    }
    static get Ins() {
        if (EventsMgr._ins == null) {
            EventsMgr._ins = new EventsMgr();
        }
        return EventsMgr._ins;
    }
}
exports.default = EventsMgr;
class MessageVo {
    constructor() {
    }
    dispose() {
        this.type = null;
        this.param = null;
    }
}

},{}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const EventsMgr_1 = require("../event/EventsMgr");
const EventType_1 = require("../event/EventType");
const LayerMgr_1 = require("../layer/LayerMgr");
const GuideSpeakView_1 = require("../../module/guide/view/GuideSpeakView");
class GuideMask extends Laya.Sprite {
    constructor() {
        super();
        /** 是否点击空白区域进入下一步引导 */
        this.isClickMaskNextStep = false;
        this.init();
    }
    init() {
        //绘制一个蓝色方块，不被抠图
        var gameContainer = new Laya.Sprite();
        gameContainer.alpha = 0;
        gameContainer.loadImage("images/component/tip_bg.png");
        this.addChild(gameContainer);
        // 引导所在容器
        this.guideContainer = new Laya.Sprite();
        // 设置容器为画布缓存
        this.guideContainer.cacheAs = "bitmap";
        this.addChild(this.guideContainer);
        gameContainer.on(Laya.Event.CLICK, this, this.onNextStep);
        //绘制遮罩区，含透明度，可见游戏背景
        var maskArea = new Laya.Sprite();
        maskArea.alpha = 0.5;
        maskArea.graphics.drawRect(0, 0, LayerMgr_1.default.stageDesignWidth, LayerMgr_1.default.stageDesignHeight, "#000000");
        this.guideContainer.addChild(maskArea);
        //绘制一个圆形区域，利用叠加模式，从遮罩区域抠出可交互区
        this.interactionArea = new Laya.Sprite();
        //设置叠加模式
        this.interactionArea.blendMode = "destination-out";
        this.guideContainer.addChild(this.interactionArea);
        this.hitArea = new Laya.HitArea();
        this.hitArea.hit.drawRect(0, 0, LayerMgr_1.default.stageDesignWidth, LayerMgr_1.default.stageDesignHeight, "#000000");
        this.guideContainer.hitArea = this.hitArea;
        this.guideContainer.mouseEnabled = true;
    }
    onNextStep() {
        if (this.isClickMaskNextStep) {
            this.reset();
            EventsMgr_1.default.Ins.dispatch(EventType_1.default.GUIDE_NEXT_STEP);
        }
    }
    /** 可点击区域的大小 */
    drawCliclAreaSize(data) {
        this.hitArea.unHit.clear();
        this.hitArea.unHit.drawRect(data.x, data.y, data.w, data.h, "#000000");
        this.interactionArea.graphics.clear();
        this.interactionArea.graphics.drawRect(data.x, data.y, data.w, data.h, "#000000");
    }
    /** 显示对话框 */
    showSpeakView(content, pos, speakComplete = null) {
        if (this._speakView == null) {
            this._speakView = new GuideSpeakView_1.default();
            this._speakView.zOrder = 1000;
            this.addChild(this._speakView);
        }
        this._speakView.visible = true;
        this._speakView.pos(pos.x, pos.y);
        this._speakView.setSpeakContent(content, speakComplete);
    }
    /** 显示手指指引 */
    showFigner(pos, rotation = -40, effectType = 1) {
        if (this._finger == null) {
            this._finger = new Laya.Image("images/guide/guide_jiantou2.png");
            this._finger.zOrder = 1000;
            this._finger.anchorX = this._finger.anchorY = 0.5;
            this.addChild(this._finger);
        }
        this._finger.visible = true;
        this._finger.rotation = rotation;
        this._finger.pos(pos.x, pos.y);
        if (effectType == 1) {
            this._timeLine = new Laya.TimeLine();
            this._timeLine.addLabel("tl1", 0).to(this._finger, { x: this._finger.x - 20, y: this._finger.y + 20 }, 500)
                .addLabel("tl2", 0).to(this._finger, { x: this._finger.x, y: this._finger.y }, 500, Laya.Ease.backInOut);
            this._timeLine.play(0, true);
        }
        else if (effectType == 2) {
            this._timeLine = new Laya.TimeLine();
            this._timeLine.addLabel("tl1", 0).to(this._finger, { x: this._finger.x - 100, y: this._finger.y }, 500)
                .addLabel("tl2", 0).to(this._finger, { x: this._finger.x, y: this._finger.y }, 500, Laya.Ease.backInOut);
            this._timeLine.play(0, true);
        }
    }
    reset() {
        if (this._speakView) {
            this._speakView.visible = false;
        }
        if (this._finger) {
            this._finger.visible = false;
        }
        if (this._timeLine) {
            this._timeLine.destroy();
            this._timeLine = null;
        }
        this.visible = false;
    }
}
exports.default = GuideMask;

},{"../../module/guide/view/GuideSpeakView":61,"../event/EventType":17,"../event/EventsMgr":18,"../layer/LayerMgr":21}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const GuideMask_1 = require("./GuideMask");
const LayerMgr_1 = require("../layer/LayerMgr");
const EventsMgr_1 = require("../event/EventsMgr");
const EventType_1 = require("../event/EventType");
const GlobalData_1 = require("../db/GlobalData");
const HallControl_1 = require("../../module/hall/HallControl");
/**
 * 新手引导
 */
class GuideMgr {
    constructor() {
        this._guideStep = 1;
        /** 是否在进行新手流程 */
        this.isGuide = false;
    }
    setup() {
        this._guideLen = GlobalData_1.default.getAllValue(GlobalData_1.default.GuideVO).length;
        if (this._guideStep < 0 || this._guideStep >= this._guideLen)
            return;
        this._maskView = new GuideMask_1.default();
        this._maskView.visible = false;
        LayerMgr_1.default.Ins.guideLayer.addChild(this._maskView);
        EventsMgr_1.default.Ins.addListener(EventType_1.default.GUIDE_NEXT_STEP, this.onNextStep, this);
        this.onNextStep();
    }
    onNextStep() {
        if (this._maskView == null || this._guideStep < 0 || this._guideStep > this._guideLen) {
            this.isGuide = false;
            if (this._maskView)
                this._maskView.reset();
            return;
        }
        this._maskView.visible = true;
        this._guideVO = GlobalData_1.default.getData(GlobalData_1.default.GuideVO, this._guideStep);
        if (this._guideVO) {
            if (this.isNextStep()) {
                this.isGuide = true;
                this._maskView.visible = true;
                if (this._guideVO.isForce) {
                    this._maskView.drawCliclAreaSize({ x: this._guideVO.clickAreaParam[0], y: this._guideVO.clickAreaParam[1], w: this._guideVO.clickAreaParam[2], h: this._guideVO.clickAreaParam[3] });
                }
                if (this._guideVO.speakParam.length > 0) {
                    this._maskView.showSpeakView(this._guideVO.speakContent, { x: this._guideVO.speakParam[0], y: this._guideVO.speakParam[1] });
                }
                if (this._guideVO.fingerParam.length > 0) {
                    this._maskView.showFigner({ x: this._guideVO.fingerParam[0], y: this._guideVO.fingerParam[1] }, this._guideVO.fingerRotation, this._guideVO.fingerEffectType);
                }
                //特殊要求
                switch (this._guideStep) {
                    case 1: //第一次购买英雄
                        break;
                    case 2: //第一次合成英雄
                        break;
                }
            }
            else {
                return;
            }
        }
        else {
            this.isGuide = false;
            this._maskView.reset();
            console.log("@David 步骤ID无法找到表中对应数据  step：", this._guideStep);
            return;
        }
        this._guideStep++;
    }
    /** 是否可以进入下一步骤 */
    isNextStep() {
        switch (this._guideVO.type) {
            case GUIDE_TYPE.PASS:
                return true;
            case GUIDE_TYPE.USER_LEVEL:
                break;
            case GUIDE_TYPE.HERO_LEVEL:
                break;
            case GUIDE_TYPE.HERO_COUNT:
                if (HallControl_1.default.Ins.Model.heroCount >= this._guideVO.condition) {
                    this._maskView.reset();
                    return true;
                }
                break;
            default:
                return false;
        }
        return false;
    }
    get guideStep() {
        return this._guideStep;
    }
    set guideStep(value) {
        this._guideStep = value;
    }
    static get Ins() {
        if (!this._instance) {
            this._instance = new GuideMgr();
        }
        return this._instance;
    }
}
exports.default = GuideMgr;
var GUIDE_TYPE;
(function (GUIDE_TYPE) {
    GUIDE_TYPE[GUIDE_TYPE["PASS"] = 0] = "PASS";
    /** 用户等级 */
    GUIDE_TYPE[GUIDE_TYPE["USER_LEVEL"] = 1] = "USER_LEVEL";
    /** 英雄等级 */
    GUIDE_TYPE[GUIDE_TYPE["HERO_LEVEL"] = 2] = "HERO_LEVEL";
    /** 英雄数量 */
    GUIDE_TYPE[GUIDE_TYPE["HERO_COUNT"] = 3] = "HERO_COUNT";
})(GUIDE_TYPE || (GUIDE_TYPE = {}));

},{"../../module/hall/HallControl":62,"../db/GlobalData":7,"../event/EventType":17,"../event/EventsMgr":18,"../layer/LayerMgr":21,"./GuideMask":19}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Layer_1 = require("./base/Layer");
const MaskLayer_1 = require("./base/MaskLayer");
const PointUtils_1 = require("../utils/PointUtils");
class LayerMgr {
    constructor() {
        this._layers = [];
    }
    get layers() {
        return this._layers;
    }
    /** 当前的鼠标位置 X */
    static get mouseX() {
        return Laya.stage.mouseX / LayerMgr.adaptScaleX;
    }
    /** 当前的鼠标位置 Y */
    static get mouseY() {
        return Laya.stage.mouseY / LayerMgr.adaptScaleY;
    }
    /** 获取对象的实际舞台变形数据 */
    static getRealStageRect(target) {
        let loc = PointUtils_1.default.localToGlobal(target);
        let rect = new Laya.Rectangle(loc.x * LayerMgr.adaptScale + this.left, loc.y * LayerMgr.adaptScale + this.top, target.width * LayerMgr.adaptScale, target.height * LayerMgr.adaptScale);
        let scaleFactor = Laya.stage.designWidth / Laya.Browser.clientWidth;
        rect.x = Math.round(rect.x / scaleFactor);
        rect.y = Math.round(rect.y / scaleFactor);
        rect.width = Math.round(rect.width / scaleFactor);
        rect.height = Math.round(rect.height / scaleFactor);
        return rect;
    }
    // prettier-ignore
    initLayer(container, designWidth, designHeight) {
        let pixelRatio = Laya.Browser.pixelRatio;
        let clientWidth = Laya.Browser.clientWidth * pixelRatio;
        let clientHeight = Laya.Browser.clientHeight * pixelRatio;
        let adaptScaleX = clientWidth / designWidth;
        let adaptScaleY = clientHeight / designHeight;
        let adaptScale = Math.min(adaptScaleX, adaptScaleY);
        let stageWidth = designWidth * adaptScaleX;
        let stageHeight = designHeight * adaptScaleY;
        let top = 0;
        let left = 0;
        if (adaptScale === adaptScaleX) {
            top = (stageHeight - designHeight * adaptScale) * 0.5;
        }
        else {
            left = (stageWidth - designWidth * adaptScale) * 0.5;
        }
        container.width = stageWidth;
        container.height = stageHeight;
        LayerMgr.stageDesignWidth = designWidth;
        LayerMgr.stageDesignHeight = designHeight;
        LayerMgr.clientWidth = Laya.Browser.clientWidth;
        LayerMgr.clientHeight = Laya.Browser.clientHeight;
        LayerMgr.adaptScaleX = adaptScaleX;
        LayerMgr.adaptScaleY = adaptScaleY;
        LayerMgr.adaptScale = adaptScale;
        LayerMgr.pixelRatio = pixelRatio;
        LayerMgr.top = top;
        LayerMgr.left = left;
        LayerMgr.clientTop = (top / pixelRatio);
        LayerMgr.clientLeft = (left / pixelRatio);
        // console.log(StringTools.wrapValueObjects(["designWidth", "designHeight"],[designWidth, designHeight]));
        // console.log(StringTools.wrapValueObjects(["clientWidth", "clientHeight"],[clientWidth, clientHeight]));
        // console.log(StringTools.wrapValueObjects(["adaptScaleX", "adaptScaleY", "pixelRatio"],[adaptScaleX, adaptScaleY, pixelRatio]));
        // console.log(StringTools.wrapValueObjects(["top", "left"], [top, left]));
        let idx = 0;
        this.renderLayer = this.createLayer(idx++, "renderLayer", container);
        this.navLayer = this.createLayer(idx++, "navLayer", container);
        this.flyLayer = this.createLayer(idx++, "flyLayer", container);
        this.frameLayer = this.createMaskLayer(idx++, "frameLayer", container);
        this.subFrameLayer = this.createMaskLayer(idx++, "subFrameLayer", container);
        this.alertLayer = this.createMaskLayer(idx++, "alertLayer", container);
        this.screenEffectLayer = this.createLayer(idx++, "screenEffectLayer", container);
        this.rollMessageLayer = this.createLayer(idx++, "rollMessageLayer", container);
        this.guideLayer = this.createLayer(idx++, "guideLayer", container);
        this.smallLoadingLayer = this.createMaskLayer(idx++, "smallLoadingLayer", container);
        this.noteLayer = this.createLayer(idx++, "noteLayer", container);
        this.debugLayer = this.createLayer(idx++, "debugLayer", container);
        for (let layer of this._layers) {
            layer.pos(left, 0);
            layer.scale(adaptScaleX, adaptScaleY);
        }
    }
    createLayer(index, name, container) {
        this._layers.push(container.addChild(new Layer_1.default(index, name)));
        return this._layers[this._layers.length - 1];
    }
    createMaskLayer(index, name, container) {
        this._layers.push(container.addChild(new MaskLayer_1.default(index, name)));
        return this._layers[this._layers.length - 1];
    }
    static get Ins() {
        if (!this._instance) {
            this._instance = new LayerMgr();
        }
        return this._instance;
    }
}
/** Laya.stage 的设计宽度，一般为人为设定 */
LayerMgr.stageDesignWidth = 0;
/** Laya.stage 的设计高度，一般为人为设定 */
LayerMgr.stageDesignHeight = 0;
/** Laya.stage 的设备宽度，一般根据机器自动设定 */
LayerMgr.clientWidth = 0;
/** Laya.stage 的设备高度，一般根据机器自动设定 */
LayerMgr.clientHeight = 0;
/** Laya.stage.width 针对设备的适应倍数 */
LayerMgr.adaptScaleX = 0;
/** Laya.stage.height 针对设备的适应倍数 */
LayerMgr.adaptScaleY = 0;
/** LayerMgr._layers 针对设备的适应倍数 */
LayerMgr.adaptScale = 0;
/** 设备像素倍率 */
LayerMgr.pixelRatio = 1;
/** 对设备适应后，LayerMgr._layers 距离屏幕顶部的距离 */
LayerMgr.top = 0;
/** 对设备适应后，LayerMgr._layers 距离屏幕左侧的距离 */
LayerMgr.left = 0;
/** 设备Top，距离屏幕顶部的真实屏幕距离 */
LayerMgr.clientTop = 0;
/** 设备Left，距离屏幕左侧的真实屏幕距离 */
LayerMgr.clientLeft = 0;
exports.default = LayerMgr;

},{"../utils/PointUtils":44,"./base/Layer":22,"./base/MaskLayer":23}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Layer extends Laya.Sprite {
    get layerId() {
        return this._layerId;
    }
    constructor(layerId, $name = null) {
        super();
        this._layerId = layerId;
        this.mouseEnabled = true;
        this.mouseThrough = true;
        this.name = $name;
    }
    getLayerId() {
        return 0;
    }
}
exports.default = Layer;

},{}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Layer_1 = require("./Layer");
const LayerEvent_1 = require("../event/LayerEvent");
const LayerMgr_1 = require("../LayerMgr");
class MaskLayer extends Layer_1.default {
    constructor(layerId, $name = null) {
        super(layerId, $name);
        this.initMask();
        this._handlers = [];
        this._maskEnabled = true;
        this._useAnimation = true;
    }
    set maskEnabled(value) {
        this._maskEnabled = value;
        if (value) {
            if (this.numChildren > 0) {
                super.addChildAt(this._mask, 0);
            }
        }
        else {
            this._mask.removeSelf();
        }
    }
    set maskAlpha(value) {
        this._mask.alpha = value;
    }
    set useAnimation(value) {
        this._useAnimation = value;
    }
    get animationComplete() {
        return this._animationComplete;
    }
    /**
     * 添加的回调只会触发，一般用来关闭已打开的视图窗口
     * @param caller
     * @param listener
     * @param args
     * @param maskAlpha
     */
    addChildWithMaskCall(caller, listener, args = null, maskAlpha = MaskLayer.DEFAULT_MASK_ALPHA) {
        this.maskEnabled = true;
        if (maskAlpha !== MaskLayer.DEFAULT_MASK_ALPHA) {
            this._mask.alpha = maskAlpha;
        }
        this.addChild(caller);
        this._handlers.push(Laya.Handler.create(caller, listener, args));
    }
    addChildWithCustomMask(customMask, caller, listener, args = null) {
        if (!customMask) {
            return;
        }
        this.maskEnabled = true;
        this._usingCustomMask = true;
        this._customMask = customMask;
        if (this._customMask.parent) {
            this._customMaskParent = this._customMask.parent;
            this._customMaskIndex = this._customMask.parent.getChildIndex(this._customMask);
        }
        this._mask.alpha = 0;
        this.addChild(caller);
        this._handlers.push(Laya.Handler.create(caller, listener, args));
    }
    addChild(node) {
        this.superAddChild(node);
        if (this._usingCustomMask && this._customMask) {
            super.addChildAt(this._customMask, 0);
        }
        if (this._maskEnabled) {
            super.addChildAt(this._mask, 0);
        }
        this.event(LayerEvent_1.default.CHILD_ADDED, this.numChildren);
        return node;
    }
    removeChild(node) {
        super.removeChild(node);
        let sp = node;
        if (sp) {
            if (sp.layer_tween) {
                sp.layer_tween.complete();
                sp.scale(sp.layer_origin_scale.x, sp.layer_origin_scale.y);
                delete sp.layer_tween;
            }
        }
        if (this.numChildren === 2 && this._usingCustomMask) {
            if (this._customMask) {
                if (this._customMaskParent) {
                    this._customMaskParent.addChildAt(this._customMask, this._customMaskIndex);
                }
                this._usingCustomMask = false;
                this._customMask = null;
                this._customMaskParent = null;
                this._customMaskIndex = 0;
            }
        }
        if (this.numChildren === 1 && this.getChildAt(0) === this._mask) {
            super.removeChild(this._mask);
            this._animationComplete = false;
            this._mask.alpha = MaskLayer.DEFAULT_MASK_ALPHA;
        }
        this.event(LayerEvent_1.default.CHILD_REMOVED, this.numChildren);
        return node;
    }
    initMask() {
        this._mask = new Laya.Sprite();
        this._mask.graphics.clear();
        this._mask.graphics.drawRect(0, 0, LayerMgr_1.default.stageDesignWidth, LayerMgr_1.default.stageDesignHeight, "#000000");
        this._mask.alpha = MaskLayer.DEFAULT_MASK_ALPHA;
        this._mask.size(LayerMgr_1.default.stageDesignWidth, LayerMgr_1.default.stageDesignHeight);
        this._mask.on(Laya.Event.CLICK, this, this.applyClick);
    }
    superAddChild(node, index) {
        if (this._useAnimation && !this._animationComplete) {
            let sp = node;
            if (sp && !sp.layer_tween) {
                if (!sp.layer_origin_scale) {
                    sp.layer_origin_scale = new Laya.Point(sp.scaleX, sp.scaleY);
                }
                let comp = node;
                let size = new Laya.Point();
                if (comp) {
                    size.setTo(sp.displayWidth, sp.displayHeight);
                }
                else {
                    let rect = sp.getBounds();
                    size.setTo(rect.width, rect.height);
                }
                sp.layer_tween = Laya.Tween.from(node, { x: sp.x + (size.x >> 1), y: sp.y + (size.y >> 1), scaleX: 0, scaleY: 0 }, 300, Laya.Ease.backInOut, Laya.Handler.create(this, () => {
                    this._animationComplete = true;
                    this.event(LayerEvent_1.default.LAYER_ANIMATION_COMPLETE, this._animationComplete);
                }));
            }
        }
        this._mask.off(Laya.Event.CLICK, this, this.applyClick);
        Laya.timer.once(1000 * 2, this, () => {
            this._mask.on(Laya.Event.CLICK, this, this.applyClick);
        });
        if (index) {
            super.addChildAt(node, index);
        }
        else {
            super.addChild(node);
        }
        return node;
    }
    applyClick() {
        if (this._handlers.length) {
            this._handlers.pop().run();
        }
    }
}
MaskLayer.DEFAULT_MASK_ALPHA = 0.7;
exports.default = MaskLayer;

},{"../LayerMgr":21,"../event/LayerEvent":24,"./Layer":22}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class LayerEvent {
}
LayerEvent.CHILD_ADDED = "CHILD_ADDED";
LayerEvent.CHILD_REMOVED = "CHILD_REMOVED";
LayerEvent.LAYER_ANIMATION_COMPLETE = "LAYER_ANIMATION_COMPLETE";
exports.default = LayerEvent;

},{}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const LayerMgr_1 = require("../layer/LayerMgr");
const AlignUtils_1 = require("../utils/AlignUtils");
class MsgMgr extends Laya.Script {
    constructor() { super(); }
    /** 显示提示消息 */
    showMsg(content) {
        var tipBarSp = new Laya.Image("images/component/tip_bg.png");
        AlignUtils_1.default.setToScreenGoldenPos(tipBarSp);
        LayerMgr_1.default.Ins.rollMessageLayer.addChild(tipBarSp);
        tipBarSp.zOrder = 1001;
        tipBarSp.width = 500;
        tipBarSp.height = 80;
        tipBarSp.pivot(tipBarSp.width / 2, tipBarSp.height / 2);
        tipBarSp.sizeGrid = "10,10,10,10";
        var coinLabel = new Laya.Label();
        coinLabel.text = content;
        coinLabel.fontSize = 40;
        coinLabel.color = "#ffffff";
        coinLabel.width = tipBarSp.width * 0.98;
        //设置文本水平居中
        coinLabel.align = "center";
        //设置文本垂直居中
        coinLabel.valign = "middle";
        //设置自动换行
        coinLabel.wordWrap = true;
        //重置背景高度
        tipBarSp.height = coinLabel.height + 20;
        tipBarSp.addChild(coinLabel);
        coinLabel.pos(tipBarSp.width / 2, tipBarSp.height / 2);
        coinLabel.pivot(coinLabel.width / 2, coinLabel.height / 2);
        Laya.Tween.to(tipBarSp, { x: tipBarSp.x, y: (tipBarSp.y - 100), alpha: 0 }, 3000, Laya.Ease.cubicInOut, Laya.Handler.create(this, (tipBarSp) => {
            tipBarSp.removeSelf();
        }, [coinLabel]));
    }
    static get Ins() {
        if (MsgMgr._instance == null) {
            MsgMgr._instance = new MsgMgr();
        }
        return MsgMgr._instance;
    }
}
exports.default = MsgMgr;

},{"../layer/LayerMgr":21,"../utils/AlignUtils":39}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class PoolMgr {
    constructor() {
        this._instances = {};
    }
    get(classDefinition, name) {
        if (!name) {
            name = classDefinition.__className;
        }
        let instances = this._instances[name];
        if (!instances) {
            instances = [];
            this._instances[name] = instances;
        }
        if (instances.length > 0) {
            return instances.pop();
        }
        return new classDefinition();
    }
    return(instance, name) {
        if (!name) {
            name = instance.__proto__.__className;
        }
        let instances = this._instances[name];
        if (!instances) {
            instances = [];
            this._instances[name] = instances;
        }
        instances.push(instance);
        return instance;
    }
    static get Ins() {
        if (PoolMgr._instance == null) {
            PoolMgr._instance = new PoolMgr();
        }
        return PoolMgr._instance;
    }
}
exports.default = PoolMgr;

},{}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ShareMgr_1 = require("./ShareMgr");
const HallControl_1 = require("../../module/hall/HallControl");
const EventsMgr_1 = require("../event/EventsMgr");
const EventType_1 = require("../event/EventType");
const SystemConfig_1 = require("../../module/hall/config/SystemConfig");
/**
 * 红点管理类
 */
class RedPointMgr {
    updateRedPoint() {
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_SYSTEM_RED_POINT, SystemConfig_1.default.SIGN, this.isShowSignRedPoint);
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_SYSTEM_RED_POINT, SystemConfig_1.default.TASK, this.isShowTaskRedPoint);
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_SYSTEM_RED_POINT, SystemConfig_1.default.LUCK_PRIZE, this.isShowLuckPrizeRedPoint);
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_SYSTEM_RED_POINT, SystemConfig_1.default.FOLLOW, this.isShowFollowRedPoint);
    }
    /** 是否显示商店红点 */
    get isShowShopRedPoint() {
        return ((ShareMgr_1.default.Ins.getAdTimes(11) + ShareMgr_1.default.Ins.getShareTimes(11)) > 0) && (HallControl_1.default.Ins.Model.heroLevel >= 6 && HallControl_1.default.Ins.Model.heroLevel < HallControl_1.default.Ins.Model.heroMaxLevel);
    }
    /** 移除商店红点 */
    removeCarShopRedPoin() {
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.REMOVE_SHOP_REN_POINT, true);
    }
    /** 是否显示任务红点 */
    get isShowTaskRedPoint() {
        return HallControl_1.default.Ins.Model.showTaskRedPoint;
    }
    /** 移除任务红点 */
    removeTaskRedPoint() {
        HallControl_1.default.Ins.Model.showTaskRedPoint = false;
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.REMOVE_TASK_REN_POINT, true);
    }
    /** 是否显示转盘红点 */
    get isShowLuckPrizeRedPoint() {
        return HallControl_1.default.Ins.Model.showLuckPrizeRedPoint;
    }
    /** 移除转盘红点 */
    removeLuckPrizeRedPoint() {
        HallControl_1.default.Ins.Model.showLuckPrizeRedPoint = false;
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.REMOVE_LUCK_PRIZE_REN_POINT, true);
    }
    /** 是否显示每日签到红点 */
    get isShowSignRedPoint() {
        return HallControl_1.default.Ins.Model.showDailySignRedPoint;
    }
    /** 移除签到红点 */
    removeSignRedPoint() {
        HallControl_1.default.Ins.Model.showDailySignRedPoint = false;
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.REMOVE_SIGN_REN_POINT, true);
    }
    /** 是否显示关注红点 */
    get isShowFollowRedPoint() {
        return HallControl_1.default.Ins.Model.showFollowRedPoint;
    }
    /** 移除关注红点 */
    removeFollowRedPoint() {
        HallControl_1.default.Ins.Model.showFollowRedPoint = false;
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.REMOVE_FOLLOW_REN_POINT, true);
    }
    static get Ins() {
        if (RedPointMgr._instance == null) {
            RedPointMgr._instance = new RedPointMgr();
        }
        return RedPointMgr._instance;
    }
}
exports.default = RedPointMgr;

},{"../../module/hall/HallControl":62,"../../module/hall/config/SystemConfig":63,"../event/EventType":17,"../event/EventsMgr":18,"./ShareMgr":29}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const HttpMgr_1 = require("../net/HttpMgr");
const PlayerMgr_1 = require("../player/PlayerMgr");
const SoundMgr_1 = require("../sound/SoundMgr");
const SoundType_1 = require("../sound/SoundType");
const MsgMgr_1 = require("./MsgMgr");
const StorageUtil_1 = require("../utils/StorageUtil");
const HallControl_1 = require("../../module/hall/HallControl");
class SDKMgr extends Laya.Script {
    constructor() {
        super();
        this._authenticLoginBtn = null; //授权/登录专用
        this._isSharing = false; //是否正在分享（离线奖励）
    }
    /** 初始化微信 */
    initWX() {
        if (!Laya.Browser.onWeiXin)
            return;
        this.wxOnShow();
        this.wxOnHide();
        this.wxMemoryWarning();
        this.wxSetKeepScreenOn();
    }
    /** 跳转小程序 */
    onMiniProgram(_miniCode, _miniPagePath) {
        if (_miniCode == null || _miniCode.length < 1) {
            return;
        }
        this.wxNavigateToMiniProgram({
            // appId: 'wx10e1554b604d7568',
            appId: _miniCode,
            path: _miniPagePath,
            // extraData: {
            //     box: '1'
            // },
            // envVersion: 'develop',
            success(res) {
                console.log("mini跳转成功", res);
            }
        });
        //小程序跳转次数统计
        HttpMgr_1.default.Ins.requestShareAdFinish("minipro_" + _miniCode);
    }
    /** 显示banner广告 */
    showBannerAd(_force = false, _offsetY = 0) {
        console.log("@David 显示banner广告");
        if (this.isForbidBannerAd && _force == false) {
            return;
        }
        this.closeBannerAd();
        let bannerAd = this.wxCreateBannerAd({
            adUnitId: 'adunit-ac9d79e1b7532c21',
            top: (1334 + _offsetY)
        });
        if (bannerAd) {
            bannerAd.show();
        }
        this.bannerAd = bannerAd;
        return bannerAd;
    }
    closeBannerAd(_forbid = false) {
        if (_forbid) {
            this.isForbidBannerAd = true;
        }
        if (this.bannerAd) {
            this.bannerAd.hide();
            this.bannerAd.destroy();
            this.bannerAd = null;
        }
    }
    /** 显示激励视频 */
    showVideoAd(_callback, _noAdCallback = null, _shareEnabled = true) {
        if (this.videoAd)
            return;
        let videoAd = this.wxCreateRewardedVideoAd({ adUnitId: 'adunit-1847f3675e9f5699' });
        if (videoAd) {
            this.videoAd = videoAd;
            videoAd.load().then(() => videoAd.show());
            let closeCallback = (res) => {
                // 用户点击了【关闭广告】按钮
                // 小于 2.1.0 的基础库版本，res 是一个 undefined
                if (res && res.isEnded || res === undefined) {
                    // 正常播放结束，可以下发游戏奖励
                }
                else {
                    // 播放中途退出，不下发游戏奖励
                }
                this.isForbidBannerAd = false;
                _callback && _callback(res);
                videoAd.offClose(closeCallback);
                this.videoAd = null;
            };
            videoAd.onClose(closeCallback);
            let errCallback = (err) => {
                _noAdCallback && _noAdCallback();
            };
            videoAd.onError(errCallback);
            this.isForbidBannerAd = true;
        }
    }
    wxGetOpenDataContext() {
        return window["wx"] ? wx.getOpenDataContext() : null;
    }
    /** 通知域刷新 */
    wxPostMessage(data) {
        wx.postMessage(data);
    }
    /** 获取微信token */
    wxHttpToken(baseUrl, callBack = null, forceNew = false) {
        let token = window["wx"] ? wx.getStorageSync("token") : "";
        if (token && forceNew == false) {
            callBack && callBack(token);
        }
        else {
            this.wxCreateToken(baseUrl, (token) => {
                callBack && callBack(token);
            });
        }
        return token;
    }
    /** 微信登陆 */
    wxLogin(statusCallback) {
        wx.getSetting({
            success: (result) => {
                if (result.authSetting['scope.userInfo']) { //授权成功
                    statusCallback && statusCallback(1);
                    wx.getUserInfo({
                        /** 是否带上登录态信息 */
                        withCredentials: true,
                        lang: "zh_CN",
                        success: (result) => {
                            // 获取用户信息
                            if (this._authenticLoginBtn) {
                                this._authenticLoginBtn.destroy();
                                this._authenticLoginBtn = null;
                            }
                            console.log("@David userInfo:", result.userInfo);
                            PlayerMgr_1.default.Ins.Info.wxUserInfo = result.userInfo;
                            statusCallback && statusCallback(2);
                        },
                        fail: () => { },
                        complete: () => { }
                    });
                }
                else { //没有授权
                    statusCallback && statusCallback(3);
                    if (this._authenticLoginBtn) {
                        this._authenticLoginBtn.show();
                        return;
                    }
                    if (this._authenticLoginBtn == null) {
                        let button = wx.createUserInfoButton({
                            type: 'text',
                            text: '',
                            style: {
                                left: 0,
                                top: 0,
                                width: Laya.stage.width,
                                height: Laya.stage.height,
                                lineHeight: 40,
                                textAlign: 'center',
                                fontSize: 16,
                                borderRadius: 4
                            }
                        });
                        button.onTap((res1) => {
                            button.hide();
                            //重新验证
                            this.wxLogin(statusCallback);
                        });
                        this._authenticLoginBtn = button;
                    }
                }
            },
            fail: () => {
            },
            complete: () => {
            }
        });
    }
    /** 设置游戏常亮 */
    wxSetKeepScreenOn() {
        wx.setKeepScreenOn({
            /**
             * 是否保持屏幕常亮
             */
            keepScreenOn: true,
            success: (result) => { },
            fail: () => { },
            complete: () => { }
        });
    }
    wxCreateToken(url, callback = null) {
        let launchOptions = window["wx"] ? wx.getLaunchOptionsSync() : "";
        // 获取⼴告id
        let aid = 0;
        let channel = "0_" + launchOptions.scene;
        if (launchOptions && launchOptions.query && launchOptions.query.channel) {
            let gdt_vid = launchOptions.query.gdt_vid;
            let weixinadinfo = launchOptions.query.weixinadinfo;
            if (weixinadinfo) {
                let weixinadinfoArr = weixinadinfo.split(".");
                aid = weixinadinfoArr[0];
            }
            channel = "" + launchOptions.query.channel + "_" + launchOptions.scene;
        }
        else if (launchOptions && launchOptions.referrerInfo) {
            if (launchOptions.referrerInfo.extraData && launchOptions.referrerInfo.extraData.channel) {
                channel = "" + launchOptions.referrerInfo.extraData.channel + "_" + launchOptions.scene;
            }
            else {
                if (launchOptions.referrerInfo.appId) {
                    channel = launchOptions.referrerInfo.appId + "_" + launchOptions.scene;
                }
            }
        }
        if (window["wx"]) {
            wx.login({
                success: (result) => {
                    wx.request({
                        url: url + "v1/token/user",
                        data: {
                            code: result.code,
                            channel: channel,
                            aid: aid
                        },
                        header: {
                            'content-type': 'application/json' // 默认值
                        },
                        method: 'POST',
                        dataType: "json",
                        responseType: "text",
                        success: (result) => {
                            console.log("@David TOKEN:", result);
                            wx.setStorage({
                                key: "token",
                                data: result.data.token,
                                success: () => { },
                                fail: () => { },
                                complete: () => { }
                            });
                            callback && callback(result.data.token);
                        },
                        fail: () => { },
                        complete: () => { }
                    });
                },
                fail: () => { },
                complete: () => { }
            });
        }
    }
    /** 游戏新版本提示 */
    wxShowUpdateVersionTips() {
        if (!Laya.Browser.onWeiXin)
            return;
        const updateManager = wx.getUpdateManager();
        if (updateManager) {
            updateManager.onCheckForUpdate(function (res) {
                // 请求完新版本信息的回调
                console.log(res.hasUpdate);
            });
            updateManager.onUpdateReady(function () {
                wx.showModal({
                    title: "更新提示",
                    content: "新版本已经准备好，是否重启应用？",
                    /**
                     * 是否显示取消按钮，默认为 true
                     */
                    showCancel: true,
                    /**
                     * 取消按钮的文字，默认为"取消"，最多 4 个字符
                     */
                    cancelText: "取消",
                    /**
                     * 取消按钮的文字颜色，默认为"#000000"
                     */
                    cancelColor: "#000000",
                    /**
                     * 确定按钮的文字，默认为"确定"，最多 4 个字符
                     */
                    confirmText: "确定",
                    /**
                     * 确定按钮的文字颜色，默认为"#3CC51F"
                     */
                    confirmColor: "#3CC51F",
                    success: (result) => { },
                    fail: () => { },
                    complete: () => { }
                });
            });
            updateManager.onUpdateFailed(function () {
                MsgMgr_1.default.Ins.showMsg("游戏新版本更新失败！");
            });
        }
    }
    wxOnShow() {
        wx.onShow((options) => {
            console.log("@David onLaunch:", options);
            PlayerMgr_1.default.Ins.Info.wxLaunch = options;
            if (!SoundMgr_1.default.Ins.bgOn) {
                SoundMgr_1.default.Ins.setBgOn(true);
                SoundMgr_1.default.Ins.setEffectOn(true);
                SoundMgr_1.default.Ins.playBg(SoundType_1.default.BG_MUSIC);
            }
            //查询是否有离线奖励
            StorageUtil_1.default.requestOfflinePrizeData();
        });
    }
    wxOnHide() {
        wx.onHide(() => {
            SoundMgr_1.default.Ins.setBgOn(false);
            SoundMgr_1.default.Ins.setEffectOn(false);
            StorageUtil_1.default.saveStorageToLocal(true);
            this.wxSetUserCloudStorage();
        });
    }
    /** 上传数据到开放域 */
    wxSetUserCloudStorage() {
        //上传微信云
        let money = Math.floor(PlayerMgr_1.default.Ins.Info.userGold + HallControl_1.default.Ins.Model.heroAllAsset()).toString();
        let kvDataList = [{
                "key": "score",
                "value": money
            }, {
                "key": "city",
                "value": (PlayerMgr_1.default.Ins.Info.wxUserInfo ? PlayerMgr_1.default.Ins.Info.wxUserInfo.city : '火星')
            }, {
                "key": "userId",
                "value": PlayerMgr_1.default.Ins.Info.userId.toString()
            }];
        wx.setUserCloudStorage({
            "KVDataList": kvDataList,
            success: function (src) {
                console.log("setUserCloudStorage success", src);
            },
            fail: function (src) {
                console.log("setUserCloudStorage fail", src);
            }
        });
    }
    /** 内存警告 */
    wxMemoryWarning() {
        wx.onMemoryWarning(() => {
            console.log("@David 内存过高警告！！！");
            wx.triggerGC();
        });
    }
    wxOnShare(_data) {
        if (this._isSharing) {
            return;
        }
        this._isSharing = true;
        setTimeout(() => {
            this._isSharing = false;
        }, 350);
        // 群分享设置withShareTicket:true 
        if (_data.isGroupShare) {
            wx.updateShareMenu({
                withShareTicket: true,
                success: () => { }, fail: () => { }, complete: () => { }
            });
        }
        else {
            wx.updateShareMenu({
                withShareTicket: false,
                success: () => { }, fail: () => { }, complete: () => { }
            });
        }
        setTimeout(() => {
            wx.shareAppMessage({
                title: _data.title,
                imageUrl: _data.imageUrl,
                query: _data.query,
                success: function (res) {
                    if (_data.isGroupShare) {
                        wx.getSystemInfo({
                            success: (result) => {
                                if (result.platform == 'android') {
                                    //获取群详细信息
                                    wx.getShareInfo({
                                        shareTicket: res.shareTickets,
                                        success: (result) => {
                                            //这里写你分享到群之后要做的事情，比如增加次数什么的
                                            _data.success && _data.success(result);
                                        },
                                        fail: () => {
                                            _data.success && _data.success(false);
                                        },
                                        complete: () => { },
                                    });
                                }
                                if (result.platform == 'ios') { //如果用户的设备是IOS
                                    if (res.shareTickets != undefined) {
                                        // console.log("分享的是群:", res);
                                        wx.getShareInfo({
                                            shareTicket: res.shareTickets,
                                            success: (result) => {
                                                //分享到群之后你要做的事情
                                                _data.success && _data.success(res);
                                            },
                                            fail: () => { },
                                            complete: () => { },
                                        });
                                    }
                                    else { //分享到个人要做的事情，我给的是一个提示
                                        // console.log("分享的是个人");
                                        _data.success && _data.success(false);
                                    }
                                }
                            },
                            fail: () => { },
                            complete: () => { }
                        });
                    }
                    else {
                        _data.success && _data.success(res);
                    }
                },
                fail: function (res) {
                    _data.fail && _data.fail(res);
                },
                complete: function (res) {
                    this._isSharing = true;
                    setTimeout(() => {
                        this._isSharing = false;
                    }, 350);
                }
            });
        }, 1);
    }
    /** 创建激励视频 */
    wxCreateRewardedVideoAd(param) {
        let video1 = wx.createRewardedVideoAd({ adUnitId: param.adUnitId });
        return video1;
    }
    /** 创建Banner广告 */
    wxCreateBannerAd(_param) {
        let systemInfo = wx.getSystemInfoSync();
        let pRatio = systemInfo.windowWidth / 750.0;
        let bannerY = 1334 * pRatio;
        if (_param.top) {
            bannerY = _param.top * pRatio;
        }
        let bannerAd = wx.createBannerAd({
            adUnitId: _param.adUnitId,
            style: {
                left: (systemInfo.screenWidth - 300) / 2,
                top: bannerY - 100,
                width: 300,
                height: 100,
            }
        });
        if (bannerAd) {
            let isResize = false;
            bannerAd.onResize(res => {
                //适配
                if (isResize == false) {
                    isResize = true;
                    bannerAd.style.top = bannerY - res.height;
                }
            });
        }
        return bannerAd;
    }
    /** 跳转小程序 */
    wxNavigateToMiniProgram(data) {
        wx.navigateToMiniProgram(data);
    }
    /** 客服 */
    wxOpenCustomerService(param) {
        wx.openCustomerServiceConversation(param);
    }
    /** 投诉建议按钮 */
    wxCreateFeedbackButton(btnVect) {
        if (window["wx"]) {
            let systemInfo = wx.getSystemInfoSync();
            let pRatio = systemInfo.windowWidth / 750.0;
            let button = wx.createFeedbackButton({
                type: 'text',
                text: '',
                style: {
                    left: btnVect.x * pRatio,
                    top: btnVect.y * pRatio,
                    width: btnVect.width * pRatio,
                    height: btnVect.height * pRatio,
                    lineHeight: 40,
                    textAlign: 'center',
                    fontSize: 16,
                    borderRadius: 4,
                    opacity: 0.1
                }
            });
        }
    }
    static get Ins() {
        if (SDKMgr._instance == null) {
            SDKMgr._instance = new SDKMgr();
        }
        return SDKMgr._instance;
    }
}
exports.default = SDKMgr;

},{"../../module/hall/HallControl":62,"../net/HttpMgr":30,"../player/PlayerMgr":32,"../sound/SoundMgr":37,"../sound/SoundType":38,"../utils/StorageUtil":46,"./MsgMgr":25}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const HallControl_1 = require("../../module/hall/HallControl");
const MathUtil_1 = require("../utils/MathUtil");
const HttpMgr_1 = require("../net/HttpMgr");
const MsgMgr_1 = require("./MsgMgr");
const PlayerMgr_1 = require("../player/PlayerMgr");
const EventsMgr_1 = require("../event/EventsMgr");
const EventType_1 = require("../event/EventType");
const SDKMgr_1 = require("./SDKMgr");
const AppConfig_1 = require("../config/AppConfig");
class ShareMgr extends Laya.Script {
    constructor() {
        super();
        this._shareFailedTimes = 0; //分享失败保底
        this._isOpenShareAd = false; //打开视频分享
        this.shareSwitchOpen = false; //分享开关打开
        this._model = HallControl_1.default.Ins.Model;
    }
    /** 请求分享/视频 */
    showShareOrAdv(callback = null, type = 0, isTask = false, isGroupShare = false) {
        if (AppConfig_1.default.isDebug) {
            callback && callback();
            return;
        }
        if (this._isOpenShareAd) {
            return 0;
        }
        this._isOpenShareAd = true;
        Laya.stage.timerOnce(1000, this, () => {
            this._isOpenShareAd = false;
        });
        //是否优先视频广告
        if (this.getAdTimes(type) > 0) {
            SDKMgr_1.default.Ins.showVideoAd((_res) => {
                if (_res && _res.isEnded || _res === undefined) {
                    this.decreAdTimes(type);
                    let adKey = "ad";
                    if (type == 10) {
                        adKey = "ad_acce";
                    }
                    else if (type == 11) {
                        adKey = "ad_free_car";
                    }
                    else if (type == 12) {
                        adKey = "ad_no_money";
                    }
                    HttpMgr_1.default.Ins.requestShareAdFinish(adKey);
                    callback && callback();
                }
            }, () => {
                //无视频回调
                this._model.hasVideoAd = false;
                this._isOpenShareAd = false;
                this.showShareOrAdv(callback, type, isTask, isGroupShare);
            }, this.isShareEnable);
            return 0;
        }
        switch (type) {
            case 1: //广告无限次数
                SDKMgr_1.default.Ins.showVideoAd((_res) => {
                    if (_res && _res.isEnded || _res === undefined) {
                        callback && callback();
                        HttpMgr_1.default.Ins.requestShareAdFinish("ad_other", _res);
                    }
                }, () => {
                    //无视频回调
                    this._model.hasVideoAd = false;
                    this._isOpenShareAd = false;
                    this.showShareOrAdv(callback, 0, isTask, isGroupShare);
                });
                break;
            case 10: //加速
                if (this.getShareTimes(type) < 1) {
                    MsgMgr_1.default.Ins.showMsg("今日分享次数已用完");
                    return 1;
                }
                this.toShare((_res) => {
                    this.decreShareTimes(type);
                    HttpMgr_1.default.Ins.requestShareAdFinish("share_acce", _res);
                    callback && callback();
                }, isTask, isGroupShare);
                break;
            case 11: //免费的车
                if (this.getShareTimes(type) < 1) {
                    MsgMgr_1.default.Ins.showMsg("今日分享次数已用完");
                    return 1;
                }
                this.toShare((_res) => {
                    this.decreShareTimes(type);
                    HttpMgr_1.default.Ins.requestShareAdFinish("share_free_car", _res);
                    callback && callback();
                }, isTask, isGroupShare);
                break;
            case 12: //无金币
                if (this.getShareTimes(type) < 1) {
                    MsgMgr_1.default.Ins.showMsg("今日分享次数已用完");
                    return 1;
                }
                this.toShare((_res) => {
                    MsgMgr_1.default.Ins.showMsg("求助已发出");
                    Laya.timer.once(30000, this, () => {
                        callback && callback();
                    });
                    this.decreShareTimes(type);
                    HttpMgr_1.default.Ins.requestShareAdFinish("share_no_money", _res);
                }, isTask, isGroupShare);
                break;
            default: //分享无限次数
                this.toShare((_res) => {
                    callback && callback();
                    HttpMgr_1.default.Ins.requestShareAdFinish("share_other", _res);
                }, isTask, isGroupShare);
                break;
        }
        return 0;
    }
    /** 分享广告可点击次数 */
    getAdTimes(type) {
        if (this._model && this._model.shareAdTimes && this._model.hasVideoAd) {
            if (type == 10) {
                return MathUtil_1.default.parseInt(this._model.shareAdTimes.ad_acce_num);
            }
            else if (type == 11) {
                return MathUtil_1.default.parseInt(this._model.shareAdTimes.ad_free_car_num);
            }
            else if (type == 12) {
                return MathUtil_1.default.parseInt(this._model.shareAdTimes.ad_no_money_num);
            }
        }
        return 0;
    }
    /** 分享剩余次数 */
    getShareTimes(type) {
        if (this._model && this._model.shareAdTimes) {
            if (type == 10) {
                return MathUtil_1.default.parseInt(this._model.shareAdTimes.share_acce_num);
            }
            else if (type == 11) {
                return MathUtil_1.default.parseInt(this._model.shareAdTimes.share_free_car_num);
            }
            else if (type == 12) {
                return MathUtil_1.default.parseInt(this._model.shareAdTimes.share_no_money_num);
            }
        }
        return 0;
    }
    /** 减少分享广告可点击次数 */
    decreAdTimes(type) {
        if (this._model && this._model.shareAdTimes) {
            if (type == 10) {
                this._model.shareAdTimes.ad_acce_num--;
            }
            else if (type == 11) {
                this._model.shareAdTimes.ad_free_car_num--;
            }
            else if (type == 12) {
                this._model.shareAdTimes.ad_no_money_num--;
            }
            else {
                this._model.shareAdTimes.ad_num--;
            }
        }
        console.log("@David 减少分享广告可点击次数:", this._model.shareAdTimes);
    }
    /** 减少分享可点击次数 */
    decreShareTimes(type) {
        if (this._model.shareAdTimes) {
            if (type == 10) {
                this._model.shareAdTimes.share_acce_num--;
            }
            else if (type == 11) {
                this._model.shareAdTimes.share_free_car_num--;
            }
            else if (type == 12) {
                this._model.shareAdTimes.share_no_money_num--;
            }
        }
        console.log("@David 减少分享可点击次数:", this._model.shareAdTimes);
    }
    /** 分享或广告开关 */
    isAdStage(type) {
        return (this.getAdTimes(type) > 0);
    }
    //请求分享
    toShare(callback = null, isTask = false, isGroupShare = false) {
        HttpMgr_1.default.Ins.requestShareSubject((_res) => {
            if (!_res) {
                MsgMgr_1.default.Ins.showMsg("今日分享次数已用完");
                return;
            }
            let shareCfg = { imageUrl: _res.image, content: _res.describe, id: _res.id };
            let queryData = null;
            if (isTask) {
                queryData = "userId=" + PlayerMgr_1.default.Ins.Info.userId + "&shareId=" + shareCfg.id + "&shareType=task";
            }
            else {
                queryData = "userId=" + PlayerMgr_1.default.Ins.Info.userId + "&shareId=" + shareCfg.id + "&shareType=share";
            }
            //重返游戏
            let curTime = (new Date()).getTime() / 1000;
            let isAutoShare = true;
            EventsMgr_1.default.Ins.addListener(EventType_1.default.COME_BACK_GAME, (data) => {
                let backTime = (new Date()).getTime() / 1000;
                let leaveTime = backTime - curTime;
                if (isAutoShare && leaveTime > 2.3) {
                    if (this._shareFailedTimes > 1 || Math.random() > 0.5) {
                        this._shareFailedTimes = 0;
                        callback && callback(shareCfg.id);
                        HttpMgr_1.default.Ins.requestShareFinish(shareCfg.id);
                    }
                    else {
                        this._shareFailedTimes++;
                        MsgMgr_1.default.Ins.showMsg("分享失败，请尝试重新分享");
                    }
                }
            }, this);
            SDKMgr_1.default.Ins.wxOnShare({
                title: shareCfg.content,
                imageUrl: shareCfg.imageUrl,
                query: queryData,
                isGroupShare: isGroupShare,
                success: function (_res) {
                },
                fail: function () {
                    console.log("转发失败!!!");
                }
            });
        });
    }
    get isShareEnable() {
        return this.shareSwitchOpen;
    }
    static get Ins() {
        if (ShareMgr._instance == null) {
            ShareMgr._instance = new ShareMgr();
        }
        return ShareMgr._instance;
    }
}
exports.default = ShareMgr;

},{"../../module/hall/HallControl":62,"../config/AppConfig":4,"../event/EventType":17,"../event/EventsMgr":18,"../net/HttpMgr":30,"../player/PlayerMgr":32,"../utils/MathUtil":43,"./MsgMgr":25,"./SDKMgr":28}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PathConfig_1 = require("../config/PathConfig");
const HttpRequestHelper_1 = require("./HttpRequestHelper");
const MsgMgr_1 = require("../msg/MsgMgr");
const EventsMgr_1 = require("../event/EventsMgr");
const EventType_1 = require("../event/EventType");
const PlayerInfo_1 = require("../player/data/PlayerInfo");
const StorageUtil_1 = require("../utils/StorageUtil");
class HttpMgr extends Laya.Script {
    /** 元宝购车订单 */
    requestDiamondBuyOrder(diamond, callback, type = 0) {
        let strKind = 'buy_car';
        if (type == 1)
            strKind = 'diamond_acce';
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/diamond/order/' + diamond + '&kind=' + strKind,
            success: function (res) {
                console.log("@David 元宝购车订单", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 元宝购车 */
    requestDiamondBuy(orderId, callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/diamond/buy_car/' + orderId,
            success: function (res) {
                console.log("@David 元宝购车", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求等级奖励元宝 */
    requestLevelPrizeDiamond(level, diamond, callback) {
        let dataString = 'level=' + level + '&diamond=' + diamond;
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v2/userinfo/upgrade_reward_diamond',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("@David 请求等级奖励元宝:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 拉取分享信息 */
    requestTaskInfo(callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/task/info',
            success: function (res) {
                console.log("@David 拉取分享信息:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 拉取任务奖励 */
    requestTaskPrize(itemId, callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/task/rewards/' + itemId,
            success: function (res) {
                console.log("@David 拉取任务奖励:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 拉取分享信息 */
    requestShareInfo(callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/share/friend_num',
            success: function (res) {
                console.log("@David 拉取分享信息:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 拉取任务奖励 */
    requestTaskRewardPrize(itemId, callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/share/friend_rewards/' + itemId,
            success: function (res) {
                console.log("@David 拉取任务奖励", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 拉取每日签到奖励 */
    requestDaySignPrize(itemId, callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/sign/commit/' + itemId,
            success: function (res) {
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 拉取签到信息 */
    requestSignInfo(callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/sign/info',
            success: function (res) {
                console.log("@David 拉取签到信息", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 拉取公众二维码 */
    requestOfficialAccData(callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/subscription/get_info',
            success: function (res) {
                console.log("requestOfficialAccData", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 拉取公众奖励 */
    requestAccountRewardPrize() {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/subscription/rewards',
            success: function (res) {
                console.log("requestPrize", res);
                if (res.code == 1) {
                    MsgMgr_1.default.Ins.showMsg("奖励领取成功");
                    this.requestDiamondData();
                    //移除红点
                    // if (userData) {
                    //     userData.removeFollowRedPoint();
                    // }
                }
                else if (res.code == 2) {
                    MsgMgr_1.default.Ins.showMsg("未关注公众号");
                }
                else if (res.code == 3) {
                    MsgMgr_1.default.Ins.showMsg("奖励已领取");
                }
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /**刷新用户元宝数量 */
    requestDiamondData() {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/userinfo/get_diamond',
            success: function (res) {
                console.log("@David 刷新用户元宝数量:", res);
                if (res) {
                    EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_CURRENCY, PlayerInfo_1.default.DIAMOND, res.diamond);
                }
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 英雄数据 */
    requestCarparkData(callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/seat/get',
            success: function (res) {
                console.log("@David 英雄数据:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
                // CommonFun.stopWaitEffect();
                MsgMgr_1.default.Ins.showMsg("网络异常");
            }
        });
    }
    /** 每日任务统计 */
    requestDailyTaskData(taskId) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/task/progress/' + taskId,
            success: function (res) {
                console.log("requestDailyTaskData:", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 分享广告完成 */
    requestShareAdFinish(type, shareId = 0) {
        let dataString = 'type=' + type + '&share_id=' + shareId;
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/operational/post_info',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 商店数据 */
    requestCarshopData(callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/shop/get',
            success: function (res) {
                console.log("@David 商店数据:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
                // CommonFun.stopWaitEffect();
                MsgMgr_1.default.Ins.showMsg("网络异常");
            }
        });
    }
    /** 分享完成 */
    requestShareFinish(shareId, encryptedData = '', iv = '', callback = null) {
        let dataString = 'share_id=' + shareId + '&encryptedData=' + encryptedData + '&iv=' + iv;
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/share/finish',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log(res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 获取分享主题 */
    requestShareSubject(callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/share/to',
            success: function (res) {
                console.log(res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 通知服务器已领取离线收益 */
    requestNotifyServerPrize() {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/userinfo/reward',
            success: function (res) {
                console.log("requestNotifyServerPrize:", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 新老版本更新检测（防止老数据覆盖） */
    requestVersionCheck(callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/check/version',
            success: function (res) {
                console.log("requestVersionCheck", res);
                if (res && res.clear_flag) {
                    //清理老数据
                    StorageUtil_1.default.clearLocalData();
                }
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 新老版本清理回调 */
    requestVersionClear(callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/clear/user_data',
            success: function (res) {
                console.log("requestVersionClear", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 用户基础数据 */
    requestUserInfoData(callback) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/userinfo/get',
            success: function (res) {
                console.log("@David 用户基础数据:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
                // CommonFun.stopWaitEffect();
                MsgMgr_1.default.Ins.showMsg("网络异常");
            }
        });
    }
    /** 请求分享开关 */
    requestShareFlag(callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/share/flag',
            success: function (res) {
                if (res) {
                    callback && callback();
                }
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 用户基础数据赋值 */
    requestUserBaseData(callback = null) {
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v2/user/info',
            success: function (res) {
                console.log("@David 用户基础数据赋值:", res);
                if (res) {
                    callback && callback(res);
                }
            },
            fail: function (res) {
                console.log("@David 用户基础数据赋值失败:", res);
            }
        });
    }
    //获取抽奖信息
    requestPrizeInfo(callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/activity/get/roulette',
            success: function (res) {
                console.log("@David 获取抽奖信息:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 转盘抽奖 */
    requestDrawPrize(type, callback) {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v2/activity/roulette/' + type,
            success: function (res) {
                console.log("requestDrawPrize", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
                callback && callback(false);
            }
        });
    }
    /** 转盘统计 */
    requestPrizeCensus(itemId, num) {
        let dataString = 'prizeId=' + itemId + '&prizeNum=' + num;
        console.log("requestPrizeCensus:", dataString);
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/activity/roulette/log',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestPrizeCensus:", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求世界排行数据 */
    requestWorldRankingData(callback) {
        var that = this;
        var HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/rank/week',
            success: function (res) {
                console.log("@David 请求世界排行数据:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求我的世界排行数据 */
    requestMyWorldRankData(callback) {
        var that = this;
        var HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/rank/my',
            success: function (res) {
                console.log("@David 请求我的世界排行数据:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求收益周排行数据 */
    requestIncomeRankingData(callback) {
        var that = this;
        var HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/rank/week',
            success: function (res) {
                console.log("@David 请求收益周排行数据:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 请求我的收益周排行数据 */
    requestMyIncomeRankData(callback) {
        var that = this;
        var HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/rank/my',
            success: function (res) {
                console.log("@David 请求我的收益周排行数据:", res);
                callback && callback(res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    static get Ins() {
        if (HttpMgr._instance == null) {
            HttpMgr._instance = new HttpMgr();
        }
        return HttpMgr._instance;
    }
}
exports.default = HttpMgr;

},{"../config/PathConfig":5,"../event/EventType":17,"../event/EventsMgr":18,"../msg/MsgMgr":25,"../player/data/PlayerInfo":33,"../utils/StorageUtil":46,"./HttpRequestHelper":31}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SDKMgr_1 = require("../msg/SDKMgr");
//数据缓存
var requestCache = {};
class HttpRequestHelper {
    constructor(_url) {
        this.baseUrl = null;
        this.baseUrl = _url;
    }
    /** http请求 */
    request(params, noToken = false) {
        console.log("@David http request==>>", params.url);
        let self = this;
        if (!params.method) {
            params.method = 'Get';
        }
        ;
        //仅缓存Get数据
        if (params.cache && params.method == 'Get') {
            var res = requestCache[params.url];
            if (res && params.success) {
                console.log("cache:" + params.url);
                params.success(res);
                return;
            }
            ;
        }
        ;
        var hr = new Laya.HttpRequest();
        hr.http.timeout = 10000;
        hr.on(Laya.Event.PROGRESS, self, (e) => {
            console.log(e);
        });
        hr.once(Laya.Event.ERROR, self, (e) => {
            console.log("@David Laya.Event.ERROR:", e);
            if (e.indexOf('401') > 0) {
                if (!noToken) {
                    SDKMgr_1.default.Ins.wxHttpToken(self.baseUrl, (token) => {
                        self.request(params, true);
                    }, true);
                }
                ;
            }
            else {
                var res = hr.data;
                if (params && params.fail) {
                    params.fail(res);
                }
            }
        });
        hr.once(Laya.Event.COMPLETE, self, (e) => {
            var res = hr.data;
            if (res == '401') {
                if (!noToken) {
                    SDKMgr_1.default.Ins.wxHttpToken(self.baseUrl, (token) => {
                        self.request(params);
                    }, true);
                }
                ;
            }
            else if (res == '500') {
                console.log("@David request-err: ", params.url);
            }
            else if (params.success) {
                var dataJson = res;
                var jsonObj = dataJson;
                if (dataJson) {
                    jsonObj = JSON.parse(dataJson);
                }
                requestCache[params.url] = jsonObj;
                params.success(jsonObj);
            }
            ;
        });
        var token = SDKMgr_1.default.Ins.wxHttpToken(self.baseUrl);
        var header = ["Content-Type", "application/x-www-form-urlencoded;charset=utf-8", "token", token];
        if (params.method == 'Post') {
            hr.send(self.baseUrl + params.url, params.data, 'POST', 'jsonp', header);
        }
        else {
            hr.send(self.baseUrl + params.url, null, 'GET', 'jsonp', header);
        }
    }
}
exports.default = HttpRequestHelper;

},{"../msg/SDKMgr":28}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PlayerInfo_1 = require("./data/PlayerInfo");
class PlayerMgr extends Laya.Script {
    constructor() {
        super();
        this.init();
    }
    init() {
        this._info = new PlayerInfo_1.default();
    }
    set Info(value) { this._info = value; }
    get Info() { return this._info; }
    static get Ins() {
        if (PlayerMgr._instance == null) {
            PlayerMgr._instance = new PlayerMgr();
        }
        return PlayerMgr._instance;
    }
}
exports.default = PlayerMgr;

},{"./data/PlayerInfo":33}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class PlayerInfo {
    constructor() {
        /** 微信用户信息 */
        this.wxUserInfo = null;
        this.wxLaunch = null;
        /** 拥有金币 */
        this.userGold = 100000;
        /** 拥有钻石 */
        this.userDiamond = 0;
        /** 用户ID */
        this.userId = 0;
        /** 用户等级 */
        this.userLevel = 1;
        /** 用户经验 */
        this.userExp = 0;
        /** 等级增长的收益 */
        this.userLevelExtraIncome = 1;
        /** 本地缓存数据 */
        this.store_key = "store_key";
        /** 每秒收益 */
        this.userIncomeSec = 0;
        /** 额外收益-战斗人数满后+10% */
        this.userExtraIncome = 1;
        /** 启动加速x2 */
        this.userAcceValue = 1;
        /** 加速时间 */
        this.userAcceTime = 0;
        /** 跑道车数量 */
        this.userRuncarCount = 0;
        /** 跑道车数量最大值 */
        this.userRuncarCountMax = 0;
    }
}
PlayerInfo.GOLD = 0;
PlayerInfo.DIAMOND = 1;
exports.default = PlayerInfo;

},{}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const PathConfig_1 = require("../config/PathConfig");
const GlobalData_1 = require("../db/GlobalData");
const SoundMgr_1 = require("./SoundMgr");
class BaseSound {
    constructor() {
        this.soundPath = "";
        let self = this;
        self._cache = {};
        self._loadingCache = new Array();
        Laya.timer.loop(1 * 60 * 1000, self, self.dealSoundTimer);
    }
    /**
     * 处理音乐文件的清理
     */
    dealSoundTimer() {
        let self = this;
        let currTime = Laya.Browser.now();
        let keys = Object.keys(self._cache);
        for (let i = 0, len = keys.length; i < len; i++) {
            let key = keys[i];
            if (!self.checkCanClear(key))
                continue;
            if (currTime - self._cache[key] >= SoundMgr_1.default.CLEAR_TIME) {
                delete self._cache[key];
                Laya.loader.clearRes(key);
            }
        }
    }
    /**
     * 获取Sound
     * @param key
     * @returns {egret.Sound}
     */
    getSound(key) {
        let self = this;
        self._key = key;
        let vo = GlobalData_1.default.getData(GlobalData_1.default.SoundVO, Number(key));
        if (vo == null)
            return null;
        self.soundPath = PathConfig_1.default.SOUND_PATH.replace("{0}", vo.file);
        let sound = Laya.loader.getRes(self.soundPath);
        if (sound) {
            if (self._cache[self.soundPath]) {
                self._cache[self.soundPath] = Laya.Browser.now();
            }
        }
        else {
            if (self._loadingCache.indexOf(self.soundPath) != -1) {
                return sound;
            }
            self._loadingCache.push(self.soundPath);
            Laya.loader.load([{ url: self.soundPath, type: Laya.Loader.SOUND }], Laya.Handler.create(self, () => {
                let index = self._loadingCache.indexOf(self.soundPath);
                if (index != -1) {
                    self._loadingCache.splice(index, 1);
                    self._cache[self.soundPath] = Laya.Browser.now();
                    self.loadedPlay(self._key, self.soundPath);
                }
            }, null, false));
        }
        return sound;
    }
    /**
     * 资源加载完成后处理播放，子类重写
     * @param key
     */
    loadedPlay(key, soundPath) {
    }
    /**
     * 检测一个文件是否要清除，子类重写
     * @param key
     * @returns {boolean}
     */
    checkCanClear(key) {
        return true;
    }
}
exports.default = BaseSound;

},{"../config/PathConfig":5,"../db/GlobalData":7,"./SoundMgr":37}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseSound_1 = require("./BaseSound");
class SoundBG extends BaseSound_1.default {
    constructor() {
        super();
        this._currBg = "";
    }
    /**
     * 停止当前音乐
     */
    stop() {
        let self = this;
        if (self._currSoundChannel) {
            self._currSoundChannel.stop();
        }
        self._currSoundChannel = null;
        self._currSound = null;
        self._currBg = "";
    }
    /**
     * 播放某个音乐
     * @param effectName
     */
    play(effectName) {
        let self = this;
        if (self._currBg == effectName)
            return;
        self.stop();
        self._currBg = effectName;
        var sound = self.getSound(effectName);
        if (sound) {
            self.playSound(self.soundPath);
        }
    }
    /**
     * 播放
     * @param sound
     */
    playSound(soundPath) {
        let self = this;
        self._currSoundChannel = Laya.SoundManager.playMusic(soundPath, 0);
        if (self._currSoundChannel)
            self._currSoundChannel.volume = this._volume;
    }
    /**
     * 设置音量
     * @param volume
     */
    setVolume(volume) {
        let self = this;
        self._volume = volume;
        if (self._currSoundChannel) {
            self._currSoundChannel.volume = self._volume;
        }
    }
    /**
     * 资源加载完成后处理播放
     * @param key
     */
    loadedPlay(key, soundPath) {
        let self = this;
        if (self._currBg == key) {
            var sound = Laya.loader.getRes(soundPath);
            if (sound) {
                self.playSound(soundPath);
            }
        }
    }
    /**
     * 检测一个文件是否要清除
     * @param key
     * @returns {boolean}
     */
    checkCanClear(key) {
        let self = this;
        return self._currBg != key;
    }
}
exports.default = SoundBG;

},{"./BaseSound":34}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseSound_1 = require("./BaseSound");
class SoundEffects extends BaseSound_1.default {
    constructor() { super(); }
    /**
     * 播放一个音效
     * @param effectName
     */
    play(effectId) {
        let sound = this.getSound(effectId);
        if (sound) {
            this.playSound(this.soundPath);
        }
    }
    /**
     * 播放
     * @param sound
     */
    playSound(soundPath) {
        let channel = Laya.SoundManager.playSound(soundPath, 1);
        if (channel)
            channel.volume = this._volume;
    }
    /**
     * 设置音量
     * @param volume
     */
    setVolume(volume) {
        this._volume = volume;
    }
    /**
     * 资源加载完成后处理播放
     * @param key
     */
    loadedPlay(key, soundPath) {
        let sound = Laya.loader.getRes(soundPath);
        if (sound) {
            this.playSound(this.soundPath);
        }
    }
}
exports.default = SoundEffects;

},{"./BaseSound":34}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SoundEffects_1 = require("./SoundEffects");
const SoundBG_1 = require("./SoundBG");
class SoundMgr {
    constructor() {
        this._bgOn = true;
        this._effectOn = true;
        this._bgVolume = 0.5;
        this._effectVolume = 0.5;
        this._bg = new SoundBG_1.default();
        this._bg.setVolume(this._bgVolume);
        this._effect = new SoundEffects_1.default();
        this._effect.setVolume(this._effectVolume);
    }
    /**
     * 播放音效
     * @param effectName
     */
    playEffect(effectId) {
        if (!this._effectOn)
            return;
        this._effect.play(effectId);
    }
    /**
     * 播放背景音乐
     * @param key
     */
    playBg(bgName) {
        this._currBg = bgName;
        if (!this._bgOn)
            return;
        this._bg.play(bgName);
    }
    /**
     * 停止背景音乐
     */
    stopBg() {
        this._bg.stop();
    }
    /**
     * 设置音效是否开启
     * @param $isOn
     */
    setEffectOn($isOn) {
        this._effectOn = $isOn;
    }
    /**
     * 设置背景音乐是否开启
     * @param $isOn
     */
    setBgOn($isOn) {
        this._bgOn = $isOn;
        if (!this._bgOn) {
            this.stopBg();
        }
        else {
            if (this._currBg) {
                this.playBg(this._currBg);
            }
        }
    }
    /**
     * 设置背景音乐音量
     * @param volume
     */
    setBgVolume(volume) {
        volume = Math.min(volume, 1);
        volume = Math.max(volume, 0);
        this._bgVolume = volume;
        this._bg.setVolume(this._bgVolume);
    }
    /**
     * 获取背景音乐音量
     * @returns {number}
     */
    getBgVolume() {
        return this._bgVolume;
    }
    /**
     * 设置音效音量
     * @param volume
     */
    setEffectVolume(volume) {
        volume = Math.min(volume, 1);
        volume = Math.max(volume, 0);
        this._effectVolume = volume;
        this._effect.setVolume(this._effectVolume);
    }
    /**
     * 获取音效音量
     * @returns {number}
     */
    getEffectVolume() {
        return this._effectVolume;
    }
    get bgOn() {
        return this._bgOn;
    }
    get effectOn() {
        return this._effectOn;
    }
    static get Ins() {
        if (SoundMgr._instance == null) {
            SoundMgr._instance = new SoundMgr();
        }
        return SoundMgr._instance;
    }
}
/** 音乐文件清理时间 */
SoundMgr.CLEAR_TIME = 3 * 60 * 1000;
exports.default = SoundMgr;

},{"./SoundBG":35,"./SoundEffects":36}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class SoundType {
}
/** 加速 */
SoundType.GAME_ACCE = "10001";
/** 背景 */
SoundType.BG_MUSIC = "10002";
/** 英雄进入战斗 */
SoundType.ENTER_GAME = "10003";
/** 金币 */
SoundType.COIN = "10004";
/** 换位 */
SoundType.DRAW_HERO = "10005";
/** 招募英雄 */
SoundType.SUMMON_HERO = "10006";
/** 解锁格子 */
SoundType.UNLOCK = "10007";
/** 英雄升级 */
SoundType.UPGRADE_HERO = "10008";
/** 合成 */
SoundType.MAKE_HERO = "10009";
exports.default = SoundType;

},{}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const LayerMgr_1 = require("../layer/LayerMgr");
class AlignUtils {
    /**
     * 把现实对象设置到屏幕水平居中，垂直居中的位置上，使用前请确认<code>sprite</code>宽高不为0
     * @param sprite
     * @param delayFrames
     * @param useRegisterPoint
     *
     */
    static setToScreenCenter(sprite, delayFrames, useRegisterPoint) {
        if (delayFrames) {
            Laya.timer.frameOnce(delayFrames, AlignUtils, AlignUtils.setToScreenCenter, [sprite], false);
        }
        if (useRegisterPoint) {
            sprite.x = LayerMgr_1.default.stageDesignWidth * 0.5;
            sprite.y = LayerMgr_1.default.stageDesignHeight * 0.5;
        }
        else {
            sprite.x = (LayerMgr_1.default.stageDesignWidth - sprite.width) * 0.5;
            sprite.y = (LayerMgr_1.default.stageDesignHeight - sprite.height) * 0.5;
        }
    }
    /**
     * 把现实对象设置到屏幕水平居中，垂直在0.618的黄金分割点位置上，使用前请确认<code>sprite</code>宽高不为0
     * @param sprite
     * @param delayFrames
     * @param useRegisterPoint
     *
     */
    static setToScreenGoldenPos(sprite, delayFrames, useRegisterPoint) {
        if (delayFrames) {
            Laya.timer.frameOnce(delayFrames, AlignUtils, AlignUtils.setToScreenGoldenPos, [sprite], false);
        }
        if (useRegisterPoint) {
            sprite.x = LayerMgr_1.default.stageDesignWidth * 0.5;
            sprite.y = LayerMgr_1.default.stageDesignHeight * 0.382;
        }
        else {
            sprite.x = (LayerMgr_1.default.stageDesignWidth - sprite.width) * 0.5;
            sprite.y = (LayerMgr_1.default.stageDesignHeight - sprite.height) * 0.382;
        }
    }
    /**
     * 仅将目标对象target的x坐标和y坐标设置为到ref的中心。（注意，如果ref没有宽高可能会导致意外的问题）
     * @param target
     * @param ref
     *
     */
    static setToSpriteCenter(target, ref) {
        if (!target || !ref) {
            throw new Error("Either target or ref is null.");
        }
        else {
            target.pos(ref.width * 0.5, ref.height * 0.5);
        }
    }
    /**
     * 仅将目标对象target根据对齐方式设置坐标。仅设置x坐标和y坐标，忽略目标对象target的宽高。（注意，如果ref没有宽高可能会导致意外的问题）
     * @param target
     * @param ref
     *
     */
    static setTo(align, target, ref) {
        if (align === "center") {
            AlignUtils.setToSpriteCenter(target, ref);
        }
    }
}
exports.default = AlignUtils;

},{"../layer/LayerMgr":21}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 平均数工具类
 */
class AverageUtils {
    /**
     * 构造函数
     * @param $maxNum 参与计算的最大值
     */
    constructor($maxNum = 10) {
        this.nums = [];
        this.numsLen = 0;
        this.numSum = 0;
        this.maxNum = $maxNum;
    }
    /**
     * 加入一个值
     * @param value
     */
    push(value) {
        if (this.numsLen > this.maxNum) {
            this.numsLen--;
            this.numSum -= this.nums.shift();
        }
        this.nums.push(value);
        this.numSum += value;
        this.numsLen++;
    }
    /**
     * 获取平均值
     * @returns {number}
     */
    getValue() {
        return this.numSum / this.numsLen;
    }
    /**
     * 清空
     */
    clear() {
        this.nums.splice(0);
        this.numsLen = 0;
        this.numSum = 0;
    }
}
exports.default = AverageUtils;

},{}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class ColorUtil {
    /**
     * 滤镜
     * @param type  1：变暗 2：变黑
     */
    static createColorFilter(type = 0) {
        if (type == 1) { //变暗
            var colorV = 0.6;
            var colorMat = [
                colorV, 0, 0, 0, 0,
                0, colorV, 0, 0, 0,
                0, 0, colorV, 0, 0,
                0, 0, 0, 1, 0,
            ];
            //创建一个颜色滤镜对象
            var colorFilter = new Laya.ColorFilter(colorMat);
            return [colorFilter];
        }
        else if (type == 2) { //变黑
            var colorV = 0.6;
            var colorMat = [
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 0, 0,
                0, 0, 0, 1, 0,
            ];
            //创建一个颜色滤镜对象
            var colorFilter = new Laya.ColorFilter(colorMat);
            return [colorFilter];
        }
        return [];
    }
}
exports.default = ColorUtil;

},{}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const HeadItem_1 = require("../../module/hall/view/item/HeadItem");
const AlignUtils_1 = require("./AlignUtils");
const LayerMgr_1 = require("../layer/LayerMgr");
const BoneAnim_1 = require("../bone/BoneAnim");
class EffectUtil extends Laya.Script {
    /** 飘文字 */
    static playTextEffect(parentNode, content, pos = null) {
        var coinLabel = new Laya.Label();
        coinLabel.text = content;
        coinLabel.fontSize = 30;
        coinLabel.color = "#fff1ba";
        coinLabel.anchorX = 0.5;
        coinLabel.anchorY = 0.5;
        parentNode.addChild(coinLabel);
        if (pos) {
            coinLabel.pos(pos.x, pos.y);
        }
        else {
            coinLabel.pos(parentNode.width / 2, -parentNode.height / 2);
        }
        Laya.Tween.to(coinLabel, { x: coinLabel.x, y: (coinLabel.y - 70), alpha: 0 }, 2000, Laya.Ease.cubicInOut, Laya.Handler.create(this, (_coinLabel) => {
            _coinLabel.removeSelf();
        }, [coinLabel]));
    }
    /** 两英雄合并效果 */
    static playHeroMergeEffect(parentNode, heroId, newHeroObj) {
        //基础节点
        let effectNode = new Laya.Sprite();
        parentNode.addChild(effectNode);
        let pos = newHeroObj.localToGlobal(new Laya.Point(0, 0));
        pos = parentNode.globalToLocal(pos);
        effectNode.pos(pos.x, pos.y);
        newHeroObj.visible = false;
        let offsetX = 70;
        let leftHeadItem = Laya.Pool.getItemByClass("p_HeadItem", HeadItem_1.default); //new HeadItem();
        effectNode.addChild(leftHeadItem);
        leftHeadItem.updateHeadSkin(heroId);
        Laya.Tween.to(leftHeadItem, { x: -offsetX }, 300, Laya.Ease.elasticOut, Laya.Handler.create(this, () => {
            Laya.Tween.to(leftHeadItem, { x: 0 }, 100, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
                effectNode.removeChildren();
                this.playCoinEffect(effectNode, 'images/common/star2.png', { x: 52, y: 80 }, () => {
                    effectNode.removeSelf();
                    Laya.Tween.clearTween(leftHeadItem);
                    leftHeadItem.reset();
                    Laya.Pool.recover("p_HeadItem", leftHeadItem);
                });
                if (newHeroObj && newHeroObj.Info.heroId > 0) {
                    newHeroObj.visible = true;
                }
            }));
        }));
        //复制品
        let copyHeadItem = Laya.Pool.getItemByClass("p_HeadItem", HeadItem_1.default); //new HeadItem();
        leftHeadItem.addChild(copyHeadItem);
        copyHeadItem.updateHeadSkin(heroId);
        copyHeadItem.pos(0, 0);
        Laya.Tween.to(copyHeadItem, { x: offsetX * 2 }, 300, Laya.Ease.elasticOut, Laya.Handler.create(this, () => {
            Laya.Tween.to(copyHeadItem, { x: 0 }, 100, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
                Laya.Tween.clearTween(copyHeadItem);
                copyHeadItem.reset();
                Laya.Pool.recover("p_HeadItem", copyHeadItem);
            }));
        }));
    }
    /** 飘金币 */
    static playCoinEffect(parentNode, imgUrl, offset = { x: 0, y: 0 }, callback = null) {
        for (var index = 0; index < 15; index++) {
            let imgCoin = Laya.Pool.getItemByClass("p_Image_star", Laya.Image);
            imgCoin.graphics.clear();
            imgCoin.loadImage(imgUrl);
            imgCoin.scale(1, 1);
            imgCoin.alpha = 1;
            imgCoin.pivot(imgCoin.width / 2, imgCoin.height / 2);
            parentNode.addChild(imgCoin);
            var randX = Math.random() - 0.5;
            var randY = Math.random() - 0.5;
            var cicleX = 10 * Math.cos(index * Math.PI / 7) + 10 * randX;
            var cicleY = 10 * Math.sin(index * Math.PI / 7) + 10 * randY;
            imgCoin.pos(parentNode.width / 2 + cicleX + offset.x, parentNode.height / 2 + cicleY + offset.y);
            var coinPos = { x: (imgCoin.x + cicleX * 5), y: (imgCoin.y + cicleY * 5) };
            Laya.Tween.to(imgCoin, { x: coinPos.x, y: coinPos.y, scaleX: 0.8, scaleY: 0.8, rotation: (randX + randY) * 360 }, 500, Laya.Ease.expoOut);
            imgCoin.frameOnce(10, this, (_coinSp, _coinPos) => {
                Laya.Tween.to(_coinSp, { scaleX: 0, scaleY: 0, alpha: 0.2, rotation: (randX + randY) * 360 }, 1000, Laya.Ease.linearNone, Laya.Handler.create(this, (_coinSp) => {
                    _coinSp.removeSelf();
                    callback && callback();
                    imgCoin.removeChildren();
                    imgCoin.removeSelf();
                    imgCoin.scale(1, 1);
                    imgCoin.alpha = 1;
                    imgCoin.rotation = 0;
                    Laya.Pool.recover("p_Image_star", imgCoin);
                }, [_coinSp]));
            }, [imgCoin, coinPos]);
        }
    }
    /** 人物自白弹框效果 */
    static playDialogueEffect(parentNode, imgUrl, content, pos = null, zOrder = 0, isFlipX = false) {
        let imgTips = Laya.Pool.getItemByClass("p_Image", Laya.Image);
        imgTips.skin = imgUrl;
        imgTips.anchorX = 0;
        imgTips.anchorY = 1;
        parentNode.addChild(imgTips);
        if (pos) {
            imgTips.pos(pos.x, pos.y);
        }
        else {
            imgTips.pos(parentNode.width / 2, -parentNode.height / 2);
        }
        if (zOrder > 0) {
            imgTips.zOrder = zOrder;
        }
        //飘文字
        var coinLabel = Laya.Pool.getItemByClass("p_Label", Laya.Label);
        coinLabel.text = content;
        coinLabel.fontSize = 22;
        coinLabel.color = "#000000";
        coinLabel.anchorX = 0.5;
        coinLabel.anchorY = 0.5;
        coinLabel.width = 220;
        coinLabel.height = 100;
        coinLabel.wordWrap = true;
        coinLabel.valign = "middle";
        imgTips.addChild(coinLabel);
        coinLabel.pos(imgTips.width * 0.5, imgTips.height * 0.46);
        //镜像
        if (isFlipX) {
            imgTips.scaleX = -1;
            coinLabel.scaleX = -1;
        }
        //动画
        let timeLine = new Laya.TimeLine();
        timeLine.addLabel("tl1", 0).from(imgTips, { scaleX: 0, scaleY: 0 }, 300, Laya.Ease.linearNone)
            .addLabel("tl2", 300).to(imgTips, { alpha: 1 }, 1200, Laya.Ease.linearNone)
            .addLabel("tl3", 1500).to(imgTips, { alpha: 0 }, 1000, Laya.Ease.cubicInOut);
        timeLine.on(Laya.Event.COMPLETE, imgTips, () => {
            Laya.Pool.recover("p_Label", coinLabel);
            imgTips.removeChildren();
            imgTips.removeSelf();
            imgTips.scale(1, 1);
            imgTips.alpha = 1;
            Laya.Pool.recover("p_Image", imgTips);
        });
        timeLine.play(0, false);
    }
    static playAccEffect(parentNode) {
        let img = Laya.Pool.getItemByClass("p_Image", Laya.Image);
        img.skin = "images/hall/acce_effect.png";
        img.anchorX = img.anchorY = 0.5;
        img.scale(0, -1);
        AlignUtils_1.default.setToScreenGoldenPos(img, 0, true);
        LayerMgr_1.default.Ins.screenEffectLayer.addChild(img);
        let timeLine = new Laya.TimeLine();
        timeLine.addLabel("tl1", 0).from(img, { scaleX: 0.4, scaleY: 1 }, 100)
            .addLabel("tl2", 0).to(img, { scaleX: 0.65, scaleY: -1 }, 200)
            .addLabel("tl3", 0).to(img, { scaleX: 1, scaleY: 1 }, 300)
            .addLabel("tl4", 0).to(img, { scaleX: 1, scaleY: 1 }, 500);
        timeLine.on(Laya.Event.COMPLETE, img, () => {
            img.removeSelf();
            img.scale(1, 1);
            Laya.Pool.recover("p_Image", img);
        });
        timeLine.play(0, false);
    }
    /** 金币雨 */
    static playCoinRainEffect(imgUrl) {
        let coinCount = 8;
        for (var index = 0; index < coinCount; index++) {
            let imgCoin = Laya.Pool.getItemByClass("p_Image", Laya.Image);
            imgCoin.mouseEnabled = false;
            imgCoin.graphics.clear();
            imgCoin.loadImage(imgUrl);
            imgCoin.pivot(imgCoin.width / 2, imgCoin.height / 2);
            LayerMgr_1.default.Ins.screenEffectLayer.addChild(imgCoin);
            imgCoin.pos(index * (LayerMgr_1.default.stageDesignWidth / coinCount) + Math.random() * 100, Math.random() * 500 - 300);
            Laya.Tween.to(imgCoin, { x: imgCoin.x, y: LayerMgr_1.default.stageDesignHeight }, 3000, Laya.Ease.linearNone, Laya.Handler.create(this, (_coinSp) => {
                _coinSp.removeSelf();
                Laya.Pool.recover("p_Image", _coinSp);
            }, [imgCoin]));
        }
    }
    static playImageTextEffect(_parentNode, _imgUrl, _content, _pos = null, _zOrder = 0) {
        let coinImg = Laya.Pool.getItemByClass("p_Image", Laya.Image);
        coinImg.skin = _imgUrl;
        coinImg.anchorX = 0.5;
        coinImg.anchorY = 0.5;
        _parentNode.addChild(coinImg);
        if (_pos) {
            coinImg.pos(_pos.x, _pos.y);
        }
        else {
            coinImg.pos(_parentNode.width / 2, -_parentNode.height / 2);
        }
        if (_zOrder > 0) {
            coinImg.zOrder = _zOrder;
        }
        //飘文字
        var coinLabel = new Laya.Label();
        coinLabel.text = _content;
        coinLabel.fontSize = 30;
        coinLabel.color = "#fff1ba";
        coinLabel.anchorY = 0.5;
        coinImg.addChild(coinLabel);
        coinLabel.pos(coinImg.width, coinImg.height * 0.5);
        //动画
        let timeLine = new Laya.TimeLine();
        timeLine.addLabel("tl1", 0).from(coinImg, { scaleX: 0, scaleY: 0, y: (coinImg.y + 30) }, 300, Laya.Ease.linearNone)
            .addLabel("tl2", 500).to(coinImg, { x: coinImg.x, y: (coinImg.y - 50), alpha: 0 }, 1200, Laya.Ease.cubicInOut);
        timeLine.on(Laya.Event.COMPLETE, coinImg, () => {
            coinImg.removeChildren();
            coinImg.removeSelf();
            coinImg.alpha = 1;
            coinImg.scale(1, 1);
            Laya.Pool.recover("p_Image", coinImg);
        });
        timeLine.play(0, false);
    }
    /**
     * 文字打字机效果
     * obj           文本对象
     * content       文字
     * interval      打字间隔 毫秒
     */
    static playTypewriterEffect(label, content = "", interval = 50, callBack = null) {
        let self = this;
        label.text = "";
        let strArr = content.split("");
        let len = strArr.length;
        for (let i = 0; i < len; i++) {
            Laya.timer.once(interval * i, this, () => {
                label.text = label.text.concat(strArr[i]);
                if ((i >= len - 1) && (callBack != null)) {
                    callBack();
                }
            });
        }
    }
    /** 龙骨特效 */
    static playBoneEffect(boneName, pos) {
        let bone = new BoneAnim_1.default(boneName);
        bone.completeBack = () => {
            bone.destroy();
        };
        bone.x = pos.x;
        bone.y = pos.y;
        LayerMgr_1.default.Ins.flyLayer.addChild(bone);
    }
}
exports.default = EffectUtil;

},{"../../module/hall/view/item/HeadItem":72,"../bone/BoneAnim":3,"../layer/LayerMgr":21,"./AlignUtils":39}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class MathUtil extends Laya.Script {
    /** 生成随机浮点数，随机数范围包含min值，但不包含max值 */
    static range(min, max) {
        return Math.random() * (max - min) + min;
    }
    /** 生成随机整数，随机整数范围包含min值和max值 */
    static rangeInt(min, max) {
        return Math.floor(Math.random() * (max - min + 1) + min);
    }
    /** 单位转换 */
    static unitConversion(value) {
        if (value < 1000000) {
            return Math.floor(value).toString();
        }
        if (value === 0)
            return '0';
        let k = 1000, // or 1024
        sizes = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'], i = Math.floor(Math.log(value) / Math.log(k));
        let unit = '';
        if (i < sizes.length) {
            unit = sizes[i];
        }
        else {
            let numLenght = i - sizes.length;
            unit = String.fromCharCode(97 + numLenght % 26);
            for (let index = 0, len = 1 + Math.floor(numLenght / 65); index < len; index++) {
                unit = unit + unit;
            }
        }
        return (value / Math.pow(k, i)).toPrecision(3) + ' ' + unit;
    }
    /** 字符串转数字 */
    static parseStringNum(_strNum) {
        let intNum = parseFloat(_strNum);
        if (intNum) {
            return intNum;
        }
        return 0;
    }
    /** 字符串转整形 */
    static parseInt(_strNum) {
        let intNum = parseFloat(_strNum);
        if (intNum) {
            return Math.floor(intNum);
        }
        return 0;
    }
    static splitToNumber(value, sprelator = "#") {
        if (value == "0")
            return [];
        let result = [];
        let sArray = value.split(sprelator);
        for (let i = 0; i < sArray.length; i++) {
            result.push(parseInt(sArray[i]));
        }
        return result;
    }
    static splitToString(value, sprelator = "#") {
        if (value == "0")
            return [];
        let result = [];
        let sArray = value.split(sprelator);
        for (let i = 0; i < sArray.length; i++) {
            result.push(sArray[i]);
        }
        return result;
    }
    static removeFromArray(target, array) {
        let index = array.indexOf(target);
        if (index >= 0)
            array.splice(index, 1);
        return array;
    }
    /** 替换数组中的数据 */
    static replaceItemToArray(array, inde, item) {
        array.splice(inde, 1, item);
    }
}
exports.default = MathUtil;

},{}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Layer_1 = require("../layer/base/Layer");
class PointUtils {
    /**
     * 按位置取得两个点之间连线上某个点的位置
     * @param startPt 起始点
     * @param endPt 结束点
     * @param position 要取点的位置，<code>position</code>的值越接近0，取出的点越靠近<code>startPt</code>；<code>position</code>的值越接近1，取出的点越靠近<code>endPt</code>；
     * @return
     *
     */
    static interpolate(startPt, endPt, position) {
        return new Laya.Point(startPt.x + (endPt.x - startPt.x) * position, startPt.y + (endPt.y - startPt.y) * position);
    }
    /**
     * 计算两个点之间的距离
     * @param p1 第一个点
     * @param p2 第二个点
     * @return 距离
     *
     */
    static distance(p1, p2) {
        return Math.sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y));
    }
    /**
     * 计算两组坐标之间的距离
     * @param x1 第一个点的x坐标
     * @param y1 第一个点的y坐标
     * @param x2 第二个点的y坐标
     * @param y2 第二个点的y坐标
     * @return 距离
     *
     */
    static distanceByAxis(x1, y1, x2, y2) {
        return Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));
    }
    /**
     * 获得从p1至p2的朝向，当p1在左侧时返回1，当p1在右侧时返回-1
     * @param p1
     * @param p2
     * @return
     *
     */
    static getDirection(p1, p2) {
        if (p1.x <= p2.x) {
            return 1;
        }
        if (p1.x > p2.x) {
            return -1;
        }
        return 1;
    }
    /**
     * 获得target在LayerManager的全局坐标
     * @param target
     * @param moveRightNow 是否同时把target的位置移到新的位置
     * @return
     *
     */
    static localToGlobal(target, moveRightNow) {
        let pt = new Laya.Point(target.x, target.y);
        let parent = target.parent;
        while (parent && !(parent instanceof Layer_1.default)) {
            pt.x += parent.x - parent.pivotX - (parent.scrollRect ? parent.scrollRect.x : 0);
            pt.y += parent.y - parent.pivotY - (parent.scrollRect ? parent.scrollRect.y : 0);
            parent = parent.parent;
        }
        if (moveRightNow) {
            target.pos(pt.x, pt.y);
        }
        return pt;
    }
    /**
     * 保持target对象的全局位置不变的情况下，计算target显示对象在新的显示对象容器中的本地坐标位置
     * @param target
     * @param newParent
     * @param moveRightNow
     * @return
     *
     */
    static parentToParent(target, newParent, moveRightNow) {
        let pt = PointUtils.localToGlobal(target);
        let zeroPt = new Laya.Point();
        let parent = newParent;
        while (parent && !(parent instanceof Layer_1.default)) {
            zeroPt.x += parent.x;
            zeroPt.y += parent.y;
            parent = parent.parent;
        }
        pt.x = pt.x - zeroPt.x;
        pt.y = pt.y - zeroPt.y;
        if (moveRightNow) {
            target.pos(pt.x, pt.y);
        }
        return pt;
    }
}
exports.default = PointUtils;

},{"../layer/base/Layer":22}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class ResUtils {
    static loadGroup(group, onComplete, thisObject) {
        Laya.loader.load(this.combGroupList(group), Laya.Handler.create(thisObject, onComplete));
    }
    /** 组合资源组名 */
    static combGroupList(group) {
        let newGroup = [];
        for (let i = 0, len = group.length; i < len; i++) {
            newGroup.push({ url: "res/atlas/images/" + group[i] + ".atlas", type: Laya.Loader.ATLAS });
        }
        return newGroup;
    }
}
exports.default = ResUtils;

},{}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const HttpMgr_1 = require("../net/HttpMgr");
const HttpRequestHelper_1 = require("../net/HttpRequestHelper");
const PathConfig_1 = require("../config/PathConfig");
const PlayerMgr_1 = require("../player/PlayerMgr");
const HallControl_1 = require("../../module/hall/HallControl");
const MathUtil_1 = require("./MathUtil");
const ShareMgr_1 = require("../msg/ShareMgr");
const EventsMgr_1 = require("../event/EventsMgr");
const EventType_1 = require("../event/EventType");
const TimeUtil_1 = require("./TimeUtil");
const GuideMgr_1 = require("../guide/GuideMgr");
const AppConfig_1 = require("../config/AppConfig");
/**
 * 缓存工具
 */
class StorageUtil extends Laya.Script {
    constructor() { super(); }
    /** 新老版本更新检测（防止老数据覆盖） */
    static versionCheck(callback) {
        let that = this;
        if (AppConfig_1.default.isDebug) {
            callback && callback();
            return;
        }
        let storage = window.localStorage;
        HttpMgr_1.default.Ins.requestVersionCheck((_res) => {
            if (_res && _res.clear_flag) {
                //清理老数据
                storage.setItem(that.s_version_clear, 'true');
            }
        });
        //上一次记录清理
        let dataJson = storage.getItem(that.s_version_clear);
        if (dataJson) {
            //需要清理数据
            HttpMgr_1.default.Ins.requestVersionClear((_res) => {
                storage.removeItem(that.s_version_clear);
                that.clearLocalData();
                callback && callback();
            });
        }
        else {
            callback && callback();
        }
    }
    /** 保存缓存到本地 */
    static saveStorageToLocal(upload = false) {
        if (StorageUtil._isLoadStorage == false) {
            console.log("@David 未同步本地/服务器数据");
            return;
        }
        else if (HallControl_1.default.Ins.IsGuide) {
            return;
        }
        let localData = {};
        localData["userGold"] = PlayerMgr_1.default.Ins.Info.userGold;
        localData["userLevel"] = PlayerMgr_1.default.Ins.Info.userLevel;
        localData["userId"] = PlayerMgr_1.default.Ins.Info.userId;
        localData["userExp"] = PlayerMgr_1.default.Ins.Info.userExp;
        localData["AllHeros"] = HallControl_1.default.Ins.Model.AllHeros;
        localData["BuyHerosRecord"] = HallControl_1.default.Ins.Model.BuyHerosRecord;
        localData["AllHeros"] = HallControl_1.default.Ins.Model.AllHeros;
        localData["heroLevel"] = HallControl_1.default.Ins.Model.heroLevel;
        localData["heroCount"] = HallControl_1.default.Ins.Model.heroCount;
        localData["guideStep"] = GuideMgr_1.default.Ins.guideStep;
        let dataJson = JSON.stringify(localData);
        if (dataJson) {
            let storage = window.localStorage;
            storage.setItem(StorageUtil.storage_user, dataJson);
        }
        if (upload) {
            StorageUtil.requestSaveHerosData();
            StorageUtil.requestSaveHeroShopData();
            StorageUtil.requestSaveUserInfoData();
        }
    }
    /** 取出本地数据 */
    static loadStorage(callback) {
        StorageUtil._isLoadStorage = true;
        let storage = window.localStorage;
        let dataJson = storage.getItem(StorageUtil.storage_user);
        if (dataJson) {
            let jsonObj = JSON.parse(dataJson);
            if (jsonObj) {
                PlayerMgr_1.default.Ins.Info.userGold = jsonObj["userGold"];
                PlayerMgr_1.default.Ins.Info.userLevel = jsonObj["userLevel"];
                PlayerMgr_1.default.Ins.Info.userId = jsonObj["userId"];
                PlayerMgr_1.default.Ins.Info.userExp = jsonObj["userExp"];
                HallControl_1.default.Ins.Model.AllHeros = jsonObj["AllHeros"];
                HallControl_1.default.Ins.Model.BuyHerosRecord = jsonObj["BuyHerosRecord"];
                HallControl_1.default.Ins.Model.heroLevel = jsonObj["heroLevel"];
                HallControl_1.default.Ins.Model.heroCount = jsonObj["heroCount"];
                GuideMgr_1.default.Ins.guideStep = jsonObj["guideStep"];
            }
            callback && callback(true);
        }
        else {
            if (Laya.Browser.onPC) {
                callback && callback(true);
                return;
            }
            //从服务器同步数据
            let serverDataProgress = 3;
            HttpMgr_1.default.Ins.requestCarparkData((res) => {
                HallControl_1.default.Ins.Model.AllHeros = res;
                serverDataProgress--;
                if (serverDataProgress < 1) {
                    callback && callback(true);
                }
            });
            HttpMgr_1.default.Ins.requestCarshopData((res) => {
                serverDataProgress--;
                HallControl_1.default.Ins.Model.BuyHerosRecord = res;
                if (serverDataProgress < 1) {
                    callback && callback(true);
                }
            });
            HttpMgr_1.default.Ins.requestUserInfoData((res) => {
                if (res) {
                    PlayerMgr_1.default.Ins.Info.userId = res.id;
                    PlayerMgr_1.default.Ins.Info.userGold = MathUtil_1.default.parseStringNum(res.money);
                    PlayerMgr_1.default.Ins.Info.userDiamond = MathUtil_1.default.parseStringNum(res.diamond);
                    PlayerMgr_1.default.Ins.Info.userLevel = MathUtil_1.default.parseInt(res.level);
                    PlayerMgr_1.default.Ins.Info.userExp = MathUtil_1.default.parseStringNum(res.exp);
                    HallControl_1.default.Ins.Model.heroLevel = MathUtil_1.default.parseInt(res.car_level);
                    // GuideMgr.Ins.guideStep = MathUtil.parseInt(res.guideStep);
                }
                serverDataProgress--;
                if (serverDataProgress < 1) {
                    callback && callback(true);
                }
            });
            //超时尝试重新请求
            Laya.stage.timerOnce(12000, this, () => {
                console.log("@David 超时尝试重新请求:", serverDataProgress);
                if (serverDataProgress > 0) {
                    StorageUtil.loadStorage(callback);
                }
            });
        }
        //请求分享开关
        HttpMgr_1.default.Ins.requestShareFlag((res) => {
            ShareMgr_1.default.Ins.shareSwitchOpen = res;
        });
        HttpMgr_1.default.Ins.requestUserBaseData((res) => {
            let model = HallControl_1.default.Ins.Model;
            if (model) {
                model.shareAdTimes = res.operation;
                model.showShareGiftRedPoint = res.share_reward_flag;
                model.showDailySignRedPoint = res.sign_flag;
                model.showTaskRedPoint = res.task_flag;
                model.showLuckPrizeRedPoint = res.roulette_flag;
                model.showFollowRedPoint = res.follow_flag;
                model.advert = res.advert;
                model.diamond_acce_num = res.diamond_acce_num;
            }
        });
    }
    static isLoadStorage() {
        return this._isLoadStorage;
    }
    /** 英雄数据 */
    static requestSaveHerosData() {
        let self = this;
        let dataJson = JSON.stringify(HallControl_1.default.Ins.Model.AllHeros);
        //非法数据过滤
        if (dataJson == null || dataJson.length < 1 || HallControl_1.default.Ins.Model.AllHeros.length < 1) {
            return;
        }
        else if (self.carparkJsonRecord == dataJson) {
            console.log("carparkJsonRecord数据未刷新");
            return;
        }
        self.carparkJsonRecord = dataJson;
        let dataString = 'info=' + dataJson;
        console.log("requestSaveCarparkData:", dataString);
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/seat/post',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestSaveCarparkData2:", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 英雄商店数据 */
    static requestSaveHeroShopData() {
        let dataJson = JSON.stringify(HallControl_1.default.Ins.Model.BuyHerosRecord);
        //非法数据过滤
        if (dataJson == null || dataJson.length < 1 || HallControl_1.default.Ins.Model.BuyHerosRecord.length < 1) {
            return;
        }
        else if (this.carshopJsonRecord == dataJson) {
            console.log("carshopJsonRecord数据未刷新");
            return;
        }
        this.carshopJsonRecord = dataJson;
        let dataString = 'info=' + dataJson;
        console.log("requestSaveCarshopData:", dataString);
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/shop/post',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("requestSaveCarshopData2:", res);
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    /** 保存用户信息金币 */
    static requestSaveUserInfoData() {
        let dataString = 'money=' + PlayerMgr_1.default.Ins.Info.userGold +
            '&car_level=' + HallControl_1.default.Ins.Model.heroLevel +
            '&level=' + PlayerMgr_1.default.Ins.Info.userLevel +
            '&exp=' + PlayerMgr_1.default.Ins.Info.userExp +
            '&asset=' + Math.floor(PlayerMgr_1.default.Ins.Info.userGold + HallControl_1.default.Ins.Model.heroAllAsset());
        console.log("@David 保存用户信息金币:", dataString);
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/userinfo/post',
            method: 'Post',
            data: dataString,
            success: function (res) {
                console.log("@David 保存用户信息金币:", res);
            },
            fail: function (res) {
                console.log("@David 保存用户信息金币错误:", res);
            }
        });
    }
    /** 保存加速剩余时间 */
    static saveAcceLeftTime(_acceLeftTime) {
        let storage = window.localStorage;
        if (_acceLeftTime > 0) {
            storage.setItem(HallControl_1.default.Ins.Model.s_acceLeft_time, _acceLeftTime.toString());
        }
        else {
            storage.removeItem(HallControl_1.default.Ins.Model.s_acceLeft_time);
        }
    }
    /** 获取加速剩余时间 */
    static getAcceLeftTime() {
        let storage = window.localStorage;
        let dataJson = storage.getItem(HallControl_1.default.Ins.Model.s_acceLeft_time);
        if (dataJson) {
            let acceLeftTime = MathUtil_1.default.parseInt(dataJson);
            storage.removeItem(HallControl_1.default.Ins.Model.s_acceLeft_time);
            return acceLeftTime;
        }
        return 0;
    }
    /** 缓存单个英雄 */
    static saveHeroStore(heroId) {
        if (heroId < 1)
            return;
        let heroAry = [];
        let storage = window.localStorage;
        let dataJson = storage.getItem(this.hero_store_key);
        if (dataJson) {
            let jsonObj = JSON.parse(dataJson);
            if (jsonObj) {
                heroAry = jsonObj;
            }
        }
        if (heroAry) {
            heroAry.push(heroId);
            let dataJson = JSON.stringify(heroAry);
            if (dataJson) {
                storage.setItem(this.hero_store_key, dataJson);
            }
        }
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.HERO_BOX);
    }
    /** 取出缓存英雄 */
    static popHeroStore(isRemove = false) {
        let storage = window.localStorage;
        let dataJson = storage.getItem(this.hero_store_key);
        if (dataJson) {
            let jsonObj = JSON.parse(dataJson);
            if (jsonObj) {
                let carId = jsonObj.shift();
                //保存移除
                if (isRemove) {
                    let dataJson = JSON.stringify(jsonObj);
                    if (dataJson) {
                        storage.setItem(this.hero_store_key, dataJson);
                    }
                }
                if (carId) {
                    return carId;
                }
            }
        }
        return 0;
    }
    /** 离线奖励 */
    static offlinePrize() {
        let that = this;
        let storage = window.localStorage;
        let dataJson = storage.getItem(that.s_offlinePrize_time);
        let offlineTime = MathUtil_1.default.parseInt(dataJson);
        if (offlineTime > 0) {
            storage.removeItem(that.s_offlinePrize_time);
        }
        return offlineTime;
    }
    /** 查询离线奖励 */
    static requestOfflinePrizeData() {
        let that = this;
        let HttpReqHelper = new HttpRequestHelper_1.default(PathConfig_1.default.AppUrl);
        HttpReqHelper.request({
            url: 'v1/login',
            success: function (res) {
                console.log("@David 查询离线奖励:", res);
                let offlineTime = MathUtil_1.default.parseInt(res.time); //离线时长
                let login_time = MathUtil_1.default.parseInt(res.login_time); //登录当前服务器时间
                let cur_time = (new Date()).getTime() / 1000;
                TimeUtil_1.default.cs_time_diff = login_time - cur_time;
                let storage = window.localStorage;
                let dataJson = storage.getItem(that.s_offline_time);
                console.log("读取本地离线:", dataJson);
                if (dataJson) {
                    offlineTime = 0;
                    let last_logout_time = MathUtil_1.default.parseInt(dataJson); //上次离线时间
                    console.log(login_time, cur_time, last_logout_time, (login_time - last_logout_time), TimeUtil_1.default.cs_time_diff);
                    if (!isNaN(last_logout_time) && login_time > last_logout_time) {
                        offlineTime = login_time - last_logout_time;
                    }
                    storage.removeItem(that.s_offline_time);
                }
                console.log("离线奖励:", offlineTime);
                if (offlineTime > 0) {
                    storage.setItem(that.s_offlinePrize_time, offlineTime.toString());
                    EventsMgr_1.default.Ins.dispatch(EventType_1.default.SHOW_OFFLINE_REWARD);
                }
                HttpMgr_1.default.Ins.requestNotifyServerPrize();
            },
            fail: function (res) {
                console.log(res);
            }
        });
    }
    //保存离线时间
    static saveOfflineTime() {
        let that = this;
        let storage = window.localStorage;
        let offlineServerTime = TimeUtil_1.default.serverTime();
        storage.setItem(that.s_offline_time, offlineServerTime.toString());
    }
    /** 移除缓存数据 */
    static clearLocalData() {
        let storage = window.localStorage;
        if (storage) {
            storage.removeItem(this.storage_user_old);
            storage.removeItem(this.storage_user);
        }
    }
}
StorageUtil.storage_user_old = 'user_data'; //保存本地v1.0
StorageUtil.storage_user = 'user_data_111'; //保存本地
StorageUtil.hero_store_key = "car_store_key"; //本地保存兵营车辆
StorageUtil.s_version_clear = 's_version_clear'; //版本清理
StorageUtil.s_offlinePrize_time = 's_offlinePrize_time'; //离线奖励时间
StorageUtil.s_offline_time = 's_offline_time'; //离线服务器时间
StorageUtil._isLoadStorage = false; //是否已加载本地数据
StorageUtil.carparkJsonRecord = ''; //防止提交相同数据给服务器
StorageUtil.carshopJsonRecord = ''; //防止提交相同数据给服务器
exports.default = StorageUtil;

},{"../../module/hall/HallControl":62,"../config/AppConfig":4,"../config/PathConfig":5,"../event/EventType":17,"../event/EventsMgr":18,"../guide/GuideMgr":20,"../msg/ShareMgr":29,"../net/HttpMgr":30,"../net/HttpRequestHelper":31,"../player/PlayerMgr":32,"./MathUtil":43,"./TimeUtil":48}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
* 字典;
*/
class TSDictionary {
    constructor() {
        /**
          * 字典这个数据结构，其本质是一个个键值对<key,value>形成的数据集合，
          * 但为了能查找到正确的数据，key值必须保证唯一性。我们可以通过使用
          * Typescript中的两个数组来分别存储key值和value值来模拟实现这种结构。
          * 数据存储时把key和value分别存储在两个数组相同的索引位置，
          * 这样在查找数据时就可以通过这个索引把数据关联起来，找到对应的值。。
          *
          */
        this.keys = [];
        this.values = [];
        this._len = 0;
    }
    toJsonObject() {
        const result = {};
        result.keys = this.keys;
        result.values = this.values;
        return result;
    }
    fromJsonObject(obj) {
        this.keys = obj.keys;
        this.values = obj.values;
    }
    Add(key, value) {
        let self = this;
        self.keys.push(key);
        self.values.push(value);
        self._len++;
    }
    Remove(key) {
        let self = this;
        let index = self.keys.indexOf(key, 0);
        if (index != -1) {
            self.keys.splice(index, 1);
            self.values.splice(index, 1);
            self._len--;
        }
    }
    /**获取字典中对应key的值，不存在则返回null */
    TryGetValue(key) {
        let self = this;
        var index = self.keys.indexOf(key, 0);
        if (index != -1) {
            return self.values[index];
        }
        return null;
    }
    TryGetKey(value) {
        let self = this;
        var index = self.values.indexOf(value, 0);
        if (index != -1) {
            return self.keys[index];
        }
        return null;
    }
    /**
     * 通过判断条件获取相关列表
     * @param value 判断条件例如：
     * this.TryGetListByCondition(function(VT){
     *      if(VT.xx==xx){
     *          return true
     *
     *      return false;
     * });
     * cache.TryGetListByCondition((bean:Type)=>bean.xxx==xxx);
     * 获取列表全部cache.TryGetListByCondition((bean:Type)=>true);
     */
    TryGetListByCondition(value) {
        let self = this;
        let list = [];
        for (let o of self.values) {
            if (value(o)) {
                list[list.length] = o;
            }
        }
        return list;
    }
    TryGetAnyByCondition(value) {
        let self = this;
        let dic = {};
        for (let s of self.keys) {
            var index = self.keys.indexOf(s, 0);
            if (value(self.values[index])) {
                dic[s] = self.values[index];
            }
        }
        return dic;
    }
    /**
     * 通过判断条件获取相关列表
     * @param value 判断条件例如：
     * this.TryGetListByCondition(function(VT){
     *      if(VT.xx==xx){
     *          return true
     *
     *      return false;
     * });
     * cache.TryGetListByCondition((bean:Type)=>bean.xxx==xxx);
     * 获取列表全部cache.TryGetListByCondition((bean:Type)=>true);
     */
    TryGetKeyListByCondition(value) {
        let self = this;
        let list = [];
        for (let i = 0; i < self.keys.length; i++) {
            if (value(self.keys[i])) {
                list[list.length] = self.values[i];
            }
        }
        return list;
    }
    /**判断字典中是否存在对应key的值，返回boolean */
    ContainsKey(key) {
        let self = this;
        let ks = self.keys;
        for (let i = 0; i < ks.length; ++i) {
            if (ks[i] == key) {
                return true;
            }
        }
        return false;
    }
    /**虽然可以通过上面的TryGetValue()函数获取到字典里的引用数据，
     * 再对数据进行修改更新，但当数据是值类型时是无法实现修改保存的。
     * 为了更方便的修改字典里的数据，增加一个修改数据的函数:(并在返回值中返回是否修改成功) */
    SetDicValue(key, value) {
        var index = this.keys.indexOf(key, 0);
        if (index != -1) {
            this.keys[index] = key;
            this.values[index] = value;
            return true;
        }
        this.Add(key, value);
        return true;
    }
    /**key为number的，可以按从小到大的顺序重新排序 */
    SortByKey() {
        let self = this;
        for (let j = self.keys.length - 1; j > 0; j--) {
            for (let i = 0; i < j; i++) {
                if (Number(self.keys[i]) > Number(self.keys[i + 1])) {
                    let temKey = self.keys[i];
                    let temValue = self.values[i];
                    self.keys[i] = self.keys[i + 1];
                    self.values[i] = self.values[i + 1];
                    self.keys[i + 1] = temKey;
                    self.values[i + 1] = temValue;
                }
            }
        }
        return true;
    }
    GetLenght() {
        return this._len;
    }
    getValueByIndex(index) {
        let self = this;
        if (index < 0 || index >= self._len) {
            return;
        }
        let value = self.values[index];
        return value;
    }
    getKeyByIndex(index) {
        let self = this;
        if (index < 0 || index >= self._len) {
            return;
        }
        let value = self.keys[index];
        return value;
    }
    getValues() {
        return this.values;
    }
    getkeys() {
        return this.keys;
    }
    clear() {
        let self = this;
        while (self.keys.length > 0) {
            self.keys.pop();
        }
        while (self.values.length > 0) {
            let vt = self.values.pop();
            vt = null;
        }
        self.keys.length = 0;
        self.values.length = 0;
        self._len = 0;
    }
}
exports.default = TSDictionary;

},{}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class TimeUtil {
    /** 00:00:00格式时间 */
    static timeFormatStr(_time, _isHour = false) {
        let hour = Math.floor(_time / 3600);
        let minute = Math.floor(_time / 60) % 60;
        let sec = _time % 60;
        if (_isHour) {
            return (hour < 10 ? ('0' + hour) : hour) + ':' + (minute < 10 ? ('0' + minute) : minute) + ':' + (sec < 10 ? ('0' + sec) : sec);
        }
        else {
            return (minute < 10 ? ('0' + minute) : minute) + ':' + (sec < 10 ? ('0' + sec) : sec);
        }
    }
    /** 获取本地与服务器时间差(s减c) */
    static csDiffTime() {
        let that = this;
        return that.cs_time_diff;
    }
    /** 获取服务器当前时间 */
    static serverTime() {
        let that = this;
        let cur_time = (new Date()).getTime() / 1000;
        return (cur_time + that.csDiffTime());
    }
}
TimeUtil.cs_time_diff = 0; //客户端与服务器时间差
exports.default = TimeUtil;

},{}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const SmallLoading_1 = require("../../module/loading/view/SmallLoading");
class ViewMgr {
    /** 构造函数 */
    constructor() {
        this._views = {};
        this._opens = [];
    }
    /**
  * 面板注册
  * @param key 面板唯一标识
  * @param view 面板
  */
    register(key, view) {
        if (view == null) {
            return;
        }
        if (this._views[key]) {
            return;
        }
        this._views[key] = view;
    }
    /**
     * 面板解除注册
     * @param key
     */
    unregister(key) {
        if (!this._views[key]) {
            return;
        }
        this._views[key] = null;
        delete this._views[key];
    }
    /**
     * 开启面板
     * @param key 面板唯一标识
     * @param param 参数
     */
    open(key, callback = null, ...param) {
        var view = this.getView(key);
        if (view == null) {
            return;
        }
        if (view.isShow()) {
            view.callback = callback;
            view.initUI();
            view.open.apply(view, param);
            view.initData();
            return view;
        }
        if (view.isInit()) {
            view.addToParent();
            view.callback = callback;
            view.initUI();
            view.addEvents();
            view.open.apply(view, param);
            view.initData();
        }
        else {
            SmallLoading_1.default.Ins.showLoading();
            view.loadResource(function () {
                view.setVisible(false);
                // view.initUIView();
                view.addToParent();
            }.bind(this), function () {
                view.callback = callback;
                view.initUI();
                view.addEvents();
                view.open.apply(view, param);
                view.initData();
                view.setVisible(true);
                SmallLoading_1.default.Ins.hideLoading();
            }.bind(this));
        }
        this._opens.push(key);
        return view;
    }
    /**
     * 根据唯一标识获取一个UI对象
     * @param key
     * @returns {any}
     */
    getView(key) {
        return this._views[key];
    }
    /**
     * 关闭面板
     * @param key 面板唯一标识
     * @param param 参数
     *
     */
    close(key, ...param) {
        if (!this.isShow(key)) {
            return;
        }
        var view = this.getView(key);
        if (view == null) {
            return;
        }
        var viewIndex = this._opens.indexOf(key);
        if (viewIndex >= 0) {
            this._opens.splice(viewIndex, 1);
        }
        view.removeFromParent();
        view.close.apply(view, param);
    }
    /**
     * 检测一个UI是否开启中
     * @param key
     * @returns {boolean}
     */
    isShow(key) {
        return this._opens.indexOf(key) != -1;
    }
    /** 当前ui打开数量 */
    currOpenNum() {
        return this._opens.length;
    }
    /** 清空处理 */
    clear() {
        this.closeAll();
        this._views = {};
    }
    /** 关闭所有开启中的UI */
    closeAll() {
        while (this._opens.length) {
            this.close(this._opens[0]);
        }
    }
    /**
     * 销毁一个面板
     * @param key 唯一标识
     * @param newView 新面板
     */
    destroy(key, newView = null) {
        var oldView = this.getView(key);
        if (oldView) {
            this.unregister(key);
            oldView.destroy();
            oldView = null;
        }
        this.register(key, newView);
    }
    static get Ins() {
        if (ViewMgr._instance == null) {
            ViewMgr._instance = new ViewMgr();
        }
        return ViewMgr._instance;
    }
}
exports.default = ViewMgr;

},{"../../module/loading/view/SmallLoading":74}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ShopView_1 = require("../../module/shop/view/ShopView");
const ViewMgr_1 = require("./ViewMgr");
const ViewConst_1 = require("./const/ViewConst");
const DiamondBuyView_1 = require("../../module/common/view/DiamondBuyView");
const LuckPrizeView_1 = require("../../module/luckPrize/view/LuckPrizeView");
const DaySignView_1 = require("../../module/daySign/view/DaySignView");
const TaskView_1 = require("../../module/task/view/TaskView");
const FollowView_1 = require("../../module/follow/view/FollowView");
const RankView_1 = require("../../module/rank/view/RankView");
const GoldNotEnoughView_1 = require("../../module/common/view/GoldNotEnoughView");
const LevelRewardView_1 = require("../../module/common/view/LevelRewardView");
const OffLineRewardView_1 = require("../../module/common/view/OffLineRewardView");
const UserInfoView_1 = require("../../module/hall/view/UserInfoView");
const NewHeroView_1 = require("../../module/hall/view/NewHeroView");
/**
 * 界面注册类
 */
class ViewRegisterMgr {
    /** 初始化注册界面 */
    initRegisterView() {
        ViewMgr_1.default.Ins.register(ViewConst_1.default.ShopView, new ShopView_1.default());
        ViewMgr_1.default.Ins.register(ViewConst_1.default.DiamondBuyView, new DiamondBuyView_1.default());
        ViewMgr_1.default.Ins.register(ViewConst_1.default.LuckPrizeView, new LuckPrizeView_1.default());
        ViewMgr_1.default.Ins.register(ViewConst_1.default.DaySignView, new DaySignView_1.default());
        ViewMgr_1.default.Ins.register(ViewConst_1.default.TaskView, new TaskView_1.default());
        ViewMgr_1.default.Ins.register(ViewConst_1.default.FollowView, new FollowView_1.default());
        ViewMgr_1.default.Ins.register(ViewConst_1.default.RankView, new RankView_1.default());
        ViewMgr_1.default.Ins.register(ViewConst_1.default.GoldNotEnoughView, new GoldNotEnoughView_1.default());
        ViewMgr_1.default.Ins.register(ViewConst_1.default.LevelRewardView, new LevelRewardView_1.default());
        ViewMgr_1.default.Ins.register(ViewConst_1.default.OffLineRewardView, new OffLineRewardView_1.default());
        ViewMgr_1.default.Ins.register(ViewConst_1.default.UserInfoView, new UserInfoView_1.default());
        ViewMgr_1.default.Ins.register(ViewConst_1.default.NewHeroView, new NewHeroView_1.default());
    }
    static get Ins() {
        if (ViewRegisterMgr._instance == null) {
            ViewRegisterMgr._instance = new ViewRegisterMgr();
        }
        return ViewRegisterMgr._instance;
    }
}
exports.default = ViewRegisterMgr;

},{"../../module/common/view/DiamondBuyView":54,"../../module/common/view/GoldNotEnoughView":55,"../../module/common/view/LevelRewardView":56,"../../module/common/view/OffLineRewardView":57,"../../module/daySign/view/DaySignView":59,"../../module/follow/view/FollowView":60,"../../module/hall/view/NewHeroView":70,"../../module/hall/view/UserInfoView":71,"../../module/luckPrize/view/LuckPrizeView":76,"../../module/rank/view/RankView":78,"../../module/shop/view/ShopView":80,"../../module/task/view/TaskView":82,"./ViewMgr":49,"./const/ViewConst":52}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const MaskLayer_1 = require("../../layer/base/MaskLayer");
const AlignUtils_1 = require("../../utils/AlignUtils");
const ResUtils_1 = require("../../utils/ResUtils");
class BaseView extends Laya.View {
    /** 构造函数 */
    constructor($layer, $class, isShowMask = true) {
        super();
        this.isRemoveBanner = true;
        this._resources = null;
        this._myParent = $layer;
        this._isInit = false;
        this._isShowMask = isShowMask;
        this._ui = $class;
        this.initUIView();
    }
    /** 获取我的父级 */
    get myParent() {
        return this._myParent;
    }
    /** 添加到父级 */
    addToParent() {
        AlignUtils_1.default.setToScreenGoldenPos(this);
        if (this._isShowMask && this._myParent instanceof MaskLayer_1.default) {
            this._myParent.addChildWithMaskCall(this, () => {
                this.removeFromParent();
                this.close();
            });
        }
        else {
            this._myParent.addChild(this);
        }
    }
    /** 初始化UI界面 */
    initUIView() {
        try {
            this._ui = new this._ui();
        }
        catch (error) {
        }
        finally {
            this.addChild(this._ui);
            // this.size(this.ui.width, this.ui.height);
        }
    }
    /** 从父级移除 */
    removeFromParent() {
        this.removeSelf();
    }
    /** 对面板进行显示初始化，用于子类继承 */
    initUI() {
        this._isInit = true;
    }
    /** 对面板数据的初始化，用于子类继承 */
    initData() {
        this._isInit = true;
    }
    /** 添加监听事件 */
    addEvents() { }
    /** 移除监听事件 */
    removeEvents() { }
    /** 是否已经初始化 */
    isInit() {
        return this._isInit;
    }
    /** 面板是否显示 */
    isShow() {
        return this.stage != null && this.visible && this._myParent.contains(this);
    }
    /** 面板开启执行函数，用于子类继承 */
    open(...param) {
        this._datas = param;
    }
    /** 设置是否隐藏 */
    setVisible(value) {
        this.visible = value;
    }
    /** 设置初始加载资源 */
    setResources(resources) {
        this._resources = resources;
    }
    /** 加载面板所需资源 */
    loadResource(loadComplete, initComplete) {
        if (this._resources && this._resources.length > 0) {
            ResUtils_1.default.loadGroup(this._resources, () => {
                loadComplete && loadComplete();
                initComplete && initComplete();
            }, this);
        }
        else {
            loadComplete && loadComplete();
            initComplete && initComplete();
        }
    }
    /** 面板关闭执行函数，用于子类继承 */
    close(...param) {
        this.removeEvents();
        if (this.isRemoveBanner) {
            // SDKManager.Instance.closeBannerAd();
        }
    }
    /** 销毁 */
    destroy() {
        this.removeEvents();
        this._myParent = null;
        this._ui.removeSelf();
        this._ui = null;
        // SDKManager.Instance.closeBannerAd();
    }
    get ui() { return this._ui; }
    set ui(value) { this._ui = value; }
    get datas() { return this._datas; }
    set datas(value) { this._datas = value; }
}
exports.default = BaseView;

},{"../../layer/base/MaskLayer":23,"../../utils/AlignUtils":39,"../../utils/ResUtils":45}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class ViewConst {
}
/** 商店 */
ViewConst.ShopView = 10000;
/** 钻石购买界面 */
ViewConst.DiamondBuyView = 10001;
/** 转盘抽奖界面 */
ViewConst.LuckPrizeView = 10002;
/** 转盘奖励界面 */
ViewConst.LuckPrizeRewardView = 10003;
/** 每日签到界面 */
ViewConst.DaySignView = 10004;
/** 任务界面 */
ViewConst.TaskView = 10005;
/** 关注有礼界面 */
ViewConst.FollowView = 10006;
/** 排行榜 */
ViewConst.RankView = 10007;
/** 金币不足 */
ViewConst.GoldNotEnoughView = 10008;
/** 等级礼包界面 */
ViewConst.LevelRewardView = 10009;
/** 离线奖励界面 */
ViewConst.OffLineRewardView = 10010;
/** 用户信息界面 */
ViewConst.UserInfoView = 10011;
/** 新武将界面 */
ViewConst.NewHeroView = 10012;
exports.default = ViewConst;

},{}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ColorUtil_1 = require("../../../core_wq/utils/ColorUtil");
class ScaleAnimScript {
    constructor() {
        this.isMouseDown = false; //按下
        this.isMouseOut = false; //移除
    }
    set owner(value) {
        this.scaleBox = value;
        //自定义的脚本会有时序问题，所以在此添加一个延时
        this.scaleBox.frameOnce(2, this, this.onLoaded);
    }
    onLoaded() {
        this.scaleOrginValue = { x: this.scaleBox.scaleX, y: this.scaleBox.scaleY };
        this.scaleBox.on(Laya.Event.MOUSE_DOWN, this, this.mouseDown);
        this.scaleBox.on(Laya.Event.MOUSE_UP, this, this.mouseUp);
        this.scaleBox.on(Laya.Event.MOUSE_OUT, this, this.mouseOut);
    }
    mouseDown() {
        this.isMouseDown = true;
        this.isMouseOut = false;
        this.scaleSmall();
    }
    mouseUp() {
        if (this.isMouseDown) {
            this.scaleNormal();
        }
        this.isMouseDown = false;
    }
    mouseOut() {
        if (this.isMouseDown) {
            this.scaleNormal();
        }
        this.isMouseDown = false;
        this.isMouseOut = true;
    }
    mouseMove() {
        if (this.isMouseOut) {
            if (this.isHit(this.scaleBox)) {
                this.scaleSmall();
            }
            else {
                this.scaleNormal();
            }
        }
    }
    scaleSmall() {
        if (this.scaleBox) {
            this.scaleBox.scale(this.scaleOrginValue.x * 0.95, this.scaleOrginValue.y * 0.95);
            this.scaleBox.filters = ColorUtil_1.default.createColorFilter(1);
        }
    }
    scaleNormal() {
        if (this.scaleBox) {
            this.scaleBox.scale(this.scaleOrginValue.x, this.scaleOrginValue.y);
            this.scaleBox.filters = [];
        }
    }
    //点击检测
    isHit(_checkBox, _extW = 0, _extH = 0) {
        if (_checkBox) {
            let touchPos = _checkBox.getMousePoint();
            let touchArea = new Laya.Rectangle(0 - _extW / 2, 0 - _extH / 2, _checkBox.width + _extW, _checkBox.height + _extH);
            return touchArea.contains(touchPos.x, touchPos.y);
        }
        return false;
    }
}
exports.default = ScaleAnimScript;

},{"../../../core_wq/utils/ColorUtil":41}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const HallControl_1 = require("../../hall/HallControl");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
const PlayerMgr_1 = require("../../../core_wq/player/PlayerMgr");
const HttpMgr_1 = require("../../../core_wq/net/HttpMgr");
const MsgMgr_1 = require("../../../core_wq/msg/MsgMgr");
const GlobalData_1 = require("../../../core_wq/db/GlobalData");
class DiamondBuyView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.subFrameLayer, layaMaxUI_1.ui.moduleView.common.DiamondBuyViewUI);
        this._price = 0;
    }
    initData() {
        super.initData();
        this._data = this.datas[0];
        if (this._data) {
            if (this._data.type == "hero") {
                this._heroConfig = GlobalData_1.default.getData(GlobalData_1.default.HeroConfigVO, this._data.value);
                this._price = HallControl_1.default.Ins.Model.getDiamondBuyHeroPrice(this._data.value, HallControl_1.default.Ins.Model.queryBuyHeroRecord(this._data.value, true));
                this.ui.txt_diamond.text = MathUtil_1.default.unitConversion(this._price);
                if (this._heroConfig) {
                    this.ui.txt_title.text = "购买" + this._heroConfig.name;
                }
            }
        }
    }
    addEvents() {
        this.ui.btn_buy.on(Laya.Event.CLICK, this, this.onBuyHandler);
    }
    removeEvents() {
        this.ui.btn_buy.off(Laya.Event.CLICK, this, this.onBuyHandler);
    }
    onBuyHandler() {
        if (this._data.type == "hero") {
            this.buyHeroHandler();
        }
    }
    buyHeroHandler() {
        let heroPriceInt = Math.floor(this._price);
        if (PlayerMgr_1.default.Ins.Info.userDiamond >= heroPriceInt) {
            HttpMgr_1.default.Ins.requestDiamondBuyOrder(heroPriceInt, (res) => {
                if (res) {
                    if (HallControl_1.default.Ins.createHero(this._data.value) == null)
                        return;
                    HttpMgr_1.default.Ins.requestDiamondBuy(res.order_id, (_res) => {
                        if (this._heroConfig) {
                            MsgMgr_1.default.Ins.showMsg("武将购买成功：" + this._heroConfig.name + "x1");
                        }
                        else {
                            MsgMgr_1.default.Ins.showMsg("武将购买成功");
                        }
                        HttpMgr_1.default.Ins.requestDiamondData();
                        //刷新消费记录
                        HallControl_1.default.Ins.Model.refreshBuyHeroRecord(this._data.value, true);
                    });
                }
                else {
                    MsgMgr_1.default.Ins.showMsg("购买失败");
                }
            });
        }
        else {
            MsgMgr_1.default.Ins.showMsg("元宝不足,做任务领元宝噢!");
        }
    }
}
exports.default = DiamondBuyView;

},{"../../../core_wq/db/GlobalData":7,"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/msg/MsgMgr":25,"../../../core_wq/net/HttpMgr":30,"../../../core_wq/player/PlayerMgr":32,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/view/base/BaseView":51,"../../../ui/layaMaxUI":83,"../../hall/HallControl":62}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const HallControl_1 = require("../../hall/HallControl");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
const ShareMgr_1 = require("../../../core_wq/msg/ShareMgr");
const MsgMgr_1 = require("../../../core_wq/msg/MsgMgr");
/**
 * 金币不足界面
 */
class GoldNotEnoughView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.subFrameLayer, layaMaxUI_1.ui.moduleView.common.GoldNotEnoughViewUI);
        this._gold = 0;
    }
    initUI() {
        super.initUI();
        let vo = HallControl_1.default.Ins.Model.getPreNewHeroData(HallControl_1.default.Ins.Model.heroLevel);
        if (vo) {
            let price = HallControl_1.default.Ins.Model.getHeroBuyPrice(vo.buyPrice, HallControl_1.default.Ins.Model.queryBuyHeroRecord(vo.id));
            this._gold = price * 0.6;
            this.ui.txt_price.text = MathUtil_1.default.unitConversion(this._gold);
        }
        let isAd = ShareMgr_1.default.Ins.isAdStage(12);
        if (isAd) {
            this.ui.txt_btn.text = "看视频领铜钱";
        }
        else {
            this.ui.txt_btn.text = "求助群友呀!";
        }
        this.ui.txt_lastTime.visible = !isAd;
        if (this.ui.txt_lastTime.visible) {
            this.ui.txt_lastTime.text = "今天剩余" + ShareMgr_1.default.Ins.getShareTimes(12) + "次";
        }
    }
    addEvents() {
        this.ui.btn_get.on(Laya.Event.CLICK, this, this.onGetReward);
    }
    removeEvents() {
        this.ui.btn_get.off(Laya.Event.CLICK, this, this.onGetReward);
    }
    onGetReward() {
        ShareMgr_1.default.Ins.showShareOrAdv((res) => {
            MsgMgr_1.default.Ins.showMsg("您获得铜钱：" + Number(this.ui.txt_price.text));
            HallControl_1.default.Ins.updateGold(this._gold, false);
        }, 12, false, true);
    }
}
exports.default = GoldNotEnoughView;

},{"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/msg/MsgMgr":25,"../../../core_wq/msg/ShareMgr":29,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/view/base/BaseView":51,"../../../ui/layaMaxUI":83,"../../hall/HallControl":62}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const PlayerMgr_1 = require("../../../core_wq/player/PlayerMgr");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
const HallControl_1 = require("../../hall/HallControl");
const EventsMgr_1 = require("../../../core_wq/event/EventsMgr");
const EventType_1 = require("../../../core_wq/event/EventType");
const ViewMgr_1 = require("../../../core_wq/view/ViewMgr");
const ViewConst_1 = require("../../../core_wq/view/const/ViewConst");
const ShareMgr_1 = require("../../../core_wq/msg/ShareMgr");
const SDKMgr_1 = require("../../../core_wq/msg/SDKMgr");
const HttpMgr_1 = require("../../../core_wq/net/HttpMgr");
/**
 * 等级礼包界面
 */
class LevelRewardView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.subFrameLayer, layaMaxUI_1.ui.moduleView.common.LevelRewardViewUI);
        this._isGetAllReward = false;
    }
    initData() {
        super.initData();
        this._levelVO = this.datas[0];
        if (this._levelVO) {
        }
    }
    initView() {
        this._gold = Math.floor(this._levelVO.goldGift * PlayerMgr_1.default.Ins.Info.userIncomeSec);
        let diamond = Math.floor(this._levelVO.diamondsGift);
        let isAdvanced = diamond > 0;
        let shareItems = [];
        let isGetPrize = false; //是否已领取
        this.ui.txt_levelGift.text = this._levelVO.id + "";
        this.ui.txt_acc.text = Math.floor(this._levelVO.accSpeedTime) + "";
        this.ui.txt_gold.text = MathUtil_1.default.unitConversion(this._gold);
        this.ui.txt_diamond.text = Math.floor(this._levelVO.diamondsGift) + "";
        this.ui.btn_get.text.text = "领取";
        this.ui.btn_get.disabled = false;
        this.ui.btn_share.text.text = "炫耀";
        this.ui.btn_share.disabled = false;
    }
    addEvents() {
        this.ui.btn_get.on(Laya.Event.CLICK, this, this.onGetReward);
        this.ui.btn_share.on(Laya.Event.CLICK, this, this.onGetShareReward);
    }
    removeEvents() {
        this.ui.btn_get.off(Laya.Event.CLICK, this, this.onGetReward);
        this.ui.btn_share.off(Laya.Event.CLICK, this, this.onGetShareReward);
    }
    /** 普通礼包奖励 */
    onGetReward() {
        if (Math.floor(this._levelVO.accSpeedTime) > 0) {
            EventsMgr_1.default.Ins.dispatch(EventType_1.default.GAME_ACCE_START, Math.floor(this._levelVO.accSpeedTime));
        }
        if (this._gold > 0) {
            HallControl_1.default.Ins.updateGold(this._gold, false);
            this._gold = 0;
        }
        this.ui.btn_get.text.text = "已领取";
        this.ui.btn_get.disabled = true;
        this.closeView();
    }
    onGetShareReward() {
        SDKMgr_1.default.Ins.showVideoAd((_res) => {
            if (_res && _res.isEnded || _res === undefined) {
                this.ui.btn_share.text.text = "已领取";
                this.ui.btn_share.disabled = true;
                HttpMgr_1.default.Ins.requestDiamondData();
                HttpMgr_1.default.Ins.requestShareAdFinish("levelReward", _res);
            }
        }, () => {
            //无视频回调
            this.shareGetReward();
        });
        this.closeView();
    }
    shareGetReward() {
        ShareMgr_1.default.Ins.showShareOrAdv((res) => {
            this.ui.btn_share.text.text = "已领取";
            this.ui.btn_share.disabled = true;
            HttpMgr_1.default.Ins.requestDiamondData();
        });
    }
    closeView() {
        if (this._isGetAllReward) {
            ViewMgr_1.default.Ins.close(ViewConst_1.default.LevelRewardView);
        }
        this._isGetAllReward = true;
    }
}
exports.default = LevelRewardView;

},{"../../../core_wq/event/EventType":17,"../../../core_wq/event/EventsMgr":18,"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/msg/SDKMgr":28,"../../../core_wq/msg/ShareMgr":29,"../../../core_wq/net/HttpMgr":30,"../../../core_wq/player/PlayerMgr":32,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/view/ViewMgr":49,"../../../core_wq/view/base/BaseView":51,"../../../core_wq/view/const/ViewConst":52,"../../../ui/layaMaxUI":83,"../../hall/HallControl":62}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
const ShareMgr_1 = require("../../../core_wq/msg/ShareMgr");
const MsgMgr_1 = require("../../../core_wq/msg/MsgMgr");
const HallControl_1 = require("../../hall/HallControl");
/**
 * 离线奖励界面
 */
class OffLineRewardView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.subFrameLayer, layaMaxUI_1.ui.moduleView.common.OffLineRewardViewUI);
        this._gold = 0;
    }
    initData() {
        super.initData();
        this._gold = this.datas[0];
        this.ui.txt_gold.text = MathUtil_1.default.unitConversion(this._gold);
    }
    addEvents() {
        this.ui.btn_get.on(Laya.Event.CLICK, this, this.onGetReward);
    }
    removeEvents() {
        this.ui.btn_get.off(Laya.Event.CLICK, this, this.onGetReward);
    }
    onGetReward() {
        ShareMgr_1.default.Ins.showShareOrAdv(() => {
            MsgMgr_1.default.Ins.showMsg("您获得铜钱：" + MathUtil_1.default.unitConversion(this._gold));
            HallControl_1.default.Ins.updateGold(this._gold, false);
        }, 1);
    }
}
exports.default = OffLineRewardView;

},{"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/msg/MsgMgr":25,"../../../core_wq/msg/ShareMgr":29,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/view/base/BaseView":51,"../../../ui/layaMaxUI":83,"../../hall/HallControl":62}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const DaySignView_1 = require("./DaySignView");
const HttpMgr_1 = require("../../../core_wq/net/HttpMgr");
const MsgMgr_1 = require("../../../core_wq/msg/MsgMgr");
const ViewMgr_1 = require("../../../core_wq/view/ViewMgr");
const ViewConst_1 = require("../../../core_wq/view/const/ViewConst");
const EventsMgr_1 = require("../../../core_wq/event/EventsMgr");
const EventType_1 = require("../../../core_wq/event/EventType");
class DaySignItem extends layaMaxUI_1.ui.moduleView.daySign.DaySignItemUI {
    constructor() {
        super();
        this._diamond = 0;
        this._day = 0;
    }
    set dataSource(value) {
        this._day = value;
        this._diamond = DaySignView_1.default.SignData.prize["day_" + this._day];
        this.txt_title.text = "第" + this._day + "天";
        this.txt_diamond.text = "x" + this._diamond;
        if (this._day <= DaySignView_1.default.SignData.sign.day) {
            this.btn_get.skin = "images/daySign/day_prize_item1.png";
            this.imgGet.skin = "images/daySign/day_prize_get.png";
            if (this._day == DaySignView_1.default.SignData.sign.day && DaySignView_1.default.SignData.sign.status == 0) {
                this.imgGet.visible = false;
                this.btn_get.on(Laya.Event.CLICK, this, this.onGetReward);
                EventsMgr_1.default.Ins.addListener(EventType_1.default.DAYSIGN_REWARD_COMPLETE, this.onRewardGetComplete, this);
            }
        }
    }
    onGetReward() {
        if (DaySignView_1.default.SignData && DaySignView_1.default.SignData.sign) {
            let day = DaySignView_1.default.SignData.sign.day;
            HttpMgr_1.default.Ins.requestDaySignPrize(day, (_res) => {
                if (_res) {
                    if (_res.code == 1) {
                        this.onRewardGetComplete();
                    }
                    else if (_res.code == 2) {
                        MsgMgr_1.default.Ins.showMsg("今日签到奖励已领取");
                    }
                    else {
                        MsgMgr_1.default.Ins.showMsg("签到奖励领取失败");
                    }
                }
            });
        }
    }
    onRewardGetComplete() {
        HttpMgr_1.default.Ins.requestDiamondData();
        this.imgGet.visible = true;
        ViewMgr_1.default.Ins.close(ViewConst_1.default.DaySignView);
        MsgMgr_1.default.Ins.showMsg("签到奖励领取成功：元宝x" + this._diamond);
    }
}
exports.default = DaySignItem;

},{"../../../core_wq/event/EventType":17,"../../../core_wq/event/EventsMgr":18,"../../../core_wq/msg/MsgMgr":25,"../../../core_wq/net/HttpMgr":30,"../../../core_wq/view/ViewMgr":49,"../../../core_wq/view/const/ViewConst":52,"../../../ui/layaMaxUI":83,"./DaySignView":59}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const ViewMgr_1 = require("../../../core_wq/view/ViewMgr");
const ViewConst_1 = require("../../../core_wq/view/const/ViewConst");
const HttpMgr_1 = require("../../../core_wq/net/HttpMgr");
const MsgMgr_1 = require("../../../core_wq/msg/MsgMgr");
const EventsMgr_1 = require("../../../core_wq/event/EventsMgr");
const EventType_1 = require("../../../core_wq/event/EventType");
/**
 * 每日签到界面
 */
class DaySignView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.frameLayer, layaMaxUI_1.ui.moduleView.daySign.DaySignViewUI);
        this.setResources(["daySign"]);
    }
    initUI() {
        super.initUI();
        HttpMgr_1.default.Ins.requestSignInfo((data) => {
            DaySignView.SignData = data;
            if (DaySignView.SignData) {
                this.ui.lists.array = [1, 2, 3, 4, 5, 6];
                this.ui.lists.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
                this.ui.txt_diamond.text = "x" + DaySignView.SignData.prize["day_7"];
                if (7 <= DaySignView.SignData.sign.day) {
                    this.ui.btn_lastGet.skin = "images/daySign/day_prize_item2.png";
                    this.ui.imgGet.skin = "images/daySign/day_prize_get.png";
                    if (7 == DaySignView.SignData.sign.day && DaySignView.SignData.sign.status == 0) {
                        this.ui.imgGet.visible = false;
                        this.ui.btn_lastGet.on(Laya.Event.CLICK, this, this.onGetReward);
                    }
                }
            }
        });
    }
    addEvents() {
        this.ui.btn_get.on(Laya.Event.CLICK, this, this.onGetReward);
        this.ui.btn_close.on(Laya.Event.CLICK, this, this.onCloseHandler);
    }
    removeEvents() {
        this.ui.btn_get.off(Laya.Event.CLICK, this, this.onGetReward);
        this.ui.btn_lastGet.off(Laya.Event.CLICK, this, this.onGetReward);
        this.ui.btn_close.off(Laya.Event.CLICK, this, this.onCloseHandler);
    }
    /** 领取奖励 */
    onGetReward() {
        if (DaySignView.SignData && DaySignView.SignData.sign) {
            let day = DaySignView.SignData.sign.day;
            HttpMgr_1.default.Ins.requestDaySignPrize(day, (_res) => {
                if (_res) {
                    if (_res.code == 1) {
                        if (day < 7) {
                            EventsMgr_1.default.Ins.dispatch(EventType_1.default.DAYSIGN_REWARD_COMPLETE);
                        }
                        else {
                            HttpMgr_1.default.Ins.requestDiamondData();
                            this.ui.imgGet.visible = true;
                            ViewMgr_1.default.Ins.close(ViewConst_1.default.DaySignView);
                            MsgMgr_1.default.Ins.showMsg("签到奖励领取成功：元宝x" + DaySignView.SignData.prize["day7"]);
                        }
                    }
                    else if (_res.code == 2) {
                        MsgMgr_1.default.Ins.showMsg("今日签到奖励已领取");
                    }
                    else {
                        MsgMgr_1.default.Ins.showMsg("签到奖励领取失败");
                    }
                }
            });
        }
    }
    onCloseHandler() {
        ViewMgr_1.default.Ins.close(ViewConst_1.default.DaySignView);
    }
    onListRender(cell, index) {
        if (index > this.ui.lists.array.length) {
            return;
        }
        let item = cell.getChildByName("item");
        if (item) {
            let info = this.ui.lists.array[index];
            item.dataSource = info;
        }
    }
}
DaySignView.SignData = null;
exports.default = DaySignView;

},{"../../../core_wq/event/EventType":17,"../../../core_wq/event/EventsMgr":18,"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/msg/MsgMgr":25,"../../../core_wq/net/HttpMgr":30,"../../../core_wq/view/ViewMgr":49,"../../../core_wq/view/base/BaseView":51,"../../../core_wq/view/const/ViewConst":52,"../../../ui/layaMaxUI":83}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const ViewMgr_1 = require("../../../core_wq/view/ViewMgr");
const ViewConst_1 = require("../../../core_wq/view/const/ViewConst");
const HttpMgr_1 = require("../../../core_wq/net/HttpMgr");
class FollowView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.frameLayer, layaMaxUI_1.ui.moduleView.follow.FollowViewUI);
    }
    initUI() {
        super.initUI();
    }
    addEvents() {
        this.ui.btn_get.on(Laya.Event.CLICK, this, this.onGetReward);
        this.ui.btn_close.on(Laya.Event.CLICK, this, this.onCloseHandler);
    }
    removeEvents() {
        this.ui.btn_get.off(Laya.Event.CLICK, this, this.onGetReward);
        this.ui.btn_close.off(Laya.Event.CLICK, this, this.onCloseHandler);
    }
    onGetReward() {
        HttpMgr_1.default.Ins.requestAccountRewardPrize();
    }
    onCloseHandler() {
        ViewMgr_1.default.Ins.close(ViewConst_1.default.FollowView);
    }
}
exports.default = FollowView;

},{"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/net/HttpMgr":30,"../../../core_wq/view/ViewMgr":49,"../../../core_wq/view/base/BaseView":51,"../../../core_wq/view/const/ViewConst":52,"../../../ui/layaMaxUI":83}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const EffectUtil_1 = require("../../../core_wq/utils/EffectUtil");
/**
 * 新手指引说话提示框
 */
class GuideSpeakView extends layaMaxUI_1.ui.moduleView.guide.GuideSpeakViewUI {
    constructor() {
        super();
    }
    onEnable() {
        EffectUtil_1.default.playTypewriterEffect(this.txt_content, this._content, 50, this._speakComplete);
    }
    /** 设置说话内容 */
    setSpeakContent(content, speakComplete = null) {
        this._content = content;
        this._speakComplete = speakComplete;
        if (this.txt_content) {
            EffectUtil_1.default.playTypewriterEffect(this.txt_content, this._content, 50, this._speakComplete);
        }
    }
}
exports.default = GuideSpeakView;

},{"../../../core_wq/utils/EffectUtil":42,"../../../ui/layaMaxUI":83}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const HallModel_1 = require("./model/HallModel");
const GlobalData_1 = require("../../core_wq/db/GlobalData");
const PlayerMgr_1 = require("../../core_wq/player/PlayerMgr");
const EventsMgr_1 = require("../../core_wq/event/EventsMgr");
const EventType_1 = require("../../core_wq/event/EventType");
const PlayerInfo_1 = require("../../core_wq/player/data/PlayerInfo");
const MathUtil_1 = require("../../core_wq/utils/MathUtil");
const MsgMgr_1 = require("../../core_wq/msg/MsgMgr");
const StorageUtil_1 = require("../../core_wq/utils/StorageUtil");
const SoundMgr_1 = require("../../core_wq/sound/SoundMgr");
const SoundType_1 = require("../../core_wq/sound/SoundType");
const ShareMgr_1 = require("../../core_wq/msg/ShareMgr");
const ViewMgr_1 = require("../../core_wq/view/ViewMgr");
const ViewConst_1 = require("../../core_wq/view/const/ViewConst");
const EffectUtil_1 = require("../../core_wq/utils/EffectUtil");
const GuideMgr_1 = require("../../core_wq/guide/GuideMgr");
class HallControl extends Laya.Script {
    constructor() {
        super();
        /** 兵营满席动画 */
        this._battleHeroTimeLine = null;
        this._battleHeroIndex = 0;
        this.initModel();
    }
    onAwake() {
        this.initModel();
    }
    initModel() {
        if (this._model == null) {
            this._model = new HallModel_1.default();
        }
    }
    /** 购买英雄 */
    buyHero(heroInfo) {
        if (heroInfo) {
            let buyPrice = this._model.getHeroBuyPrice(heroInfo.buyPrice, this._model.queryBuyHeroRecord(heroInfo.id));
            if (PlayerMgr_1.default.Ins.Info.userGold >= buyPrice) {
                if (this.createHero(heroInfo.id) == null)
                    return;
                this.updateGold(PlayerMgr_1.default.Ins.Info.userGold - buyPrice);
                this._model.refreshBuyHeroRecord(heroInfo.id);
                buyPrice = this._model.getHeroBuyPrice(heroInfo.buyPrice, this._model.queryBuyHeroRecord(heroInfo.id));
                this.hallScene.txt_price.text = MathUtil_1.default.unitConversion(buyPrice);
                this.hallScene.frameOnce(1, this.hallScene, () => { this.sortHero(); }); //英雄排序
            }
            else {
                if (ShareMgr_1.default.Ins.isShareEnable && (ShareMgr_1.default.Ins.getAdTimes(12) > 0 || ShareMgr_1.default.Ins.getShareTimes(12) > 0)) {
                    ViewMgr_1.default.Ins.open(ViewConst_1.default.GoldNotEnoughView);
                }
                else {
                    MsgMgr_1.default.Ins.showMsg("很抱歉，铜钱不足");
                }
            }
        }
    }
    /** 创建英雄 */
    createHero(id, isBackward = false) {
        for (let index = 0; index < this._model.allHeroCount; index++) {
            let curIndex = index;
            if (isBackward) {
                curIndex = this._model.allHeroCount - index - 1;
            }
            let cell = this.hallScene.lists_head.getCell(index);
            if (cell) {
                let headItem = cell.getChildByName("hero");
                if (headItem && headItem.IsEmpty && !headItem.IsLock && !headItem.IsBox) {
                    headItem.Info.heroId = id;
                    headItem.updateHeadSkin(id, curIndex);
                    headItem.setStage(1);
                    //设置战斗中的英雄
                    this._battleHeroIndex++;
                    this._startPos = {
                        x: MathUtil_1.default.rangeInt(10, 50) + this.hallScene.width * 0.5 * Math.random(),
                        y: this.hallScene.beginEventView.y + MathUtil_1.default.rangeInt(-150, 200) //150 + (this.hallScene.beginEventView.height - 30) / this.hallScene.lists_head.array.length * this._battleHeroIndex
                    };
                    EffectUtil_1.default.playBoneEffect("ui_born", { x: this._startPos.x - 20, y: this._startPos.y + 200 });
                    if (this._battleHeroIndex >= this.hallScene.lists_head.array.length) {
                        this._battleHeroIndex = 0;
                    }
                    this._model.heroCount += 1;
                    this.hallScene.timerOnce(100, this.hallScene, () => {
                        this.createHeroBone(headItem, this._startPos);
                        this.setBattleHeroCount(PlayerMgr_1.default.Ins.Info.userRuncarCount + 1);
                        SoundMgr_1.default.Ins.playEffect(SoundType_1.default.SUMMON_HERO);
                    });
                    this.setSaveHeroData(headItem);
                    GuideMgr_1.default.Ins.onNextStep();
                    return headItem;
                }
            }
        }
        if (!isBackward) {
            MsgMgr_1.default.Ins.showMsg("兵营不足,快去合成英雄哟!");
        }
        return null;
    }
    /** 创建英雄龙骨动画 */
    createHeroBone(headItem, startPos) {
        headItem.removeBattleHero();
        headItem.createBattleHero(this.hallScene, startPos);
        this._model.is_reset_zorder = true;
        if (this._model.userAcceValue > 1) {
            headItem.BattleHero.setMoveAccelerate(this._model.userAcceValue);
        }
    }
    /** 设置格子是否锁 */
    setCellIsLock(lockIndex) {
        for (let index = 0; index < this._model.allHeroCount; index++) {
            let cell = this.hallScene.lists_head.getCell(index);
            if (cell) {
                let headItem = cell.getChildByName("hero");
                if (headItem) {
                    headItem.setLock(index >= lockIndex);
                }
            }
        }
    }
    /** 设置用户等级 */
    setUserLevel(level) {
        PlayerMgr_1.default.Ins.Info.userLevel = level;
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_USER_LEVEL);
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_SYSTEM_BTN);
        this.refreshUserData();
    }
    /** 刷新用户相关数据 */
    refreshUserData() {
        let levelVO = GlobalData_1.default.getData(GlobalData_1.default.LevelVO, PlayerMgr_1.default.Ins.Info.userLevel);
        if (levelVO) {
            this.setCellIsLock(levelVO.openCellCount);
            this.setBattleHeroCountMax(levelVO.battleCount);
        }
    }
    /** 设置用户经验 */
    setUserExp(upExp) {
        PlayerMgr_1.default.Ins.Info.userExp = upExp;
        let upNeedexp = 0;
        let nextLevel = PlayerMgr_1.default.Ins.Info.userLevel + 1;
        let levelVO = GlobalData_1.default.getData(GlobalData_1.default.LevelVO, nextLevel);
        if (levelVO) {
            upNeedexp = levelVO.upNeedexp;
            let exp = PlayerMgr_1.default.Ins.Info.userExp - upNeedexp;
            if (exp >= 0) {
                this.setUserLevel(nextLevel);
                PlayerMgr_1.default.Ins.Info.userLevelExtraIncome = 1 + levelVO.extraProduce;
                if (levelVO.goldGift > 0) { //等级奖励
                    ViewMgr_1.default.Ins.open(ViewConst_1.default.LevelRewardView, null, levelVO);
                }
                else {
                    MsgMgr_1.default.Ins.showMsg("主人,恭喜您升级了!");
                    SoundMgr_1.default.Ins.playEffect(SoundType_1.default.UPGRADE_HERO);
                }
                this.setUserExp(exp);
                this.updateMapData(true);
            }
            EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_USER_EXP, upNeedexp);
        }
    }
    /** 更新地图数据 */
    updateMapData(isUpLevel = false) {
        //更新城池名字
        let mapVO = GlobalData_1.default.getData(GlobalData_1.default.MapVO, PlayerMgr_1.default.Ins.Info.userLevel);
        if (mapVO) {
            this._hallScene.txt_mapName.text = mapVO.name;
        }
    }
    /** 刷新每秒金币收益 */
    refreshIncomeSec() {
        let incomePerSec = 0;
        for (let index = 0; index < this._model.allHeroCount; index++) {
            let cell = this.hallScene.lists_head.getCell(index);
            if (cell) {
                let headItem = cell.getChildByName("hero");
                if (headItem) {
                    incomePerSec += this.getHeroIncomeSecGold(headItem.Info.heroId) * PlayerMgr_1.default.Ins.Info.userExtraIncome * PlayerMgr_1.default.Ins.Info.userAcceValue * PlayerMgr_1.default.Ins.Info.userLevelExtraIncome;
                }
            }
        }
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_INCOME, incomePerSec);
    }
    /**
     * 更新金币
     * @param gold 金币数量
     * @param isTotal true:是否直接替换金额  false:差额
     */
    updateGold(gold, isTotal = true) {
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_CURRENCY, PlayerInfo_1.default.GOLD, gold, isTotal); //更新用户获得金币
        this.hallScene.updateRecruitData();
    }
    /** 更新英雄等级 */
    updateHeroLevel(level) {
        if (this._model.heroLevel < this._model.heroMaxLevel) {
            if (this._model.heroLevel < level) {
                this._model.heroLevel = level;
                Laya.timer.callLater(this, StorageUtil_1.default.saveStorageToLocal, [true]);
                return true;
            }
        }
        else {
            MsgMgr_1.default.Ins.showMsg("已达到最高级了耶!");
        }
        return false;
    }
    /** 获取英雄合成经验 */
    getHeroExp(heroId) {
        let heroConfig = GlobalData_1.default.getData(GlobalData_1.default.HeroConfigVO, heroId);
        if (heroConfig) {
            return heroConfig.syntheticExp;
        }
        return 0;
    }
    /** 获取英雄每秒产出金币 */
    getHeroIncomeSecGold(heroId) {
        let heroConfig = GlobalData_1.default.getData(GlobalData_1.default.HeroConfigVO, heroId);
        if (heroConfig) {
            return heroConfig.PerSecCoin;
        }
        return 0;
    }
    /** 获取英雄一共的收益金币 */
    getHeroIncomeTotalGold(heroId) {
        let heroConfig = GlobalData_1.default.getData(GlobalData_1.default.HeroConfigVO, heroId);
        if (heroConfig) {
            return heroConfig.totalCoin;
        }
        return 0;
    }
    /** 是否新手 */
    get IsGuide() {
        return this._model.heroLevel < 3;
    }
    /** 是否被点击 */
    isHit(checkObj, extW = 0, extH = 0) {
        if (checkObj) {
            let touchPos = checkObj.getMousePoint();
            let touchArea = new Laya.Rectangle(0 - extW / 2, 0 - extH / 2, checkObj.width + extW, checkObj.height + extH);
            return touchArea.contains(touchPos.x, touchPos.y);
        }
        return false;
    }
    /** 英雄按等级排序 */
    sortHero() {
        let heroSortList = [];
        for (var index = 0; index < this._model.allHeroCount; index++) {
            let cell = this.hallScene.lists_head.getCell(index);
            if (cell) {
                let headItem = cell.getChildByName("hero");
                if (headItem && !headItem.IsEmpty && !headItem.IsBox && !headItem.IsLock) {
                    let heroData = {
                        heroId: headItem.Info.heroId,
                        heroStage: headItem.HeroStage,
                        battleHero: headItem.BattleHero,
                        currHp: headItem.hpBar.value
                    };
                    if (index < 1) {
                        heroSortList.push(heroData);
                    }
                    else {
                        let maxCount = heroSortList.length;
                        let maxIndex = maxCount;
                        for (var j = 0; j < maxCount; j++) {
                            if (heroSortList[j] && heroSortList[j].heroId < headItem.Info.heroId) {
                                maxIndex = j;
                                break;
                            }
                        }
                        heroSortList.splice(maxIndex, 0, heroData);
                    }
                }
            }
        }
        let heroIndex = 0;
        for (var index = 0; index < this._model.allHeroCount; index++) {
            let cell = this.hallScene.lists_head.getCell(index);
            if (cell) {
                let headItem = cell.getChildByName("hero");
                if (headItem && !headItem.IsBox && !headItem.IsLock) {
                    if (heroIndex >= heroSortList.length) {
                        headItem.reset();
                    }
                    else {
                        let heroData = heroSortList[heroIndex];
                        headItem.updateHeadSkin(heroData.heroId);
                        headItem.setStage(heroData.heroStage);
                        if (headItem.BattleHero == null) {
                            headItem.BattleHero = heroData.battleHero;
                            headItem.hpBar.value = heroData.currHp;
                            headItem.hpBar.visible = true;
                        }
                        heroIndex++;
                    }
                    this.setSaveHeroData(headItem);
                }
            }
        }
    }
    /** 设置英雄数据并保存 */
    setSaveHeroData(headItemOne, headItemTwo = null) {
        for (let key in this._model.AllHeros) {
            let element = this._model.AllHeros[key];
            if (headItemOne) {
                if (element && element.id == headItemOne.heroIndex) {
                    element.heroId = headItemOne.Info.heroId;
                }
            }
            //交换车辆
            if (headItemTwo) {
                if (element && element.id == headItemTwo.heroIndex) {
                    element.heroId = headItemTwo.Info.heroId;
                }
            }
        }
        Laya.timer.callLater(this, StorageUtil_1.default.saveStorageToLocal, [true]);
    }
    /** 设置战斗英雄的数量 */
    setBattleHeroCount(value) {
        PlayerMgr_1.default.Ins.Info.userRuncarCount = value;
        this.refreshBattleHeroCount();
        this.refreshIncomeSec();
        SoundMgr_1.default.Ins.playEffect(SoundType_1.default.ENTER_GAME);
    }
    /** 设置战斗英雄的最大数量 */
    setBattleHeroCountMax(value) {
        PlayerMgr_1.default.Ins.Info.userRuncarCountMax = value;
        this.refreshBattleHeroCount();
    }
    /** 刷新战斗中英雄数量 */
    refreshBattleHeroCount() {
        if (PlayerMgr_1.default.Ins.Info.userRuncarCount < PlayerMgr_1.default.Ins.Info.userRuncarCountMax) {
            PlayerMgr_1.default.Ins.Info.userExtraIncome = 1;
            this.hallScene.txt_battleCount.text = PlayerMgr_1.default.Ins.Info.userRuncarCount + "/" + PlayerMgr_1.default.Ins.Info.userRuncarCountMax;
        }
        else {
            PlayerMgr_1.default.Ins.Info.userExtraIncome = 1.1;
            this.hallScene.txt_battleCount.text = "+10%";
        }
        //跑道已满效果
        if ((PlayerMgr_1.default.Ins.Info.userRuncarCount < PlayerMgr_1.default.Ins.Info.userRuncarCountMax)) {
            this.hallScene.imgBattleCount.skin = "images/hall/game_running_num1.png";
            this.hallScene.txt_battleCount.y = 3;
            this.hallScene.txt_battleCount.color = "#000000";
            //停止缩放
            if (this._battleHeroTimeLine) {
                this._battleHeroTimeLine.pause();
                this.hallScene.imgBattleCount.scale(1, 1);
            }
        }
        else {
            this.hallScene.imgBattleCount.skin = "images/hall/game_running_num2.png";
            this.hallScene.txt_battleCount.y = 25;
            this.hallScene.txt_battleCount.color = "#b11a1a";
            //开始缩放动画
            if (this._battleHeroTimeLine == null) {
                this._battleHeroTimeLine = new Laya.TimeLine();
                this._battleHeroTimeLine.addLabel("scale1", 0).to(this.hallScene.imgBattleCount, { scaleX: 0.9, scaleY: 0.9 }, 300)
                    .addLabel("scale2", 100).to(this.hallScene.imgBattleCount, { scaleX: 1, scaleY: 1 }, 300);
            }
            this._battleHeroTimeLine.play(0, true);
        }
        this.hallScene.imgBattleGold.visible = !(PlayerMgr_1.default.Ins.Info.userRuncarCount < PlayerMgr_1.default.Ins.Info.userRuncarCountMax);
        this.hallScene.imgBattleGold.x = 92;
        this.hallScene.imgBattleGold.y = 21;
        this.hallScene.imgBattleCount.alpha = 0.9;
    }
    /** 设置战斗英雄加速效果 */
    setBattleHeroAcce(accValue) {
        this._model.userAcceValue = accValue;
        for (var index = 0; index < this._model.allHeroCount; index++) {
            let cell = this.hallScene.lists_head.getCell(index);
            if (cell) {
                let headItem = cell.getChildByName("hero");
                if (headItem && headItem.HeroStage == 1) {
                    let battleHero = headItem.BattleHero;
                    if (battleHero) {
                        battleHero.setMoveAccelerate(this._model.userAcceValue);
                    }
                }
            }
        }
        this.refreshIncomeSec();
    }
    /** 获取功能开放列表 */
    getSystemBtnList() {
        let datas = GlobalData_1.default.getDataByCondition(GlobalData_1.default.SystemVO, (item) => {
            return PlayerMgr_1.default.Ins.Info.userLevel >= item.openLevel;
        });
        if (datas && datas.length > 0) {
            datas.sort((item1, item2) => item1.sort - item2.sort);
            return datas;
        }
        return null;
    }
    set Model(value) { this._model = value; }
    get Model() { return this._model; }
    set hallScene(value) {
        this._hallScene = value;
    }
    get hallScene() {
        return this._hallScene;
    }
    static get Ins() {
        if (HallControl._instance == null) {
            HallControl._instance = new HallControl();
        }
        return HallControl._instance;
    }
}
exports.default = HallControl;

},{"../../core_wq/db/GlobalData":7,"../../core_wq/event/EventType":17,"../../core_wq/event/EventsMgr":18,"../../core_wq/guide/GuideMgr":20,"../../core_wq/msg/MsgMgr":25,"../../core_wq/msg/ShareMgr":29,"../../core_wq/player/PlayerMgr":32,"../../core_wq/player/data/PlayerInfo":33,"../../core_wq/sound/SoundMgr":37,"../../core_wq/sound/SoundType":38,"../../core_wq/utils/EffectUtil":42,"../../core_wq/utils/MathUtil":43,"../../core_wq/utils/StorageUtil":46,"../../core_wq/view/ViewMgr":49,"../../core_wq/view/const/ViewConst":52,"./model/HallModel":66}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class SystemConfig {
}
/** 签到 */
SystemConfig.SIGN = 10001;
/** 排行榜 */
SystemConfig.RANK = 10002;
/** 转盘 */
SystemConfig.LUCK_PRIZE = 10003;
/** 任务 */
SystemConfig.TASK = 10004;
/** 邀请有礼 */
SystemConfig.INVITE = 10005;
/** 关注 */
SystemConfig.FOLLOW = 10006;
/** 投诉建议 */
SystemConfig.FEEDBACK = 10006;
exports.default = SystemConfig;

},{}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseCharacter_1 = require("./base/BaseCharacter");
const GlobalData_1 = require("../../../core_wq/db/GlobalData");
const PathConfig_1 = require("../../../core_wq/config/PathConfig");
const EffectUtil_1 = require("../../../core_wq/utils/EffectUtil");
const PointUtils_1 = require("../../../core_wq/utils/PointUtils");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
const ItemExplode_1 = require("../../../core_wq/effect/ItemExplode");
class Hero extends BaseCharacter_1.default {
    constructor() {
        super();
        this.heroId = 0;
        this.hp = 6;
        this.maxHp = 6;
        /** 是否显示自白 */
        this._isShowDialogue = false;
        /** 自白列表 */
        this._dialogueList = [];
        /** 英雄模型路径 */
        this._heroPath = '';
        /** 坐骑模型路径 */
        this._horsePath = '';
        this._heroBone = null;
        this._horseBone = null;
        /** 攻击动画key */
        this._atkAnimKey = 'attack';
        this._walkKey = "walk";
        this._heroKey = "hero_key";
        this._horseKey = "horse_key";
        /** 骨骼动画模板 */
        this._spineFactory = [];
        this._enemyModelUrlArray = [
            { id: "enemy_1", heroUrl: "images/boneAnim/enemy/bubinglv.sk", horseUrl: "" },
            { id: "enemy_2", heroUrl: "images/boneAnim/enemy/gongbinglv.sk", horseUrl: "" },
            { id: "enemy_3", heroUrl: "images/boneAnim/enemy/qibinglv.sk", horseUrl: "" },
        ]; //敌军模型
        /** 创建攻击对象 */
        this._enemyData = null;
    }
    /** 设置人物龙骨 */
    setCharacterBone(id) {
        super.setCharacterBone(id);
        this.heroId = id;
        this._heroVO = GlobalData_1.default.getData(GlobalData_1.default.HeroVO, this.heroId);
        if (this._heroVO) {
            //设置独白
            this._dialogueList = [this._heroVO.dialogue];
            this._heroPath = this._heroVO.modelImgUrl;
            if (this._heroPath && this._heroPath.length > 0) {
                this._heroPath = PathConfig_1.default.BONE_PATH.replace("{0}", this._heroPath);
            }
            this._horsePath = this._heroVO.horse == "0" ? "" : this._heroVO.horse;
            if (this._horsePath && this._horsePath.length > 0) {
                this._horsePath = PathConfig_1.default.BONE_PATH.replace("{0}", this._horsePath);
            }
            this._atkAnimKey = this._heroVO.atkAnimKey;
            //移除老模型
            this.removeChildByName(this._heroKey);
            this.removeChildByName(this._horseKey);
            this.state = -1;
            this.createHeroBone();
        }
    }
    /** 创建英雄龙骨动画 */
    createHeroBone() {
        this._heroBone = Laya.Pool.getItemByClass("bone" + this.heroId, Laya.Skeleton);
        if (this._heroBone.name != (this._heroKey + this.heroId)) {
            if (this._heroPath && this._heroPath.length > 0) {
                this.createSpineTemplate(this._heroPath, (spineFactory) => {
                    this._heroBone = spineFactory.buildArmature(0);
                    this._heroBone.name = this._heroKey + this.heroId;
                    this._heroBone.zOrder = 1;
                    this._heroBone.playbackRate(0.7);
                    this.addChild(this._heroBone);
                    this._heroBone.pos(50, 140);
                    if (this._horsePath == null || this._horsePath.length < 1) { //没坐骑,坐标下调
                        this._heroBone.y += 50;
                    }
                    this._heroBone.play(this._walkKey, true);
                });
            }
        }
        else {
            this.addChild(this._heroBone);
            this._heroBone.play(this._walkKey, true);
        }
    }
    /** 创建坐骑龙骨动画 */
    createHorseBone() {
        this._horseBone = Laya.Pool.getItemByClass("horse_bone" + this.heroId, Laya.Skeleton);
        if (this._horseBone.name != (this._horseKey + this.heroId)) {
            if (this._horsePath && this._horsePath.length > 0) {
                this.createSpineTemplate(this._horsePath, (_spineFactory) => {
                    this._horseBone = _spineFactory.buildArmature(0);
                    this._horseBone.name = this._horseKey + this.heroId;
                    this._horseBone.playbackRate(0.7);
                    this.addChild(this._horseBone);
                    this._horseBone.pos(50, 140);
                    this._horseBone.play(this._walkKey, true);
                });
            }
        }
        else {
            this.addChild(this._horseBone);
            this._horseBone.play(this._walkKey, true);
        }
    }
    /** 动画播放状态 */
    playAnimation(state = 0, callback = null) {
        if (this.state == state)
            return;
        this.state = state;
        if (this.state == 1) {
            //自动切回步行
            this.timerOnce(180, this, () => {
                this.playAnimation(0);
            });
            if (this._heroBone)
                this._heroBone.play(this._atkAnimKey, false);
        }
        else {
            if (this._heroBone)
                this._heroBone.play(this._walkKey, true);
        }
    }
    /** 创建动画模版 */
    createSpineTemplate(url, parseComplete) {
        if (url == null)
            return;
        let spineFactory = this._spineFactory[url];
        if (spineFactory == null) {
            spineFactory = new Laya.Templet();
            spineFactory.on(Laya.Event.COMPLETE, this, () => {
                parseComplete && parseComplete(spineFactory);
                this._spineFactory[url] = spineFactory;
            });
            spineFactory.loadAni(url);
        }
        else {
            parseComplete && parseComplete(spineFactory);
        }
    }
    /** 刷新收益时间 */
    refreshIncomeTime(actCallback = null) {
        if (this.incomeTime > 0) {
            this.incomeTime -= 1 / this.moveAccelerate;
            //人物自白
            if (this._isShowDialogue == false && (this.incomeTime > 90 && this.incomeTime < 91)) {
                let dialogueIndex = Math.floor(Math.random() * 10) % (this._dialogueList.length);
                let dialogueText = this._dialogueList[dialogueIndex];
                if (Math.random() < 0.1 && dialogueText) {
                    this._isShowDialogue = true;
                    let isFlipX = this.x > Laya.stage.width * 0.8;
                    let txtPos = { x: this.width / 2, y: 50 };
                    //适配大将军
                    if (isFlipX == false) {
                        txtPos.x += 50;
                        if (this._horsePath == null || this._horsePath.length < 1) {
                            txtPos.y += 60;
                        }
                    }
                    EffectUtil_1.default.playDialogueEffect(this, "images/component/game_dialogue_frame.png", dialogueText, txtPos, 1, isFlipX);
                }
            }
        }
        else {
            this.delayMoveTime = 50; //停止动画
            this.setIncomeTime(); //重置收益
            this._isShowDialogue = false;
            Laya.Tween.to(this, { x: (this.orginalX + 180) }, 500, Laya.Ease.linearNone, Laya.Handler.create(this, () => {
                Laya.Tween.clearTween(this);
                this.playAnimation(1);
                actCallback && actCallback();
                Laya.Tween.to(this, { x: this.orginalX }, Math.abs(this.x - this.orginalX) * 15, Laya.Ease.linearNone, Laya.Handler.create(this, () => {
                    Laya.Tween.clearTween(this);
                }));
            }));
            return true;
        }
        return false;
    }
    createAttackTarget(parentNode, startPos) {
        if (this.attackSprite == null) {
            let hero = new Hero();
            hero.size(100, 100);
            hero.pivot(50, 50);
            hero.scaleX = -1;
            this._enemyData = this._enemyModelUrlArray[Math.floor(Math.random() * 10) % this._enemyModelUrlArray.length];
            let animName = 'walk';
            let isLoop = true;
            let frameRate = 0.7;
            let enemy = Laya.Pool.getItemByClass(this._enemyData.id, Laya.Skeleton);
            if (enemy.name != this._enemyData.id) {
                if (this._enemyData.heroUrl != "") {
                    this.createSpineTemplate(this._enemyData.heroUrl, (_spineFactory) => {
                        enemy = _spineFactory.buildArmature(0);
                        enemy.name = this._enemyData.id;
                        enemy.zOrder = 1;
                        enemy.playbackRate(frameRate);
                        hero.addChild(enemy);
                        enemy.pos(50, 200);
                        if (this._enemyData.horseUrl != "") { //有坐骑,坐标下调
                            enemy.y -= 50;
                        }
                        enemy.play(animName, isLoop);
                    });
                }
            }
            else {
                hero.addChild(enemy);
                enemy.play(animName, isLoop);
            }
            //敌人坐骑
            let enemyHorse = hero.getChildByName(this._horseKey);
            if (enemyHorse == null) {
                if (this._enemyData.horseUrl != "") {
                    this.createSpineTemplate(this._enemyData.horseUrl, (_spineFactory) => {
                        enemyHorse = _spineFactory.buildArmature(0);
                        enemyHorse.name = this._horseKey;
                        enemyHorse.playbackRate(frameRate);
                        hero.addChild(enemyHorse);
                        enemyHorse.pos(50, 150);
                        enemyHorse.play(animName, isLoop);
                    });
                }
            }
            else {
                enemyHorse.play(animName, isLoop);
            }
            if (parentNode) {
                parentNode.addChild(hero);
                hero.pos(startPos.x, startPos.y);
                let heroInfo = GlobalData_1.default.getData(GlobalData_1.default.HeroConfigVO, this.heroId);
                if (heroInfo) {
                    hero.setMoveSpeedRatio(heroInfo.speed);
                }
                hero.zOrder = Math.floor(hero.y);
            }
            this.attackSprite = hero;
        }
        return this.attackSprite;
    }
    /** 移除攻击对象 */
    removeAttackTarget(isKill = false) {
        if (this.attackSprite) {
            if (isKill) {
                let heroSp = this.attackSprite.getChildByName(this._heroKey);
                if (heroSp)
                    heroSp.stop();
                let horseSp = this.attackSprite.getChildByName(this._horseKey);
                if (horseSp)
                    horseSp.stop();
                //渐隐
                let targetPos = PointUtils_1.default.localToGlobal(this.attackSprite);
                EffectUtil_1.default.playBoneEffect("ui_hit_03", { x: targetPos.x, y: targetPos.y + 100 });
                let explode = new ItemExplode_1.default();
                if (this.attackSprite && this.attackSprite.parent && explode) {
                    this.attackSprite.parent.addChild(explode.play(this.attackSprite.x, this.attackSprite.y + 100).scale(0.8, 0.8));
                }
                this.frameLoop(1, this, this.attackTargetFly);
            }
        }
    }
    attackTargetFly() {
        this.attackSprite.rotation += 7;
        this.attackSprite.x += MathUtil_1.default.rangeInt(5, 20);
        this.attackSprite.y -= MathUtil_1.default.rangeInt(5, 10);
        if (this.attackSprite.y <= -this.attackSprite.height) {
            this.clearTimer(this, this.attackTargetFly);
            this.attackSprite.removeSelf();
            Laya.Pool.recover(this._enemyData.id, this.attackSprite.getChildByName(this._enemyData.id));
            this.attackSprite = null;
        }
    }
    get heroKey() {
        return this._heroKey;
    }
    get heroBone() {
        return this._heroBone;
    }
}
exports.default = Hero;

},{"../../../core_wq/config/PathConfig":5,"../../../core_wq/db/GlobalData":7,"../../../core_wq/effect/ItemExplode":16,"../../../core_wq/utils/EffectUtil":42,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/utils/PointUtils":44,"./base/BaseCharacter":65}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class BaseCharacter extends Laya.Sprite {
    constructor() {
        super();
        /** 移动方向(默认右,1为左) */
        this.moveDir = 0;
        /** 延迟移动时间 */
        this.delayMoveTime = 5;
        /** 移动速度倍率 */
        this.moveSpeedRatio = 1;
        /** 移动速度加速 */
        this.moveAccelerate = 1;
        /** 默认0步行，1为攻击 */
        this.state = -1;
        /** 攻击对象 */
        this.attackSprite = null;
        /** 初始位置x */
        this.orginalX = 0;
        /** 已经就位，可攻击 */
        this.isInPosition = false;
        /** 英雄模型路径 */
        this.heroPath = '';
        /** 坐骑模型路径 */
        this.horsePath = '';
        /** 攻击动画key */
        this.atkAnimKey = 'attack';
        /** 收益CD */
        this.incomeTime = 0;
    }
    /** 设置人物龙骨 */
    setCharacterBone(id) {
    }
    /** 动画播放状态 */
    playAnimation(state = 0, callback = null) {
    }
    /** 创建攻击对象 */
    createAttackTarget(parentNode, startPos) {
        return this;
    }
    /** 移除攻击对象 */
    removeAttackTarget(isKill = false) {
    }
    /** 移动 */
    playMoveAction() {
        this.orginalX = this.x;
        if (this.orginalX > Laya.stage.width / 2) {
            //后退
            let actionSp = this;
            this.orginalX = Laya.stage.width / 2 - Math.random() * 100;
            Laya.Tween.to(actionSp, { x: this.orginalX }, Math.abs(actionSp.x - this.orginalX) * 15, Laya.Ease.linearNone, Laya.Handler.create(this, () => {
                Laya.Tween.clearTween(actionSp);
                this.isInPosition = true;
            }));
        }
        else {
            this.isInPosition = true;
        }
    }
    /** 移动是否停止 */
    get isMoveStop() {
        return this.delayMoveTime > 0;
    }
    /** 收益倒计时 */
    setIncomeTime() {
        this.incomeTime = 60 * this.moveSpeedRatio;
    }
    /** 收益倒计时 */
    get IncomeTime() {
        return this.incomeTime;
    }
    //攻击对象
    get AttackTarget() {
        return this.attackSprite;
    }
    set AttackTarget(attackSp) {
        this.attackSprite = attackSp;
    }
    set IsInPosition(value) {
        this.isInPosition = value;
    }
    //是否攻击已就位
    get IsInPosition() {
        return this.isInPosition;
    }
    //获取初始位置x
    get OrginalX() {
        return this.orginalX;
    }
    setMoveSpeedRatio(value) {
        this.moveSpeedRatio = value;
    }
    setMoveAccelerate(value) {
        this.moveAccelerate = 1.0 / value;
    }
    //##贝塞尔曲线#################################
    // 以控制点cp计算曲线点
    CalculateBeizer(cp, numOfPoints) {
        var t = 1.0 / (numOfPoints - 1);
        var curve = [];
        for (var i = 0; i < numOfPoints; i++) {
            curve[i] = this.PointOnCubicBezier(cp, i * t);
        }
        return curve;
    }
    // 参数1: 4个点坐标(起点，控制点1，控制点2，终点)  
    // 参数2: 0 <= t <= 1   
    PointOnCubicBezier(cp, t) {
        var tPoint_x = this.MetaComputing(cp[0].x, cp[1].x, cp[2].x, cp[3].x, t);
        var tPoint_y = this.MetaComputing(cp[0].y, cp[1].y, cp[2].y, cp[3].y, t);
        return { x: tPoint_x, y: tPoint_y };
    }
    MetaComputing(p0, p1, p2, p3, t) {
        // 方法一:  
        var a, b, c;
        var tSquare, tCube;
        // 计算多项式系数
        c = 3.0 * (p1 - p0);
        b = 3.0 * (p2 - p1) - c;
        a = p3 - b - c - p0;
        // 计算t位置的点
        tSquare = t * t;
        tCube = t * tSquare;
        return (a * tCube) + (b * tSquare) + (c * t) + p0;
        // 方法二: 原始的三次方公式
        //  number n = 1.0 - t;
        //  return n*n*n*p0 + 3.0*p1*t*n*n + 3.0*p2*t*t*n + p3*t*t*t;
    }
}
exports.default = BaseCharacter;

},{}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const GlobalData_1 = require("../../../core_wq/db/GlobalData");
const StorageUtil_1 = require("../../../core_wq/utils/StorageUtil");
class HallModel extends Laya.Script {
    constructor() {
        super();
        /** 英雄最高等级 */
        this.heroMaxLevel = 30;
        /** 英雄合成数量 */
        this.heroCount = 0;
        /** 总英雄的数量 */
        this.allHeroCount = 15;
        /** 屏幕滚动速度 */
        this.viewRollSpeep = 2;
        /** 每屏 */
        this.foregroundIndex = 0;
        /** 前景每屏宽度 */
        this.foregroundWidth = 1991; //3034
        /** 每屏 */
        this.fargroundIndex = 0;
        /** 远景每屏宽度 */
        this.fargroundWidth = 1986; //2135
        /** 滚屏(最前景) */
        this.topForegroundIndex = 0;
        /** 每屏宽度 */
        this.topForegroundWidth = 750;
        /** 启动加速x2 */
        this.userAcceValue = 1;
        /** 加速时间 */
        this.userAcceTime = 0;
        /** 当前英雄最高等级 */
        this.heroLevel = 1;
        /** 分享广告可点击次数 */
        this.shareAdTimes = {};
        /** 广告 */
        this.advert = [];
        /** 是否有视频广告 */
        this.hasVideoAd = true;
        /** 每日元宝加速次数 */
        this.diamond_acce_num = 0;
        /** 加速剩余时间 */
        this.s_acceLeft_time = 's_acceLeft_time';
        /** 层次重拍 */
        this.is_reset_zorder = false;
        /************************红点系列 start************************/
        /** 分享礼包红点 */
        this.showShareGiftRedPoint = false;
        /** 每日签到红点 */
        this.showDailySignRedPoint = false;
        /** 任务红点 */
        this.showTaskRedPoint = false;
        /** 转盘红点 */
        this.showLuckPrizeRedPoint = false;
        /** 关注奖励红点 */
        this.showFollowRedPoint = false;
        /************************红点系列 end************************/
        /** 所有的英雄信息 { id: index, heroId: 0, isRunning: false } */
        this._allHeros = [];
        /** 购买英雄记录  {heroId: 1, buyTimes:0}*/
        this._buyHerosRecord = [];
        /**
         * 英雄初始消费价格
         * 1、一级英雄单个钻石定价为：36
         * 2、英雄成本递增为上一级的1.3，购买次数递增为上一级的一点1.18，车（钻石价）=36*1.3^（n-1）
         */
        this._heroBaseDiamondPrice = 36;
        //初始化英雄信息
        if (this._allHeros.length < 1) {
            for (let index = 0; index < this.allHeroCount; index++) {
                this._allHeros.push({ id: index, heroId: 0, isRunning: false });
            }
        }
    }
    /** 获取当前可以招募英雄的数据 */
    getRecruitHeroData() {
        let heroDatas = GlobalData_1.default.getDataByCondition(GlobalData_1.default.HeroConfigVO, (data) => {
            return this.heroLevel >= data.unlockNeedId;
        });
        if (heroDatas && heroDatas.length > 0) {
            return heroDatas[heroDatas.length - 1];
        }
        return null;
    }
    /** 获取最新开锁(可购买)的前n位英雄的配置 */
    getPreNewHeroData(unlockCarId, index = 0) {
        let heroData = GlobalData_1.default.getAllValue(GlobalData_1.default.HeroConfigVO);
        if (heroData) {
            for (var key in heroData) {
                if (heroData.hasOwnProperty(key)) {
                    var element = heroData[key];
                    if (unlockCarId < element.unlockNeedId) {
                        let heroId = parseInt(key) + index;
                        return GlobalData_1.default.getData(GlobalData_1.default.HeroConfigVO, heroId);
                    }
                }
            }
        }
        return null;
    }
    /** 购买单个英雄价格 */
    getHeroBuyPrice(price, buyTimes) {
        if (buyTimes > 0) {
            return price * Math.pow(1.15, buyTimes);
        }
        return price;
    }
    /** 查询购买英雄记录 */
    queryBuyHeroRecord(heroId, isDiamond = false) {
        for (let key in this._buyHerosRecord) {
            let element = this._buyHerosRecord[key];
            if (element) {
                if (element.heroId == heroId) {
                    if (isDiamond) {
                        return this._buyHerosRecord[key].diamondBuyTimes;
                    }
                    else {
                        return this._buyHerosRecord[key].buyTimes;
                    }
                }
            }
        }
        return 0;
    }
    /** 刷新购买英雄记录 */
    refreshBuyHeroRecord(heroId, isDiamond = false) {
        let isNew = true;
        for (let key in this._buyHerosRecord) {
            let element = this._buyHerosRecord[key];
            if (element && element.heroId == heroId) {
                if (isDiamond) {
                    this._buyHerosRecord[key].diamondBuyTimes++;
                }
                else {
                    this._buyHerosRecord[key].buyTimes++;
                }
                isNew = false;
                return;
            }
        }
        if (isNew) {
            if (isDiamond) {
                this._buyHerosRecord.push({ heroId: heroId, buyTimes: 0, diamondBuyTimes: 1 });
            }
            else {
                this._buyHerosRecord.push({ heroId: heroId, buyTimes: 1, diamondBuyTimes: 0 });
            }
        }
        Laya.timer.callLater(this, StorageUtil_1.default.saveStorageToLocal, [true]);
    }
    /** 每日元宝加速次数 */
    diamondAcceTimes(isAdd = false) {
        let diamondAcceTimes = this.diamond_acce_num;
        if (isAdd) {
            this.diamond_acce_num++;
        }
        return diamondAcceTimes;
    }
    /** 钻石购买英雄的价格 */
    getDiamondBuyHeroPrice(heroId, buyTimes) {
        if (heroId < 1)
            return this._heroBaseDiamondPrice;
        var heroPrice = this._heroBaseDiamondPrice;
        var foreCarId = 20;
        if (heroId > foreCarId) {
            heroPrice = heroPrice * Math.pow(1.085, (foreCarId - 1)) * Math.pow(1.25, (heroId - foreCarId));
        }
        else {
            heroPrice = heroPrice * Math.pow(1.085, (heroId - 1));
        }
        if (buyTimes > 0) {
            heroPrice = heroPrice * Math.pow(1.2, buyTimes);
        }
        heroPrice = Math.ceil(heroPrice); //四舍五入
        return heroPrice;
    }
    /** 计算英雄总资产（基础价格） */
    heroAllAsset() {
        let allAsset = 0;
        if (this._allHeros && this._allHeros.length > 0) {
            this._allHeros.forEach(element => {
                if (element && element.heroId > 0) {
                    let vo = GlobalData_1.default.getData(GlobalData_1.default.HeroConfigVO, element.heroId);
                    if (vo) {
                        allAsset += this.getHeroBuyPrice(vo.buyPrice, this.queryBuyHeroRecord(vo.id));
                    }
                }
            });
        }
        return allAsset;
    }
    set AllHeros(value) { this._allHeros = value; }
    get AllHeros() { return this._allHeros; }
    set BuyHerosRecord(value) { this._buyHerosRecord = value; }
    /** 购买英雄记录  {heroId: 1, buyTimes:0} */
    get BuyHerosRecord() { return this._buyHerosRecord; }
}
exports.default = HallModel;

},{"../../../core_wq/db/GlobalData":7,"../../../core_wq/utils/StorageUtil":46}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const EventsMgr_1 = require("../../../core_wq/event/EventsMgr");
const EventType_1 = require("../../../core_wq/event/EventType");
const PlayerMgr_1 = require("../../../core_wq/player/PlayerMgr");
const PlayerInfo_1 = require("../../../core_wq/player/data/PlayerInfo");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
const StorageUtil_1 = require("../../../core_wq/utils/StorageUtil");
const ViewMgr_1 = require("../../../core_wq/view/ViewMgr");
const ViewConst_1 = require("../../../core_wq/view/const/ViewConst");
/**
 * 货币界面
 */
class CurrencyView extends layaMaxUI_1.ui.moduleView.hall.CurrencyViewUI {
    constructor() { super(); }
    onAwake() {
        this.addEvents();
    }
    addEvents() {
        EventsMgr_1.default.Ins.addListener(EventType_1.default.UPDATE_USER_LEVEL, this.onUpdateUserLevel, this);
        EventsMgr_1.default.Ins.addListener(EventType_1.default.UPDATE_CURRENCY, this.onUpdateCurrency, this);
        EventsMgr_1.default.Ins.addListener(EventType_1.default.UPDATE_USER_EXP, this.onUpdateUserExp, this);
        EventsMgr_1.default.Ins.addListener(EventType_1.default.UPDATE_INCOME, this.onUpdateIncome, this);
        this.btn_user.on(Laya.Event.CLICK, this, this.onShowUserInfoView);
    }
    /** 更新用户等级 */
    onUpdateUserLevel() {
        this.txt_level.text = "Lv." + PlayerMgr_1.default.Ins.Info.userLevel;
        Laya.timer.callLater(this, StorageUtil_1.default.saveStorageToLocal);
    }
    /** 更新用户经验 */
    onUpdateUserExp(upNeedexp) {
        this.expBar.value = (1 * PlayerMgr_1.default.Ins.Info.userExp / upNeedexp);
        Laya.timer.callLater(this, StorageUtil_1.default.saveStorageToLocal);
    }
    /** 更新用户每秒收益 */
    onUpdateIncome(userIncomeSec) {
        PlayerMgr_1.default.Ins.Info.userIncomeSec = userIncomeSec;
        this.txt_Income.text = MathUtil_1.default.unitConversion(PlayerMgr_1.default.Ins.Info.userIncomeSec) + "/每秒";
    }
    /** 更新用户货币 */
    onUpdateCurrency(type, value, isTotal = true) {
        switch (type) {
            case PlayerInfo_1.default.GOLD:
                this.updateGold(value, isTotal);
                break;
            case PlayerInfo_1.default.DIAMOND:
                this.updateDiamond(value, isTotal);
                break;
        }
    }
    /** 显示用户信息界面 */
    onShowUserInfoView() {
        ViewMgr_1.default.Ins.open(ViewConst_1.default.UserInfoView);
    }
    updateGold(value, isTotal) {
        let isInitGold = (PlayerMgr_1.default.Ins.Info.userGold == 0);
        if (isTotal) {
            PlayerMgr_1.default.Ins.Info.userGold = value;
        }
        else {
            PlayerMgr_1.default.Ins.Info.userGold += value;
        }
        this.txt_gold.text = MathUtil_1.default.unitConversion(PlayerMgr_1.default.Ins.Info.userGold);
        if (!isInitGold) {
            Laya.Tween.from(this.imgGold, { scaleX: 1.2, scaleY: 1.2 }, 300, null, Laya.Handler.create(this, () => { Laya.Tween.clearTween(this.imgGold); }));
        }
        Laya.timer.callLater(this, StorageUtil_1.default.saveStorageToLocal);
    }
    updateDiamond(value, isTotal) {
        let isInitDiamond = (PlayerMgr_1.default.Ins.Info.userDiamond == 0);
        if (isTotal) {
            PlayerMgr_1.default.Ins.Info.userDiamond = value;
        }
        else {
            PlayerMgr_1.default.Ins.Info.userDiamond += value;
        }
        this.txt_diamond.text = PlayerMgr_1.default.Ins.Info.userDiamond + "";
        if (!isInitDiamond) {
            Laya.Tween.from(this.imgDiamond, { scaleX: 1.2, scaleY: 1.2 }, 300, null, Laya.Handler.create(this, () => { Laya.Tween.clearTween(this.imgDiamond); }));
        }
    }
}
exports.default = CurrencyView;

},{"../../../core_wq/event/EventType":17,"../../../core_wq/event/EventsMgr":18,"../../../core_wq/player/PlayerMgr":32,"../../../core_wq/player/data/PlayerInfo":33,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/utils/StorageUtil":46,"../../../core_wq/view/ViewMgr":49,"../../../core_wq/view/const/ViewConst":52,"../../../ui/layaMaxUI":83}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const HallControl_1 = require("../HallControl");
const PlayerMgr_1 = require("../../../core_wq/player/PlayerMgr");
const EffectUtil_1 = require("../../../core_wq/utils/EffectUtil");
const EventsMgr_1 = require("../../../core_wq/event/EventsMgr");
const EventType_1 = require("../../../core_wq/event/EventType");
const PlayerInfo_1 = require("../../../core_wq/player/data/PlayerInfo");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
const MsgMgr_1 = require("../../../core_wq/msg/MsgMgr");
const HttpMgr_1 = require("../../../core_wq/net/HttpMgr");
const ShareMgr_1 = require("../../../core_wq/msg/ShareMgr");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const GameConfig_1 = require("../../../GameConfig");
const StorageUtil_1 = require("../../../core_wq/utils/StorageUtil");
const SoundMgr_1 = require("../../../core_wq/sound/SoundMgr");
const SoundType_1 = require("../../../core_wq/sound/SoundType");
const ViewRegisterMgr_1 = require("../../../core_wq/view/ViewRegisterMgr");
const ViewMgr_1 = require("../../../core_wq/view/ViewMgr");
const ViewConst_1 = require("../../../core_wq/view/const/ViewConst");
const HeadItem_1 = require("./item/HeadItem");
const GuideMgr_1 = require("../../../core_wq/guide/GuideMgr");
const SDKMgr_1 = require("../../../core_wq/msg/SDKMgr");
const HeroTips_1 = require("./HeroTips");
const RedPointMgr_1 = require("../../../core_wq/msg/RedPointMgr");
const SystemConfig_1 = require("../config/SystemConfig");
class HallScene extends layaMaxUI_1.ui.moduleView.hall.HallSceneUI {
    constructor() {
        super();
        this._battleHeroIndex = 0;
    }
    onAwake() {
        SDKMgr_1.default.Ins.wxShowUpdateVersionTips();
    }
    onEnable() {
        LayerMgr_1.default.Ins.initLayer(Laya.stage, GameConfig_1.default.width, GameConfig_1.default.height);
        this.scale(LayerMgr_1.default.adaptScaleX, LayerMgr_1.default.adaptScaleY);
        ViewRegisterMgr_1.default.Ins.initRegisterView();
        this.init();
        this.initUserData();
        this.haveStoreHero();
        this.showSurpassView();
        this.initSystemBtn();
        this.initRedPoint();
        this.addEvents();
    }
    init() {
        this._control = HallControl_1.default.Ins;
        this._control.hallScene = this;
        this.lists_head.vScrollBarSkin = "";
        this.lists_head.array = this._control.Model.AllHeros;
        this.lists_head.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this.foregroundTwo.x = this._control.Model.foregroundWidth;
        this.fargroundTwo.x = this._control.Model.fargroundWidth;
        this.list_btn.renderHandler = Laya.Handler.create(this, this.onRenderSystem, null, false);
        SoundMgr_1.default.Ins.playBg(SoundType_1.default.BG_MUSIC);
    }
    /** 初始化用户数据 */
    initUserData() {
        if (PlayerMgr_1.default.Ins.Info.wxUserInfo) {
            this.imgHead.skin = PlayerMgr_1.default.Ins.Info.wxUserInfo.avatarUrl;
        }
        this._control.setUserLevel(PlayerMgr_1.default.Ins.Info.userLevel); //用户等级
        this._control.setUserExp(PlayerMgr_1.default.Ins.Info.userExp); //用户经验
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_INCOME, PlayerMgr_1.default.Ins.Info.userIncomeSec); //用户每秒可获得的金币
        this._control.updateGold(PlayerMgr_1.default.Ins.Info.userGold);
        EventsMgr_1.default.Ins.dispatch(EventType_1.default.UPDATE_CURRENCY, PlayerInfo_1.default.DIAMOND, PlayerMgr_1.default.Ins.Info.userDiamond); //更新用户获得钻石
        this.updateRecruitData();
        this.frameLoop(1, this, this.onUpdateBattleView);
        StorageUtil_1.default.requestOfflinePrizeData();
        this._control.updateMapData();
        GuideMgr_1.default.Ins.setup();
    }
    /** 初始化红点 */
    initRedPoint() {
        this.imgFree.visible = RedPointMgr_1.default.Ins.isShowShopRedPoint;
    }
    /** 初始化功能按钮 */
    initSystemBtn() {
        let datas = this._control.getSystemBtnList();
        if (datas && datas.length > 0 && (this.list_btn.array == null || datas.length > this.list_btn.array.length)) {
            this.list_btn.visible = true;
            this.list_btn.array = datas;
            RedPointMgr_1.default.Ins.updateRedPoint();
        }
    }
    addEvents() {
        this.btn_recruit.on(Laya.Event.CLICK, this, this.onClickBtnHandler);
        this.btn_acc.on(Laya.Event.CLICK, this, this.onClickBtnHandler);
        this.btn_shop.on(Laya.Event.CLICK, this, this.onClickBtnHandler);
        this.btn_heroStore.on(Laya.Event.CLICK, this, this.onClickBtnHandler);
        this.lists_head.on(Laya.Event.MOUSE_DOWN, this, this.onHeroSelect);
        EventsMgr_1.default.Ins.addListener(EventType_1.default.HERO_BOX, this.onShowHeroBox, this);
        EventsMgr_1.default.Ins.addListener(EventType_1.default.GAME_ACCE_START, this.onGameAcce, this);
        EventsMgr_1.default.Ins.addListener(EventType_1.default.SHOW_OFFLINE_REWARD, this.onOffLineReward, this);
        EventsMgr_1.default.Ins.addListener(EventType_1.default.UPDATE_SYSTEM_BTN, this.onUpdateSystemBtn, this);
        EventsMgr_1.default.Ins.addListener(EventType_1.default.OPEN_VIEW, this.onOpenSystemView, this);
    }
    onOpenSystemView(id) {
        switch (id) {
            case SystemConfig_1.default.SIGN:
                ViewMgr_1.default.Ins.open(ViewConst_1.default.DaySignView);
                break;
            case SystemConfig_1.default.RANK:
                ViewMgr_1.default.Ins.open(ViewConst_1.default.RankView);
                break;
            case SystemConfig_1.default.LUCK_PRIZE:
                ViewMgr_1.default.Ins.open(ViewConst_1.default.LuckPrizeView);
                break;
            case SystemConfig_1.default.TASK:
                ViewMgr_1.default.Ins.open(ViewConst_1.default.TaskView);
                break;
            case SystemConfig_1.default.INVITE:
                break;
            case SystemConfig_1.default.FOLLOW:
                ViewMgr_1.default.Ins.open(ViewConst_1.default.FollowView);
                break;
            case SystemConfig_1.default.FEEDBACK:
                break;
        }
    }
    onClickBtnHandler(e) {
        if (e.target instanceof Laya.Button) {
            switch (e.target) {
                case this.btn_recruit: //招募英雄
                    this.recruitHero();
                    break;
                case this.btn_acc: //加速
                    this.openGameAcc();
                    break;
                case this.btn_shop: //商店
                    ViewMgr_1.default.Ins.open(ViewConst_1.default.ShopView);
                    break;
                case this.btn_heroStore: //英雄保存箱
                    this.popHeroStore();
                    break;
            }
        }
    }
    /** 招募英雄 */
    recruitHero() {
        this._currBuyHeroInfo = this._control.Model.getRecruitHeroData();
        if (this._currBuyHeroInfo) {
            this._control.buyHero(this._currBuyHeroInfo);
            this.updateRecruitData(this._currBuyHeroInfo);
        }
    }
    /** 更新招募英雄数据 */
    updateRecruitData(buyHeroInfo = null) {
        if (buyHeroInfo) {
            this._currBuyHeroInfo = buyHeroInfo;
        }
        else {
            this._currBuyHeroInfo = this._control.Model.getRecruitHeroData();
        }
        let buyPrice = this._control.Model.getHeroBuyPrice(this._currBuyHeroInfo.buyPrice, this._control.Model.queryBuyHeroRecord(this._currBuyHeroInfo.id));
        this.txt_price.text = MathUtil_1.default.unitConversion(buyPrice);
        if (PlayerMgr_1.default.Ins.Info.userGold < buyPrice) {
            this.txt_price.color = "#FF0000";
        }
        else {
            this.txt_price.color = "#FFF1BA";
        }
        this.txt_level.text = "Lv." + this._currBuyHeroInfo.id;
    }
    onHeroSelect(e) {
        if (this._copyHeadItem)
            return;
        for (let index = 0; index < this._control.Model.allHeroCount; index++) {
            let cell = this.lists_head.getCell(index);
            if (cell) {
                let headItem = cell.getChildByName("hero");
                if (headItem && headItem.IsBattle && !headItem.IsBox && this._control.isHit(headItem)) {
                    headItem.setStage(2);
                    this._currHeadItem = headItem;
                    this._currHeadItem.visible = false;
                    this._copyHeadItem = Laya.Pool.getItemByClass("copyHeadItem", HeadItem_1.default); // new HeadItem();
                    this._copyHeadItem.updateHeadSkin(headItem.Info.heroId, index);
                    this._copyHeadItem.pivot(126 / 2, 127 / 2);
                    this._copyHeadItem.zOrder = 999;
                    this.addChild(this._copyHeadItem);
                    this.showHeroTips();
                    this._copyHeadItem.pos(this.mouseX, this.mouseY);
                    this.imgDelete.alpha = 1.0;
                    this.on(Laya.Event.MOUSE_MOVE, this, this.onMouseHeadItemMove);
                    this.on(Laya.Event.MOUSE_UP, this, this.onMouseHeadItemUp);
                    break;
                }
            }
        }
    }
    onMouseHeadItemMove(e) {
        if (this._copyHeadItem) {
            this._copyHeadItem.pos(this.mouseX, this.mouseY);
        }
    }
    onMouseHeadItemUp(e) {
        this.imgDelete.alpha = 0.5;
        if (this._copyHeadItem) {
            this.off(Laya.Event.MOUSE_MOVE, this, this.onMouseHeadItemMove);
            this.off(Laya.Event.MOUSE_UP, this, this.onMouseHeadItemUp);
            if (this._control.isHit(this.imgDelete)) { //出售英雄
                let sellPrice = this._currHeadItem.getSellPrice();
                this._currHeadItem.reset();
                EffectUtil_1.default.playCoinEffect(this.imgDelete, 'images/common/star2.png');
                EffectUtil_1.default.playTextEffect(this.imgDelete, "金币+" + MathUtil_1.default.unitConversion(sellPrice));
                this._control.updateGold(PlayerMgr_1.default.Ins.Info.userGold + sellPrice);
                this._control.setSaveHeroData(this._currHeadItem);
                this._control.setBattleHeroCount(PlayerMgr_1.default.Ins.Info.userRuncarCount - 1);
            }
            else {
                this._currHeadItem.setStage(1);
                for (let index = 0; index < this._control.Model.allHeroCount; index++) {
                    let cell = this.lists_head.getCell(index);
                    if (cell) {
                        let headItem = cell.getChildByName("hero");
                        if (headItem && this._control.isHit(headItem) && headItem != this._currHeadItem && !headItem.IsBox && !headItem.IsLock) {
                            let heroId = headItem.Info.heroId;
                            if (heroId == this._currHeadItem.Info.heroId) {
                                if (heroId >= this._control.Model.heroMaxLevel) {
                                    MsgMgr_1.default.Ins.showMsg("已达最高级！");
                                }
                                else { //合并英雄
                                    let nextLevel = heroId + 1;
                                    let exp = this._control.getHeroExp(heroId);
                                    headItem.updateHeadSkin(nextLevel, index);
                                    headItem.removeBattleHero();
                                    let startPos = {
                                        x: 50 + this.width * 0.5 * Math.random(),
                                        y: this.beginEventView.y - 150 + (this.beginEventView.height - 30) / this.lists_head.array.length
                                    };
                                    headItem.createBattleHero(this, startPos);
                                    EffectUtil_1.default.playBoneEffect("ui_born", { x: startPos.x - 20, y: startPos.y + 200 });
                                    this._currHeadItem.reset();
                                    //合并效果
                                    EffectUtil_1.default.playHeroMergeEffect(this, heroId, headItem);
                                    //更新英雄等级
                                    if (this._control.updateHeroLevel(nextLevel)) {
                                        ViewMgr_1.default.Ins.open(ViewConst_1.default.NewHeroView, null, nextLevel);
                                        SoundMgr_1.default.Ins.playEffect(SoundType_1.default.UNLOCK);
                                    }
                                    else {
                                        SoundMgr_1.default.Ins.playEffect(SoundType_1.default.MAKE_HERO);
                                    }
                                    if (exp > 0) {
                                        this._control.setUserExp(PlayerMgr_1.default.Ins.Info.userExp + exp);
                                        let headItemPos = headItem.localToGlobal(new Laya.Point(0, 0));
                                        let pos = { x: headItemPos.x + headItem.width * 0.5, y: headItemPos.y + 2 };
                                        EffectUtil_1.default.playTextEffect(this, "Exp+" + exp, pos);
                                        headItemPos = null;
                                    }
                                    this.updateRecruitData();
                                    this._control.refreshIncomeSec();
                                    this._control.setSaveHeroData(headItem, this._currHeadItem);
                                    //刷新战斗英雄的数量
                                    this._control.setBattleHeroCount(PlayerMgr_1.default.Ins.Info.userRuncarCount - 1);
                                    HttpMgr_1.default.Ins.requestDailyTaskData(1);
                                    GuideMgr_1.default.Ins.onNextStep();
                                }
                            }
                            else { //交换
                                let isEmpty = headItem.IsEmpty;
                                headItem.updateHeadSkin(this._currHeadItem.Info.heroId);
                                headItem.setStage(this._currHeadItem.HeroStage);
                                if (isEmpty) {
                                    this._control.createHeroBone(headItem, { x: this._currHeadItem.BattleHero.x, y: this._currHeadItem.BattleHero.y });
                                    this._currHeadItem.reset();
                                }
                                else {
                                    this._currHeadItem.updateHeadSkin(heroId);
                                    let oldBattleHero = this._currHeadItem.BattleHero;
                                    this._currHeadItem.BattleHero = headItem.BattleHero;
                                    headItem.BattleHero = oldBattleHero;
                                }
                                this._control.setSaveHeroData(headItem, this._currHeadItem);
                                SoundMgr_1.default.Ins.playEffect(SoundType_1.default.DRAW_HERO);
                            }
                            break;
                        }
                    }
                }
            }
            this.removeHeroTips();
            this._currHeadItem.visible = true;
            this._copyHeadItem.removeSelf();
            Laya.Pool.recover("copyHeadItem", this._copyHeadItem);
            this._copyHeadItem = null;
        }
    }
    /** 更新战斗界面 */
    onUpdateBattleView() {
        let isRollView = false;
        for (let index = 0; index < this._control.Model.allHeroCount; index++) {
            let cell = this.lists_head.getCell(index);
            if (cell) {
                let headItem = cell.getChildByName("hero");
                if (headItem && headItem.Info.heroId > 0 && !headItem.isDie) {
                    isRollView = true;
                    let battleHero = headItem.BattleHero;
                    if (battleHero) {
                        if (this._control.Model.is_reset_zorder) {
                            battleHero.zOrder = Math.floor(battleHero.y);
                        }
                        //是否攻击就位
                        if (battleHero.IsInPosition) {
                            if (battleHero.AttackTarget == null) {
                                let posX = battleHero.OrginalX + battleHero.IncomeTime * this._control.Model.viewRollSpeep + 340;
                                battleHero.createAttackTarget(battleHero.parent, new Laya.Point(posX, battleHero.y));
                            }
                            else {
                                battleHero.AttackTarget.x -= this._control.Model.viewRollSpeep * this._control.Model.userAcceValue;
                            }
                            battleHero.refreshIncomeTime(() => {
                                let txtPos = { x: battleHero.x, y: battleHero.y - 30 };
                                //移除攻击对象
                                let attackSp = battleHero.AttackTarget;
                                if (attackSp) {
                                    headItem.updateHp();
                                    txtPos = { x: attackSp.x - 50, y: attackSp.y + 50 };
                                    battleHero.removeAttackTarget(true);
                                }
                                let obtainMoney = this._control.getHeroIncomeTotalGold(headItem.Info.heroId) * PlayerMgr_1.default.Ins.Info.userExtraIncome * PlayerMgr_1.default.Ins.Info.userLevelExtraIncome;
                                //飘数字
                                EffectUtil_1.default.playImageTextEffect(this, "images/common/coin.png", "+" + MathUtil_1.default.unitConversion(obtainMoney), txtPos, 1000);
                                this._control.updateGold(PlayerMgr_1.default.Ins.Info.userGold + obtainMoney);
                            });
                        }
                    }
                }
            }
        }
        this.doRollView(isRollView);
    }
    /** 滚动屏幕 */
    doRollView(isRollView) {
        if (isRollView) {
            //前景屏幕
            this.box_foreground.x -= this._control.Model.viewRollSpeep * this._control.Model.userAcceValue;
            let pageIndex = Math.floor(-this.box_foreground.x / this._control.Model.foregroundWidth);
            if (this._control.Model.foregroundIndex != pageIndex) {
                this._control.Model.foregroundIndex = pageIndex;
                this.viewMoveHandler(this.foregroundOne, this.foregroundTwo, this._control.Model.foregroundWidth, pageIndex);
            }
            //远景屏幕
            this.box_farground.x -= this._control.Model.viewRollSpeep * this._control.Model.userAcceValue * 0.5;
            let farPageIndex = Math.floor(-this.box_farground.x / this._control.Model.fargroundWidth);
            if (this._control.Model.fargroundIndex != farPageIndex) {
                this._control.Model.fargroundIndex = farPageIndex;
                this.viewMoveHandler(this.fargroundOne, this.fargroundTwo, this._control.Model.fargroundWidth, farPageIndex);
            }
            //最前景屏幕
            this.box_obstacle.x -= this._control.Model.viewRollSpeep * this._control.Model.userAcceValue * 1.2;
            let obstaclePageIndex = Math.floor(-this.box_obstacle.x / this._control.Model.topForegroundWidth);
            if (this._control.Model.topForegroundIndex != obstaclePageIndex) {
                this._control.Model.topForegroundIndex = obstaclePageIndex;
                this.viewMoveHandler(this.obstacleOne, this.obstacleTwo, this._control.Model.topForegroundWidth, obstaclePageIndex);
            }
        }
    }
    viewMoveHandler(rollViewOne, rollViewTwo, width, pageIndex) {
        if (this._control.Model.viewRollSpeep > 0) {
            //左移
            if (pageIndex % 2 == 0) {
                rollViewTwo.x = width * (pageIndex + 1);
            }
            else {
                rollViewOne.x = width * (pageIndex + 1);
            }
        }
        else {
            //右移
            if (pageIndex % 2 == 0) {
                rollViewOne.x = width * pageIndex;
            }
            else {
                rollViewTwo.x = width * pageIndex;
            }
        }
    }
    onListRender(cell, index) {
        if (index > this.lists_head.array.length) {
            return;
        }
        let headItem = cell.getChildByName("hero");
        if (headItem) {
            let info = this.lists_head.array[index];
            headItem.dataSource = info;
            if (info.heroId > 0) {
                Laya.timer.frameOnce(index + (Math.random() * 45), this, () => {
                    this._battleHeroIndex++;
                    let startPos = {
                        x: MathUtil_1.default.rangeInt(10, 50) + this.width * 0.5 * Math.random(),
                        y: this.beginEventView.y + MathUtil_1.default.rangeInt(-150, 200) //- 150 + (this.beginEventView.height - 30) / (this.lists_head.array.length) * this._battleHeroIndex
                    };
                    EffectUtil_1.default.playBoneEffect("ui_born", { x: startPos.x - 20, y: startPos.y + 200 });
                    this.timerOnce(100, this, () => {
                        headItem.createBattleHero(this, startPos); //汽车放入跑道
                        headItem.setStage(1);
                        this._control.Model.is_reset_zorder = true;
                        //刷新战斗英雄的数量
                        this._control.setBattleHeroCount(PlayerMgr_1.default.Ins.Info.userRuncarCount + 1);
                    });
                });
            }
        }
    }
    /** 打开游戏加速 */
    openGameAcc() {
        let stage = ShareMgr_1.default.Ins.showShareOrAdv(() => {
            this.playAccEffect();
        }, 10, false, true);
    }
    /** 加速效果 */
    playAccEffect(_acceTime = 90, _isEffect = true) {
        if (this._control.Model.userAcceTime > 1) {
            this._control.Model.userAcceTime += _acceTime;
            return;
        }
        this.btn_acc.mouseEnabled = false;
        this.imgAcce.visible = true;
        this._control.Model.userAcceTime += _acceTime;
        if (_isEffect) {
            EffectUtil_1.default.playAccEffect(this);
        }
        this._control.setBattleHeroAcce(2);
        this.refreshAcceTime();
        this.timerLoop(1000, this, this.refreshAcceTime);
        SoundMgr_1.default.Ins.playEffect(SoundType_1.default.GAME_ACCE);
    }
    /** 刷新加速时间 */
    refreshAcceTime() {
        let minute = Math.floor(this._control.Model.userAcceTime / 60);
        let sec = this._control.Model.userAcceTime % 60;
        this.txt_accTimes.text = (minute < 10 ? ('0' + minute) : minute) + ':' + (sec < 10 ? ('0' + sec) : sec);
        if (this._control.Model.userAcceTime > 0) {
            this._control.Model.userAcceTime--;
            StorageUtil_1.default.saveAcceLeftTime(this._control.Model.userAcceTime);
            EffectUtil_1.default.playCoinRainEffect("images/common/coin.png");
        }
        else {
            this._control.setBattleHeroAcce(1);
            this.clearTimer(this, this.refreshAcceTime);
            this.imgAcce.visible = false;
            this.btn_acc.mouseEnabled = true;
        }
    }
    /** 显示英雄保存箱 */
    onShowHeroBox() {
        this.btn_heroStore.visible = true;
    }
    /** 取出英雄箱中的英雄 */
    popHeroStore() {
        let heroId = StorageUtil_1.default.popHeroStore();
        if (heroId > 0) {
            let hero = this._control.createHero(heroId);
            if (hero) {
                StorageUtil_1.default.popHeroStore(true);
                this.haveStoreHero();
            }
        }
    }
    /** 是否拥有缓存的英雄 */
    haveStoreHero() {
        this.btn_heroStore.visible = StorageUtil_1.default.popHeroStore() > 0;
    }
    /** 转盘奖励加速 */
    onGameAcce(time) {
        this.playAccEffect(time);
    }
    /** 离线奖励 */
    onOffLineReward() {
        let offlinePrize = StorageUtil_1.default.offlinePrize();
        if (offlinePrize > 10 * 60 && PlayerMgr_1.default.Ins.Info.userIncomeSec > 0 && this._control.IsGuide == false) {
            // 1) 离线0-8小时：100%收益
            // 2) 8-24小时：8小时100%收益+（X-8）*50%收益
            // 3) 24小时以上：8小时100%收益+16小时*50%收益（意思就是超出24小时后的部分不计算收益）
            // 20180726-离线奖励规则修改：8小时内100%调整为25%；8小时-24小时50%调整为10%。
            // 20180728-离线奖励再降低下，只计算8小时内的。8小时以外不给奖励。
            // 20180806-有收益的最长时间改为：2个小时
            let gold = 0;
            let secondForHour = 60 * 60;
            let secHourMax = 2 * secondForHour;
            if (offlinePrize > secHourMax) {
                gold = (secHourMax * PlayerMgr_1.default.Ins.Info.userIncomeSec) * 0.05;
            }
            else {
                gold = (offlinePrize * PlayerMgr_1.default.Ins.Info.userIncomeSec) * 0.05;
            }
            if (gold > 0) {
                gold = gold * 4;
                this._control.updateGold(gold, false);
                if (PlayerMgr_1.default.Ins.Info.userLevel > 8) {
                    ViewMgr_1.default.Ins.open(ViewConst_1.default.OffLineRewardView, null, gold);
                }
                else {
                    MsgMgr_1.default.Ins.showMsg("获得离线奖励:" + MathUtil_1.default.unitConversion(gold));
                }
            }
        }
    }
    /** 显示英雄信息Tips */
    showHeroTips() {
        if (this._heroTips == null) {
            this._heroTips = Laya.Pool.getItemByClass("HeroTips", HeroTips_1.default);
            this._heroTips.dataSource = this._currHeadItem;
            this._copyHeadItem.addChild(this._heroTips);
        }
    }
    /** 移除英雄信息Tips */
    removeHeroTips() {
        this.clearTimer(this, this.showHeroTips);
        if (this._heroTips) {
            this._heroTips.removeTips();
            Laya.Pool.recover("HeroTips", this._heroTips);
            this._heroTips = null;
        }
    }
    /** 显示超越好友 */
    showSurpassView() {
        if (window["wx"]) {
            SDKMgr_1.default.Ins.wxSetUserCloudStorage();
            this.surpassView.postMsg({ message: "showSurpassFriend" });
        }
    }
    onRenderSystem(cell, index) {
        if (index > this.list_btn.array.length) {
            return;
        }
        let btn = cell.getChildByName("item");
        if (btn) {
            btn.dataSource = this.list_btn.array[index];
        }
    }
    /** 更新系统功能按钮 */
    onUpdateSystemBtn() {
        this.initSystemBtn();
    }
}
exports.default = HallScene;

},{"../../../GameConfig":1,"../../../core_wq/event/EventType":17,"../../../core_wq/event/EventsMgr":18,"../../../core_wq/guide/GuideMgr":20,"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/msg/MsgMgr":25,"../../../core_wq/msg/RedPointMgr":27,"../../../core_wq/msg/SDKMgr":28,"../../../core_wq/msg/ShareMgr":29,"../../../core_wq/net/HttpMgr":30,"../../../core_wq/player/PlayerMgr":32,"../../../core_wq/player/data/PlayerInfo":33,"../../../core_wq/sound/SoundMgr":37,"../../../core_wq/sound/SoundType":38,"../../../core_wq/utils/EffectUtil":42,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/utils/StorageUtil":46,"../../../core_wq/view/ViewMgr":49,"../../../core_wq/view/ViewRegisterMgr":50,"../../../core_wq/view/const/ViewConst":52,"../../../ui/layaMaxUI":83,"../HallControl":62,"../config/SystemConfig":63,"./HeroTips":69,"./item/HeadItem":72}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const GlobalData_1 = require("../../../core_wq/db/GlobalData");
const BoneAnim_1 = require("../../../core_wq/bone/BoneAnim");
class HeroTips extends layaMaxUI_1.ui.moduleView.hall.HeroTipsUI {
    constructor() { super(); }
    onEnable() {
        if (this._data) {
            // let pos: Laya.Point = PointUtils.localToGlobal(this._data);
            // this.pos(pos.x, pos.y);
            this.pos(this._data.x, this._data.y);
            if (this.x < 0) {
                this.x = 0;
            }
            else if (this.x > LayerMgr_1.default.stageDesignWidth) {
                this.x = LayerMgr_1.default.stageDesignWidth - this.width;
            }
            let config = GlobalData_1.default.getData(GlobalData_1.default.HeroConfigVO, this._data.Info.heroId);
            if (config) {
                this.txt_name.text = config.name;
                this.txt_speed.text = config.speed + "";
                this.txt_secCoin.text = config.PerSecCoin + "";
                this.txt_sellPrice.text = config.sellPrice + "";
            }
            if (this._data && this._data.heroVO) {
                this._bone = new BoneAnim_1.default(this._data.heroVO.modelImgUrl, true, true);
                this.addChild(this._bone);
                this._bone.pos(174, 420);
            }
        }
    }
    removeTips() {
        if (this._bone)
            this._bone.destroy();
        this.removeSelf();
    }
    set dataSource(value) {
        this._data = value;
    }
}
exports.default = HeroTips;

},{"../../../core_wq/bone/BoneAnim":3,"../../../core_wq/db/GlobalData":7,"../../../core_wq/layer/LayerMgr":21,"../../../ui/layaMaxUI":83}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const AppConfig_1 = require("../../../core_wq/config/AppConfig");
const GlobalData_1 = require("../../../core_wq/db/GlobalData");
const BoneAnim_1 = require("../../../core_wq/bone/BoneAnim");
const HallControl_1 = require("../HallControl");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
const MsgMgr_1 = require("../../../core_wq/msg/MsgMgr");
const ShareMgr_1 = require("../../../core_wq/msg/ShareMgr");
const ViewMgr_1 = require("../../../core_wq/view/ViewMgr");
const ViewConst_1 = require("../../../core_wq/view/const/ViewConst");
/**
 * 新武将界面
 */
class NewHeroView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.frameLayer, layaMaxUI_1.ui.moduleView.hall.NewHeroViewUI);
        this._money = 0;
    }
    initData() {
        super.initData();
        if (this.datas && this.datas.length > 0) {
            this._heroVO = GlobalData_1.default.getData(GlobalData_1.default.HeroVO, this.datas[0]);
            if (this._heroVO) {
                this.ui.txt_name.text = this._heroVO.name;
                this._bone = new BoneAnim_1.default(this._heroVO.modelImgUrl, true, true);
                this._bone.completeBack = () => {
                };
                this.addChild(this._bone);
                this._bone.scale(1.5, 1.5);
                this._bone.pos(238, 445);
            }
            this._heroInfo = GlobalData_1.default.getData(GlobalData_1.default.HeroConfigVO, HallControl_1.default.Ins.Model.heroLevel);
            if (this._heroInfo) {
                this.ui.txt_exp.text = "经验: +" + this._heroInfo.syntheticExp;
                this.ui.txt_income.text = "收益: +" + MathUtil_1.default.unitConversion(this._heroInfo.PerSecCoin) + "/秒";
                let curPrice = HallControl_1.default.Ins.Model.getHeroBuyPrice(this._heroInfo.buyPrice, HallControl_1.default.Ins.Model.queryBuyHeroRecord(this._heroInfo.id));
                this._money = curPrice * 0.6;
            }
            this.ui.txt_price.text = "+" + MathUtil_1.default.unitConversion(this._money);
        }
    }
    addEvents() {
        this.ui.btn_reward.on(Laya.Event.CLICK, this, this.onGetReward);
    }
    removeEvents() {
        this.ui.btn_reward.off(Laya.Event.CLICK, this, this.onGetReward);
    }
    onGetReward() {
        if (AppConfig_1.default.isDebug && Laya.Browser.onPC) {
            this.sendReward();
        }
        else {
            ShareMgr_1.default.Ins.showShareOrAdv(() => {
                this.sendReward();
            });
        }
    }
    sendReward() {
        MsgMgr_1.default.Ins.showMsg("您已获得铜钱:" + MathUtil_1.default.unitConversion(this._money));
        HallControl_1.default.Ins.updateGold(this._money, false);
        ViewMgr_1.default.Ins.close(ViewConst_1.default.NewHeroView);
    }
    close(...param) {
        super.close(param);
        this._heroVO = null;
        this._heroInfo = null;
        if (this._bone)
            this._bone.destroy();
    }
}
exports.default = NewHeroView;

},{"../../../core_wq/bone/BoneAnim":3,"../../../core_wq/config/AppConfig":4,"../../../core_wq/db/GlobalData":7,"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/msg/MsgMgr":25,"../../../core_wq/msg/ShareMgr":29,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/view/ViewMgr":49,"../../../core_wq/view/base/BaseView":51,"../../../core_wq/view/const/ViewConst":52,"../../../ui/layaMaxUI":83,"../HallControl":62}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const GlobalData_1 = require("../../../core_wq/db/GlobalData");
const PlayerMgr_1 = require("../../../core_wq/player/PlayerMgr");
/**
 * 用户信息界面
 */
class UserInfoView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.frameLayer, layaMaxUI_1.ui.moduleView.hall.UserInfoViewUI);
    }
    initData() {
        super.initData();
        this._levelVO = GlobalData_1.default.getData(GlobalData_1.default.LevelVO, PlayerMgr_1.default.Ins.Info.userLevel);
        this._nextLevelVO = GlobalData_1.default.getData(GlobalData_1.default.LevelVO, PlayerMgr_1.default.Ins.Info.userLevel + 1);
        this.ui.txt_userId.text = PlayerMgr_1.default.Ins.Info.userId + "";
        this.ui.expBar.value = (1.0 * PlayerMgr_1.default.Ins.Info.userExp / this._nextLevelVO.upNeedexp);
        this.ui.txt_exp.text = Math.floor(PlayerMgr_1.default.Ins.Info.userExp) + "/" + Math.floor(this._nextLevelVO.upNeedexp);
        this.ui.txt_price.text = Math.floor(100 * this._levelVO.extraProduce) + "%";
        this.ui.txt_heroCount.text = this._levelVO.openCellCount + "个";
        this.ui.txt_battleCount.text = this._levelVO.battleCount + "个";
    }
}
exports.default = UserInfoView;

},{"../../../core_wq/db/GlobalData":7,"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/player/PlayerMgr":32,"../../../core_wq/view/base/BaseView":51,"../../../ui/layaMaxUI":83}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../../../ui/layaMaxUI");
const GlobalData_1 = require("../../../../core_wq/db/GlobalData");
const PathConfig_1 = require("../../../../core_wq/config/PathConfig");
const Hero_1 = require("../../hero/Hero");
const HallControl_1 = require("../../HallControl");
const PlayerMgr_1 = require("../../../../core_wq/player/PlayerMgr");
const GuideMgr_1 = require("../../../../core_wq/guide/GuideMgr");
const EffectUtil_1 = require("../../../../core_wq/utils/EffectUtil");
class HeadItem extends layaMaxUI_1.ui.moduleView.hall.item.HeadItemUI {
    constructor() {
        super();
        /** 战斗的英雄 */
        this._battleHero = null;
        /** 0空,1战斗中,2拖动,3宝箱 */
        this._stage = HEAD_ITEM_STAGE.IDLE;
        /** 是否上锁 */
        this._isLock = false;
        /** 英雄位置下标 */
        this.heroIndex = -1;
        this._reviveTime = 0;
        this.isDie = false;
    }
    set dataSource(value) {
        this._info = value;
        this.imgHead.visible = false;
        if (this._info && this._info.heroId > 0) {
            this.updateHeadSkin(this._info.heroId);
        }
    }
    /** 更新头像 */
    updateHeadSkin(heroId, index = -1) {
        this.boxLevel.visible = this.imgHead.visible = heroId > 0;
        this.imgLock.visible = heroId < 0;
        if (index >= 0) {
            this.heroIndex = index;
        }
        if (heroId > 0) {
            if (this._info)
                this._info.heroId = heroId;
            this._heroVO = GlobalData_1.default.getData(GlobalData_1.default.HeroVO, heroId);
            if (this._heroVO) {
                this.imgHead.skin = PathConfig_1.default.HEAD_PATH + this._heroVO.imgUrl;
                this.txt_level.text = this._heroVO.id + "";
            }
        }
    }
    /** 创建战斗中的英雄 */
    createBattleHero(parentNode, startPos) {
        if (this._battleHero == null) {
            let hero = new Hero_1.default();
            hero.setCharacterBone(this._info.heroId);
            hero.pivot(41, 35);
            if (parentNode) {
                parentNode.addChild(hero);
                hero.pos(startPos.x, startPos.y);
                let heroInfo = GlobalData_1.default.getData(GlobalData_1.default.HeroConfigVO, this._info.heroId);
                if (heroInfo) {
                    hero.setMoveSpeedRatio(heroInfo.speed);
                }
                this.timerOnce(200, this, () => {
                    hero.playMoveAction();
                });
            }
            this._battleHero = hero;
            this.hpBar.value = hero.hp / hero.maxHp;
            this.hpBar.visible = true;
            this.reviveBar.visible = false;
            this.reviveBar.value = 0;
        }
        return this._battleHero;
    }
    /** 更新血量 */
    updateHp(value = 1) {
        if (GuideMgr_1.default.Ins.isGuide || this._battleHero == null)
            return;
        EffectUtil_1.default.playBoneEffect("hit_01", { x: this._battleHero.x, y: this._battleHero.y + 100 });
        this._battleHero.hp = this._battleHero.hp - value;
        this.hpBar.value = this._battleHero.hp / this._battleHero.maxHp;
        if (this.hpBar.value <= 0) {
            this.isDie = true;
            this._battleHero.IsInPosition = false;
            this._battleHero.visible = false;
            HallControl_1.default.Ins.setBattleHeroCount(PlayerMgr_1.default.Ins.Info.userRuncarCount - 1);
            this.hpBar.visible = false;
            this.reviveBar.visible = true;
            this.timerLoop(1000, this, this.heroReviveTime);
        }
    }
    heroReviveTime() {
        this._reviveTime += 1;
        this.reviveBar.value = this._reviveTime / 6;
        if (this._reviveTime >= 6) {
            this.clearTimer(this, this.heroReviveTime);
            this.reviveBar.visible = false;
            this.reviveBar.value = 0;
            this._reviveTime = 0;
            if (this._battleHero) {
                EffectUtil_1.default.playBoneEffect("ui_born", { x: this._battleHero.x - 20, y: this._battleHero.y + 200 });
            }
            this.timerOnce(100, this, () => {
                if (this._battleHero) {
                    this._battleHero.hp = this._battleHero.maxHp;
                    this.hpBar.value = this._battleHero.maxHp;
                    this._battleHero.visible = true;
                    this._battleHero.IsInPosition = true;
                }
                this.hpBar.visible = true;
                HallControl_1.default.Ins.setBattleHeroCount(PlayerMgr_1.default.Ins.Info.userRuncarCount + 1);
                this.isDie = false;
            });
        }
    }
    /** 移除战斗中的英雄 */
    removeBattleHero() {
        if (this._battleHero) {
            this._battleHero.removeAttackTarget();
            this._battleHero.removeSelf();
            Laya.Pool.recover("bone" + this._battleHero.heroId, this._battleHero.heroBone);
            this._battleHero = null;
        }
    }
    /** 获取战斗中的英雄 */
    get BattleHero() {
        return this._battleHero;
    }
    /** 设置战斗中的英雄 */
    set BattleHero(battleHero) {
        this._battleHero = battleHero;
    }
    /** 英雄出售价格 */
    getSellPrice() {
        if (this._heroVO) {
            let heroConfigVO = GlobalData_1.default.getData(GlobalData_1.default.HeroConfigVO, this._heroVO.id);
            if (heroConfigVO)
                return heroConfigVO.buyPrice * 0.8;
        }
        return 0;
    }
    /** 重置 */
    reset() {
        if (this._info)
            this._info.heroId = 0;
        if (this._heroVO)
            this._heroVO = null;
        this.hpBar.visible = false;
        this.reviveBar.visible = false;
        this.hpBar.value = 1;
        this.reviveBar.value = 0;
        this.updateHeadSkin(0);
        this.setStage(0);
        this.removeBattleHero();
    }
    /** 设置锁 */
    setLock(isLock) {
        this._isLock = this.imgLock.visible = isLock;
    }
    /** 0空,1战斗中,2拖动,3宝箱 */
    setStage(stage) {
        if (this._isLock)
            return;
        this._stage = stage;
    }
    /** 是否在战斗中 */
    get IsBattle() {
        return this._stage == HEAD_ITEM_STAGE.BATTLE;
    }
    /** 是否闲置 */
    get IsEmpty() {
        return this._stage <= HEAD_ITEM_STAGE.IDLE;
    }
    /** 是否宝箱 */
    get IsBox() {
        return this._stage == HEAD_ITEM_STAGE.BOX;
    }
    /** 是否上锁 */
    get IsLock() {
        return this._isLock;
    }
    /** 0空,1战斗中,2拖动,3宝箱 */
    get HeroStage() { return this._stage; }
    get Info() { return this._info; }
    get heroVO() {
        return this._heroVO;
    }
}
exports.default = HeadItem;
var HEAD_ITEM_STAGE;
(function (HEAD_ITEM_STAGE) {
    /** 空闲 */
    HEAD_ITEM_STAGE[HEAD_ITEM_STAGE["IDLE"] = 0] = "IDLE";
    /** 战斗中 */
    HEAD_ITEM_STAGE[HEAD_ITEM_STAGE["BATTLE"] = 1] = "BATTLE";
    /** 拖动 */
    HEAD_ITEM_STAGE[HEAD_ITEM_STAGE["DROP"] = 2] = "DROP";
    /** 宝箱 */
    HEAD_ITEM_STAGE[HEAD_ITEM_STAGE["BOX"] = 3] = "BOX";
})(HEAD_ITEM_STAGE || (HEAD_ITEM_STAGE = {}));

},{"../../../../core_wq/config/PathConfig":5,"../../../../core_wq/db/GlobalData":7,"../../../../core_wq/guide/GuideMgr":20,"../../../../core_wq/player/PlayerMgr":32,"../../../../core_wq/utils/EffectUtil":42,"../../../../ui/layaMaxUI":83,"../../HallControl":62,"../../hero/Hero":64}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../../../ui/layaMaxUI");
const EventsMgr_1 = require("../../../../core_wq/event/EventsMgr");
const EventType_1 = require("../../../../core_wq/event/EventType");
const PathConfig_1 = require("../../../../core_wq/config/PathConfig");
const SystemConfig_1 = require("../../config/SystemConfig");
const PointUtils_1 = require("../../../../core_wq/utils/PointUtils");
const SDKMgr_1 = require("../../../../core_wq/msg/SDKMgr");
class SystemBtn extends layaMaxUI_1.ui.moduleView.hall.item.SystemBtnUI {
    constructor() {
        super(...arguments);
        this._info = null;
    }
    set dataSource(value) {
        this._info = value;
        if (this._info) {
            this.init();
            this.addEvents();
        }
    }
    init() {
        this.imgRenPoint.visible = false;
        this.btn_system.skin = PathConfig_1.default.SYSTEM_BTN_PATH.replace("{0}", this._info.icon);
        //投诉建议特殊处理
        if (this._info.id == SystemConfig_1.default.FEEDBACK) {
            let pos = PointUtils_1.default.localToGlobal(this.btn_system);
            SDKMgr_1.default.Ins.wxCreateFeedbackButton({
                x: pos.x, y: pos.y,
                width: this.btn_system.width, height: this.btn_system.height
            });
        }
    }
    addEvents() {
        this.btn_system.on(Laya.Event.CLICK, this, this.onClickBtn);
        EventsMgr_1.default.Ins.addListener(EventType_1.default.UPDATE_SYSTEM_RED_POINT, this.onUpdateRedPoint, this);
    }
    onClickBtn() {
        if (this._info) {
            EventsMgr_1.default.Ins.dispatch(EventType_1.default.OPEN_VIEW, this._info.id);
        }
        else {
            console.log("@David 功能按钮点击错误,没有找到System表对应的字段!");
        }
    }
    onUpdateRedPoint(id, isShow) {
        if (this._info && this._info.id == id) {
            this.imgRenPoint.visible = isShow;
        }
    }
}
exports.default = SystemBtn;

},{"../../../../core_wq/config/PathConfig":5,"../../../../core_wq/event/EventType":17,"../../../../core_wq/event/EventsMgr":18,"../../../../core_wq/msg/SDKMgr":28,"../../../../core_wq/utils/PointUtils":44,"../../../../ui/layaMaxUI":83,"../../config/SystemConfig":63}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const AverageUtils_1 = require("../../../core_wq/utils/AverageUtils");
class SmallLoading extends Laya.Sprite {
    constructor() {
        super();
        this._content = null;
        this._speed = 0;
        this.init();
    }
    init() {
        this._averageUtils = new AverageUtils_1.default();
        this._speed = 10 / (1000 / 60);
        this._content = Laya.Pool.getItemByClass("Sprite", Laya.Sprite);
        this._content.graphics.drawRect(0, 0, LayerMgr_1.default.stageDesignWidth, LayerMgr_1.default.stageDesignHeight, "#000000");
        this._content.mouseEnabled = true;
        this._uiContainer = Laya.Pool.getItemByClass("Sprite", Laya.Sprite);
        let url = "images/common/load_Reel.png";
        Laya.loader.load([{ url: url, type: Laya.Loader.IMAGE }], Laya.Handler.create(this, (texture) => {
            let img = Laya.Pool.getItemByClass("Image", Laya.Image);
            img.texture = Laya.loader.getRes(url);
            img.x = -img.width * 0.5;
            img.y = -img.height * 0.5;
            this._uiContainer.addChild(img);
        }));
    }
    showLoading() {
        LayerMgr_1.default.Ins.smallLoadingLayer.addChild(this._content);
        this.frameLoop(1, this, this.enterFrame);
    }
    hideLoading() {
        if (this._content && this._content.parent) {
            this._uiContainer.rotation = 0;
            this._uiContainer.removeChildren();
            this._uiContainer.removeSelf();
            this._content.removeChildren();
            this._content.removeSelf();
            Laya.Pool.recover("Sprite", this._uiContainer);
            Laya.Pool.recover("Sprite", this._content);
        }
        this.clearTimer(this, this.enterFrame);
    }
    enterFrame(time) {
        this._averageUtils.push(this._speed * time);
        this._uiContainer.rotation += this._averageUtils.getValue();
    }
    static get Ins() {
        if (SmallLoading._instance == null) {
            SmallLoading._instance = new SmallLoading();
        }
        return SmallLoading._instance;
    }
}
exports.default = SmallLoading;

},{"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/utils/AverageUtils":40}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const GlobalData_1 = require("../../../core_wq/db/GlobalData");
const AppConfig_1 = require("../../../core_wq/config/AppConfig");
const SDKMgr_1 = require("../../../core_wq/msg/SDKMgr");
const StorageUtil_1 = require("../../../core_wq/utils/StorageUtil");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
class LoginScene extends layaMaxUI_1.ui.moduleView.login.LoginSceneUI {
    constructor() {
        super();
        this._authorityState = 3;
        this.tipsArr = [
            "等待时间越久离线金币越多哟",
            "正在召集英雄上阵",
            "别忘每天的免费转盘抽奖哟",
            "签到天数越久奖励越丰盛~",
            "邀请好友召唤英雄，获取超多奖励",
            "每天登陆都有大量离线金币领取"
        ];
    }
    onEnable() {
        this.showStartuplogo();
        this.initData();
    }
    initData() {
        this.txt_tips.visible = true;
        StorageUtil_1.default.versionCheck(() => {
            GlobalData_1.default.Ins.setup(() => {
                StorageUtil_1.default.loadStorage((isOK) => {
                    if (isOK) {
                        this.checkAuthority();
                    }
                });
            });
        });
    }
    /** 检查是否用户授权 */
    checkAuthority() {
        if (Laya.Browser.onWeiXin) {
            SDKMgr_1.default.Ins.wxLogin((state) => {
                this._authorityState = state;
                switch (state) {
                    case 1: //已经授权
                        this.txt_tips.text = this.tipsArr[MathUtil_1.default.rangeInt(0, this.tipsArr.length - 1)];
                        break;
                    case 2: //授权成功进入大厅
                        SDKMgr_1.default.Ins.initWX();
                        this.enterHallScene();
                        break;
                    case 3: //没有授权
                        this.txt_tips.text = "点击任意位置进入游戏";
                        break;
                }
                this.onShowBreathEffect();
                this.timerLoop(1500, this, this.onShowBreathEffect);
            });
        }
        else {
            this.enterHallScene();
        }
    }
    /** 进入大厅 */
    enterHallScene() {
        this.removeImgStartTween();
        this.clearTimer(this, this.onShowBreathEffect);
        AppConfig_1.default.HallScene && Laya.Scene.open(AppConfig_1.default.HallScene);
    }
    /** 显示开机图 */
    showStartuplogo() {
        // let timeLine = new Laya.TimeLine();
        // timeLine.addLabel("tl1", 0).to(this.imgStart, { alpha: 1 }, 2000, Laya.Ease.linearNone)
        //     .addLabel("tl2", 2000).to(this.imgStart, { alpha: 0 }, 200, Laya.Ease.linearNone);
        // timeLine.on(Laya.Event.COMPLETE, this.imgStart, () => {
        //     timeLine.destroy();
        //     timeLine = null;
        //     this.imgStart.removeSelf();
        // });
        // timeLine.play(0, false);
        Laya.Tween.to(this.imgStart, { alpha: 1 }, 2000);
        Laya.Tween.to(this.imgStart, { alpha: 0, delay: 2000 }, 200, null, Laya.Handler.create(this, () => {
            this.removeImgStartTween();
        }));
    }
    removeImgStartTween() {
        Laya.Tween.clearTween(this.imgStart);
        this.imgStart.removeSelf();
    }
    onShowBreathEffect() {
        if (this._authorityState != 3) {
            this.txt_tips.text = this.tipsArr[MathUtil_1.default.rangeInt(0, this.tipsArr.length - 1)];
        }
        Laya.Tween.clearTween(this.txt_tips);
        Laya.Tween.to(this.txt_tips, { scaleX: 0.9, scaleY: 0.9 }, 900, null, Laya.Handler.create(this, () => {
            Laya.Tween.to(this.txt_tips, { scaleX: 1, scaleY: 1 }, 900);
        }));
    }
}
exports.default = LoginScene;

},{"../../../core_wq/config/AppConfig":4,"../../../core_wq/db/GlobalData":7,"../../../core_wq/msg/SDKMgr":28,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/utils/StorageUtil":46,"../../../ui/layaMaxUI":83}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const HttpMgr_1 = require("../../../core_wq/net/HttpMgr");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
const TimeUtil_1 = require("../../../core_wq/utils/TimeUtil");
const PlayerMgr_1 = require("../../../core_wq/player/PlayerMgr");
const MsgMgr_1 = require("../../../core_wq/msg/MsgMgr");
const ViewMgr_1 = require("../../../core_wq/view/ViewMgr");
const ViewConst_1 = require("../../../core_wq/view/const/ViewConst");
class LuckPrizeView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.frameLayer, layaMaxUI_1.ui.moduleView.luckPrize.LuckPrizeViewUI);
        this.costDiamond = 120;
        this.freeTimes = 0; //免费次数
        this.freeTime = 0; //免费时间
        this.nextFreeTime = 0; //离下次免费时间
        this.isTryAgain = false; //再来一次
        this.isFreeDrawing = false; //是否正在免费抽奖
        this._currType = -1;
    }
    initUI() {
        super.initUI();
        this.luckPrizeInfo(() => {
            this.initView();
            this.refreshDiamontTxt();
            this.timerLoop(1000, this, this.onTimeHandler);
        });
    }
    luckPrizeInfo(callBack = null) {
        HttpMgr_1.default.Ins.requestPrizeInfo((res) => {
            if (res) {
                if (this.isFreeDrawing == false) {
                    this.freeTimes = MathUtil_1.default.parseInt(res.free_num);
                    this.freeTime = MathUtil_1.default.parseInt(res.remain_time);
                    this.nextFreeTime = MathUtil_1.default.parseInt(res.next_free);
                }
                this.costDiamond = MathUtil_1.default.parseInt(res.roulette_price);
                //免费次数已用完
                if (this.freeTimes < 1) {
                    this.freeTime = 0;
                }
                callBack && callBack();
            }
        });
    }
    initView() {
        this.ui.txt_des.text = "单次抽奖将消耗元宝x" + this.costDiamond;
    }
    refreshDiamontTxt() {
        if (this.freeTime > 0 || this.isTryAgain) {
            this.ui.txt_diamond.text = "免费";
        }
        else {
            this.ui.txt_diamond.text = this.costDiamond + "";
        }
    }
    addEvents() {
        this.ui.btn_start.on(Laya.Event.CLICK, this, this.onStartHandler);
    }
    removeEvents() {
        this.ui.btn_start.off(Laya.Event.CLICK, this, this.onStartHandler);
    }
    /** 开始抽奖 */
    onStartHandler() {
        this.setStartBtnEnabled(false);
        if (this.isTryAgain) { //再来一次
            this.isTryAgain = false;
            this.luckPrizeDrawPrize(LUCK_TYPE.AGAIN);
        }
        else if (this.freeTimes > 0) {
            this.luckPrizeDrawPrize(LUCK_TYPE.FREE);
        }
        else if (PlayerMgr_1.default.Ins.Info.userDiamond >= this.costDiamond) {
            this.luckPrizeDrawPrize(LUCK_TYPE.DIAMOND);
        }
        else {
            MsgMgr_1.default.Ins.showMsg("元宝不足,做任务领元宝!");
            this.setStartBtnEnabled();
        }
    }
    onTimeHandler() {
        if (this.freeTime > 0) {
            this.ui.txt_time.text = "免费抽奖剩余时间: " + TimeUtil_1.default.timeFormatStr(this.freeTime, true);
            this.ui.txt_time.color = "#66CD00";
            this.freeTime--;
        }
        else if (this.nextFreeTime > 0) {
            this.ui.txt_time.text = "下一次免费抽奖倒计时: " + TimeUtil_1.default.timeFormatStr(this.nextFreeTime, true);
            this.ui.txt_time.color = "#EE6363";
            this.nextFreeTime--;
            this.freeTimes = 0; //免费次数清零
        }
        else {
            if (this.ui.txt_time.visible) {
                this.luckPrizeInfo();
            }
            this.ui.txt_time.visible = false;
        }
        //消耗元宝
        this.refreshDiamontTxt();
    }
    luckPrizeDrawPrize(type) {
        this._currType = type;
        HttpMgr_1.default.Ins.requestDrawPrize(type, (res) => {
            if (!res || res.id == null) {
                console.log("@David 无法正常抽奖 类型为：", type);
                this.setStartBtnEnabled();
                return;
            }
            let itemId = res.id;
            let rotation = (8 - itemId) * 360 / 8 + 360 / 16;
            this.onRotation(360 * 7 + rotation, itemId);
            switch (type) {
                case LUCK_TYPE.FREE:
                    this.isFreeDrawing = true;
                    this.freeTimes--;
                    this.freeTime = 0;
                    break;
                case LUCK_TYPE.DIAMOND:
                    this.freeTimes--;
                    this.freeTime = 0;
                    HttpMgr_1.default.Ins.requestDiamondData();
                    break;
            }
        });
    }
    /** 转盘 */
    onRotation(rotation, itemId) {
        let fAdd = 0.2;
        this.ui.imgBg.rotation = this.ui.imgBg.rotation % 360;
        if (this.ui.imgBg.rotation > rotation) {
            fAdd = -fAdd;
        }
        let fAddLength = 0;
        let fTotalLength = Math.abs(rotation - this.ui.imgBg.rotation);
        let animFun = () => {
            if (fAdd > 0) {
                if (this.ui.imgBg.rotation < rotation) {
                    let progress = fAddLength / fTotalLength;
                    //加速
                    if (progress < 0.2) {
                        fAdd += 0.2;
                    }
                    else if (progress > 0.6) {
                        fAdd -= 0.1;
                    }
                    if (fAdd < 0.2) {
                        fAdd = 0.2;
                    }
                    fAddLength += fAdd;
                    this.ui.imgBg.rotation += fAdd;
                }
                else {
                    this.ui.imgBg.rotation = rotation;
                    this.ui.imgBg.clearTimer(this, animFun);
                    this.setStartBtnEnabled();
                    //显示奖励物品
                    this.showRewardView(itemId);
                }
            }
            else if (fAdd < 0) {
                if (this.ui.imgBg.rotation > rotation) {
                    this.ui.imgBg.rotation += fAdd;
                }
                else {
                    this.ui.imgBg.rotation = rotation;
                    this.ui.imgBg.clearTimer(this, animFun);
                    this.setStartBtnEnabled();
                }
            }
        };
        this.ui.imgBg.timerLoop(10, this, animFun);
    }
    /** 显示奖励界面 */
    showRewardView(itemId) {
        ViewMgr_1.default.Ins.open(ViewConst_1.default.LuckPrizeRewardView, (flag) => {
            if (flag)
                this.isTryAgain = true;
        }, itemId);
        if (this._currType == LUCK_TYPE.FREE) {
            this.isFreeDrawing = false;
        }
    }
    setStartBtnEnabled(isEnabled = true) {
        this.ui.btn_start.mouseEnabled = isEnabled;
    }
}
exports.default = LuckPrizeView;
var LUCK_TYPE;
(function (LUCK_TYPE) {
    /** 免费 */
    LUCK_TYPE[LUCK_TYPE["FREE"] = 0] = "FREE";
    /** 钻石 */
    LUCK_TYPE[LUCK_TYPE["DIAMOND"] = 1] = "DIAMOND";
    /** 再一次 */
    LUCK_TYPE[LUCK_TYPE["AGAIN"] = 2] = "AGAIN";
})(LUCK_TYPE || (LUCK_TYPE = {}));

},{"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/msg/MsgMgr":25,"../../../core_wq/net/HttpMgr":30,"../../../core_wq/player/PlayerMgr":32,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/utils/TimeUtil":48,"../../../core_wq/view/ViewMgr":49,"../../../core_wq/view/base/BaseView":51,"../../../core_wq/view/const/ViewConst":52,"../../../ui/layaMaxUI":83}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
class RankItem extends layaMaxUI_1.ui.moduleView.rank.RankItemUI {
    constructor() { super(); }
    set dataSource(value) {
        if (value) {
            this.txt_name.text = value.nick_name;
            this.txt_position.text = value.city == null ? "火星" : value.city;
            this.imgHead.skin = value.avatar_url;
            this.txt_score.text = value.week_output;
        }
    }
}
exports.default = RankItem;

},{"../../../ui/layaMaxUI":83}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const HttpMgr_1 = require("../../../core_wq/net/HttpMgr");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
const PathConfig_1 = require("../../../core_wq/config/PathConfig");
/**
 * 排行榜
 */
class RankView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.frameLayer, layaMaxUI_1.ui.moduleView.rank.RankViewUI);
        this.curSelectedIndex = -1;
        this.isWorldRanking = false;
    }
    initUI() {
        super.initUI();
        this.ui.lists.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this.initWorldRank();
    }
    /** 初始化世界榜 */
    initWorldRank() {
        HttpMgr_1.default.Ins.requestWorldRankingData((data) => {
            this._worldRankData = data;
            if (this._worldRankData) {
                this.updateRankList(this._worldRankData);
            }
            this.showMyWorldRank();
        });
    }
    /** 显示我的世界榜排名 */
    showMyWorldRank() {
        HttpMgr_1.default.Ins.requestMyWorldRankData((rankNum) => {
            if (rankNum) {
                this.ui.txt_myRank.text = rankNum + "";
            }
        });
    }
    /** 初始化收益排行榜 */
    initIncomeRank() {
        HttpMgr_1.default.Ins.requestIncomeRankingData((data) => {
            this._incomeRankData = data;
            if (this._incomeRankData) {
                if (this._incomeRankData && this._incomeRankData.length > 0) {
                    this._incomeRankData.forEach(element => {
                        let asset = MathUtil_1.default.parseStringNum(element.week_output);
                        if (asset < 0)
                            element.week_output = 0;
                    });
                }
                this.updateRankList(this._incomeRankData);
            }
            this.showMyIncomeRank();
        });
    }
    /** 显示我的收益榜排名 */
    showMyIncomeRank() {
        HttpMgr_1.default.Ins.requestMyIncomeRankData((rankNum) => {
            if (rankNum) {
                this.ui.txt_myRank.text = rankNum + "";
            }
        });
    }
    updateRankList(rankData) {
        this.ui.txt_noRank.visible = true;
        this.ui.lists.visible = false;
        this.ui.imgMyRank.visible = false;
        if (rankData && rankData.length > 0) {
            this.ui.txt_noRank.visible = false;
            this.ui.lists.visible = true;
            this.ui.imgMyRank.visible = true;
            this.ui.lists.array = rankData;
        }
    }
    addEvents() {
        this.ui.tab_rank.on(Laya.Event.CLICK, this, this.onRankTab);
    }
    removeEvents() {
        this.ui.tab_rank.off(Laya.Event.CLICK, this, this.onRankTab);
    }
    /** tab选择 0世界榜/1收益榜 */
    onRankTab() {
        if (this.curSelectedIndex == this.ui.tab_rank.selectedIndex)
            return;
        this.curSelectedIndex = this.ui.tab_rank.selectedIndex;
        this.isWorldRanking = (0 == this.ui.tab_rank.selectedIndex);
        if (this.isWorldRanking) { //世界榜
            this.ui.lists.height = 465;
            this.ui.lists.y = 454;
            this._worldRankData != null ? this.updateRankList(this._worldRankData) : this.initWorldRank();
        }
        else { //收益榜
            this.ui.lists.height = 735;
            this.ui.lists.y = 185;
            this._incomeRankData != null ? this.updateRankList(this._incomeRankData) : this.initIncomeRank();
        }
    }
    onListRender(cell, index) {
        if (index > this.ui.lists.array.length)
            return;
        let item = cell.getChildByName("item");
        if (item) {
            item.dataSource = this.ui.lists.array[index];
            item.box_title.visible = this.isWorldRanking;
            item.box_price.visible = !this.isWorldRanking;
            item.imgRank.visible = index < 3;
            if (item.imgRank.visible) {
                item.imgRank.skin = PathConfig_1.default.RANK_PATH.replace("{0}", (index + 1) + "");
            }
            else {
                item.txt_rank.text = (index + 1) + "";
            }
        }
    }
}
exports.default = RankView;

},{"../../../core_wq/config/PathConfig":5,"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/net/HttpMgr":30,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/view/base/BaseView":51,"../../../ui/layaMaxUI":83}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const GlobalData_1 = require("../../../core_wq/db/GlobalData");
const PathConfig_1 = require("../../../core_wq/config/PathConfig");
const HallControl_1 = require("../../hall/HallControl");
const ShareMgr_1 = require("../../../core_wq/msg/ShareMgr");
const MathUtil_1 = require("../../../core_wq/utils/MathUtil");
const PlayerMgr_1 = require("../../../core_wq/player/PlayerMgr");
const MsgMgr_1 = require("../../../core_wq/msg/MsgMgr");
const StorageUtil_1 = require("../../../core_wq/utils/StorageUtil");
const ViewMgr_1 = require("../../../core_wq/view/ViewMgr");
const ViewConst_1 = require("../../../core_wq/view/const/ViewConst");
class ShopItem extends layaMaxUI_1.ui.moduleView.shop.ShopItemUI {
    constructor() {
        super();
        this._firstLockId = 0;
        this._buyPrice = 0;
    }
    set dataSource(value) {
        if (value) {
            this._config = value;
            this.init();
            this.addEvents();
        }
    }
    init() {
        this._vo = GlobalData_1.default.getData(GlobalData_1.default.HeroVO, this._config.id);
        if (this._vo) {
            this.imgIcon.skin = PathConfig_1.default.HEAD_PATH + this._vo.imgUrl;
            if (HallControl_1.default.Ins.Model.heroLevel < this._config.id) {
                this.imgIcon.gray = true;
                this.boxName.visible = false;
            }
            else {
                this.imgIcon.gray = false;
                this.boxName.visible = true;
                this.txt_level.text = this._config.id + "";
                let strNewName = '';
                for (var index = 0; index < this._config.name.length; index++) {
                    var element = this._config.name[index];
                    if (element) {
                        strNewName += element + '\n';
                    }
                }
                this.txt_name.text = strNewName;
            }
            this.btn_buyLock.visible = HallControl_1.default.Ins.Model.heroLevel < this._config.unlockNeedId;
            this.btn_buy.visible = !this.btn_buyLock.visible;
            if (this.btn_buy.visible && HallControl_1.default.Ins.Model.heroLevel < this._config.unlockNeedId && this._firstLockId < 1) {
                this._firstLockId = this._config.unlockNeedId;
            }
            if (this._firstLockId > 0) {
                this.btn_buyDiamond.visible = this._firstLockId == this._config.unlockNeedId;
                if (this.btn_buyDiamond.visible) {
                    this.updateAdvBtn();
                }
            }
            else {
                this.btn_buyDiamond.visible = false;
            }
            this.updateBuyPrice();
            this.updateLockHeroBtn();
        }
    }
    updateBuyPrice() {
        if (this.btn_buy.visible) {
            this._buyPrice = HallControl_1.default.Ins.Model.getHeroBuyPrice(this._config.buyPrice, HallControl_1.default.Ins.Model.queryBuyHeroRecord(this._config.id));
            this.txt_price.text = MathUtil_1.default.unitConversion(this._buyPrice);
        }
    }
    addEvents() {
        this.btn_buy.on(Laya.Event.CLICK, this, this.onBuyHero);
        this.btn_adv.on(Laya.Event.CLICK, this, this.onLookAdv);
        this.btn_buyDiamond.on(Laya.Event.CLICK, this, this.onBuyDiamondHero);
    }
    removeEvents() {
        this.btn_buy.off(Laya.Event.CLICK, this, this.onBuyHero);
        this.btn_adv.off(Laya.Event.CLICK, this, this.onLookAdv);
        this.btn_buyDiamond.off(Laya.Event.CLICK, this, this.onBuyDiamondHero);
    }
    /** 购买英雄 */
    onBuyHero() {
        if (PlayerMgr_1.default.Ins.Info.userGold >= this._buyPrice) {
            HallControl_1.default.Ins.buyHero(this._config);
            this.updateBuyPrice();
        }
        else {
            MsgMgr_1.default.Ins.showMsg("主人,铜钱不够喔~快去做任务吧...");
        }
    }
    /** 看视频 */
    onLookAdv() {
        ShareMgr_1.default.Ins.showShareOrAdv(() => {
            let hero = HallControl_1.default.Ins.createHero(this._config.id, true);
            if (hero == null) {
                StorageUtil_1.default.saveHeroStore(this._config.id);
                MsgMgr_1.default.Ins.showMsg("主人,武将已打包到箱子里了哦~记得点击箱子喲!");
            }
            this.updateAdvBtn();
        }, 11, false, true);
    }
    /** 钻石购买英雄 */
    onBuyDiamondHero() {
        ViewMgr_1.default.Ins.open(ViewConst_1.default.DiamondBuyView, null, { type: "hero", value: this._config.id });
    }
    /** 未解锁按钮处理 */
    updateLockHeroBtn() {
        if (!this.btn_buyLock.visible)
            return;
        let lockConfig = GlobalData_1.default.getData(GlobalData_1.default.HeroVO, this._config.unlockNeedId);
        if (lockConfig) {
            this.imgHero.skin = PathConfig_1.default.HEAD_PATH + lockConfig.imgUrl;
            // if (!this.imgHero.filters) {
            //     this.imgHero.filters = ColorUtil.createColorFilter(2);
            // }
            // this.imgHero.alpha = 0.6;
            this.txt_unlockLevel.text = this._config.unlockNeedId + "";
            if (this._config.unlockNeedId >= 1000) {
                this.txt_unlockLevel.text = "?";
            }
        }
    }
    updateAdvBtn() {
        if (ShareMgr_1.default.Ins.getAdTimes(11) < 1 && ShareMgr_1.default.Ins.getShareTimes(11) < 1) {
            this.btn_adv.visible = false;
        }
        else {
            if (ShareMgr_1.default.Ins.isAdStage(11)) {
                this.btn_adv.skin = "images/shop/shop_free_video.png";
            }
            else {
                this.btn_adv.skin = "images/shop/shop_free_share.png";
            }
        }
    }
}
exports.default = ShopItem;

},{"../../../core_wq/config/PathConfig":5,"../../../core_wq/db/GlobalData":7,"../../../core_wq/msg/MsgMgr":25,"../../../core_wq/msg/ShareMgr":29,"../../../core_wq/player/PlayerMgr":32,"../../../core_wq/utils/MathUtil":43,"../../../core_wq/utils/StorageUtil":46,"../../../core_wq/view/ViewMgr":49,"../../../core_wq/view/const/ViewConst":52,"../../../ui/layaMaxUI":83,"../../hall/HallControl":62}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const GlobalData_1 = require("../../../core_wq/db/GlobalData");
const ViewMgr_1 = require("../../../core_wq/view/ViewMgr");
const ViewConst_1 = require("../../../core_wq/view/const/ViewConst");
/**
 * 商店界面
 */
class ShopView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.frameLayer, layaMaxUI_1.ui.moduleView.shop.ShopViewUI);
        this._curBuyIndex = 0;
        this.setResources(["shop"]);
    }
    //初始化
    initUI() {
        super.initUI();
        let listDatas = GlobalData_1.default.getAllValue(GlobalData_1.default.HeroConfigVO);
        if (listDatas) {
            this.ui.lists.vScrollBarSkin = "";
            this.ui.lists.array = listDatas;
            this.ui.lists.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
            this.frameOnce(5, this, () => {
                if (this._curBuyIndex > 0) {
                    this.ui.lists.scrollTo(this._curBuyIndex);
                }
            });
        }
    }
    /** 添加监听事件 */
    addEvents() {
        this.ui.btn_close.on(Laya.Event.CLICK, this, this.onCloseHandler);
    }
    /** 移除监听事件 */
    removeEvents() {
        this.ui.btn_close.off(Laya.Event.CLICK, this, this.onCloseHandler);
    }
    onListRender(cell, index) {
        if (index > this.ui.lists.array.length) {
            return;
        }
        let item = cell.getChildByName("shopItem");
        if (item) {
            item.dataSource = this.ui.lists.array[index];
            if (item.btn_buy.visible && index < this.ui.lists.array.length - 3) {
                this._curBuyIndex = index - 2;
            }
        }
    }
    onCloseHandler() {
        ViewMgr_1.default.Ins.close(ViewConst_1.default.ShopView);
    }
}
exports.default = ShopView;

},{"../../../core_wq/db/GlobalData":7,"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/view/ViewMgr":49,"../../../core_wq/view/base/BaseView":51,"../../../core_wq/view/const/ViewConst":52,"../../../ui/layaMaxUI":83}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const HttpMgr_1 = require("../../../core_wq/net/HttpMgr");
const MsgMgr_1 = require("../../../core_wq/msg/MsgMgr");
class TaskItem extends layaMaxUI_1.ui.moduleView.task.TaskItemUI {
    constructor() { super(); }
    set dataSource(value) {
        this._info = value;
        if (this._info) {
            let finishNum = this._info.task_num || 0;
            if (finishNum > this._info.num) {
                finishNum = this._info.num;
            }
            this.txt_title.text = this._info.title + "(" + finishNum + "/" + this._info.num + ")";
            this.txt_diamond.text = "+" + this._info.reward;
            this.btn_get.visible = false;
            if (this._info.task_status > 0) {
                if (this._info.task_status > 1) { //已领取
                    this.btn_get.visible = false;
                }
                else {
                    this.btn_get.disabled = false;
                }
            }
            else {
                this.btn_get.disabled = true;
            }
            this.addEvents();
        }
    }
    addEvents() {
        this.btn_get.on(Laya.Event.CLICK, this, this.onGetReward);
        this.btn_go.on(Laya.Event.CLICK, this, this.onGotoView);
    }
    onGetReward() {
        HttpMgr_1.default.Ins.requestTaskPrize(this._info.id, (_res) => {
            if (_res) {
                this._info.status = 2;
                this.btn_get.visible = false;
                HttpMgr_1.default.Ins.requestDiamondData();
                MsgMgr_1.default.Ins.showMsg("任务奖励领取成功!");
            }
        });
    }
    onGotoView() {
    }
}
exports.default = TaskItem;

},{"../../../core_wq/msg/MsgMgr":25,"../../../core_wq/net/HttpMgr":30,"../../../ui/layaMaxUI":83}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const BaseView_1 = require("../../../core_wq/view/base/BaseView");
const LayerMgr_1 = require("../../../core_wq/layer/LayerMgr");
const layaMaxUI_1 = require("../../../ui/layaMaxUI");
const HttpMgr_1 = require("../../../core_wq/net/HttpMgr");
/**
 * 任务界面
 */
class TaskView extends BaseView_1.default {
    constructor() {
        super(LayerMgr_1.default.Ins.frameLayer, layaMaxUI_1.ui.moduleView.task.TaskViewUI);
        this.setResources(["task"]);
    }
    initUI() {
        super.initUI();
        this.ui.txt_noTask.visible = true;
        this.ui.lists.visible = false;
        HttpMgr_1.default.Ins.requestTaskInfo((data) => {
            if (data) {
                this.ui.txt_noTask.visible = false;
                this.ui.lists.array = data;
                this.ui.lists.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
                this.ui.lists.visible = true;
            }
        });
    }
    onListRender(cell, index) {
        if (index > this.ui.lists.array.length) {
            return;
        }
        let item = cell.getChildByName("item");
        if (item) {
            item.dataSource = this.ui.lists.array[index];
        }
    }
}
exports.default = TaskView;

},{"../../../core_wq/layer/LayerMgr":21,"../../../core_wq/net/HttpMgr":30,"../../../core_wq/view/base/BaseView":51,"../../../ui/layaMaxUI":83}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var moduleView;
    (function (moduleView) {
        var common;
        (function (common) {
            class DiamondBuyViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/common/DiamondBuyView");
                }
            }
            common.DiamondBuyViewUI = DiamondBuyViewUI;
            REG("ui.moduleView.common.DiamondBuyViewUI", DiamondBuyViewUI);
            class GoldNotEnoughViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/common/GoldNotEnoughView");
                }
            }
            common.GoldNotEnoughViewUI = GoldNotEnoughViewUI;
            REG("ui.moduleView.common.GoldNotEnoughViewUI", GoldNotEnoughViewUI);
            class LevelRewardViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/common/LevelRewardView");
                }
            }
            common.LevelRewardViewUI = LevelRewardViewUI;
            REG("ui.moduleView.common.LevelRewardViewUI", LevelRewardViewUI);
            class OffLineRewardViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/common/OffLineRewardView");
                }
            }
            common.OffLineRewardViewUI = OffLineRewardViewUI;
            REG("ui.moduleView.common.OffLineRewardViewUI", OffLineRewardViewUI);
        })(common = moduleView.common || (moduleView.common = {}));
    })(moduleView = ui.moduleView || (ui.moduleView = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var moduleView;
    (function (moduleView) {
        var daySign;
        (function (daySign) {
            class DaySignItemUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/daySign/DaySignItem");
                }
            }
            daySign.DaySignItemUI = DaySignItemUI;
            REG("ui.moduleView.daySign.DaySignItemUI", DaySignItemUI);
            class DaySignViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/daySign/DaySignView");
                }
            }
            daySign.DaySignViewUI = DaySignViewUI;
            REG("ui.moduleView.daySign.DaySignViewUI", DaySignViewUI);
        })(daySign = moduleView.daySign || (moduleView.daySign = {}));
    })(moduleView = ui.moduleView || (ui.moduleView = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var moduleView;
    (function (moduleView) {
        var follow;
        (function (follow) {
            class FollowViewUI extends Laya.Scene {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/follow/FollowView");
                }
            }
            follow.FollowViewUI = FollowViewUI;
            REG("ui.moduleView.follow.FollowViewUI", FollowViewUI);
        })(follow = moduleView.follow || (moduleView.follow = {}));
    })(moduleView = ui.moduleView || (ui.moduleView = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var moduleView;
    (function (moduleView) {
        var guide;
        (function (guide) {
            class GuideSpeakViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/guide/GuideSpeakView");
                }
            }
            guide.GuideSpeakViewUI = GuideSpeakViewUI;
            REG("ui.moduleView.guide.GuideSpeakViewUI", GuideSpeakViewUI);
        })(guide = moduleView.guide || (moduleView.guide = {}));
    })(moduleView = ui.moduleView || (ui.moduleView = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var moduleView;
    (function (moduleView) {
        var hall;
        (function (hall) {
            class CurrencyViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/hall/CurrencyView");
                }
            }
            hall.CurrencyViewUI = CurrencyViewUI;
            REG("ui.moduleView.hall.CurrencyViewUI", CurrencyViewUI);
            class HallSceneUI extends Laya.Scene {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/hall/HallScene");
                }
            }
            hall.HallSceneUI = HallSceneUI;
            REG("ui.moduleView.hall.HallSceneUI", HallSceneUI);
            class HeroTipsUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/hall/HeroTips");
                }
            }
            hall.HeroTipsUI = HeroTipsUI;
            REG("ui.moduleView.hall.HeroTipsUI", HeroTipsUI);
            class NewHeroViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/hall/NewHeroView");
                }
            }
            hall.NewHeroViewUI = NewHeroViewUI;
            REG("ui.moduleView.hall.NewHeroViewUI", NewHeroViewUI);
            class UserInfoViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/hall/UserInfoView");
                }
            }
            hall.UserInfoViewUI = UserInfoViewUI;
            REG("ui.moduleView.hall.UserInfoViewUI", UserInfoViewUI);
        })(hall = moduleView.hall || (moduleView.hall = {}));
    })(moduleView = ui.moduleView || (ui.moduleView = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var moduleView;
    (function (moduleView) {
        var hall;
        (function (hall) {
            var item;
            (function (item) {
                class HeadItemUI extends Laya.View {
                    constructor() { super(); }
                    createChildren() {
                        super.createChildren();
                        this.loadScene("moduleView/hall/item/HeadItem");
                    }
                }
                item.HeadItemUI = HeadItemUI;
                REG("ui.moduleView.hall.item.HeadItemUI", HeadItemUI);
                class SystemBtnUI extends Laya.View {
                    constructor() { super(); }
                    createChildren() {
                        super.createChildren();
                        this.loadScene("moduleView/hall/item/SystemBtn");
                    }
                }
                item.SystemBtnUI = SystemBtnUI;
                REG("ui.moduleView.hall.item.SystemBtnUI", SystemBtnUI);
            })(item = hall.item || (hall.item = {}));
        })(hall = moduleView.hall || (moduleView.hall = {}));
    })(moduleView = ui.moduleView || (ui.moduleView = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var moduleView;
    (function (moduleView) {
        var login;
        (function (login) {
            class LoginSceneUI extends Laya.Scene {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/login/LoginScene");
                }
            }
            login.LoginSceneUI = LoginSceneUI;
            REG("ui.moduleView.login.LoginSceneUI", LoginSceneUI);
        })(login = moduleView.login || (moduleView.login = {}));
    })(moduleView = ui.moduleView || (ui.moduleView = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var moduleView;
    (function (moduleView) {
        var luckPrize;
        (function (luckPrize) {
            class LuckPrizeRewardViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/luckPrize/LuckPrizeRewardView");
                }
            }
            luckPrize.LuckPrizeRewardViewUI = LuckPrizeRewardViewUI;
            REG("ui.moduleView.luckPrize.LuckPrizeRewardViewUI", LuckPrizeRewardViewUI);
            class LuckPrizeViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/luckPrize/LuckPrizeView");
                }
            }
            luckPrize.LuckPrizeViewUI = LuckPrizeViewUI;
            REG("ui.moduleView.luckPrize.LuckPrizeViewUI", LuckPrizeViewUI);
        })(luckPrize = moduleView.luckPrize || (moduleView.luckPrize = {}));
    })(moduleView = ui.moduleView || (ui.moduleView = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var moduleView;
    (function (moduleView) {
        var rank;
        (function (rank) {
            class RankItemUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/rank/RankItem");
                }
            }
            rank.RankItemUI = RankItemUI;
            REG("ui.moduleView.rank.RankItemUI", RankItemUI);
            class RankViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/rank/RankView");
                }
            }
            rank.RankViewUI = RankViewUI;
            REG("ui.moduleView.rank.RankViewUI", RankViewUI);
        })(rank = moduleView.rank || (moduleView.rank = {}));
    })(moduleView = ui.moduleView || (ui.moduleView = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var moduleView;
    (function (moduleView) {
        var shop;
        (function (shop) {
            class ShopItemUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/shop/ShopItem");
                }
            }
            shop.ShopItemUI = ShopItemUI;
            REG("ui.moduleView.shop.ShopItemUI", ShopItemUI);
            class ShopViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/shop/ShopView");
                }
            }
            shop.ShopViewUI = ShopViewUI;
            REG("ui.moduleView.shop.ShopViewUI", ShopViewUI);
        })(shop = moduleView.shop || (moduleView.shop = {}));
    })(moduleView = ui.moduleView || (ui.moduleView = {}));
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var moduleView;
    (function (moduleView) {
        var task;
        (function (task) {
            class TaskItemUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/task/TaskItem");
                }
            }
            task.TaskItemUI = TaskItemUI;
            REG("ui.moduleView.task.TaskItemUI", TaskItemUI);
            class TaskViewUI extends Laya.View {
                constructor() { super(); }
                createChildren() {
                    super.createChildren();
                    this.loadScene("moduleView/task/TaskView");
                }
            }
            task.TaskViewUI = TaskViewUI;
            REG("ui.moduleView.task.TaskViewUI", TaskViewUI);
        })(task = moduleView.task || (moduleView.task = {}));
    })(moduleView = ui.moduleView || (ui.moduleView = {}));
})(ui = exports.ui || (exports.ui = {}));

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL0xheWFBaXJJREVfYmV0YS5hcHAvQ29udGVudHMvUmVzb3VyY2VzL2FwcC9ub2RlX21vZHVsZXMvYnJvd3Nlci1wYWNrL19wcmVsdWRlLmpzIiwic3JjL0dhbWVDb25maWcudHMiLCJzcmMvTWFpbi50cyIsInNyYy9jb3JlX3dxL2JvbmUvQm9uZUFuaW0udHMiLCJzcmMvY29yZV93cS9jb25maWcvQXBwQ29uZmlnLnRzIiwic3JjL2NvcmVfd3EvY29uZmlnL1BhdGhDb25maWcudHMiLCJzcmMvY29yZV93cS9jb25maWcvVGltZUNvbmZpZy50cyIsInNyYy9jb3JlX3dxL2RiL0dsb2JhbERhdGEudHMiLCJzcmMvY29yZV93cS9kYi9iYXNlL0NTVlBhcnNlci50cyIsInNyYy9jb3JlX3dxL2RiL3ZvL0d1aWRlVk8udHMiLCJzcmMvY29yZV93cS9kYi92by9IZXJvQ29uZmlnVk8udHMiLCJzcmMvY29yZV93cS9kYi92by9IZXJvVk8udHMiLCJzcmMvY29yZV93cS9kYi92by9MZXZlbFZPLnRzIiwic3JjL2NvcmVfd3EvZGIvdm8vTWFwVk8udHMiLCJzcmMvY29yZV93cS9kYi92by9Tb3VuZFZPLnRzIiwic3JjL2NvcmVfd3EvZGIvdm8vU3lzdGVtVk8udHMiLCJzcmMvY29yZV93cS9lZmZlY3QvSXRlbUV4cGxvZGUudHMiLCJzcmMvY29yZV93cS9ldmVudC9FdmVudFR5cGUudHMiLCJzcmMvY29yZV93cS9ldmVudC9FdmVudHNNZ3IudHMiLCJzcmMvY29yZV93cS9ndWlkZS9HdWlkZU1hc2sudHMiLCJzcmMvY29yZV93cS9ndWlkZS9HdWlkZU1nci50cyIsInNyYy9jb3JlX3dxL2xheWVyL0xheWVyTWdyLnRzIiwic3JjL2NvcmVfd3EvbGF5ZXIvYmFzZS9MYXllci50cyIsInNyYy9jb3JlX3dxL2xheWVyL2Jhc2UvTWFza0xheWVyLnRzIiwic3JjL2NvcmVfd3EvbGF5ZXIvZXZlbnQvTGF5ZXJFdmVudC50cyIsInNyYy9jb3JlX3dxL21zZy9Nc2dNZ3IudHMiLCJzcmMvY29yZV93cS9tc2cvUG9vbE1nci50cyIsInNyYy9jb3JlX3dxL21zZy9SZWRQb2ludE1nci50cyIsInNyYy9jb3JlX3dxL21zZy9TREtNZ3IudHMiLCJzcmMvY29yZV93cS9tc2cvU2hhcmVNZ3IudHMiLCJzcmMvY29yZV93cS9uZXQvSHR0cE1nci50cyIsInNyYy9jb3JlX3dxL25ldC9IdHRwUmVxdWVzdEhlbHBlci50cyIsInNyYy9jb3JlX3dxL3BsYXllci9QbGF5ZXJNZ3IudHMiLCJzcmMvY29yZV93cS9wbGF5ZXIvZGF0YS9QbGF5ZXJJbmZvLnRzIiwic3JjL2NvcmVfd3Evc291bmQvQmFzZVNvdW5kLnRzIiwic3JjL2NvcmVfd3Evc291bmQvU291bmRCRy50cyIsInNyYy9jb3JlX3dxL3NvdW5kL1NvdW5kRWZmZWN0cy50cyIsInNyYy9jb3JlX3dxL3NvdW5kL1NvdW5kTWdyLnRzIiwic3JjL2NvcmVfd3Evc291bmQvU291bmRUeXBlLnRzIiwic3JjL2NvcmVfd3EvdXRpbHMvQWxpZ25VdGlscy50cyIsInNyYy9jb3JlX3dxL3V0aWxzL0F2ZXJhZ2VVdGlscy50cyIsInNyYy9jb3JlX3dxL3V0aWxzL0NvbG9yVXRpbC50cyIsInNyYy9jb3JlX3dxL3V0aWxzL0VmZmVjdFV0aWwudHMiLCJzcmMvY29yZV93cS91dGlscy9NYXRoVXRpbC50cyIsInNyYy9jb3JlX3dxL3V0aWxzL1BvaW50VXRpbHMudHMiLCJzcmMvY29yZV93cS91dGlscy9SZXNVdGlscy50cyIsInNyYy9jb3JlX3dxL3V0aWxzL1N0b3JhZ2VVdGlsLnRzIiwic3JjL2NvcmVfd3EvdXRpbHMvVFNEaWN0aW9uYXJ5LnRzIiwic3JjL2NvcmVfd3EvdXRpbHMvVGltZVV0aWwudHMiLCJzcmMvY29yZV93cS92aWV3L1ZpZXdNZ3IudHMiLCJzcmMvY29yZV93cS92aWV3L1ZpZXdSZWdpc3Rlck1nci50cyIsInNyYy9jb3JlX3dxL3ZpZXcvYmFzZS9CYXNlVmlldy50cyIsInNyYy9jb3JlX3dxL3ZpZXcvY29uc3QvVmlld0NvbnN0LnRzIiwic3JjL21vZHVsZS9jb21tb24vY29tcG9uZW50L1NjYWxlQW5pbVNjcmlwdC50cyIsInNyYy9tb2R1bGUvY29tbW9uL3ZpZXcvRGlhbW9uZEJ1eVZpZXcudHMiLCJzcmMvbW9kdWxlL2NvbW1vbi92aWV3L0dvbGROb3RFbm91Z2hWaWV3LnRzIiwic3JjL21vZHVsZS9jb21tb24vdmlldy9MZXZlbFJld2FyZFZpZXcudHMiLCJzcmMvbW9kdWxlL2NvbW1vbi92aWV3L09mZkxpbmVSZXdhcmRWaWV3LnRzIiwic3JjL21vZHVsZS9kYXlTaWduL3ZpZXcvRGF5U2lnbkl0ZW0udHMiLCJzcmMvbW9kdWxlL2RheVNpZ24vdmlldy9EYXlTaWduVmlldy50cyIsInNyYy9tb2R1bGUvZm9sbG93L3ZpZXcvRm9sbG93Vmlldy50cyIsInNyYy9tb2R1bGUvZ3VpZGUvdmlldy9HdWlkZVNwZWFrVmlldy50cyIsInNyYy9tb2R1bGUvaGFsbC9IYWxsQ29udHJvbC50cyIsInNyYy9tb2R1bGUvaGFsbC9jb25maWcvU3lzdGVtQ29uZmlnLnRzIiwic3JjL21vZHVsZS9oYWxsL2hlcm8vSGVyby50cyIsInNyYy9tb2R1bGUvaGFsbC9oZXJvL2Jhc2UvQmFzZUNoYXJhY3Rlci50cyIsInNyYy9tb2R1bGUvaGFsbC9tb2RlbC9IYWxsTW9kZWwudHMiLCJzcmMvbW9kdWxlL2hhbGwvdmlldy9DdXJyZW5jeVZpZXcudHMiLCJzcmMvbW9kdWxlL2hhbGwvdmlldy9IYWxsU2NlbmUudHMiLCJzcmMvbW9kdWxlL2hhbGwvdmlldy9IZXJvVGlwcy50cyIsInNyYy9tb2R1bGUvaGFsbC92aWV3L05ld0hlcm9WaWV3LnRzIiwic3JjL21vZHVsZS9oYWxsL3ZpZXcvVXNlckluZm9WaWV3LnRzIiwic3JjL21vZHVsZS9oYWxsL3ZpZXcvaXRlbS9IZWFkSXRlbS50cyIsInNyYy9tb2R1bGUvaGFsbC92aWV3L2l0ZW0vU3lzdGVtQnRuLnRzIiwic3JjL21vZHVsZS9sb2FkaW5nL3ZpZXcvU21hbGxMb2FkaW5nLnRzIiwic3JjL21vZHVsZS9sb2dpbi92aWV3L0xvZ2luU2NlbmUudHMiLCJzcmMvbW9kdWxlL2x1Y2tQcml6ZS92aWV3L0x1Y2tQcml6ZVZpZXcudHMiLCJzcmMvbW9kdWxlL3Jhbmsvdmlldy9SYW5rSXRlbS50cyIsInNyYy9tb2R1bGUvcmFuay92aWV3L1JhbmtWaWV3LnRzIiwic3JjL21vZHVsZS9zaG9wL3ZpZXcvU2hvcEl0ZW0udHMiLCJzcmMvbW9kdWxlL3Nob3Avdmlldy9TaG9wVmlldy50cyIsInNyYy9tb2R1bGUvdGFzay92aWV3L1Rhc2tJdGVtLnRzIiwic3JjL21vZHVsZS90YXNrL3ZpZXcvVGFza1ZpZXcudHMiLCJzcmMvdWkvbGF5YU1heFVJLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1ZBLGdHQUFnRztBQUNoRywrRUFBdUU7QUFDdkUsbUVBQTJEO0FBQzNELHVFQUErRDtBQUMvRCw0REFBb0Q7QUFDcEQsa0VBQTBEO0FBQzFELCtEQUF1RDtBQUN2RCxpRUFBeUQ7QUFDekQsK0RBQXVEO0FBQ3ZELDBEQUFrRDtBQUNsRCwwREFBa0Q7QUFDbEQsMERBQWtEO0FBQ2xEOztFQUVFO0FBQ0Y7SUFhSSxnQkFBYyxDQUFDO0lBQ2YsTUFBTSxDQUFDLElBQUk7UUFDUCxJQUFJLEdBQUcsR0FBYSxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQztRQUM3QyxHQUFHLENBQUMsNENBQTRDLEVBQUMseUJBQWUsQ0FBQyxDQUFDO1FBQ2xFLEdBQUcsQ0FBQyxvQ0FBb0MsRUFBQyxxQkFBVyxDQUFDLENBQUM7UUFDdEQsR0FBRyxDQUFDLHFDQUFxQyxFQUFDLHdCQUFjLENBQUMsQ0FBQztRQUMxRCxHQUFHLENBQUMsK0JBQStCLEVBQUMsbUJBQVMsQ0FBQyxDQUFDO1FBQy9DLEdBQUcsQ0FBQyxrQ0FBa0MsRUFBQyxzQkFBWSxDQUFDLENBQUM7UUFDckQsR0FBRyxDQUFDLG1DQUFtQyxF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eEIsU0FBUyxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUM7UUFFNUIsU0FBUyxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztRQUN4QyxVQUFVO1FBQ1YsU0FBUyxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUM7UUFDM0IsVUFBVTtRQUNWLFNBQVMsQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDO1FBQzVCLFFBQVE7UUFDUixTQUFTLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUMxQixRQUFRO1FBQ1IsUUFBUSxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUV4QyxRQUFRLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzdCLFNBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztRQUN2RCxTQUFTLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFFM0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUM1RSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxRQUFtQixFQUFFLEVBQUU7WUFDcEUsUUFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQzFCLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBR00sTUFBTSxLQUFLLEdBQUc7UUFDakIsSUFBSSxNQUFNLENBQUMsU0FBUyxJQUFJLElBQUksRUFBRTtZQUMxQixNQUFNLENBQUMsU0FBUyxHQUFHLElBQUksTUFBTSxFQUFFLENBQUM7U0FDbkM7UUFDRCxPQUFPLE1BQU0sQ0FBQyxTQUFTLENBQUM7SUFDNUIsQ0FBQztDQUNKO0FBL0NELHlCQStDQzs7Ozs7QUNsREQ7SUFJSTtRQUNJLElBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFTSxHQUFHLENBQUMsZUFBb0IsRUFBRSxJQUFhO1FBQzFDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDUCxJQUFJLEdBQUcsZUFBZSxDQUFDLFdBQVcsQ0FBQztTQUN0QztRQUNELElBQUksU0FBUyxHQUFVLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNaLFNBQVMsR0FBRyxFQUFFLENBQUM7WUFDZixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLFNBQVMsQ0FBQztTQUNyQztRQUVELElBQUksU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDdEIsT0FBTyxTQUFTLENBQUMsR0FBRyxFQUFFLENBQUM7U0FDMUI7UUFFRCxPQUFPLElBQUksZUFBZSxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVNLE1BQU0sQ0FBQyxRQUFhLEVBQUUsSUFBYTtRQUN0QyxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ1AsSUFBSSxHQUFHLFFBQVEsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDO1NBQ3pDO1FBQ0QsSUFBSSxTQUFTLEdBQVUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ1osU0FBUyxHQUFHLEVBQUUsQ0FBQztZQUNmLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsU0FBUyxDQUFDO1NBQ3JDO1FBQ0QsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN6QixPQUFPLFFBQVEsQ0FBQztJQUNwQixDQUFDO0lBSU0sTUFBTSxLQUFLLEdBQUc7UUFDakIsSUFBSSxPQUFPLENBQUMsU0FBUyxJQUFJLElBQUksRUFBRTtZQUMzQixPQUFPLENBQUMsU0FBUyxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7U0FDckM7UUFDRCxPQUFPLE9BQU8sQ0FBQyxTQUFTLENBQUM7SUFDN0IsQ0FBQztDQUNKO0FBOUNELDBCQThDQzs7Ozs7QUM5Q0QseUNBQWtDO0FBQ2xDLCtEQUF3RDtBQUN4RCxrREFBMkM7QUFDM0Msa0RBQTJDO0FBQzNDLHdFQUFpRTtBQUVqRTs7R0FFRztBQUNIO0lBRVcsY0FBYztRQUNqQixtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyx1QkFBdUIsRUFBRSxzQkFBWSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUN0RyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyx1QkFBdUIsRUFBRSxzQkFBWSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUN0RyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyx1QkFBdUIsRUFBRSxzQkFBWSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsdUJBQXVCLENBQUMsQ0FBQztRQUNqSCxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyx1QkFBdUIsRUFBRSxzQkFBWSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUM5RyxDQUFDO0lBRUQsZUFBZTtJQUNmLElBQVcsa0JBQWtCO1FBQ3pCLE9BQU8sQ0FBQyxDQUFDLGtCQUFRLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsR0FBRyxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLElBQUksQ0FBQyxJQUFJLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2xNLENBQUM7SUFDRCxhQUFhO0lBQ04sb0JBQW9CO1FBQ3ZCLG1CQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxtQkFBUyxDQUFDLHFCQUFxQixFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFFRCxlQUFlO0lBQ2YsSUFBVyxrQkFBa0I7UUFDekIsT0FBTyxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUM7SUFDbEQsQ0FBQztJQUNELGFBQWE7SUFDTixrQkFBa0I7UUFDckIscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQztRQUMvQyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyxxQkFBcUIsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBRUQsZUFBZTtJQUNmLElBQVcsdUJBQXVCO1FBQzlCLE9BQU8scUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDO0lBQ3ZELENBQUM7SUFDRCxhQUFhO0lBQ04sdUJBQXVCO1FBQzFCLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsR0FBRyxLQUFLLENBQUM7UUFDcEQsbUJBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsMkJBQTJCLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUVELGlCQUFpQjtJQUNqQixJQUFXLGtCQUFrQjtRQUN6QixPQUFPLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQztJQUN2RCxDQUFDO0lBQ0QsYUFBYTtJQUNOLGtCQUFrQjtRQUNyQixxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMscUJBQXFCLEdBQUcsS0FBSyxDQUFDO1FBQ3BELG1CQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxtQkFBUyxDQUFDLHFCQUFxQixFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFFRCxlQUFlO0lBQ2YsSUFBVyxvQkFBb0I7UUFDM0IsT0FBTyxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQUM7SUFDcEQsQ0FBQztJQUNELGFBQWE7SUFDTixvQkFBb0I7UUFDdkIscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGtCQUFrQixHQUFHLEtBQUssQ0FBQztRQUNqRCxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyx1QkFBdUIsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNwRSxDQUFDO0lBR00sTUFBTSxLQUFLLEdBQUc7UUFDakIsSUFBSSxXQUFXLENBQUMsU0FBUyxJQUFJLElBQUksRUFBRTtZQUMvQixXQUFXLENBQUMsU0FBUyxHQUFHLElBQUksV0FBVyxFQUFFLENBQUM7U0FDN0M7UUFDRCxPQUFPLFdBQVcsQ0FBQyxTQUFTLENBQUM7SUFDakMsQ0FBQztDQUNKO0FBakVELDhCQWlFQzs7Ozs7QUMxRUQsNENBQXFDO0FBRXJDLG1EQUE0QztBQUM1QyxnREFBeUM7QUFDekMsa0RBQTJDO0FBQzNDLHFDQUE4QjtBQUM5QixzREFBK0M7QUFDL0MsK0RBQXdEO0FBR3hELFlBQTRCLFNBQVEsSUFBSSxDQUFDLE1BQU07SUFRM0M7UUFBZ0IsS0FBSyxFQUFFLENBQUM7UUFIaEIsdUJBQWtCLEdBQVEsSUFBSSxDQUFDLENBQUMsU0FBUztRQUN6QyxlQUFVLEdBQUcsS0FBSyxDQUFDLENBQUMsY0FBYztJQUVqQixDQUFDO0lBRTFCLFlBQVk7SUFDTCxNQUFNO1FBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUTtZQUFFLE9BQU87UUFDbkMsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2hCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNoQixJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVELFlBQVk7SUFDTCxhQUFhLENBQUMsU0FBaUIsRUFBRSxhQUFxQjtRQUN6RCxJQUFJLFNBQVMsSUFBSSxJQUFJLElBQUksU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDM0MsT0FBTztTQUNWO1FBQ0QsSUFBSSxDQUFDLHVCQUF1QixDQUFDO1lBQ3pCLCtCQUErQjtZQUMvQixLQUFLLEVBQUUsU0FBUztZQUNoQixJQUFJLEVBQUUsYUFBYTtZQUNuQixlQUFlO1lBQ2YsZUFBZTtZQUNmLEtBQUs7WUFDTCx5QkFBeUI7WUFDekIsT0FBTyxDQUFDLEdBQUc7Z0JBQ1AsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDakMsQ0FBQztTQUNKLENBQUMsQ0FBQztRQUNILFdBQVc7UUFDWCxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUVELGlCQUFpQjtJQUNWLFlBQVksQ0FBQyxTQUFrQixLQUFLLEVBQUUsV0FBbUIsQ0FBQztRQUM3RCxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDakMsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLElBQUksTUFBTSxJQUFJLEtBQUssRUFBRTtZQUMxQyxPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDckIsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDO1lBQ2pDLFFBQVEsRUFBRSx5QkFBeUI7WUFDbkMsR0FBRyxFQUFFLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQztTQUN6QixDQUFDLENBQUM7UUFDSCxJQUFJLFFBQVEsRUFBRTtZQUNWLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNuQjtRQUNELElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1FBQ3pCLE9BQU8sUUFBUSxDQUFDO0lBQ3BCLENBQUM7SUFFTSxhQUFhLENBQUMsVUFBbUIsS0FBSztRQUN6QyxJQUFJLE9BQU8sRUFBRTtZQUNULElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7U0FDaEM7UUFDRCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDZixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDeEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7U0FDeEI7SUFDTCxDQUFDO0lBRUQsYUFBYTtJQUNOLFdBQVcsQ0FBQyxTQUFjLEVBQUUsZ0JBQXFCLElBQUksRUFBRSxnQkFBeUIsSUFBSTtRQUN2RixJQUFJLElBQUksQ0FBQyxPQUFPO1lBQUUsT0FBTztRQUN6QixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsdUJBQXVCLENBQUMsRUFBRSxRQUFRLEVBQUUseUJBQXlCLEVBQUUsQ0FBQyxDQUFDO1FBQ3BGLElBQUksT0FBTyxFQUFFO1lBQ1QsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7WUFDdkIsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztZQUMxQyxJQUFJLGFBQWEsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFFO2dCQUN4QixnQkFBZ0I7Z0JBQ2hCLG9DQUFvQztnQkFDcEMsSUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLE9BQU8sSUFBSSxHQUFHLEtBQUssU0FBUyxFQUFFO29CQUN6QyxrQkFBa0I7aUJBQ3JCO3FCQUNJO29CQUNELGlCQUFpQjtpQkFDcEI7Z0JBQ0QsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQztnQkFDOUIsU0FBUyxJQUFJLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFFNUIsT0FBTyxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQztnQkFDaEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7WUFDeEIsQ0FBQyxDQUFBO1lBQ0QsT0FBTyxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUMvQixJQUFJLFdBQVcsR0FBRyxDQUFDLEdBQUcsRUFBRSxFQUFFO2dCQUN0QixhQUFhLElBQUksYUFBYSxFQUFFLENBQUM7WUFDckMsQ0FBQyxDQUFDO1lBQ0YsT0FBTyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUM3QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDO1NBQ2hDO0lBQ0wsQ0FBQztJQUVNLG9CQUFvQjtRQUN2QixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLGtCQUFrQixFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUN6RCxDQUFDO0lBRUQsWUFBWTtJQUNMLGFBQWEsQ0FBQyxJQUFJO1FBQ3JCLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUVELGdCQUFnQjtJQUNULFdBQVcsQ0FBQyxPQUFZLEVBQUUsV0FBcUIsSUFBSSxFQUFFLFdBQW9CLEtBQUs7UUFDakYsSUFBSSxLQUFLLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDM0QsSUFBSSxLQUFLLElBQUksUUFBUSxJQUFJLEtBQUssRUFBRTtZQUM1QixRQUFRLElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQy9CO2FBQU07WUFDSCxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFO2dCQUNsQyxRQUFRLElBQUksUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ2hDLENBQUMsQ0FBQyxDQUFBO1NBQ0w7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBRUQsV0FBVztJQUNKLE9BQU8sQ0FBQyxjQUF3QjtRQUNuQyxFQUFFLENBQUMsVUFBVSxDQUFDO1lBQ1YsT0FBTyxFQUFFLENBQUMsTUFBZ0MsRUFBRSxFQUFFO2dCQUMxQyxJQUFJLE1BQU0sQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxFQUFFLE1BQU07b0JBQzlDLGNBQWMsSUFBSSxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ3BDLEVBQUUsQ0FBQyxXQUFXLENBQUM7d0JBQ1gsZ0JBQWdCO3dCQUNoQixlQUFlLEVBQUUsSUFBSTt3QkFDckIsSUFBSSxFQUFFLE9BQU87d0JBQ2IsT0FBTyxFQUFFLENBQUMsTUFBaUMsRUFBRSxFQUFFOzRCQUMzQyxTQUFTOzRCQUNULElBQUksSUFBSSxDQUFDLGtCQUFrQixFQUFFO2dDQUN6QixJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxFQUFFLENBQUM7Z0NBQ2xDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUM7NkJBQ2xDOzRCQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDOzRCQUNqRCxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUM7NEJBQ2hELGNBQWMsSUFBSSxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7d0JBQ3hDLENBQUM7d0JBQ0QsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7d0JBQ2YsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7cUJBQ3RCLENBQUMsQ0FBQTtpQkFDTDtxQkFBTSxFQUFFLE1BQU07b0JBQ1gsY0FBYyxJQUFJLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDcEMsSUFBSSxJQUFJLENBQUMsa0JBQWtCLEVBQUU7d0JBQ3pCLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQzt3QkFDL0IsT0FBTztxQkFDVjtvQkFDRCxJQUFJLElBQUksQ0FBQyxrQkFBa0IsSUFBSSxJQUFJLEVBQUU7d0JBQ2pDLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQzs0QkFDakMsSUFBSSxFQUFFLE1BQU07NEJBQ1osSUFBSSxFQUFFLEVBQUU7NEJBQ1IsS0FBSyxFQUFFO2dDQUNILElBQUksRUFBRSxDQUFDO2dDQUNQLEdBQUcsRUFBRSxDQUFDO2dDQUNOLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUs7Z0NBQ3ZCLE1BQU0sRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU07Z0NBQ3pCLFVBQVUsRUFBRSxFQUFFO2dDQUNkLFNBQVMsRUFBRSxRQUFRO2dDQUNuQixRQUFRLEVBQUUsRUFBRTtnQ0FDWixZQUFZLEVBQUUsQ0FBQzs2QkFDbEI7eUJBQ0osQ0FBQyxDQUFDO3dCQUNILE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTs0QkFDbEIsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDOzRCQUNkLE1BQU07NEJBQ04sSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQzt3QkFDakMsQ0FBQyxDQUFDLENBQUE7d0JBQ0YsSUFBSSxDQUFDLGtCQUFrQixHQUFHLE1BQU0sQ0FBQztxQkFDcEM7aUJBQ0o7WUFDTCxDQUFDO1lBQ0QsSUFBSSxFQUFFLEdBQUcsRUFBRTtZQUVYLENBQUM7WUFDRCxRQUFRLEVBQUUsR0FBRyxFQUFFO1lBRWYsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxhQUFhO0lBQ04saUJBQWlCO1FBQ3BCLEVBQUUsQ0FBQyxlQUFlLENBQUM7WUFDZjs7ZUFFRztZQUNILFlBQVksRUFBRSxJQUFJO1lBQ2xCLE9BQU8sRUFBRSxDQUFDLE1BQXFDLEVBQUUsRUFBRSxHQUFHLENBQUM7WUFDdkQsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7WUFDZixRQUFRLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztTQUN0QixDQUFDLENBQUE7SUFDTixDQUFDO0lBRU8sYUFBYSxDQUFDLEdBQVcsRUFBRSxXQUFxQixJQUFJO1FBQ3hELElBQUksYUFBYSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLG9CQUFvQixFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNsRSxTQUFTO1FBQ1QsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQ1osSUFBSSxPQUFPLEdBQUcsSUFBSSxHQUFHLGFBQWEsQ0FBQyxLQUFLLENBQUM7UUFDekMsSUFBSSxhQUFhLElBQUksYUFBYSxDQUFDLEtBQUssSUFBSSxhQUFhLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRTtZQUNyRSxJQUFJLE9BQU8sR0FBRyxhQUFhLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQztZQUMxQyxJQUFJLFlBQVksR0FBRyxhQUFhLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQztZQUNwRCxJQUFJLFlBQVksRUFBRTtnQkFDZCxJQUFJLGVBQWUsR0FBRyxZQUFZLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUM5QyxHQUFHLEdBQUcsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQzVCO1lBQ0QsT0FBTyxHQUFHLEVBQUUsR0FBRyxhQUFhLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxHQUFHLEdBQUcsYUFBYSxDQUFDLEtBQUssQ0FBQztTQUMxRTthQUFNLElBQUksYUFBYSxJQUFJLGFBQWEsQ0FBQyxZQUFZLEVBQUU7WUFDcEQsSUFBSSxhQUFhLENBQUMsWUFBWSxDQUFDLFNBQVMsSUFBSSxhQUFhLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUU7Z0JBQ3RGLE9BQU8sR0FBRyxFQUFFLEdBQUcsYUFBYSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsT0FBTyxHQUFHLEdBQUcsR0FBRyxhQUFhLENBQUMsS0FBSyxDQUFDO2FBQzNGO2lCQUFNO2dCQUNILElBQUksYUFBYSxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUU7b0JBQ2xDLE9BQU8sR0FBRyxhQUFhLENBQUMsWUFBWSxDQUFDLEtBQUssR0FBRyxHQUFHLEdBQUcsYUFBYSxDQUFDLEtBQUssQ0FBQztpQkFDMUU7YUFDSjtTQUNKO1FBQ0QsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDZCxFQUFFLENBQUMsS0FBSyxDQUFDO2dCQUNMLE9BQU8sRUFBRSxDQUFDLE1BQTJCLEVBQUUsRUFBRTtvQkFDckMsRUFBRSxDQUFDLE9BQU8sQ0FBQzt3QkFDUCxHQUFHLEVBQUUsR0FBRyxHQUFHLGVBQWU7d0JBQzFCLElBQUksRUFBRTs0QkFDRixJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUk7NEJBQ2pCLE9BQU8sRUFBRSxPQUFPOzRCQUNoQixHQUFHLEVBQUUsR0FBRzt5QkFDWDt3QkFDRCxNQUFNLEVBQUU7NEJBQ0osY0FBYyxFQUFFLGtCQUFrQixDQUFDLE1BQU07eUJBQzVDO3dCQUNELE1BQU0sRUFBRSxNQUFNO3dCQUNkLFFBQVEsRUFBRSxNQUFNO3dCQUNoQixZQUFZLEVBQUUsTUFBTTt3QkFDcEIsT0FBTyxFQUFFLENBQUMsTUFBNkIsRUFBRSxFQUFFOzRCQUN2QyxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxNQUFNLENBQUMsQ0FBQzs0QkFDckMsRUFBRSxDQUFDLFVBQVUsQ0FBQztnQ0FDVixHQUFHLEVBQUUsT0FBTztnQ0FDWixJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLO2dDQUN2QixPQUFPLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztnQ0FDbEIsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7Z0NBQ2YsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7NkJBQ3RCLENBQUMsQ0FBQzs0QkFDSCxRQUFRLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7d0JBQzVDLENBQUM7d0JBQ0QsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7d0JBQ2YsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7cUJBQ3RCLENBQUMsQ0FBQTtnQkFDTixDQUFDO2dCQUNELElBQUksRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO2dCQUNmLFFBQVEsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO2FBQ3RCLENBQUMsQ0FBQTtTQUNMO0lBQ0wsQ0FBQztJQUVELGNBQWM7SUFDUCx1QkFBdUI7UUFDMUIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUTtZQUFFLE9BQU87UUFDbkMsTUFBTSxhQUFhLEdBQUcsRUFBRSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDNUMsSUFBSSxhQUFhLEVBQUU7WUFDZixhQUFhLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxHQUFHO2dCQUN4QyxjQUFjO2dCQUNkLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFBO1lBQzlCLENBQUMsQ0FBQyxDQUFBO1lBQ0YsYUFBYSxDQUFDLGFBQWEsQ0FBQztnQkFDeEIsRUFBRSxDQUFDLFNBQVMsQ0FBQztvQkFDVCxLQUFLLEVBQUUsTUFBTTtvQkFDYixPQUFPLEVBQUUsa0JBQWtCO29CQUMzQjs7dUJBRUc7b0JBQ0gsVUFBVSxFQUFFLElBQUk7b0JBQ2hCOzt1QkFFRztvQkFDSCxVQUFVLEVBQUUsSUFBSTtvQkFDaEI7O3VCQUVHO29CQUNILFdBQVcsRUFBRSxTQUFTO29CQUN0Qjs7dUJBRUc7b0JBQ0gsV0FBVyxFQUFFLElBQUk7b0JBQ2pCOzt1QkFFRztvQkFDSCxZQUFZLEVBQUUsU0FBUztvQkFDdkIsT0FBTyxFQUFFLENBQUMsTUFBK0IsRUFBRSxFQUFFLEdBQUcsQ0FBQztvQkFDakQsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7b0JBQ2YsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7aUJBQ3RCLENBQUMsQ0FBQTtZQUNOLENBQUMsQ0FBQyxDQUFBO1lBQ0YsYUFBYSxDQUFDLGNBQWMsQ0FBQztnQkFDekIsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3JDLENBQUMsQ0FBQyxDQUFBO1NBQ0w7SUFDTCxDQUFDO0lBRU0sUUFBUTtRQUNYLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFZLEVBQUUsRUFBRTtZQUN2QixPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQ3pDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1lBQ3RDLElBQUksQ0FBQyxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUU7Z0JBQ3BCLGtCQUFRLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDM0Isa0JBQVEsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUMvQixrQkFBUSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsbUJBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQzthQUMzQztZQUNELFdBQVc7WUFDWCxxQkFBVyxDQUFDLHVCQUF1QixFQUFFLENBQUM7UUFDMUMsQ0FBQyxDQUFDLENBQUE7SUFDTixDQUFDO0lBRU0sUUFBUTtRQUNYLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFO1lBQ1gsa0JBQVEsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzVCLGtCQUFRLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNoQyxxQkFBVyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3JDLElBQUksQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVELGVBQWU7SUFDUixxQkFBcUI7UUFDeEIsT0FBTztRQUNQLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUN0RyxJQUFJLFVBQVUsR0FBRyxDQUFDO2dCQUNkLEtBQUssRUFBRSxPQUFPO2dCQUNkLE9BQU8sRUFBRSxLQUFLO2FBQ2pCLEVBQUU7Z0JBQ0MsS0FBSyxFQUFFLE1BQU07Z0JBQ2IsT0FBTyxFQUFFLENBQUMsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQzthQUN2RixFQUFFO2dCQUNDLEtBQUssRUFBRSxRQUFRO2dCQUNmLE9BQU8sRUFBRSxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTthQUNoRCxDQUFDLENBQUM7UUFDSCxFQUFFLENBQUMsbUJBQW1CLENBQUM7WUFDbkIsWUFBWSxFQUFFLFVBQVU7WUFDeEIsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyw2QkFBNkIsRUFBRSxHQUFHLENBQUMsQ0FBQTtZQUNuRCxDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLDBCQUEwQixFQUFFLEdBQUcsQ0FBQyxDQUFBO1lBQ2hELENBQUM7U0FDSixDQUFDLENBQUE7SUFDTixDQUFDO0lBRUQsV0FBVztJQUNKLGVBQWU7UUFDbEIsRUFBRSxDQUFDLGVBQWUsQ0FBQyxHQUFHLEVBQUU7WUFDcEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1lBQ2hDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNuQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFTSxTQUFTLENBQUMsS0FBSztRQUNsQixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDakIsT0FBTTtTQUNUO1FBQ0QsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDdkIsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNaLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQzVCLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNSLDZCQUE2QjtRQUM3QixJQUFJLEtBQUssQ0FBQyxZQUFZLEVBQUU7WUFDcEIsRUFBRSxDQUFDLGVBQWUsQ0FBQztnQkFDZixlQUFlLEVBQUUsSUFBSTtnQkFDckIsT0FBTyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLFFBQVEsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO2FBQzNELENBQUMsQ0FBQztTQUNOO2FBQU07WUFDSCxFQUFFLENBQUMsZUFBZSxDQUFDO2dCQUNmLGVBQWUsRUFBRSxLQUFLO2dCQUN0QixPQUFPLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7YUFDM0QsQ0FBQyxDQUFDO1NBQ047UUFDRCxVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ1osRUFBRSxDQUFDLGVBQWUsQ0FBQztnQkFDZixLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUs7Z0JBQ2xCLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUTtnQkFDeEIsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLO2dCQUNsQixPQUFPLEVBQUUsVUFBVSxHQUFHO29CQUNsQixJQUFJLEtBQUssQ0FBQyxZQUFZLEVBQUU7d0JBQ3BCLEVBQUUsQ0FBQyxhQUFhLENBQUM7NEJBQ2IsT0FBTyxFQUFFLENBQUMsTUFBbUMsRUFBRSxFQUFFO2dDQUM3QyxJQUFJLE1BQU0sQ0FBQyxRQUFRLElBQUksU0FBUyxFQUFFO29DQUM5QixTQUFTO29DQUNULEVBQUUsQ0FBQyxZQUFZLENBQUM7d0NBQ1osV0FBVyxFQUFFLEdBQUcsQ0FBQyxZQUFZO3dDQUM3QixPQUFPLEVBQUUsQ0FBQyxNQUFrQyxFQUFFLEVBQUU7NENBQzVDLDJCQUEyQjs0Q0FDM0IsS0FBSyxDQUFDLE9BQU8sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO3dDQUMzQyxDQUFDO3dDQUNELElBQUksRUFBRSxHQUFHLEVBQUU7NENBQ1AsS0FBSyxDQUFDLE9BQU8sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO3dDQUMxQyxDQUFDO3dDQUNELFFBQVEsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDO3FDQUN0QixDQUFDLENBQUM7aUNBQ047Z0NBQ0QsSUFBSSxNQUFNLENBQUMsUUFBUSxJQUFJLEtBQUssRUFBRSxFQUFDLGFBQWE7b0NBQ3hDLElBQUksR0FBRyxDQUFDLFlBQVksSUFBSSxTQUFTLEVBQUU7d0NBQy9CLDhCQUE4Qjt3Q0FDOUIsRUFBRSxDQUFDLFlBQVksQ0FBQzs0Q0FDWixXQUFXLEVBQUUsR0FBRyxDQUFDLFlBQVk7NENBQzdCLE9BQU8sRUFBRSxDQUFDLE1BQWtDLEVBQUUsRUFBRTtnREFDNUMsY0FBYztnREFDZCxLQUFLLENBQUMsT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7NENBQ3hDLENBQUM7NENBQ0QsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7NENBQ2YsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7eUNBQ3RCLENBQUMsQ0FBQztxQ0FDTjt5Q0FBTSxFQUFDLHFCQUFxQjt3Q0FDekIseUJBQXlCO3dDQUN6QixLQUFLLENBQUMsT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7cUNBQ3pDO2lDQUNKOzRCQUNMLENBQUM7NEJBQ0QsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7NEJBQ2YsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7eUJBQ3RCLENBQUMsQ0FBQztxQkFDTjt5QkFBTTt3QkFDSCxLQUFLLENBQUMsT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUE7cUJBQ3RDO2dCQUNMLENBQUM7Z0JBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztvQkFDZixLQUFLLENBQUMsSUFBSSxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7Z0JBQ2pDLENBQUM7Z0JBQ0QsUUFBUSxFQUFFLFVBQVUsR0FBRztvQkFDbkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7b0JBQ3ZCLFVBQVUsQ0FBQyxHQUFHLEVBQUU7d0JBQ1osSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7b0JBQzVCLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQTtnQkFDWCxDQUFDO2FBQ0osQ0FBQyxDQUFBO1FBQ04sQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBO0lBQ1QsQ0FBQztJQUVELGFBQWE7SUFDTCx1QkFBdUIsQ0FBQyxLQUFLO1FBQ2pDLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLFFBQVEsRUFBRSxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQTtRQUNuRSxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBRUQsaUJBQWlCO0lBQ1QsZ0JBQWdCLENBQUMsTUFBTTtRQUMzQixJQUFJLFVBQVUsR0FBRyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUN4QyxJQUFJLE1BQU0sR0FBRyxVQUFVLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUM1QyxJQUFJLE9BQU8sR0FBRyxJQUFJLEdBQUcsTUFBTSxDQUFDO1FBQzVCLElBQUksTUFBTSxDQUFDLEdBQUcsRUFBRTtZQUNaLE9BQU8sR0FBRyxNQUFNLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQztTQUNqQztRQUNELElBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQyxjQUFjLENBQUM7WUFDN0IsUUFBUSxFQUFFLE1BQU0sQ0FBQyxRQUFRO1lBQ3pCLEtBQUssRUFBRTtnQkFDSCxJQUFJLEVBQUUsQ0FBQyxVQUFVLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUM7Z0JBQ3hDLEdBQUcsRUFBRSxPQUFPLEdBQUcsR0FBRztnQkFDbEIsS0FBSyxFQUFFLEdBQUc7Z0JBQ1YsTUFBTSxFQUFFLEdBQUc7YUFDZDtTQUNKLENBQUMsQ0FBQztRQUNILElBQUksUUFBUSxFQUFFO1lBQ1YsSUFBSSxRQUFRLEdBQUcsS0FBSyxDQUFDO1lBQ3JCLFFBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQ3BCLElBQUk7Z0JBQ0osSUFBSSxRQUFRLElBQUksS0FBSyxFQUFFO29CQUNuQixRQUFRLEdBQUcsSUFBSSxDQUFDO29CQUNoQixRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxPQUFPLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztpQkFDN0M7WUFDTCxDQUFDLENBQUMsQ0FBQztTQUNOO1FBQ0QsT0FBTyxRQUFRLENBQUM7SUFDcEIsQ0FBQztJQUVELFlBQVk7SUFDSix1QkFBdUIsQ0FBQyxJQUFJO1FBQ2hDLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsU0FBUztJQUNGLHFCQUFxQixDQUFDLEtBQUs7UUFDOUIsRUFBRSxDQUFDLCtCQUErQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlDLENBQUM7SUFFRCxhQUFhO0lBQ04sc0JBQXNCLENBQUMsT0FBTztRQUNqQyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNkLElBQUksVUFBVSxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1lBQ3hDLElBQUksTUFBTSxHQUFHLFVBQVUsQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1lBQzVDLElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztnQkFDakMsSUFBSSxFQUFFLE1BQU07Z0JBQ1osSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsS0FBSyxFQUFFO29CQUNILElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxHQUFHLE1BQU07b0JBQ3hCLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQyxHQUFHLE1BQU07b0JBQ3ZCLEtBQUssRUFBRSxPQUFPLENBQUMsS0FBSyxHQUFHLE1BQU07b0JBQzdCLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTSxHQUFHLE1BQU07b0JBQy9CLFVBQVUsRUFBRSxFQUFFO29CQUNkLFNBQVMsRUFBRSxRQUFRO29CQUNuQixRQUFRLEVBQUUsRUFBRTtvQkFDWixZQUFZLEVBQUUsQ0FBQztvQkFDZixPQUFPLEVBQUUsR0FBRztpQkFDZjthQUNKLENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQztJQUdNLE1BQU0sS0FBSyxHQUFHO1FBQ2pCLElBQUksTUFBTSxDQUFDLFNBQVMsSUFBSSxJQUFJLEVBQUU7WUFDMUIsTUFBTSxDQUFDLFNBQVMsR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDO1NBQ25DO1FBQ0QsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDO0lBQzVCLENBQUM7Q0FDSjtBQWpnQkQseUJBaWdCQzs7Ozs7QUMzZ0JELCtEQUF3RDtBQUV4RCxnREFBeUM7QUFDekMsNENBQXFDO0FBQ3JDLHFDQUE4QjtBQUM5QixtREFBNEM7QUFDNUMsa0RBQTJDO0FBQzNDLGtEQUEyQztBQUMzQyxxQ0FBOEI7QUFDOUIsbURBQTRDO0FBRTVDLGNBQThCLFNBQVEsSUFBSSxDQUFDLE1BQU07SUFPN0M7UUFDSSxLQUFLLEVBQUUsQ0FBQztRQUxKLHNCQUFpQixHQUFXLENBQUMsQ0FBQyxDQUFDLFFBQVE7UUFDdkMsbUJBQWMsR0FBWSxLQUFLLENBQUMsQ0FBQyxRQUFRO1FBQzFDLG9CQUFlLEdBQVksS0FBSyxDQUFDLENBQUMsUUFBUTtRQUk3QyxJQUFJLENBQUMsTUFBTSxHQUFHLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQztJQUN4QyxDQUFDO0lBRUQsY0FBYztJQUNQLGNBQWMsQ0FBQyxXQUFnQixJQUFJLEVBQUUsT0FBZSxDQUFDLEVBQUUsU0FBa0IsS0FBSyxFQUFFLGVBQXdCLEtBQUs7UUFDaEgsSUFBSSxtQkFBUyxDQUFDLE9BQU8sRUFBRTtZQUNuQixRQUFRLElBQUksUUFBUSxFQUFFLENBQUM7WUFDdkIsT0FBTztTQUNWO1FBQ0QsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ3JCLE9BQU8sQ0FBQyxDQUFDO1NBQ1o7UUFDRCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUMzQixJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRTtZQUNsQyxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztRQUNoQyxDQUFDLENBQUMsQ0FBQTtRQUNGLFVBQVU7UUFDVixJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQzNCLGdCQUFNLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQVMsRUFBRSxFQUFFO2dCQUNqQyxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksS0FBSyxTQUFTLEVBQUU7b0JBQzVDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ3hCLElBQUksS0FBSyxHQUFXLElBQUksQ0FBQztvQkFDekIsSUFBSSxJQUFJLElBQUksRUFBRSxFQUFFO3dCQUNaLEtBQUssR0FBRyxTQUFTLENBQUM7cUJBQ3JCO3lCQUFNLElBQUksSUFBSSxJQUFJLEVBQUUsRUFBRTt3QkFDbkIsS0FBSyxHQUFHLGFBQWEsQ0FBQztxQkFDekI7eUJBQU0sSUFBSSxJQUFJLElBQUksRUFBRSxFQUFFO3dCQUNuQixLQUFLLEdBQUcsYUFBYSxDQUFDO3FCQUN6QjtvQkFDRCxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFDeEMsUUFBUSxJQUFJLFFBQVEsRUFBRSxDQUFDO2lCQUMxQjtZQUNMLENBQUMsRUFBRSxHQUFHLEVBQUU7Z0JBQ0osT0FBTztnQkFDUCxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7Z0JBQy9CLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO2dCQUM1QixJQUFJLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDO1lBQzlELENBQUMsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDdkIsT0FBTyxDQUFDLENBQUM7U0FDWjtRQUNELFFBQVEsSUFBSSxFQUFFO1lBQ1YsS0FBSyxDQUFDLEVBQUcsUUFBUTtnQkFDYixnQkFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFTLEVBQUUsRUFBRTtvQkFDakMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLEtBQUssU0FBUyxFQUFFO3dCQUM1QyxRQUFRLElBQUksUUFBUSxFQUFFLENBQUM7d0JBQ3ZCLGlCQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztxQkFDdEQ7Z0JBQ0wsQ0FBQyxFQUFFLEdBQUcsRUFBRTtvQkFDSixPQUFPO29CQUNQLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztvQkFDL0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7b0JBQzVCLElBQUksQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUM7Z0JBQzNELENBQUMsQ0FBQyxDQUFDO2dCQUNILE1BQU07WUFDVixLQUFLLEVBQUUsRUFBQyxJQUFJO2dCQUNSLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7b0JBQzlCLGdCQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztvQkFDaEMsT0FBTyxDQUFDLENBQUM7aUJBQ1o7Z0JBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQVMsRUFBRSxFQUFFO29CQUN2QixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO29CQUMzQixpQkFBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7b0JBQ3JELFFBQVEsSUFBSSxRQUFRLEVBQUUsQ0FBQztnQkFDM0IsQ0FBQyxFQUFFLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQztnQkFDekIsTUFBTTtZQUNWLEtBQUssRUFBRSxFQUFDLE1BQU07Z0JBQ1YsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRTtvQkFDOUIsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO29CQUNoQyxPQUFPLENBQUMsQ0FBQztpQkFDWjtnQkFDRCxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBUyxFQUFFLEVBQUU7b0JBQ3ZCLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBQzNCLGlCQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxDQUFDO29CQUN6RCxRQUFRLElBQUksUUFBUSxFQUFFLENBQUM7Z0JBQzNCLENBQUMsRUFBRSxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUM7Z0JBQ3pCLE1BQU07WUFDVixLQUFLLEVBQUUsRUFBQyxLQUFLO2dCQUNULElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7b0JBQzlCLGdCQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztvQkFDaEMsT0FBTyxDQUFDLENBQUM7aUJBQ1o7Z0JBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQVMsRUFBRSxFQUFFO29CQUN2QixnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7b0JBQzVCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFO3dCQUM5QixRQUFRLElBQUksUUFBUSxFQUFFLENBQUM7b0JBQzNCLENBQUMsQ0FBQyxDQUFDO29CQUVILElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7b0JBQzNCLGlCQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLGdCQUFnQixFQUFFLElBQUksQ0FBQyxDQUFDO2dCQUM3RCxDQUFDLEVBQUUsTUFBTSxFQUFFLFlBQVksQ0FBQyxDQUFDO2dCQUN6QixNQUFNO1lBQ1YsU0FBUSxRQUFRO2dCQUNaLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFTLEVBQUUsRUFBRTtvQkFDdkIsUUFBUSxJQUFJLFFBQVEsRUFBRSxDQUFDO29CQUN2QixpQkFBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQzFELENBQUMsRUFBRSxNQUFNLEVBQUUsWUFBWSxDQUFDLENBQUM7Z0JBQ3pCLE1BQU07U0FDYjtRQUNELE9BQU8sQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVELGdCQUFnQjtJQUNULFVBQVUsQ0FBQyxJQUFZO1FBQzFCLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRTtZQUNuRSxJQUFJLElBQUksSUFBSSxFQUFFLEVBQUU7Z0JBQ1osT0FBTyxrQkFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQzthQUNsRTtpQkFBTSxJQUFJLElBQUksSUFBSSxFQUFFLEVBQUU7Z0JBQ25CLE9BQU8sa0JBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLENBQUM7YUFDdEU7aUJBQU0sSUFBSSxJQUFJLElBQUksRUFBRSxFQUFFO2dCQUNuQixPQUFPLGtCQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLGVBQWUsQ0FBQyxDQUFDO2FBQ3RFO1NBQ0o7UUFDRCxPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7SUFFRCxhQUFhO0lBQ04sYUFBYSxDQUFDLElBQVk7UUFDN0IsSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFO1lBQ3pDLElBQUksSUFBSSxJQUFJLEVBQUUsRUFBRTtnQkFDWixPQUFPLGtCQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxDQUFDO2FBQ3JFO2lCQUFNLElBQUksSUFBSSxJQUFJLEVBQUUsRUFBRTtnQkFDbkIsT0FBTyxrQkFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO2FBQ3pFO2lCQUFNLElBQUksSUFBSSxJQUFJLEVBQUUsRUFBRTtnQkFDbkIsT0FBTyxrQkFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO2FBQ3pFO1NBQ0o7UUFDRCxPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7SUFFRCxrQkFBa0I7SUFDWCxZQUFZLENBQUMsSUFBWTtRQUM1QixJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUU7WUFDekMsSUFBSSxJQUFJLElBQUksRUFBRSxFQUFFO2dCQUNaLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO2FBQzFDO2lCQUFNLElBQUksSUFBSSxJQUFJLEVBQUUsRUFBRTtnQkFDbkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsZUFBZSxFQUFFLENBQUM7YUFDOUM7aUJBQU0sSUFBSSxJQUFJLElBQUksRUFBRSxFQUFFO2dCQUNuQixJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxlQUFlLEVBQUUsQ0FBQzthQUM5QztpQkFBTTtnQkFDSCxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsQ0FBQzthQUNyQztTQUNKO1FBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2pFLENBQUM7SUFFRCxnQkFBZ0I7SUFDVCxlQUFlLENBQUMsSUFBWTtRQUMvQixJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFO1lBQzFCLElBQUksSUFBSSxJQUFJLEVBQUUsRUFBRTtnQkFDWixJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUUsQ0FBQzthQUM3QztpQkFBTSxJQUFJLElBQUksSUFBSSxFQUFFLEVBQUU7Z0JBQ25CLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLGtCQUFrQixFQUFFLENBQUM7YUFDakQ7aUJBQU0sSUFBSSxJQUFJLElBQUksRUFBRSxFQUFFO2dCQUNuQixJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO2FBQ2pEO1NBQ0o7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUVELGNBQWM7SUFDUCxTQUFTLENBQUMsSUFBWTtRQUN6QixPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBR0QsTUFBTTtJQUNFLE9BQU8sQ0FBQyxXQUFnQixJQUFJLEVBQUUsU0FBa0IsS0FBSyxFQUFFLGVBQXdCLEtBQUs7UUFDeEYsaUJBQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUNyQyxJQUFJLENBQUMsSUFBSSxFQUFFO2dCQUNQLGdCQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDaEMsT0FBTzthQUNWO1lBQ0QsSUFBSSxRQUFRLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQzdFLElBQUksU0FBUyxHQUFXLElBQUksQ0FBQztZQUM3QixJQUFJLE1BQU0sRUFBRTtnQkFDUixTQUFTLEdBQUcsU0FBUyxHQUFHLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsV0FBVyxHQUFHLFFBQVEsQ0FBQyxFQUFFLEdBQUcsaUJBQWlCLENBQUM7YUFDckc7aUJBQU07Z0JBQ0gsU0FBUyxHQUFHLFNBQVMsR0FBRyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLFdBQVcsR0FBRyxRQUFRLENBQUMsRUFBRSxHQUFHLGtCQUFrQixDQUFDO2FBQ3RHO1lBQ0QsTUFBTTtZQUNOLElBQUksT0FBTyxHQUFXLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQztZQUNwRCxJQUFJLFdBQVcsR0FBWSxJQUFJLENBQUM7WUFDaEMsbUJBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLG1CQUFTLENBQUMsY0FBYyxFQUFFLENBQUMsSUFBUyxFQUFFLEVBQUU7Z0JBQzlELElBQUksUUFBUSxHQUFXLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQztnQkFDckQsSUFBSSxTQUFTLEdBQUcsUUFBUSxHQUFHLE9BQU8sQ0FBQztnQkFDbkMsSUFBSSxXQUFXLElBQUksU0FBUyxHQUFHLEdBQUcsRUFBRTtvQkFDaEMsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLEVBQUU7d0JBQ25ELElBQUksQ0FBQyxpQkFBaUIsR0FBRyxDQUFDLENBQUM7d0JBQzNCLFFBQVEsSUFBSSxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO3dCQUNsQyxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7cUJBQy9DO3lCQUFNO3dCQUNILElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO3dCQUN6QixnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUM7cUJBQ3RDO2lCQUNKO1lBQ0wsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBRVQsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDO2dCQUNqQixLQUFLLEVBQUUsUUFBUSxDQUFDLE9BQU87Z0JBQ3ZCLFFBQVEsRUFBRSxRQUFRLENBQUMsUUFBUTtnQkFDM0IsS0FBSyxFQUFFLFNBQVM7Z0JBQ2hCLFlBQVksRUFBRSxZQUFZO2dCQUMxQixPQUFPLEVBQUUsVUFBVSxJQUFJO2dCQUN2QixDQUFDO2dCQUNELElBQUksRUFBRTtvQkFDRixPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO2dCQUMzQixDQUFDO2FBQ0osQ0FBQyxDQUFBO1FBQ04sQ0FBQyxDQUFDLENBQUE7SUFDTixDQUFDO0lBRUQsSUFBVyxhQUFhO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQztJQUNoQyxDQUFDO0lBR00sTUFBTSxLQUFLLEdBQUc7UUFDakIsSUFBSSxRQUFRLENBQUMsU0FBUyxJQUFJLElBQUksRUFBRTtZQUM1QixRQUFRLENBQUMsU0FBUyxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7U0FDdkM7UUFDRCxPQUFPLFFBQVEsQ0FBQyxTQUFTLENBQUM7SUFDOUIsQ0FBQztDQUNKO0FBdk9ELDJCQXVPQzs7Ozs7QUNsUEQscURBQThDO0FBQzlDLDJEQUFvRDtBQUNwRCwwQ0FBbUM7QUFDbkMsa0RBQTJDO0FBQzNDLGtEQUEyQztBQUMzQywwREFBbUQ7QUFFbkQsc0RBQStDO0FBRy9DLGFBQTZCLFNBQVEsSUFBSSxDQUFDLE1BQU07SUFFNUMsYUFBYTtJQUNOLHNCQUFzQixDQUFDLE9BQWUsRUFBRSxRQUFhLEVBQUUsT0FBZSxDQUFDO1FBQzFFLElBQUksT0FBTyxHQUFXLFNBQVMsQ0FBQztRQUNoQyxJQUFJLElBQUksSUFBSSxDQUFDO1lBQUUsT0FBTyxHQUFHLGNBQWMsQ0FBQztRQUN4QyxJQUFJLGFBQWEsR0FBRyxJQUFJLDJCQUFpQixDQUFDLG9CQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUNsQixHQUFHLEVBQUUsbUJBQW1CLEdBQUcsT0FBTyxHQUFHLFFBQVEsR0FBRyxPQUFPO1lBQ3ZELE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNsQyxRQUFRLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlCLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxXQUFXO0lBQ0osaUJBQWlCLENBQUMsT0FBZSxFQUFFLFFBQWE7UUFDbkQsSUFBSSxhQUFhLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELGFBQWEsQ0FBQyxPQUFPLENBQUM7WUFDbEIsR0FBRyxFQUFFLHFCQUFxQixHQUFHLE9BQU87WUFDcEMsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ2hDLFFBQVEsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUNELElBQUksRUFBRSxVQUFVLEdBQUc7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQixDQUFDO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELGVBQWU7SUFDUix3QkFBd0IsQ0FBQyxLQUFhLEVBQUUsT0FBZSxFQUFFLFFBQWE7UUFDekUsSUFBSSxVQUFVLEdBQUcsUUFBUSxHQUFHLEtBQUssR0FBRyxXQUFXLEdBQUcsT0FBTyxDQUFDO1FBQzFELElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxvQ0FBb0M7WUFDekMsTUFBTSxFQUFFLE1BQU07WUFDZCxJQUFJLEVBQUUsVUFBVTtZQUNoQixPQUFPLEVBQUUsVUFBVSxHQUFHO2dCQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNyQyxRQUFRLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlCLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxhQUFhO0lBQ04sZUFBZSxDQUFDLFFBQWE7UUFDaEMsSUFBSSxhQUFhLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELGFBQWEsQ0FBQyxPQUFPLENBQUM7WUFDbEIsR0FBRyxFQUFFLGNBQWM7WUFDbkIsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLENBQUMsQ0FBQztnQkFDbkMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUM5QixDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsYUFBYTtJQUNOLGdCQUFnQixDQUFDLE1BQWMsRUFBRSxRQUFhO1FBQ2pELElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxrQkFBa0IsR0FBRyxNQUFNO1lBQ2hDLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ25DLFFBQVEsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUNELElBQUksRUFBRSxVQUFVLEdBQUc7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQixDQUFDO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELGFBQWE7SUFDTixnQkFBZ0IsQ0FBQyxRQUFhO1FBQ2pDLElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxxQkFBcUI7WUFDMUIsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLENBQUMsQ0FBQztnQkFDbkMsUUFBUSxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUM5QixDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsYUFBYTtJQUNOLHNCQUFzQixDQUFDLE1BQWMsRUFBRSxRQUFhO1FBQ3ZELElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSwwQkFBMEIsR0FBRyxNQUFNO1lBQ3hDLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNsQyxRQUFRLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlCLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxlQUFlO0lBQ1IsbUJBQW1CLENBQUMsTUFBYyxFQUFFLFFBQWE7UUFDcEQsSUFBSSxhQUFhLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELGFBQWEsQ0FBQyxPQUFPLENBQUM7WUFDbEIsR0FBRyxFQUFFLGlCQUFpQixHQUFHLE1BQU07WUFDL0IsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsUUFBUSxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUM5QixDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsYUFBYTtJQUNOLGVBQWUsQ0FBQyxRQUFhO1FBQ2hDLElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxjQUFjO1lBQ25CLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNsQyxRQUFRLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlCLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxjQUFjO0lBQ1Asc0JBQXNCLENBQUMsUUFBYTtRQUN2QyxJQUFJLGFBQWEsR0FBRyxJQUFJLDJCQUFpQixDQUFDLG9CQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUNsQixHQUFHLEVBQUUsMEJBQTBCO1lBQy9CLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQzNDLFFBQVEsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUNELElBQUksRUFBRSxVQUFVLEdBQUc7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQixDQUFDO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELGFBQWE7SUFDTix5QkFBeUI7UUFDNUIsSUFBSSxhQUFhLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELGFBQWEsQ0FBQyxPQUFPLENBQUM7WUFDbEIsR0FBRyxFQUFFLHlCQUF5QjtZQUM5QixPQUFPLEVBQUUsVUFBVSxHQUFHO2dCQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxHQUFHLENBQUMsQ0FBQztnQkFDakMsSUFBSSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsRUFBRTtvQkFDZixnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUE7b0JBQzVCLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO29CQUMxQixNQUFNO29CQUNOLGtCQUFrQjtvQkFDbEIsdUNBQXVDO29CQUN2QyxJQUFJO2lCQUNQO3FCQUFNLElBQUksR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLEVBQUU7b0JBQ3RCLGdCQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQTtpQkFDL0I7cUJBQU0sSUFBSSxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsRUFBRTtvQkFDdEIsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFBO2lCQUM5QjtZQUNMLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxjQUFjO0lBQ1Asa0JBQWtCO1FBQ3JCLElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSx5QkFBeUI7WUFDOUIsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxHQUFHLENBQUMsQ0FBQztnQkFDckMsSUFBSSxHQUFHLEVBQUU7b0JBQ0wsbUJBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsZUFBZSxFQUFFLG9CQUFVLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztpQkFDdEY7WUFDTCxDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsV0FBVztJQUNKLGtCQUFrQixDQUFDLFFBQWE7UUFDbkMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxhQUFhO1lBQ2xCLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNqQyxRQUFRLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlCLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ2pCLDhCQUE4QjtnQkFDOUIsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQy9CLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsYUFBYTtJQUNOLG9CQUFvQixDQUFDLE1BQWM7UUFDdEMsSUFBSSxhQUFhLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELGFBQWEsQ0FBQyxPQUFPLENBQUM7WUFDbEIsR0FBRyxFQUFFLG1CQUFtQixHQUFHLE1BQU07WUFDakMsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUM5QyxDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsYUFBYTtJQUNOLG9CQUFvQixDQUFDLElBQVksRUFBRSxVQUFrQixDQUFDO1FBQ3pELElBQUksVUFBVSxHQUFHLE9BQU8sR0FBRyxJQUFJLEdBQUcsWUFBWSxHQUFHLE9BQU8sQ0FBQztRQUN6RCxJQUFJLGFBQWEsR0FBRyxJQUFJLDJCQUFpQixDQUFDLG9CQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUNsQixHQUFHLEVBQUUsMEJBQTBCO1lBQy9CLE1BQU0sRUFBRSxNQUFNO1lBQ2QsSUFBSSxFQUFFLFVBQVU7WUFDaEIsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQixDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsV0FBVztJQUNKLGtCQUFrQixDQUFDLFFBQWE7UUFDbkMsSUFBSSxhQUFhLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELGFBQWEsQ0FBQyxPQUFPLENBQUM7WUFDbEIsR0FBRyxFQUFFLGFBQWE7WUFDbEIsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ2pDLFFBQVEsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUNELElBQUksRUFBRSxVQUFVLEdBQUc7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDakIsOEJBQThCO2dCQUM5QixnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDL0IsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxXQUFXO0lBQ0osa0JBQWtCLENBQUMsT0FBZSxFQUFFLGdCQUF3QixFQUFFLEVBQUUsS0FBYSxFQUFFLEVBQUUsV0FBZ0IsSUFBSTtRQUN4RyxJQUFJLFVBQVUsR0FBRyxXQUFXLEdBQUcsT0FBTyxHQUFHLGlCQUFpQixHQUFHLGFBQWEsR0FBRyxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ3pGLElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxpQkFBaUI7WUFDdEIsTUFBTSxFQUFFLE1BQU07WUFDZCxJQUFJLEVBQUUsVUFBVTtZQUNoQixPQUFPLEVBQUUsVUFBVSxHQUFHO2dCQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNqQixRQUFRLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlCLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxhQUFhO0lBQ04sbUJBQW1CLENBQUMsUUFBYTtRQUNwQyxJQUFJLGFBQWEsR0FBRyxJQUFJLDJCQUFpQixDQUFDLG9CQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUNsQixHQUFHLEVBQUUsYUFBYTtZQUNsQixPQUFPLEVBQUUsVUFBVSxHQUFHO2dCQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2dCQUNqQixRQUFRLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlCLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxtQkFBbUI7SUFDWix3QkFBd0I7UUFDM0IsSUFBSSxhQUFhLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELGFBQWEsQ0FBQyxPQUFPLENBQUM7WUFDbEIsR0FBRyxFQUFFLG9CQUFvQjtZQUN6QixPQUFPLEVBQUUsVUFBVSxHQUFHO2dCQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQ2xELENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCx3QkFBd0I7SUFDakIsbUJBQW1CLENBQUMsUUFBYTtRQUNwQyxJQUFJLGFBQWEsR0FBRyxJQUFJLDJCQUFpQixDQUFDLG9CQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUNsQixHQUFHLEVBQUUsa0JBQWtCO1lBQ3ZCLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ3hDLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxVQUFVLEVBQUU7b0JBQ3ZCLE9BQU87b0JBQ1AscUJBQVcsQ0FBQyxjQUFjLEVBQUUsQ0FBQztpQkFDaEM7Z0JBQ0QsUUFBUSxJQUFJLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUM5QixDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsZUFBZTtJQUNSLG1CQUFtQixDQUFDLFFBQWE7UUFDcEMsSUFBSSxhQUFhLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELGFBQWEsQ0FBQyxPQUFPLENBQUM7WUFDbEIsR0FBRyxFQUFFLG9CQUFvQjtZQUN6QixPQUFPLEVBQUUsVUFBVSxHQUFHO2dCQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLHFCQUFxQixFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUN4QyxRQUFRLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlCLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxhQUFhO0lBQ04sbUJBQW1CLENBQUMsUUFBYTtRQUNwQyxJQUFJLGFBQWEsR0FBRyxJQUFJLDJCQUFpQixDQUFDLG9CQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUNsQixHQUFHLEVBQUUsaUJBQWlCO1lBQ3RCLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ25DLFFBQVEsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUNELElBQUksRUFBRSxVQUFVLEdBQUc7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDakIsOEJBQThCO2dCQUM5QixnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDL0IsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxhQUFhO0lBQ04sZ0JBQWdCLENBQUMsUUFBYTtRQUNqQyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxhQUFhLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELGFBQWEsQ0FBQyxPQUFPLENBQUM7WUFDbEIsR0FBRyxFQUFFLGVBQWU7WUFDcEIsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsSUFBSSxHQUFHLEVBQUU7b0JBQ0wsUUFBUSxJQUFJLFFBQVEsRUFBRSxDQUFDO2lCQUMxQjtZQUNMLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxlQUFlO0lBQ1IsbUJBQW1CLENBQUMsV0FBZ0IsSUFBSTtRQUMzQyxJQUFJLGFBQWEsR0FBRyxJQUFJLDJCQUFpQixDQUFDLG9CQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUNsQixHQUFHLEVBQUUsY0FBYztZQUNuQixPQUFPLEVBQUUsVUFBVSxHQUFHO2dCQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNyQyxJQUFJLEdBQUcsRUFBRTtvQkFDTCxRQUFRLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2lCQUM3QjtZQUNMLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxDQUFDLENBQUM7WUFDM0MsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxRQUFRO0lBQ0QsZ0JBQWdCLENBQUMsUUFBYTtRQUNqQyxJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxhQUFhLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELGFBQWEsQ0FBQyxPQUFPLENBQUM7WUFDbEIsR0FBRyxFQUFFLDBCQUEwQjtZQUMvQixPQUFPLEVBQUUsVUFBVSxHQUFHO2dCQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLEdBQUcsQ0FBQyxDQUFDO2dCQUNuQyxRQUFRLElBQUksUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzlCLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxXQUFXO0lBQ0osZ0JBQWdCLENBQUMsSUFBWSxFQUFFLFFBQWE7UUFDL0MsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSx1QkFBdUIsR0FBRyxJQUFJO1lBQ25DLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ3JDLFFBQVEsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUNELElBQUksRUFBRSxVQUFVLEdBQUc7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDakIsUUFBUSxJQUFJLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNoQyxDQUFDO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELFdBQVc7SUFDSixrQkFBa0IsQ0FBQyxNQUFjLEVBQUUsR0FBVztRQUNqRCxJQUFJLFVBQVUsR0FBRyxVQUFVLEdBQUcsTUFBTSxHQUFHLFlBQVksR0FBRyxHQUFHLENBQUM7UUFDMUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUMvQyxJQUFJLGFBQWEsR0FBRyxJQUFJLDJCQUFpQixDQUFDLG9CQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUNsQixHQUFHLEVBQUUsMEJBQTBCO1lBQy9CLE1BQU0sRUFBRSxNQUFNO1lBQ2QsSUFBSSxFQUFFLFVBQVU7WUFDaEIsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUM1QyxDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsZUFBZTtJQUNSLHVCQUF1QixDQUFDLFFBQWE7UUFDeEMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxjQUFjO1lBQ25CLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ3JDLFFBQVEsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUNELElBQUksRUFBRSxVQUFVLEdBQUc7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQixDQUFDO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELGlCQUFpQjtJQUNWLHNCQUFzQixDQUFDLFFBQWE7UUFDdkMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxZQUFZO1lBQ2pCLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ3ZDLFFBQVEsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUNELElBQUksRUFBRSxVQUFVLEdBQUc7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQixDQUFDO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELGdCQUFnQjtJQUNULHdCQUF3QixDQUFDLFFBQWE7UUFDekMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxjQUFjO1lBQ25CLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ3RDLFFBQVEsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUNELElBQUksRUFBRSxVQUFVLEdBQUc7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQixDQUFDO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVELGtCQUFrQjtJQUNYLHVCQUF1QixDQUFDLFFBQWE7UUFDeEMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxZQUFZO1lBQ2pCLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ3hDLFFBQVEsSUFBSSxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsQ0FBQztZQUNELElBQUksRUFBRSxVQUFVLEdBQUc7Z0JBQ2YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyQixDQUFDO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUdNLE1BQU0sS0FBSyxHQUFHO1FBQ2pCLElBQUksT0FBTyxDQUFDLFNBQVMsSUFBSSxJQUFJLEVBQUU7WUFDM0IsT0FBTyxDQUFDLFNBQVMsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO1NBQ3JDO1FBQ0QsT0FBTyxPQUFPLENBQUMsU0FBUyxDQUFDO0lBQzdCLENBQUM7Q0FDSjtBQXZnQkQsMEJBdWdCQzs7Ozs7QUNqaEJELDBDQUFtQztBQUduQyxNQUFNO0FBQ04sSUFBSSxZQUFZLEdBQUcsRUFBRSxDQUFBO0FBRXJCO0lBRUMsWUFBWSxJQUFJO1FBRGhCLFlBQU8sR0FBRyxJQUFJLENBQUM7UUFFZCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztJQUNyQixDQUFDO0lBRUQsYUFBYTtJQUNiLE9BQU8sQ0FBQyxNQUFXLEVBQUUsVUFBbUIsS0FBSztRQUM1QyxPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuRCxJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUU7WUFDbkIsTUFBTSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUE7U0FDckI7UUFBQSxDQUFDO1FBQ0YsVUFBVTtRQUNWLElBQUksTUFBTSxDQUFDLEtBQUssSUFBSSxNQUFNLENBQUMsTUFBTSxJQUFJLEtBQUssRUFBRTtZQUMzQyxJQUFJLEdBQUcsR0FBRyxZQUFZLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ25DLElBQUksR0FBRyxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUU7Z0JBQzFCLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDbkMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQTtnQkFDbkIsT0FBTzthQUNQO1lBQUEsQ0FBQztTQUNGO1FBQUEsQ0FBQztRQUVGLElBQUksRUFBRSxHQUFHLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2hDLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUN4QixFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLENBQU0sRUFBRSxFQUFFO1lBQzNDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDaEIsQ0FBQyxDQUFDLENBQUM7UUFDSCxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQU0sRUFBRSxFQUFFO1lBQzFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLEVBQUUsQ0FBQyxDQUFDLENBQUE7WUFDMUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDekIsSUFBSSxDQUFDLE9BQU8sRUFBRTtvQkFDYixnQkFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFO3dCQUM5QyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQTtvQkFDM0IsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO2lCQUNUO2dCQUFBLENBQUM7YUFDRjtpQkFBTTtnQkFDTixJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDO2dCQUNsQixJQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsSUFBSSxFQUFFO29CQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO2lCQUNoQjthQUNEO1FBQ0YsQ0FBQyxDQUFDLENBQUM7UUFDSCxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLENBQU0sRUFBRSxFQUFFO1lBQzdDLElBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUM7WUFDbEIsSUFBSSxHQUFHLElBQUksS0FBSyxFQUFFO2dCQUNqQixJQUFJLENBQUMsT0FBTyxFQUFFO29CQUNiLGdCQUFNLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7d0JBQzlDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUE7b0JBQ3JCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztpQkFDVDtnQkFBQSxDQUFDO2FBQ0Y7aUJBQU0sSUFBSSxHQUFHLElBQUksS0FBSyxFQUFFO2dCQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUNoRDtpQkFBTSxJQUFJLE1BQU0sQ0FBQyxPQUFPLEVBQUU7Z0JBQzFCLElBQUksUUFBUSxHQUFHLEdBQUcsQ0FBQztnQkFDbkIsSUFBSSxPQUFPLEdBQUcsUUFBUSxDQUFDO2dCQUN2QixJQUFJLFFBQVEsRUFBRTtvQkFDYixPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztpQkFDL0I7Z0JBQ0QsWUFBWSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxPQUFPLENBQUM7Z0JBQ25DLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUE7YUFDdkI7WUFBQSxDQUFDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLEtBQUssR0FBRyxnQkFBTSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2pELElBQUksTUFBTSxHQUFHLENBQUMsY0FBYyxFQUFFLGlEQUFpRCxFQUFFLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNqRyxJQUFJLE1BQU0sQ0FBQyxNQUFNLElBQUksTUFBTSxFQUFFO1lBQzVCLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsR0FBRyxFQUFFLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztTQUN6RTthQUFNO1lBQ04sRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7U0FDakU7SUFDRixDQUFDO0NBQ0Q7QUF2RUQsb0NBdUVDOzs7OztBQzdFRCxrREFBMkM7QUFFM0MsZUFBK0IsU0FBUSxJQUFJLENBQUMsTUFBTTtJQUk5QztRQUNJLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFTyxJQUFJO1FBQ1IsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLG9CQUFVLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBSSxJQUFJLENBQUMsS0FBaUIsSUFBSSxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDbkQsSUFBSSxJQUFJLEtBQWlCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFJdEMsTUFBTSxLQUFLLEdBQUc7UUFDakIsSUFBSSxTQUFTLENBQUMsU0FBUyxJQUFJLElBQUksRUFBRTtZQUM3QixTQUFTLENBQUMsU0FBUyxHQUFHLElBQUksU0FBUyxFQUFFLENBQUM7U0FDekM7UUFDRCxPQUFPLFNBQVMsQ0FBQyxTQUFTLENBQUM7SUFDL0IsQ0FBQztDQUNKO0FBeEJELDRCQXdCQzs7Ozs7QUMxQkQ7SUFBQTtRQUtJLGFBQWE7UUFDTixlQUFVLEdBQVEsSUFBSSxDQUFDO1FBQ3ZCLGFBQVEsR0FBUSxJQUFJLENBQUM7UUFFNUIsV0FBVztRQUNKLGFBQVEsR0FBVyxNQUFNLENBQUM7UUFDakMsV0FBVztRQUNKLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQy9CLFdBQVc7UUFDSixXQUFNLEdBQVcsQ0FBQyxDQUFDO1FBQzFCLFdBQVc7UUFDSixjQUFTLEdBQVcsQ0FBQyxDQUFDO1FBQzdCLFdBQVc7UUFDSixZQUFPLEdBQVcsQ0FBQyxDQUFDO1FBQzNCLGNBQWM7UUFDUCx5QkFBb0IsR0FBVyxDQUFDLENBQUM7UUFDeEMsYUFBYTtRQUNOLGNBQVMsR0FBVyxXQUFXLENBQUM7UUFDdkMsV0FBVztRQUNKLGtCQUFhLEdBQVcsQ0FBQyxDQUFDO1FBQ2pDLHNCQUFzQjtRQUNmLG9CQUFlLEdBQVcsQ0FBQyxDQUFDO1FBQ25DLGFBQWE7UUFDTixrQkFBYSxHQUFXLENBQUMsQ0FBQztRQUNqQyxXQUFXO1FBQ0osaUJBQVksR0FBVyxDQUFDLENBQUM7UUFDaEMsWUFBWTtRQUNMLG9CQUFlLEdBQVcsQ0FBQyxDQUFDO1FBQ25DLGVBQWU7UUFDUix1QkFBa0IsR0FBVyxDQUFDLENBQUM7SUFDMUMsQ0FBQzs7QUFqQ2lCLGVBQUksR0FBVyxDQUFDLENBQUM7QUFDakIsa0JBQU8sR0FBVyxDQUFDLENBQUM7QUFIdEMsNkJBbUNDOzs7OztBQ25DRCxxREFBOEM7QUFFOUMsaURBQTBDO0FBQzFDLHlDQUFrQztBQUVsQztJQU9JO1FBRk8sY0FBUyxHQUFXLEVBQUUsQ0FBQztRQUcxQixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLEtBQUssRUFBVSxDQUFDO1FBQ3pDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUVEOztPQUVHO0lBQ0ssY0FBYztRQUNsQixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxRQUFRLEdBQVcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUMxQyxJQUFJLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwQyxLQUFLLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3JELElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUM7Z0JBQ3hCLFNBQVM7WUFDYixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLGtCQUFRLENBQUMsVUFBVSxFQUFFO2dCQUNwRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ3hCLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQzdCO1NBQ0o7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLFFBQVEsQ0FBQyxHQUFXO1FBQ3ZCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUNoQixJQUFJLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQztRQUNoQixJQUFJLEVBQUUsR0FBWSxvQkFBVSxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUN0RSxJQUFJLEVBQUUsSUFBSSxJQUFJO1lBQUUsT0FBTyxJQUFJLENBQUM7UUFDNUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxvQkFBVSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvRCxJQUFJLEtBQUssR0FBZSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDM0QsSUFBSSxLQUFLLEVBQUU7WUFDUCxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFO2dCQUM3QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDO2FBQ3BEO1NBQ0o7YUFBTTtZQUNILElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFO2dCQUNsRCxPQUFPLEtBQUssQ0FBQzthQUNoQjtZQUNELElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUN4QyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFO2dCQUNoRyxJQUFJLEtBQUssR0FBVyxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQy9ELElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQyxFQUFFO29CQUNiLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztvQkFDcEMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQztvQkFDakQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztpQkFDOUM7WUFDTCxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FDcEI7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksVUFBVSxDQUFDLEdBQVcsRUFBRSxTQUFpQjtJQUVoRCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLGFBQWEsQ0FBQyxHQUFXO1FBQzVCLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Q0FDSjtBQWpGRCw0QkFpRkM7Ozs7O0FDdEZELDJDQUFvQztBQUVwQyxhQUE2QixTQUFRLG1CQUFTO0lBTzFDO1FBQ0ksS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRUQ7O09BRUc7SUFDSSxJQUFJO1FBQ1AsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFO1lBQ3hCLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNqQztRQUNELElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUM7UUFDOUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVEOzs7T0FHRztJQUNJLElBQUksQ0FBQyxVQUFrQjtRQUMxQixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLFVBQVU7WUFDMUIsT0FBTztRQUNYLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNaLElBQUksQ0FBQyxPQUFPLEdBQUcsVUFBVSxDQUFDO1FBQzFCLElBQUksS0FBSyxHQUFlLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDbEQsSUFBSSxLQUFLLEVBQUU7WUFDUCxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUNsQztJQUNMLENBQUM7SUFFRDs7O09BR0c7SUFDSyxTQUFTLENBQUMsU0FBaUI7UUFDL0IsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDbkUsSUFBSSxJQUFJLENBQUMsaUJBQWlCO1lBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQzdFLENBQUM7SUFFRDs7O09BR0c7SUFDSSxTQUFTLENBQUMsTUFBYztRQUMzQixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDeEIsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1NBQ2hEO0lBQ0wsQ0FBQztJQUVEOzs7T0FHRztJQUNJLFVBQVUsQ0FBQyxHQUFXLEVBQUUsU0FBaUI7UUFDNUMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxHQUFHLEVBQUU7WUFDckIsSUFBSSxLQUFLLEdBQWUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDdEQsSUFBSSxLQUFLLEVBQUU7Z0JBQ1AsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQzthQUM3QjtTQUNKO0lBQ0wsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxhQUFhLENBQUMsR0FBVztRQUM1QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsT0FBTyxJQUFJLENBQUMsT0FBTyxJQUFJLEdBQUcsQ0FBQztJQUMvQixDQUFDO0NBQ0o7QUF0RkQsMEJBc0ZDOzs7OztBQ3hGRCwyQ0FBb0M7QUFFcEMsa0JBQWtDLFNBQVEsbUJBQVM7SUFJL0MsZ0JBQWdCLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztJQUUxQjs7O09BR0c7SUFDSSxJQUFJLENBQUMsUUFBZ0I7UUFDeEIsSUFBSSxLQUFLLEdBQWUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoRCxJQUFJLEtBQUssRUFBRTtZQUNQLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQ2xDO0lBQ0wsQ0FBQztJQUVEOzs7T0FHRztJQUNLLFNBQVMsQ0FBQyxTQUFpQjtRQUMvQixJQUFJLE9BQU8sR0FBc0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzNFLElBQUksT0FBTztZQUFFLE9BQU8sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUMvQyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksU0FBUyxDQUFDLE1BQWM7UUFDM0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7SUFDMUIsQ0FBQztJQUVEOzs7T0FHRztJQUNJLFVBQVUsQ0FBQyxHQUFXLEVBQUUsU0FBaUI7UUFDNUMsSUFBSSxLQUFLLEdBQWUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdEQsSUFBSSxLQUFLLEVBQUU7WUFDUCxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUNsQztJQUNMLENBQUM7Q0FDSjtBQTVDRCwrQkE0Q0M7Ozs7O0FDOUNELGlEQUEwQztBQUMxQyx1Q0FBZ0M7QUFFaEM7SUFZSTtRQUNJLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBRXRCLElBQUksQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxhQUFhLEdBQUcsR0FBRyxDQUFDO1FBRXpCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxpQkFBTyxFQUFFLENBQUM7UUFDekIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRW5DLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxzQkFBWSxFQUFFLENBQUM7UUFDbEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRDs7O09BR0c7SUFDSSxVQUFVLENBQUMsUUFBZ0I7UUFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTO1lBQUUsT0FBTztRQUM1QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLE1BQWM7UUFDeEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLO1lBQUUsT0FBTztRQUN4QixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNO1FBQ1QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNwQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksV0FBVyxDQUFDLEtBQWM7UUFDN0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7SUFDM0IsQ0FBQztJQUVEOzs7T0FHRztJQUNJLE9BQU8sQ0FBQyxLQUFjO1FBQ3pCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2IsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ2pCO2FBQU07WUFDSCxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ2QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDN0I7U0FDSjtJQUNMLENBQUM7SUFFRDs7O09BR0c7SUFDSSxXQUFXLENBQUMsTUFBYztRQUM3QixNQUFNLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDN0IsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzdCLElBQUksQ0FBQyxTQUFTLEdBQUcsTUFBTSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksV0FBVztRQUNkLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMxQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksZUFBZSxDQUFDLE1BQWM7UUFDakMsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzdCLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztRQUM3QixJQUFJLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQztRQUM1QixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVEOzs7T0FHRztJQUNJLGVBQWU7UUFDbEIsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFXLElBQUk7UUFDWCxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDdEIsQ0FBQztJQUVELElBQVcsUUFBUTtRQUNmLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMxQixDQUFDO0lBR00sTUFBTSxLQUFLLEdBQUc7UUFDakIsSUFBSSxRQUFRLENBQUMsU0FBUyxJQUFJLElBQUksRUFBRTtZQUM1QixRQUFRLENBQUMsU0FBUyxHQUFHLElBQUksUUFBUSxFQUFFLENBQUM7U0FDdkM7UUFDRCxPQUFPLFFBQVEsQ0FBQyxTQUFTLENBQUM7SUFDOUIsQ0FBQzs7QUE3SEQsZUFBZTtBQUNELG1CQUFVLEdBQVcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7QUFIckQsMkJBZ0lDOzs7OztBQ25JRDs7QUFFSSxTQUFTO0FBQ0ssbUJBQVMsR0FBVyxPQUFPLENBQUM7QUFDMUMsU0FBUztBQUNLLGtCQUFRLEdBQVcsT0FBTyxDQUFDO0FBQ3pDLGFBQWE7QUFDQyxvQkFBVSxHQUFXLE9BQU8sQ0FBQztBQUMzQyxTQUFTO0FBQ0ssY0FBSSxHQUFXLE9BQU8sQ0FBQztBQUNyQyxTQUFTO0FBQ0ssbUJBQVMsR0FBVyxPQUFPLENBQUM7QUFDMUMsV0FBVztBQUNHLHFCQUFXLEdBQVcsT0FBTyxDQUFDO0FBQzVDLFdBQVc7QUFDRyxnQkFBTSxHQUFXLE9BQU8sQ0FBQztBQUN2QyxXQUFXO0FBQ0csc0JBQVksR0FBVyxPQUFPLENBQUM7QUFDN0MsU0FBUztBQUNLLG1CQUFTLEdBQVcsT0FBTyxDQUFDO0FBbkI5Qyw0QkFvQkM7Ozs7O0FDcEJELGdEQUF5QztBQUV6QztJQUNDOzs7Ozs7T0FNRztJQUNJLE1BQU0sQ0FBQyxpQkFBaUIsQ0FDOUIsTUFBbUIsRUFDbkIsV0FBb0IsRUFDcEIsZ0JBQTBCO1FBRTFCLElBQUksV0FBVyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUNuQixXQUFXLEVBQ1gsVUFBVSxFQUNWLFVBQVUsQ0FBQyxpQkFBaUIsRUFDNUIsQ0FBQyxNQUFNLENBQUMsRUFDUixLQUFLLENBQ0wsQ0FBQztTQUNGO1FBQ0QsSUFBSSxnQkFBZ0IsRUFBRTtZQUNyQixNQUFNLENBQUMsQ0FBQyxHQUFHLGtCQUFRLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxDQUFDO1lBQzNDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsa0JBQVEsQ0FBQyxpQkFBaUIsR0FBRyxHQUFHLENBQUM7U0FDNUM7YUFBTTtZQUNOLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxrQkFBUSxDQUFDLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxHQUFHLENBQUM7WUFDNUQsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLGtCQUFRLENBQUMsaUJBQWlCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsQ0FBQztTQUM5RDtJQUVGLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSSxNQUFNLENBQUMsb0JBQW9CLENBQ2pDLE1BQW1CLEVBQ25CLFdBQW9CLEVBQ3BCLGdCQUEwQjtRQUUxQixJQUFJLFdBQVcsRUFBRTtZQUNoQixJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FDbkIsV0FBVyxFQUNYLFVBQVUsRUFDVixVQUFVLENBQUMsb0JBQW9CLEVBQy9CLENBQUMsTUFBTSxDQUFDLEVBQ1IsS0FBSyxDQUNMLENBQUM7U0FDRjtRQUNELElBQUksZ0JBQWdCLEVBQUU7WUFDckIsTUFBTSxDQUFDLENBQUMsR0FBRyxrQkFBUSxDQUFDLGdCQUFnQixHQUFHLEdBQUcsQ0FBQztZQUMzQyxNQUFNLENBQUMsQ0FBQyxHQUFHLGtCQUFRLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO1NBQzlDO2FBQU07WUFDTixNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsa0JBQVEsQ0FBQyxnQkFBZ0IsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxDQUFDO1lBQzVELE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxrQkFBUSxDQUFDLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUM7U0FDaEU7SUFDRixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxNQUFNLENBQUMsaUJBQWlCLENBQUMsTUFBbUIsRUFBRSxHQUFnQjtRQUNwRSxJQUFJLENBQUMsTUFBTSxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ3BCLE1BQU0sSUFBSSxLQUFLLENBQUMsK0JBQStCLENBQUMsQ0FBQztTQUNqRDthQUFNO1lBQ04sTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLEdBQUcsRUFBRSxHQUFHLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1NBQzlDO0lBQ0YsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0ksTUFBTSxDQUFDLEtBQUssQ0FDbEIsS0FBYSxFQUNiLE1BQW1CLEVBQ25CLEdBQWdCO1FBRWhCLElBQUksS0FBSyxLQUFLLFFBQVEsRUFBRTtZQUN2QixVQUFVLENBQUMsaUJBQWlCLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1NBQzFDO0lBQ0YsQ0FBQztDQUNEO0FBM0ZELDZCQTJGQzs7Ozs7QUM3RkQ7O0dBRUc7QUFDSDtJQU9JOzs7T0FHRztJQUNILFlBQW1CLFVBQWtCLEVBQUU7UUFSL0IsU0FBSSxHQUFrQixFQUFFLENBQUM7UUFDekIsWUFBTyxHQUFXLENBQUMsQ0FBQztRQUNwQixXQUFNLEdBQVcsQ0FBQyxDQUFDO1FBT3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDO0lBQzFCLENBQUM7SUFFRDs7O09BR0c7SUFDSSxJQUFJLENBQUMsS0FBYTtRQUNyQixJQUFJLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUM1QixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDZixJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDcEM7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN0QixJQUFJLENBQUMsTUFBTSxJQUFJLEtBQUssQ0FBQztRQUNyQixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDbkIsQ0FBQztJQUVEOzs7T0FHRztJQUNJLFFBQVE7UUFDWCxPQUFPLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QyxDQUFDO0lBRUQ7O09BRUc7SUFDSSxLQUFLO1FBQ1IsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDcEIsQ0FBQztDQUNKO0FBN0NELCtCQTZDQzs7Ozs7QUNoREQ7SUFFSTs7O09BR0c7SUFDSSxNQUFNLENBQUMsaUJBQWlCLENBQUMsT0FBZSxDQUFDO1FBQzVDLElBQUksSUFBSSxJQUFJLENBQUMsRUFBRSxFQUFDLElBQUk7WUFDaEIsSUFBSSxNQUFNLEdBQUcsR0FBRyxDQUFDO1lBQ2pCLElBQUksUUFBUSxHQUNSO2dCQUNJLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO2dCQUNsQixDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQztnQkFDbEIsQ0FBQyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLENBQUM7Z0JBQ2xCLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2hCLENBQUM7WUFDTixZQUFZO1lBQ1osSUFBSSxXQUFXLEdBQUcsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ2pELE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUN4QjthQUFNLElBQUksSUFBSSxJQUFJLENBQUMsRUFBRSxFQUFDLElBQUk7WUFDdkIsSUFBSSxNQUFNLEdBQUcsR0FBRyxDQUFDO1lBQ2pCLElBQUksUUFBUSxHQUNSO2dCQUNJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO2dCQUNiLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO2dCQUNiLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO2dCQUNiLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2hCLENBQUM7WUFDTixZQUFZO1lBQ1osSUFBSSxXQUFXLEdBQUcsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ2pELE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUN4QjtRQUNELE9BQU8sRUFBRSxDQUFDO0lBQ2QsQ0FBQztDQUVKO0FBbkNELDRCQW1DQzs7Ozs7QUNuQ0QsbUVBQTREO0FBQzVELDZDQUFzQztBQUN0QyxnREFBeUM7QUFDekMsK0NBQXdDO0FBRXhDLGdCQUFnQyxTQUFRLElBQUksQ0FBQyxNQUFNO0lBRy9DLFVBQVU7SUFDSCxNQUFNLENBQUMsY0FBYyxDQUFDLFVBQWUsRUFBRSxPQUFlLEVBQUUsTUFBZ0MsSUFBSTtRQUMvRixJQUFJLFNBQVMsR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNqQyxTQUFTLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQztRQUN6QixTQUFTLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUN4QixTQUFTLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQztRQUM1QixTQUFTLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUN4QixTQUFTLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQztRQUN4QixVQUFVLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQy9CLElBQUksR0FBRyxFQUFFO1lBQ0wsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMvQjthQUFNO1lBQ0gsU0FBUyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDL0Q7UUFDRCxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLEVBQUUsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQzlFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLFVBQXFCLEVBQUUsRUFBRTtZQUN0RSxVQUFVLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDNUIsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRCxjQUFjO0lBQ1AsTUFBTSxDQUFDLG1CQUFtQixDQUFDLFVBQWUsRUFBRSxNQUFjLEVBQUUsVUFBZTtRQUM5RSxNQUFNO1FBQ04sSUFBSSxVQUFVLEdBQWdCLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ2hELFVBQVUsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDaEMsSUFBSSxHQUFHLEdBQUcsVUFBVSxDQUFDLGFBQWEsQ0FBQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDekQsR0FBRyxHQUFHLFVBQVUsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDcEMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUM3QixVQUFVLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUUzQixJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxZQUFZLEdBQWEsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxFQUFFLGtCQUFRLENBQUMsQ0FBQyxDQUFDLGlCQUFpQjtRQUNoRyxVQUFVLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ2xDLFlBQVksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUU7WUFDbkcsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFO2dCQUMxRixVQUFVLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBQzVCLElBQUksQ0FBQyxjQUFjLENBQUMsVUFBVSxFQUFFLHlCQUF5QixFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFO29CQUM5RSxVQUFVLENBQUMsVUFBVSxFQUFFLENBQUM7b0JBQ3hCLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDO29CQUNwQyxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUM7b0JBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUMsQ0FBQztnQkFDbEQsQ0FBQyxDQUFDLENBQUM7Z0JBQ0gsSUFBSSxVQUFVLElBQUksVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO29CQUMxQyxVQUFVLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztpQkFDN0I7WUFDTCxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ1IsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNKLEtBQUs7UUFDTCxJQUFJLFlBQVksR0FBYSxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsa0JBQVEsQ0FBQyxDQUFDLENBQUMsaUJBQWlCO1FBQ2hHLFlBQVksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDcEMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN2QixJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDLEVBQUUsT0FBTyxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFO1lBQ3RHLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRTtnQkFDMUYsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQ3BDLFlBQVksQ0FBQyxLQUFLLEVBQUUsQ0FBQztnQkFDckIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQyxDQUFDO1lBQ2xELENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDUixDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ1IsQ0FBQztJQUVELFVBQVU7SUFDSCxNQUFNLENBQUMsY0FBYyxDQUFDLFVBQWUsRUFBRSxNQUFjLEVBQUUsU0FBYyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLFdBQWdCLElBQUk7UUFDNUcsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUNyQyxJQUFJLE9BQU8sR0FBZSxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQy9FLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDekIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUMxQixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNwQixPQUFPLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztZQUNsQixPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDckQsVUFBVSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUM3QixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxDQUFDO1lBQ2hDLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxHQUFHLENBQUM7WUFFaEMsSUFBSSxNQUFNLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEtBQUssQ0FBQztZQUM3RCxJQUFJLE1BQU0sR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsS0FBSyxDQUFDO1lBQzdELE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEtBQUssR0FBRyxDQUFDLEdBQUcsTUFBTSxHQUFHLE1BQU0sQ0FBQyxDQUFDLEVBQUUsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsTUFBTSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqRyxJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsTUFBTSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFFM0UsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLFFBQVEsRUFBRSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsR0FBRyxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUMxSSxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxPQUFrQixFQUFFLFFBQWEsRUFBRSxFQUFFO2dCQUM5RCxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxRQUFRLEVBQUUsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsR0FBRyxFQUFFLEVBQUUsSUFBSSxFQUM5RixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFrQixFQUFFLEVBQUU7b0JBQ25FLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQztvQkFDckIsUUFBUSxJQUFJLFFBQVEsRUFBRSxDQUFDO29CQUN2QixPQUFPLENBQUMsY0FBYyxFQUFFLENBQUM7b0JBQ3pCLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQztvQkFDckIsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7b0JBQ3BCLE9BQU8sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO29CQUNsQixPQUFPLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztvQkFDckIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxFQUFFLE9BQU8sQ0FBQyxDQUFDO2dCQUMvQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkIsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7U0FDMUI7SUFDTCxDQUFDO0lBRUQsZUFBZTtJQUNSLE1BQU0sQ0FBQyxrQkFBa0IsQ0FBQyxVQUFlLEVBQUUsTUFBYyxFQUFFLE9BQWUsRUFBRSxNQUFnQyxJQUFJLEVBQUUsU0FBaUIsQ0FBQyxFQUFFLFVBQW1CLEtBQUs7UUFDakssSUFBSSxPQUFPLEdBQWUsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMxRSxPQUFPLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQztRQUN0QixPQUFPLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztRQUNwQixPQUFPLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQztRQUNwQixVQUFVLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzdCLElBQUksR0FBRyxFQUFFO1lBQ0wsT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUM3QjthQUFNO1lBQ0gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7U0FDN0Q7UUFDRCxJQUFJLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDWixPQUFPLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztTQUMzQjtRQUNELEtBQUs7UUFDTCxJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2hFLFNBQVMsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ3pCLFNBQVMsQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ3hCLFNBQVMsQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDO1FBQzVCLFNBQVMsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ3hCLFNBQVMsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ3hCLFNBQVMsQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDO1FBQ3RCLFNBQVMsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1FBQ3ZCLFNBQVMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO1FBQzFCLFNBQVMsQ0FBQyxNQUFNLEdBQUcsUUFBUSxDQUFDO1FBQzVCLE9BQU8sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUIsU0FBUyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEdBQUcsRUFBRSxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQzFELElBQUk7UUFDSixJQUFJLE9BQU8sRUFBRTtZQUNULE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDcEIsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztTQUN6QjtRQUNELElBQUk7UUFDSixJQUFJLFFBQVEsR0FBRyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO2FBQ3pGLFFBQVEsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7YUFDMUUsUUFBUSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFBO1FBQ2hGLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRTtZQUMzQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7WUFDeEMsT0FBTyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3pCLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNyQixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNwQixPQUFPLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztZQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDMUMsQ0FBQyxDQUFDLENBQUM7UUFDSCxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRU0sTUFBTSxDQUFDLGFBQWEsQ0FBQyxVQUFlO1FBQ3ZDLElBQUksR0FBRyxHQUFlLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDdEUsR0FBRyxDQUFDLElBQUksR0FBRyw2QkFBNkIsQ0FBQztRQUN6QyxHQUFHLENBQUMsT0FBTyxHQUFHLEdBQUcsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ2hDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDakIsb0JBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQzlDLGtCQUFRLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUM3QyxJQUFJLFFBQVEsR0FBRyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNuQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDO2FBQ2pFLFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDO2FBQzdELFFBQVEsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQzthQUN6RCxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQTtRQUM5RCxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUU7WUFDdkMsR0FBRyxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ2pCLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUN0QyxDQUFDLENBQUMsQ0FBQztRQUNILFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCxVQUFVO0lBQ0gsTUFBTSxDQUFDLGtCQUFrQixDQUFDLE1BQWM7UUFDM0MsSUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDO1FBQ2xCLEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxTQUFTLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDNUMsSUFBSSxPQUFPLEdBQWUsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMxRSxPQUFPLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztZQUM3QixPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ3pCLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDMUIsT0FBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ3JELGtCQUFRLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUNqRCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssR0FBRyxDQUFDLGtCQUFRLENBQUMsZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDO1lBQzlHLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxrQkFBUSxDQUFDLGlCQUFpQixFQUFFLEVBQUUsSUFBSSxFQUN4RSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFrQixFQUFFLEVBQUU7Z0JBQ25FLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQztnQkFDckIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQzFDLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN0QjtJQUNMLENBQUM7SUFFTSxNQUFNLENBQUMsbUJBQW1CLENBQUMsV0FBZ0IsRUFBRSxPQUFlLEVBQUUsUUFBZ0IsRUFBRSxPQUFpQyxJQUFJLEVBQUUsVUFBa0IsQ0FBQztRQUM3SSxJQUFJLE9BQU8sR0FBZSxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzFFLE9BQU8sQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLE9BQU8sQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ3RCLE9BQU8sQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ3RCLFdBQVcsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDOUIsSUFBSSxJQUFJLEVBQUU7WUFDTixPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQy9CO2FBQU07WUFDSCxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMvRDtRQUNELElBQUksT0FBTyxHQUFHLENBQUMsRUFBRTtZQUNiLE9BQU8sQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDO1NBQzVCO1FBQ0QsS0FBSztRQUNMLElBQUksU0FBUyxHQUFHLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ2pDLFNBQVMsQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDO1FBQzFCLFNBQVMsQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO1FBQ3hCLFNBQVMsQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDO1FBQzVCLFNBQVMsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ3hCLE9BQU8sQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUIsU0FBUyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUM7UUFDbkQsSUFBSTtRQUNKLElBQUksUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ25DLFFBQVEsQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQzthQUM5RyxRQUFRLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQTtRQUNsSCxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUU7WUFDM0MsT0FBTyxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3pCLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNyQixPQUFPLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztZQUNsQixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDMUMsQ0FBQyxDQUFDLENBQUM7UUFDSCxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxNQUFNLENBQUMsb0JBQW9CLENBQUMsS0FBaUIsRUFBRSxVQUFrQixFQUFFLEVBQUUsV0FBbUIsRUFBRSxFQUFFLFdBQXFCLElBQUk7UUFDeEgsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLEtBQUssQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLElBQUksTUFBTSxHQUFhLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDekMsSUFBSSxHQUFHLEdBQVcsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUNoQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzFCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRTtnQkFDckMsS0FBSyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDMUMsSUFBSSxDQUFDLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLEVBQUU7b0JBQ3RDLFFBQVEsRUFBRSxDQUFDO2lCQUNkO1lBQ0wsQ0FBQyxDQUFDLENBQUE7U0FDTDtJQUNMLENBQUM7SUFFRCxXQUFXO0lBQ0osTUFBTSxDQUFDLGNBQWMsQ0FBQyxRQUFnQixFQUFFLEdBQTZCO1FBQ3hFLElBQUksSUFBSSxHQUFhLElBQUksa0JBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsWUFBWSxHQUFHLEdBQUcsRUFBRTtZQUNyQixJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDbkIsQ0FBQyxDQUFBO1FBQ0QsSUFBSSxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2YsSUFBSSxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2Ysa0JBQVEsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6QyxDQUFDO0NBQ0o7QUEvUEQsNkJBK1BDOzs7OztBQ3BRRCxjQUE4QixTQUFRLElBQUksQ0FBQyxNQUFNO0lBRTdDLG1DQUFtQztJQUM1QixNQUFNLENBQUMsS0FBSyxDQUFDLEdBQVcsRUFBRSxHQUFXO1FBQ3hDLE9BQU8sSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQztJQUM3QyxDQUFDO0lBRUQsK0JBQStCO0lBQ3hCLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBVyxFQUFFLEdBQVc7UUFDM0MsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUVELFdBQVc7SUFDSixNQUFNLENBQUMsY0FBYyxDQUFDLEtBQWE7UUFDdEMsSUFBSSxLQUFLLEdBQUcsT0FBTyxFQUFFO1lBQ2pCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUN2QztRQUNELElBQUksS0FBSyxLQUFLLENBQUM7WUFBRSxPQUFPLEdBQUcsQ0FBQztRQUM1QixJQUFJLENBQUMsR0FBVyxJQUFJLEVBQUUsVUFBVTtRQUM1QixLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUNwRCxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsRCxJQUFJLElBQUksR0FBVyxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRTtZQUNsQixJQUFJLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ25CO2FBQU07WUFDSCxJQUFJLFNBQVMsR0FBVyxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sQ0FBQztZQUN6QyxJQUFJLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxFQUFFLEdBQUcsU0FBUyxHQUFHLEVBQUUsQ0FBQyxDQUFDO1lBQ2hELEtBQUssSUFBSSxLQUFLLEdBQVcsQ0FBQyxFQUFFLEdBQUcsR0FBVyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDLEVBQUUsS0FBSyxHQUFHLEdBQUcsRUFBRSxLQUFLLEVBQUUsRUFBRTtnQkFDNUYsSUFBSSxHQUFHLElBQUksR0FBRyxJQUFJLENBQUM7YUFDdEI7U0FDSjtRQUNELE9BQU8sQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQztJQUNoRSxDQUFDO0lBRUQsYUFBYTtJQUNOLE1BQU0sQ0FBQyxjQUFjLENBQUMsT0FBZTtRQUN4QyxJQUFJLE1BQU0sR0FBRyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDakMsSUFBSSxNQUFNLEVBQUU7WUFDUixPQUFPLE1BQU0sQ0FBQztTQUNqQjtRQUNELE9BQU8sQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVELGFBQWE7SUFDTixNQUFNLENBQUMsUUFBUSxDQUFDLE9BQWU7UUFDbEMsSUFBSSxNQUFNLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2pDLElBQUksTUFBTSxFQUFFO1lBQ1IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQzdCO1FBQ0QsT0FBTyxDQUFDLENBQUM7SUFDYixDQUFDO0lBRU0sTUFBTSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsWUFBb0IsR0FBRztRQUN0RCxJQUFJLEtBQUssSUFBSSxHQUFHO1lBQUUsT0FBTyxFQUFFLENBQUM7UUFDNUIsSUFBSSxNQUFNLEdBQWEsRUFBRSxDQUFDO1FBQzFCLElBQUksTUFBTSxHQUFhLEtBQUssQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDOUMsS0FBSyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDNUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNwQztRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFFTSxNQUFNLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxZQUFvQixHQUFHO1FBQ3RELElBQUksS0FBSyxJQUFJLEdBQUc7WUFBRSxPQUFPLEVBQUUsQ0FBQztRQUM1QixJQUFJLE1BQU0sR0FBYSxFQUFFLENBQUM7UUFDMUIsSUFBSSxNQUFNLEdBQWEsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM5QyxLQUFLLElBQUksQ0FBQyxHQUFXLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM1QyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzFCO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxlQUFlLENBQUMsTUFBVyxFQUFFLEtBQVk7UUFDbkQsSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsQyxJQUFJLEtBQUssSUFBSSxDQUFDO1lBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdkMsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVELGVBQWU7SUFDUixNQUFNLENBQUMsa0JBQWtCLENBQUMsS0FBWSxFQUFFLElBQVksRUFBRSxJQUFTO1FBQ2xFLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBQ0o7QUFsRkQsMkJBa0ZDOzs7OztBQ2xGRCwrQ0FBd0M7QUFFeEM7SUFDQzs7Ozs7OztPQU9HO0lBQ0ksTUFBTSxDQUFDLFdBQVcsQ0FDeEIsT0FBbUIsRUFDbkIsS0FBaUIsRUFDakIsUUFBZ0I7UUFFaEIsT0FBTyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQ3BCLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxRQUFRLEVBQzVDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxRQUFRLENBQzVDLENBQUM7SUFDSCxDQUFDO0lBQ0Q7Ozs7OztPQU1HO0lBQ0ksTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUFjLEVBQUUsRUFBYztRQUNwRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQ2YsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FDN0QsQ0FBQztJQUNILENBQUM7SUFDRDs7Ozs7Ozs7T0FRRztJQUNJLE1BQU0sQ0FBQyxjQUFjLENBQzNCLEVBQVUsRUFDVixFQUFVLEVBQ1YsRUFBVSxFQUNWLEVBQVU7UUFFVixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0ksTUFBTSxDQUFDLFlBQVksQ0FBQyxFQUFjLEVBQUUsRUFBYztRQUN4RCxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsRUFBRTtZQUNqQixPQUFPLENBQUMsQ0FBQztTQUNUO1FBQ0QsSUFBSSxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUU7WUFDaEIsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUNWO1FBQ0QsT0FBTyxDQUFDLENBQUM7SUFDVixDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0ksTUFBTSxDQUFDLGFBQWEsQ0FBQyxNQUFtQixFQUFFLFlBQXNCO1FBQ3RFLElBQUksRUFBRSxHQUFlLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4RCxJQUFJLE1BQU0sR0FBZ0IsTUFBTSxDQUFDLE1BQXFCLENBQUM7UUFDdkQsT0FBTyxNQUFNLElBQUksQ0FBQyxDQUFDLE1BQU0sWUFBWSxlQUFLLENBQUMsRUFBRTtZQUM1QyxFQUFFLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqRixFQUFFLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqRixNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQXFCLENBQUM7U0FDdEM7UUFDRCxJQUFJLFlBQVksRUFBRTtZQUNqQixNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ3ZCO1FBQ0QsT0FBTyxFQUFFLENBQUM7SUFDWCxDQUFDO0lBRUU7Ozs7Ozs7T0FPRztJQUNDLE1BQU0sQ0FBQyxjQUFjLENBQzNCLE1BQW1CLEVBQ25CLFNBQXNCLEVBQ3RCLFlBQXNCO1FBRXRCLElBQUksRUFBRSxHQUFlLFVBQVUsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDdEQsSUFBSSxNQUFNLEdBQWUsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDMUMsSUFBSSxNQUFNLEdBQWdCLFNBQVMsQ0FBQztRQUNwQyxPQUFPLE1BQU0sSUFBSSxDQUFDLENBQUMsTUFBTSxZQUFZLGVBQUssQ0FBQyxFQUFFO1lBQzVDLE1BQU0sQ0FBQyxDQUFDLElBQUksTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNyQixNQUFNLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFDckIsTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFxQixDQUFDO1NBQ3RDO1FBRUQsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDdkIsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFFdkIsSUFBSSxZQUFZLEVBQUU7WUFDakIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN2QjtRQUNELE9BQU8sRUFBRSxDQUFDO0lBQ1gsQ0FBQztDQUNEO0FBckhELDZCQXFIQzs7Ozs7QUN2SEQ7SUFFVyxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQWUsRUFBRSxVQUFvQixFQUFFLFVBQWU7UUFDMUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUM3RixDQUFDO0lBRUQsYUFBYTtJQUNMLE1BQU0sQ0FBQyxhQUFhLENBQUMsS0FBZTtRQUN4QyxJQUFJLFFBQVEsR0FBVSxFQUFFLENBQUM7UUFDekIsS0FBSyxJQUFJLENBQUMsR0FBVyxDQUFDLEVBQUUsR0FBRyxHQUFXLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM5RCxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLG1CQUFtQixHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxRQUFRLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztTQUM5RjtRQUNELE9BQU8sUUFBUSxDQUFDO0lBQ3BCLENBQUM7Q0FDSjtBQWRELDJCQWNDOzs7OztBQ2RELDRDQUFxQztBQUNyQyxnRUFBeUQ7QUFDekQscURBQThDO0FBQzlDLG1EQUE0QztBQUc1QywrREFBd0Q7QUFFeEQseUNBQWtDO0FBQ2xDLDhDQUF1QztBQUN2QyxrREFBMkM7QUFDM0Msa0RBQTJDO0FBQzNDLHlDQUFrQztBQUNsQyxnREFBeUM7QUFDekMsbURBQTRDO0FBRTVDOztHQUVHO0FBQ0gsaUJBQWlDLFNBQVEsSUFBSSxDQUFDLE1BQU07SUFZaEQsZ0JBQWdCLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztJQUUxQix3QkFBd0I7SUFDakIsTUFBTSxDQUFDLFlBQVksQ0FBQyxRQUFhO1FBQ3BDLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUNoQixJQUFJLG1CQUFTLENBQUMsT0FBTyxFQUFFO1lBQ25CLFFBQVEsSUFBSSxRQUFRLEVBQUUsQ0FBQztZQUN2QixPQUFPO1NBQ1Y7UUFDRCxJQUFJLE9BQU8sR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO1FBQ2xDLGlCQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUMsSUFBUyxFQUFFLEVBQUU7WUFDMUMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtnQkFDekIsT0FBTztnQkFDUCxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsTUFBTSxDQUFDLENBQUM7YUFDakQ7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILFNBQVM7UUFDVCxJQUFJLFFBQVEsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNyRCxJQUFJLFFBQVEsRUFBRTtZQUNWLFFBQVE7WUFDUixpQkFBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLElBQVMsRUFBRSxFQUFFO2dCQUMxQyxPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztnQkFDekMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO2dCQUN0QixRQUFRLElBQUksUUFBUSxFQUFFLENBQUM7WUFDM0IsQ0FBQyxDQUFDLENBQUM7U0FDTjthQUFNO1lBQ0gsUUFBUSxJQUFJLFFBQVEsRUFBRSxDQUFDO1NBQzFCO0lBQ0wsQ0FBQztJQUVELGNBQWM7SUFDUCxNQUFNLENBQUMsa0JBQWtCLENBQUMsU0FBa0IsS0FBSztRQUNwRCxJQUFJLFdBQVcsQ0FBQyxjQUFjLElBQUksS0FBSyxFQUFFO1lBQ3JDLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUMsQ0FBQztZQUNsQyxPQUFPO1NBQ1Y7YUFBTSxJQUFJLHFCQUFXLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRTtZQUNoQyxPQUFPO1NBQ1Y7UUFDRCxJQUFJLFNBQVMsR0FBUSxFQUFFLENBQUM7UUFDeEIsU0FBUyxDQUFDLFVBQVUsQ0FBQyxHQUFHLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7UUFDcEQsU0FBUyxDQUFDLFdBQVcsQ0FBQyxHQUFHLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDdEQsU0FBUyxDQUFDLFFBQVEsQ0FBQyxHQUFHLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDaEQsU0FBUyxDQUFDLFNBQVMsQ0FBQyxHQUFHLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDbEQsU0FBUyxDQUFDLFVBQVUsQ0FBQyxHQUFHLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7UUFDdkQsU0FBUyxDQUFDLGdCQUFnQixDQUFDLEdBQUcscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQztRQUNuRSxTQUFTLENBQUMsVUFBVSxDQUFDLEdBQUcscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztRQUN2RCxTQUFTLENBQUMsV0FBVyxDQUFDLEdBQUcscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQztRQUN6RCxTQUFTLENBQUMsV0FBVyxDQUFDLEdBQUcscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQztRQUN6RCxTQUFTLENBQUMsV0FBVyxDQUFDLEdBQUcsa0JBQVEsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDO1FBQ2hELElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDekMsSUFBSSxRQUFRLEVBQUU7WUFDVixJQUFJLE9BQU8sR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO1lBQ2xDLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsQ0FBQztTQUN2RDtRQUVELElBQUksTUFBTSxFQUFFO1lBQ1IsV0FBVyxDQUFDLG9CQUFvQixFQUFFLENBQUM7WUFDbkMsV0FBVyxDQUFDLHVCQUF1QixFQUFFLENBQUM7WUFDdEMsV0FBVyxDQUFDLHVCQUF1QixFQUFFLENBQUM7U0FDekM7SUFDTCxDQUFDO0lBRUQsYUFBYTtJQUNOLE1BQU0sQ0FBQyxXQUFXLENBQUMsUUFBYTtRQUNuQyxXQUFXLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUNsQyxJQUFJLE9BQU8sR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO1FBQ2xDLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3pELElBQUksUUFBUSxFQUFFO1lBQ1YsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNuQyxJQUFJLE9BQU8sRUFBRTtnQkFDVCxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDbEQsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7Z0JBQ3BELG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUM5QyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFDaEQscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7Z0JBQ3JELHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxjQUFjLEdBQUcsT0FBTyxDQUFDLGdCQUFnQixDQUFDLENBQUM7Z0JBQ2pFLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO2dCQUN2RCxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDdkQsa0JBQVEsQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQzthQUNqRDtZQUNELFFBQVEsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNILElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUU7Z0JBQ25CLFFBQVEsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQzNCLE9BQU87YUFDVjtZQUNELFVBQVU7WUFDVixJQUFJLGtCQUFrQixHQUFHLENBQUMsQ0FBQztZQUMzQixpQkFBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLEdBQVEsRUFBRSxFQUFFO2dCQUN4QyxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQztnQkFDckMsa0JBQWtCLEVBQUUsQ0FBQztnQkFDckIsSUFBSSxrQkFBa0IsR0FBRyxDQUFDLEVBQUU7b0JBQ3hCLFFBQVEsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7aUJBQzlCO1lBQ0wsQ0FBQyxDQUFDLENBQUM7WUFDSCxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLEdBQVEsRUFBRSxFQUFFO2dCQUN4QyxrQkFBa0IsRUFBRSxDQUFDO2dCQUNyQixxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsY0FBYyxHQUFHLEdBQUcsQ0FBQztnQkFDM0MsSUFBSSxrQkFBa0IsR0FBRyxDQUFDLEVBQUU7b0JBQ3hCLFFBQVEsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7aUJBQzlCO1lBQ0wsQ0FBQyxDQUFDLENBQUM7WUFDSCxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLEdBQVEsRUFBRSxFQUFFO2dCQUN6QyxJQUFJLEdBQUcsRUFBRTtvQkFDTCxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUM7b0JBQ25DLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsa0JBQVEsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO29CQUNqRSxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLGtCQUFRLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztvQkFDdEUsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxrQkFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQzVELG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsa0JBQVEsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO29CQUM5RCxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLGtCQUFRLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztvQkFDbkUsNkRBQTZEO2lCQUNoRTtnQkFDRCxrQkFBa0IsRUFBRSxDQUFDO2dCQUNyQixJQUFJLGtCQUFrQixHQUFHLENBQUMsRUFBRTtvQkFDeEIsUUFBUSxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDOUI7WUFDTCxDQUFDLENBQUMsQ0FBQztZQUNILFVBQVU7WUFDVixJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRTtnQkFDbkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDO2dCQUNwRCxJQUFJLGtCQUFrQixHQUFHLENBQUMsRUFBRTtvQkFDeEIsV0FBVyxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztpQkFDckM7WUFDTCxDQUFDLENBQUMsQ0FBQztTQUNOO1FBQ0QsUUFBUTtRQUNSLGlCQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUU7WUFDdEMsa0JBQVEsQ0FBQyxHQUFHLENBQUMsZUFBZSxHQUFHLEdBQUcsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztRQUNILGlCQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUU7WUFDekMsSUFBSSxLQUFLLEdBQWMscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDO1lBQzdDLElBQUksS0FBSyxFQUFFO2dCQUNQLEtBQUssQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQztnQkFDbkMsS0FBSyxDQUFDLHFCQUFxQixHQUFHLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQztnQkFDcEQsS0FBSyxDQUFDLHFCQUFxQixHQUFHLEdBQUcsQ0FBQyxTQUFTLENBQUM7Z0JBQzVDLEtBQUssQ0FBQyxnQkFBZ0IsR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDO2dCQUN2QyxLQUFLLENBQUMscUJBQXFCLEdBQUcsR0FBRyxDQUFDLGFBQWEsQ0FBQztnQkFDaEQsS0FBSyxDQUFDLGtCQUFrQixHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUM7Z0JBQzNDLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztnQkFDMUIsS0FBSyxDQUFDLGdCQUFnQixHQUFHLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQzthQUNqRDtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVNLE1BQU0sQ0FBQyxhQUFhO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUMvQixDQUFDO0lBRUQsV0FBVztJQUNILE1BQU0sQ0FBQyxvQkFBb0I7UUFDL0IsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzlELFFBQVE7UUFDUixJQUFJLFFBQVEsSUFBSSxJQUFJLElBQUksUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUkscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ3RGLE9BQU87U0FDVjthQUFNLElBQUksSUFBSSxDQUFDLGlCQUFpQixJQUFJLFFBQVEsRUFBRTtZQUMzQyxPQUFPLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUM7WUFDdEMsT0FBTztTQUNWO1FBQ0QsSUFBSSxDQUFDLGlCQUFpQixHQUFHLFFBQVEsQ0FBQztRQUNsQyxJQUFJLFVBQVUsR0FBRyxPQUFPLEdBQUcsUUFBUSxDQUFDO1FBQ3BDLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQXlCLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDbkQsSUFBSSxhQUFhLEdBQUcsSUFBSSwyQkFBaUIsQ0FBQyxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdELGFBQWEsQ0FBQyxPQUFPLENBQUM7WUFDbEIsR0FBRyxFQUFFLGNBQWM7WUFDbkIsTUFBTSxFQUFFLE1BQU07WUFDZCxJQUFJLEVBQUUsVUFBVTtZQUNoQixPQUFPLEVBQUUsVUFBVSxHQUFHO2dCQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLDBCQUEwQixFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQ2pELENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxhQUFhO0lBQ0wsTUFBTSxDQUFDLHVCQUF1QjtRQUNsQyxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUNwRSxRQUFRO1FBQ1IsSUFBSSxRQUFRLElBQUksSUFBSSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUM1RixPQUFPO1NBQ1Y7YUFBTSxJQUFJLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxRQUFRLEVBQUU7WUFDM0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1lBQ3RDLE9BQU87U0FDVjtRQUNELElBQUksQ0FBQyxpQkFBaUIsR0FBRyxRQUFRLENBQUM7UUFDbEMsSUFBSSxVQUFVLEdBQUcsT0FBTyxHQUFHLFFBQVEsQ0FBQztRQUNwQyxPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQ25ELElBQUksYUFBYSxHQUFHLElBQUksMkJBQWlCLENBQUMsb0JBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUM3RCxhQUFhLENBQUMsT0FBTyxDQUFDO1lBQ2xCLEdBQUcsRUFBRSxjQUFjO1lBQ25CLE1BQU0sRUFBRSxNQUFNO1lBQ2QsSUFBSSxFQUFFLFVBQVU7WUFDaEIsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQywwQkFBMEIsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUNqRCxDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsZUFBZTtJQUNQLE1BQU0sQ0FBQyx1QkFBdUI7UUFDbEMsSUFBSSxVQUFVLEdBQUcsUUFBUSxHQUFHLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRO1lBQ25ELGFBQWEsR0FBRyxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsU0FBUztZQUMvQyxTQUFTLEdBQUcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVM7WUFDeEMsT0FBTyxHQUFHLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPO1lBQ3BDLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUM7UUFDL0YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUM1QyxJQUFJLGFBQWEsR0FBRyxJQUFJLDJCQUFpQixDQUFDLG9CQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUNsQixHQUFHLEVBQUUsa0JBQWtCO1lBQ3ZCLE1BQU0sRUFBRSxNQUFNO1lBQ2QsSUFBSSxFQUFFLFVBQVU7WUFDaEIsT0FBTyxFQUFFLFVBQVUsR0FBRztnQkFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUN6QyxDQUFDO1lBQ0QsSUFBSSxFQUFFLFVBQVUsR0FBRztnQkFDZixPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQzNDLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsZUFBZTtJQUNSLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFxQjtRQUNoRCxJQUFJLE9BQU8sR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO1FBQ2xDLElBQUksYUFBYSxHQUFHLENBQUMsRUFBRTtZQUNuQixPQUFPLENBQUMsT0FBTyxDQUFDLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxlQUFlLEVBQUUsYUFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7U0FDcEY7YUFBTTtZQUNILE9BQU8sQ0FBQyxVQUFVLENBQUMscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1NBQzdEO0lBQ0wsQ0FBQztJQUVELGVBQWU7SUFDUixNQUFNLENBQUMsZUFBZTtRQUN6QixJQUFJLE9BQU8sR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO1FBQ2xDLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3RFLElBQUksUUFBUSxFQUFFO1lBQ1YsSUFBSSxZQUFZLEdBQVcsa0JBQVEsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDdkQsT0FBTyxDQUFDLFVBQVUsQ0FBQyxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7WUFDMUQsT0FBTyxZQUFZLENBQUM7U0FDdkI7UUFDRCxPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7SUFFRCxhQUFhO0lBQ04sTUFBTSxDQUFDLGFBQWEsQ0FBQyxNQUFjO1FBQ3RDLElBQUksTUFBTSxHQUFHLENBQUM7WUFBRSxPQUFPO1FBQ3ZCLElBQUksT0FBTyxHQUFhLEVBQUUsQ0FBQztRQUMzQixJQUFJLE9BQU8sR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO1FBQ2xDLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3BELElBQUksUUFBUSxFQUFFO1lBQ1YsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQWtCLENBQUM7WUFDcEQsSUFBSSxPQUFPLEVBQUU7Z0JBQ1QsT0FBTyxHQUFHLE9BQU8sQ0FBQzthQUNyQjtTQUNKO1FBQ0QsSUFBSSxPQUFPLEVBQUU7WUFDVCxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3JCLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDdkMsSUFBSSxRQUFRLEVBQUU7Z0JBQ1YsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLFFBQVEsQ0FBQyxDQUFDO2FBQ2xEO1NBQ0o7UUFDRCxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsYUFBYTtJQUNOLE1BQU0sQ0FBQyxZQUFZLENBQUMsV0FBb0IsS0FBSztRQUNoRCxJQUFJLE9BQU8sR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO1FBQ2xDLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3BELElBQUksUUFBUSxFQUFFO1lBQ1YsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQWtCLENBQUM7WUFDcEQsSUFBSSxPQUFPLEVBQUU7Z0JBQ1QsSUFBSSxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssRUFBWSxDQUFDO2dCQUN0QyxNQUFNO2dCQUNOLElBQUksUUFBUSxFQUFFO29CQUNWLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7b0JBQ3ZDLElBQUksUUFBUSxFQUFFO3dCQUNWLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxRQUFRLENBQUMsQ0FBQztxQkFDbEQ7aUJBQ0o7Z0JBQ0QsSUFBSSxLQUFLLEVBQUU7b0JBQ1AsT0FBTyxLQUFLLENBQUM7aUJBQ2hCO2FBQ0o7U0FDSjtRQUNELE9BQU8sQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVELFdBQVc7SUFDSixNQUFNLENBQUMsWUFBWTtRQUN0QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxPQUFPLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztRQUNsQyxJQUFJLFFBQVEsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQ3pELElBQUksV0FBVyxHQUFXLGtCQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ3RELElBQUksV0FBVyxHQUFHLENBQUMsRUFBRTtZQUNqQixPQUFPLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1NBQ2hEO1FBQ0QsT0FBTyxXQUFXLENBQUM7SUFDdkIsQ0FBQztJQUVELGFBQWE7SUFDTixNQUFNLENBQUMsdUJBQXVCO1FBQ2pDLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUNoQixJQUFJLGFBQWEsR0FBRyxJQUFJLDJCQUFpQixDQUFDLG9CQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDN0QsYUFBYSxDQUFDLE9BQU8sQ0FBQztZQUNsQixHQUFHLEVBQUUsVUFBVTtZQUNmLE9BQU8sRUFBRSxVQUFVLEdBQUc7Z0JBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ25DLElBQUksV0FBVyxHQUFHLGtCQUFRLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU07Z0JBQ3JELElBQUksVUFBVSxHQUFHLGtCQUFRLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLFdBQVc7Z0JBQy9ELElBQUksUUFBUSxHQUFHLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQztnQkFDN0Msa0JBQVEsQ0FBQyxZQUFZLEdBQUcsVUFBVSxHQUFHLFFBQVEsQ0FBQztnQkFDOUMsSUFBSSxPQUFPLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztnQkFDbEMsSUFBSSxRQUFRLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7Z0JBQ3BELE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO2dCQUNqQyxJQUFJLFFBQVEsRUFBRTtvQkFDVixXQUFXLEdBQUcsQ0FBQyxDQUFDO29CQUNoQixJQUFJLGdCQUFnQixHQUFHLGtCQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUTtvQkFDNUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsUUFBUSxFQUFFLGdCQUFnQixFQUFFLENBQUMsVUFBVSxHQUFHLGdCQUFnQixDQUFDLEVBQUUsa0JBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztvQkFDNUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLFVBQVUsR0FBRyxnQkFBZ0IsRUFBRTt3QkFDM0QsV0FBVyxHQUFHLFVBQVUsR0FBRyxnQkFBZ0IsQ0FBQztxQkFDL0M7b0JBQ0QsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7aUJBQzNDO2dCQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO2dCQUNsQyxJQUFJLFdBQVcsR0FBRyxDQUFDLEVBQUU7b0JBQ2pCLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLG1CQUFtQixFQUFFLFdBQVcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO29CQUNsRSxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO2lCQUN6RDtnQkFDRCxpQkFBTyxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsRUFBRSxDQUFDO1lBQzNDLENBQUM7WUFDRCxJQUFJLEVBQUUsVUFBVSxHQUFHO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckIsQ0FBQztTQUNKLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxRQUFRO0lBQ0QsTUFBTSxDQUFDLGVBQWU7UUFDekIsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksT0FBTyxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUM7UUFDbEMsSUFBSSxpQkFBaUIsR0FBVyxrQkFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ3RELE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxpQkFBaUIsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCxhQUFhO0lBQ04sTUFBTSxDQUFDLGNBQWM7UUFDeEIsSUFBSSxPQUFPLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQztRQUNsQyxJQUFJLE9BQU8sRUFBRTtZQUNULE9BQU8sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7WUFDMUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDekM7SUFDTCxDQUFDOztBQTlXYyw0QkFBZ0IsR0FBVyxXQUFXLENBQUMsQ0FBQyxVQUFVO0FBQ2xELHdCQUFZLEdBQVcsZUFBZSxDQUFDLENBQUMsTUFBTTtBQUM5QywwQkFBYyxHQUFXLGVBQWUsQ0FBQyxDQUFDLFVBQVU7QUFDcEQsMkJBQWUsR0FBRyxpQkFBaUIsQ0FBQyxDQUFDLE1BQU07QUFDM0MsK0JBQW1CLEdBQUcscUJBQXFCLENBQUMsQ0FBQyxRQUFRO0FBQ3JELDBCQUFjLEdBQUcsZ0JBQWdCLENBQUMsQ0FBQyxTQUFTO0FBQzVDLDBCQUFjLEdBQVksS0FBSyxDQUFDLENBQUMsV0FBVztBQUM1Qyw2QkFBaUIsR0FBVyxFQUFFLENBQUMsQ0FBQyxjQUFjO0FBQzlDLDZCQUFpQixHQUFXLEVBQUUsQ0FBQyxDQUFDLGNBQWM7QUFWakUsOEJBaVhDOzs7OztBQ3BZRDs7RUFFRTtBQUNGO0lBYUk7UUFaQTs7Ozs7OztZQU9JO1FBRUksU0FBSSxHQUFTLEVBQUUsQ0FBQztRQUNoQixXQUFNLEdBQVMsRUFBRSxDQUFDO1FBQ2xCLFNBQUksR0FBVyxDQUFDLENBQUM7SUFDRixDQUFDO0lBRWpCLFlBQVk7UUFDZixNQUFNLE1BQU0sR0FBUSxFQUFFLENBQUM7UUFDdkIsTUFBTSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQ3hCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUM1QixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBRU0sY0FBYyxDQUFDLEdBQVE7UUFDMUIsSUFBSSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQztJQUM3QixDQUFDO0lBRU0sR0FBRyxDQUFDLEdBQVEsRUFBRSxLQUFVO1FBQzNCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUNoQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN4QixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVNLE1BQU0sQ0FBQyxHQUFRO1FBQ2xCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUNoQixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdEMsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDLEVBQUU7WUFDYixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDM0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUNmO0lBQ0wsQ0FBQztJQUVELDZCQUE2QjtJQUN0QixXQUFXLENBQUMsR0FBTztRQUN0QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3RDLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQyxFQUFFO1lBQ2IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzdCO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVNLFNBQVMsQ0FBQyxLQUFTO1FBQ3RCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUNoQixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDMUMsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDLEVBQUU7WUFDYixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0I7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBQ0Q7Ozs7Ozs7Ozs7O09BV0c7SUFDSSxxQkFBcUIsQ0FBQyxLQUE2QjtRQUN0RCxJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ2QsS0FBSyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ3ZCLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUNWLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQ3pCO1NBQ0o7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBQ00sb0JBQW9CLENBQUMsS0FBNkI7UUFDckQsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksR0FBRyxHQUFRLEVBQUUsQ0FBQztRQUNsQixLQUFLLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDckIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ3BDLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDM0IsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDL0I7U0FDSjtRQUNELE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQztJQUNEOzs7Ozs7Ozs7OztPQVdHO0lBQ0ksd0JBQXdCLENBQUMsS0FBeUI7UUFDckQsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQztRQUNkLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUV2QyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUN0QztTQUNKO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVELGdDQUFnQztJQUN6QixXQUFXLENBQUMsR0FBUTtRQUN2QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUNuQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsRUFBRTtZQUNoQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLEVBQUU7Z0JBQ2QsT0FBTyxJQUFJLENBQUM7YUFDZjtTQUNKO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVEOztxREFFaUQ7SUFDMUMsV0FBVyxDQUFDLEdBQVEsRUFBRSxLQUFVO1FBQ25DLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUN0QyxJQUFJLEtBQUssSUFBSSxDQUFDLENBQUMsRUFBRTtZQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDO1lBQzNCLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7UUFDRCxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNyQixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQsZ0NBQWdDO0lBQ3pCLFNBQVM7UUFDWixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsS0FBSyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMzQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN4QixJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUU7b0JBQ2pELElBQUksTUFBTSxHQUFRLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQy9CLElBQUksUUFBUSxHQUFRLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ25DLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ2hDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ3BDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQztvQkFDMUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDO2lCQUNqQzthQUNKO1NBQ0o7UUFDRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRU0sU0FBUztRQUNaLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDO0lBRU0sZUFBZSxDQUFDLEtBQWE7UUFDaEMsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLElBQUksS0FBSyxHQUFHLENBQUMsSUFBSSxLQUFLLElBQUksSUFBSSxDQUFDLElBQUksRUFBRTtZQUNqQyxPQUFPO1NBQ1Y7UUFDRCxJQUFJLEtBQUssR0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25DLE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFFTSxhQUFhLENBQUMsS0FBYTtRQUM5QixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxLQUFLLEdBQUcsQ0FBQyxJQUFJLEtBQUssSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2pDLE9BQU87U0FDVjtRQUNELElBQUksS0FBSyxHQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDakMsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVNLFNBQVM7UUFDWixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDdkIsQ0FBQztJQUNNLE9BQU87UUFDVixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDckIsQ0FBQztJQUVNLEtBQUs7UUFDUixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDekIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUNuQjtRQUVELE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzNCLElBQUksRUFBRSxHQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUM7WUFDL0IsRUFBRSxHQUFHLElBQUksQ0FBQztTQUNiO1FBQ0QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUN2QixJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUNsQixDQUFDO0NBQ0o7QUE5TUQsK0JBOE1DOzs7OztBQ2pORDtJQUlJLG1CQUFtQjtJQUNaLE1BQU0sQ0FBQyxhQUFhLENBQUMsS0FBYSxFQUFFLFVBQW1CLEtBQUs7UUFDL0QsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDcEMsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ3pDLElBQUksR0FBRyxHQUFHLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDckIsSUFBSSxPQUFPLEVBQUU7WUFDVCxPQUFPLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDbkk7YUFBTTtZQUNILE9BQU8sQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ3pGO0lBQ0wsQ0FBQztJQUVELHVCQUF1QjtJQUNoQixNQUFNLENBQUMsVUFBVTtRQUNwQixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzdCLENBQUM7SUFFRCxnQkFBZ0I7SUFDVCxNQUFNLENBQUMsVUFBVTtRQUNwQixJQUFJLElBQUksR0FBRyxJQUFJLENBQUM7UUFDaEIsSUFBSSxRQUFRLEdBQVcsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBQ3JELE9BQU8sQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDMUMsQ0FBQzs7QUF6QmEscUJBQVksR0FBVyxDQUFDLENBQUMsQ0FBQyxZQUFZO0FBRnhELDJCQTZCQzs7Ozs7QUM1QkQseUVBQWtFO0FBRWxFO0lBUUksV0FBVztJQUNYO1FBQ0ksSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVEOzs7O0lBSUE7SUFDTyxRQUFRLENBQUMsR0FBVyxFQUFFLElBQWU7UUFDeEMsSUFBSSxJQUFJLElBQUksSUFBSSxFQUFFO1lBQ2QsT0FBTztTQUNWO1FBQ0QsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ2xCLE9BQU87U0FDVjtRQUNELElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDO0lBQzVCLENBQUM7SUFFRDs7O09BR0c7SUFDSSxVQUFVLENBQUMsR0FBVztRQUN6QixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNuQixPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUN4QixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxJQUFJLENBQUMsR0FBVyxFQUFFLFdBQXFCLElBQUksRUFBRSxHQUFHLEtBQVk7UUFDL0QsSUFBSSxJQUFJLEdBQWMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN4QyxJQUFJLElBQUksSUFBSSxJQUFJLEVBQUU7WUFDZCxPQUFPO1NBQ1Y7UUFDRCxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUNmLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNkLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztZQUM3QixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDaEIsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUVELElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQ2YsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ25CLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO1lBQ3pCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNkLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUNqQixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDN0IsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ25CO2FBQ0k7WUFDRCxzQkFBWSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUMvQixJQUFJLENBQUMsWUFBWSxDQUFDO2dCQUNkLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ3ZCLHFCQUFxQjtnQkFDckIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ1YsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7Z0JBQ3pCLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztnQkFDZCxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7Z0JBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztnQkFDN0IsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO2dCQUNoQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN0QixzQkFBWSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUNuQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7U0FDakI7UUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN0QixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLE9BQU8sQ0FBQyxHQUFXO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxLQUFLLENBQUMsR0FBVyxFQUFFLEdBQUcsS0FBWTtRQUNyQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNuQixPQUFPO1NBQ1Y7UUFFRCxJQUFJLElBQUksR0FBYyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3hDLElBQUksSUFBSSxJQUFJLElBQUksRUFBRTtZQUNkLE9BQU87U0FDVjtRQUVELElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pDLElBQUksU0FBUyxJQUFJLENBQUMsRUFBRTtZQUNoQixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDcEM7UUFFRCxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsR0FBVztRQUNyQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxlQUFlO0lBQ1IsV0FBVztRQUNkLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7SUFDOUIsQ0FBQztJQUVELFdBQVc7SUFDSixLQUFLO1FBQ1IsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2hCLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxpQkFBaUI7SUFDVixRQUFRO1FBQ1gsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtZQUN2QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUM5QjtJQUNMLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksT0FBTyxDQUFDLEdBQVcsRUFBRSxVQUFxQixJQUFJO1FBQ2pELElBQUksT0FBTyxHQUFjLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDM0MsSUFBSSxPQUFPLEVBQUU7WUFDVCxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JCLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNsQixPQUFPLEdBQUcsSUFBSSxDQUFDO1NBQ2xCO1FBQ0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUdNLE1BQU0sS0FBSyxHQUFHO1FBQ2pCLElBQUksT0FBTyxDQUFDLFNBQVMsSUFBSSxJQUFJLEVBQUU7WUFDM0IsT0FBTyxDQUFDLFNBQVMsR0FBRyxJQUFJLE9BQU8sRUFBRSxDQUFDO1NBQ3JDO1FBQ0QsT0FBTyxPQUFPLENBQUMsU0FBUyxDQUFDO0lBQzdCLENBQUM7Q0FDSjtBQTNLRCwwQkEyS0M7Ozs7O0FDOUtELDhEQUF1RDtBQUN2RCx1Q0FBZ0M7QUFDaEMsaURBQTBDO0FBQzFDLDRFQUFxRTtBQUNyRSw2RUFBc0U7QUFDdEUsdUVBQWdFO0FBQ2hFLDhEQUF1RDtBQUN2RCxvRUFBNkQ7QUFDN0QsOERBQXVEO0FBQ3ZELGtGQUEyRTtBQUMzRSw4RUFBdUU7QUFDdkUsa0ZBQTJFO0FBQzNFLHNFQUErRDtBQUMvRCxvRUFBNkQ7QUFFN0Q7O0dBRUc7QUFDSDtJQUdJLGNBQWM7SUFDUCxnQkFBZ0I7UUFDbkIsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsUUFBUSxFQUFFLElBQUksa0JBQVEsRUFBRSxDQUFDLENBQUM7UUFDekQsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsY0FBYyxFQUFFLElBQUksd0JBQWMsRUFBRSxDQUFDLENBQUM7UUFDckUsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsYUFBYSxFQUFFLElBQUksdUJBQWEsRUFBRSxDQUFDLENBQUM7UUFDbkUsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsV0FBVyxFQUFFLElBQUkscUJBQVcsRUFBRSxDQUFDLENBQUM7UUFDL0QsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsUUFBUSxFQUFFLElBQUksa0JBQVEsRUFBRSxDQUFDLENBQUM7UUFDekQsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsVUFBVSxFQUFFLElBQUksb0JBQVUsRUFBRSxDQUFDLENBQUM7UUFDN0QsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsUUFBUSxFQUFFLElBQUksa0JBQVEsRUFBRSxDQUFDLENBQUM7UUFDekQsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsaUJBQWlCLEVBQUUsSUFBSSwyQkFBaUIsRUFBRSxDQUFDLENBQUM7UUFDM0UsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsZUFBZSxFQUFFLElBQUkseUJBQWUsRUFBRSxDQUFDLENBQUM7UUFDdkUsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsaUJBQWlCLEVBQUUsSUFBSSwyQkFBaUIsRUFBRSxDQUFDLENBQUM7UUFDM0UsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsWUFBWSxFQUFFLElBQUksc0JBQVksRUFBRSxDQUFDLENBQUM7UUFDakUsaUJBQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsV0FBVyxFQUFFLElBQUkscUJBQVcsRUFBRSxDQUFDLENBQUM7SUFFbkUsQ0FBQztJQUdNLE1BQU0sS0FBSyxHQUFHO1FBQ2pCLElBQUksZUFBZSxDQUFDLFNBQVMsSUFBSSxJQUFJLEVBQUU7WUFDbkMsZUFBZSxDQUFDLFNBQVMsR0FBRyxJQUFJLGVBQWUsRUFBRSxDQUFDO1NBQ3JEO1FBQ0QsT0FBTyxlQUFlLENBQUMsU0FBUyxDQUFDO0lBQ3JDLENBQUM7Q0FDSjtBQTNCRCxrQ0EyQkM7Ozs7O0FDNUNELDBEQUFtRDtBQUNuRCx1REFBZ0Q7QUFFaEQsbURBQTRDO0FBRTVDLGNBQThCLFNBQVEsSUFBSSxDQUFDLElBQUk7SUFZM0MsV0FBVztJQUNYLFlBQW1CLE1BQWEsRUFBRSxNQUFXLEVBQUUsYUFBc0IsSUFBSTtRQUNyRSxLQUFLLEVBQUUsQ0FBQztRQVhMLG1CQUFjLEdBQVksSUFBSSxDQUFDO1FBSTlCLGVBQVUsR0FBYSxJQUFJLENBQUM7UUFRaEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUM7UUFDeEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDckIsSUFBSSxDQUFDLFdBQVcsR0FBRyxVQUFVLENBQUM7UUFDOUIsSUFBSSxDQUFDLEdBQUcsR0FBRyxNQUFNLENBQUM7UUFDbEIsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFFRCxhQUFhO0lBQ2IsSUFBVyxRQUFRO1FBQ2YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQzFCLENBQUM7SUFFRCxZQUFZO0lBQ0wsV0FBVztRQUNkLG9CQUFVLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDdEMsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxTQUFTLFlBQVksbUJBQVMsRUFBRTtZQUN6RCxJQUFJLENBQUMsU0FBUyxDQUFDLG9CQUFvQixDQUFDLElBQUksRUFBRSxHQUFHLEVBQUU7Z0JBQzNDLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO2dCQUN4QixJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDakIsQ0FBQyxDQUFDLENBQUM7U0FDTjthQUFNO1lBQ0gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDakM7SUFDTCxDQUFDO0lBRUQsY0FBYztJQUNQLFVBQVU7UUFDYixJQUFJO1lBQ0EsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUM3QjtRQUFDLE9BQU8sS0FBSyxFQUFFO1NBRWY7Z0JBQVM7WUFDTixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUN4Qiw0Q0FBNEM7U0FDL0M7SUFDTCxDQUFDO0lBRUQsWUFBWTtJQUNMLGdCQUFnQjtRQUNuQixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVELHdCQUF3QjtJQUNqQixNQUFNO1FBQ1QsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDeEIsQ0FBQztJQUVELHVCQUF1QjtJQUNoQixRQUFRO1FBQ1gsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDeEIsQ0FBQztJQUVELGFBQWE7SUFDTixTQUFTLEtBQVcsQ0FBQztJQUU1QixhQUFhO0lBQ04sWUFBWSxLQUFXLENBQUM7SUFFL0IsY0FBYztJQUNQLE1BQU07UUFDVCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDeEIsQ0FBQztJQUVELGFBQWE7SUFDTixNQUFNO1FBQ1QsT0FBTyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9FLENBQUM7SUFFRCxzQkFBc0I7SUFDZixJQUFJLENBQUMsR0FBRyxLQUFZO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ3hCLENBQUM7SUFFRCxhQUFhO0lBQ04sVUFBVSxDQUFDLEtBQWM7UUFDNUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7SUFDekIsQ0FBQztJQUVELGVBQWU7SUFDUixZQUFZLENBQUMsU0FBbUI7UUFDbkMsSUFBSSxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUM7SUFDaEMsQ0FBQztJQUVELGVBQWU7SUFDUixZQUFZLENBQUMsWUFBc0IsRUFBRSxZQUFzQjtRQUM5RCxJQUFJLElBQUksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQy9DLGtCQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsR0FBRyxFQUFFO2dCQUNyQyxZQUFZLElBQUksWUFBWSxFQUFFLENBQUM7Z0JBQy9CLFlBQVksSUFBSSxZQUFZLEVBQUUsQ0FBQztZQUNuQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDWjthQUFNO1lBQ0gsWUFBWSxJQUFJLFlBQVksRUFBRSxDQUFDO1lBQy9CLFlBQVksSUFBSSxZQUFZLEVBQUUsQ0FBQztTQUNsQztJQUNMLENBQUM7SUFFRCxzQkFBc0I7SUFDZixLQUFLLENBQUMsR0FBRyxLQUFZO1FBQ3hCLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUNwQixJQUFJLElBQUksQ0FBQyxjQUFjLEVBQUU7WUFDckIsdUNBQXVDO1NBQzFDO0lBQ0wsQ0FBQztJQUVELFNBQVM7SUFDRixPQUFPO1FBQ1YsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDdEIsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUM7UUFDaEIsdUNBQXVDO0lBQzNDLENBQUM7SUFFRCxJQUFXLEVBQUUsS0FBVSxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3pDLElBQVcsRUFBRSxDQUFDLEtBQVUsSUFBSSxJQUFJLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFFL0MsSUFBVyxLQUFLLEtBQVksT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNqRCxJQUFXLEtBQUssQ0FBQyxLQUFZLElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO0NBQzFEO0FBcklELDJCQXFJQzs7Ozs7QUMzSUQ7O0FBQ0ksU0FBUztBQUNLLGtCQUFRLEdBQVcsS0FBSyxDQUFDO0FBQ3ZDLGFBQWE7QUFDQyx3QkFBYyxHQUFXLEtBQUssQ0FBQztBQUM3QyxhQUFhO0FBQ0MsdUJBQWEsR0FBVyxLQUFLLENBQUM7QUFDNUMsYUFBYTtBQUNDLDZCQUFtQixHQUFXLEtBQUssQ0FBQztBQUNsRCxhQUFhO0FBQ0MscUJBQVcsR0FBVyxLQUFLLENBQUM7QUFDMUMsV0FBVztBQUNHLGtCQUFRLEdBQVcsS0FBSyxDQUFDO0FBQ3ZDLGFBQWE7QUFDQyxvQkFBVSxHQUFXLEtBQUssQ0FBQztBQUN6QyxVQUFVO0FBQ0ksa0JBQVEsR0FBVyxLQUFLLENBQUM7QUFDdkMsV0FBVztBQUNHLDJCQUFpQixHQUFXLEtBQUssQ0FBQztBQUNoRCxhQUFhO0FBQ0MseUJBQWUsR0FBVyxLQUFLLENBQUM7QUFDOUMsYUFBYTtBQUNDLDJCQUFpQixHQUFXLEtBQUssQ0FBQztBQUNoRCxhQUFhO0FBQ0Msc0JBQVksR0FBVyxLQUFLLENBQUM7QUFDM0MsWUFBWTtBQUNFLHFCQUFXLEdBQVcsS0FBSyxDQUFDO0FBMUI5Qyw0QkE2QkM7Ozs7O0FDN0JELGdFQUF5RDtBQUV6RDtJQUFBO1FBSVksZ0JBQVcsR0FBWSxLQUFLLENBQUMsQ0FBQyxJQUFJO1FBQ2xDLGVBQVUsR0FBWSxLQUFLLENBQUMsQ0FBQyxJQUFJO0lBK0Q3QyxDQUFDO0lBNURHLElBQVcsS0FBSyxDQUFDLEtBQVU7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7UUFDdEIseUJBQXlCO1FBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFDTyxRQUFRO1FBQ1osSUFBSSxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQTtRQUMzRSxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzlELElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDMUQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNoRSxDQUFDO0lBQ08sU0FBUztRQUNiLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBQ08sT0FBTztRQUNYLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNsQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDdEI7UUFDRCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztJQUM3QixDQUFDO0lBQ08sUUFBUTtRQUNaLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNsQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDdEI7UUFDRCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUN6QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztJQUMzQixDQUFDO0lBQ08sU0FBUztRQUNiLElBQUksSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNqQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFO2dCQUMzQixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7YUFDckI7aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO2FBQ3RCO1NBQ0o7SUFDTCxDQUFDO0lBQ08sVUFBVTtRQUNkLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxHQUFHLElBQUksRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztZQUNsRixJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sR0FBRyxtQkFBUyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzFEO0lBQ0wsQ0FBQztJQUNPLFdBQVc7UUFDZixJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDZixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3BFLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztTQUM5QjtJQUNMLENBQUM7SUFDRCxNQUFNO0lBQ0UsS0FBSyxDQUFDLFNBQW1CLEVBQUUsUUFBZ0IsQ0FBQyxFQUFFLFFBQWdCLENBQUM7UUFDbkUsSUFBSSxTQUFTLEVBQUU7WUFDWCxJQUFJLFFBQVEsR0FBZSxTQUFTLENBQUMsYUFBYSxFQUFFLENBQUM7WUFDckQsSUFBSSxTQUFTLEdBQW1CLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxHQUFHLENBQUMsRUFDM0UsU0FBUyxDQUFDLEtBQUssR0FBRyxLQUFLLEVBQUUsU0FBUyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQztZQUN2RCxPQUFPLFNBQVMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDckQ7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0NBQ0o7QUFwRUQsa0NBb0VDOzs7OztBQ3RFRCxrRUFBMkQ7QUFDM0QsOERBQXVEO0FBQ3ZELHFEQUEyQztBQUMzQyx3REFBaUQ7QUFDakQsOERBQXVEO0FBQ3ZELGlFQUEwRDtBQUMxRCwwREFBbUQ7QUFDbkQsd0RBQWlEO0FBRWpELCtEQUF3RDtBQUV4RCxvQkFBb0MsU0FBUSxrQkFBUTtJQU1oRDtRQUNJLEtBQUssQ0FBQyxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsY0FBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztRQUpyRSxXQUFNLEdBQVcsQ0FBQyxDQUFDO0lBSzNCLENBQUM7SUFFTSxRQUFRO1FBQ1gsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzQixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDWixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLE1BQU0sRUFBRTtnQkFDM0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxvQkFBVSxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNqRixJQUFJLENBQUMsTUFBTSxHQUFHLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDL0ksSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxHQUFHLGtCQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDaEUsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO29CQUNsQixJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO2lCQUN6RDthQUNKO1NBQ0o7SUFDTCxDQUFDO0lBRU0sU0FBUztRQUNaLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFFTSxZQUFZO1FBQ2YsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDbkUsQ0FBQztJQUVPLFlBQVk7UUFDaEIsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxNQUFNLEVBQUU7WUFDM0IsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQ3pCO0lBQ0wsQ0FBQztJQUVPLGNBQWM7UUFDbEIsSUFBSSxZQUFZLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDM0MsSUFBSSxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLFlBQVksRUFBRTtZQUNoRCxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxHQUFRLEVBQUUsRUFBRTtnQkFDMUQsSUFBSSxHQUFHLEVBQUU7b0JBQ0wsSUFBSSxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJO3dCQUFFLE9BQU87b0JBQ2pFLGlCQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFTLEVBQUUsRUFBRTt3QkFDdEQsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFOzRCQUNsQixnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxDQUFDO3lCQUNoRTs2QkFBTTs0QkFDSCxnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7eUJBQ2hDO3dCQUNELGlCQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFLENBQUM7d0JBQ2pDLFFBQVE7d0JBQ1IscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO29CQUN2RSxDQUFDLENBQUMsQ0FBQztpQkFDTjtxQkFBTTtvQkFDSCxnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQzlCO1lBQ0wsQ0FBQyxDQUFDLENBQUM7U0FDTjthQUFNO1lBQ0gsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFBO1NBQ3RDO0lBQ0wsQ0FBQztDQUNKO0FBL0RELGlDQStEQzs7Ozs7QUMxRUQsa0VBQTJEO0FBQzNELDhEQUF1RDtBQUN2RCxxREFBMkM7QUFDM0Msd0RBQWlEO0FBRWpELDhEQUF1RDtBQUN2RCw0REFBcUQ7QUFDckQsd0RBQWlEO0FBRWpEOztHQUVHO0FBQ0gsdUJBQXVDLFNBQVEsa0JBQVE7SUFJbkQ7UUFDSSxLQUFLLENBQUMsa0JBQVEsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLGNBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFIeEUsVUFBSyxHQUFXLENBQUMsQ0FBQztJQUkxQixDQUFDO0lBRU0sTUFBTTtRQUNULEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNmLElBQUksRUFBRSxHQUFpQixxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsaUJBQWlCLENBQUMscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2hHLElBQUksRUFBRSxFQUFFO1lBQ0osSUFBSSxLQUFLLEdBQVcscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQTtZQUN2SCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssR0FBRyxHQUFHLENBQUM7WUFDekIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLGtCQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNoRTtRQUNELElBQUksSUFBSSxHQUFHLGtCQUFRLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN0QyxJQUFJLElBQUksRUFBRTtZQUNOLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxRQUFRLENBQUM7U0FDbkM7YUFBTTtZQUNILElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxRQUFRLENBQUM7U0FDbkM7UUFDRCxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFDckMsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxPQUFPLEVBQUU7WUFDOUIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsSUFBSSxHQUFHLE1BQU0sR0FBRyxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxDQUFDO1NBQzdFO0lBQ0wsQ0FBQztJQUVNLFNBQVM7UUFDWixJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBRU0sWUFBWTtRQUNmLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFFTyxXQUFXO1FBQ2Ysa0JBQVEsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUU7WUFDckMsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztZQUM5RCxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNsRCxDQUFDLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQztJQUN4QixDQUFDO0NBQ0o7QUExQ0Qsb0NBMENDOzs7OztBQ3RERCxrRUFBMkQ7QUFDM0QsOERBQXVEO0FBQ3ZELHFEQUEyQztBQUUzQyxpRUFBMEQ7QUFDMUQsOERBQXVEO0FBQ3ZELHdEQUFpRDtBQUNqRCxnRUFBeUQ7QUFDekQsZ0VBQXlEO0FBQ3pELDJEQUFvRDtBQUNwRCxxRUFBOEQ7QUFDOUQsNERBQXFEO0FBQ3JELHdEQUFpRDtBQUNqRCwwREFBbUQ7QUFFbkQ7O0dBRUc7QUFDSCxxQkFBcUMsU0FBUSxrQkFBUTtJQU1qRDtRQUNJLEtBQUssQ0FBQyxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsY0FBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUh0RSxvQkFBZSxHQUFZLEtBQUssQ0FBQztJQUl6QyxDQUFDO0lBRU0sUUFBUTtRQUNYLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUIsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1NBRWxCO0lBQ0wsQ0FBQztJQUVPLFFBQVE7UUFDWixJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEdBQUcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ25GLElBQUksT0FBTyxHQUFXLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM3RCxJQUFJLFVBQVUsR0FBRyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQzdCLElBQUksVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNwQixJQUFJLFVBQVUsR0FBWSxLQUFLLENBQUMsQ0FBQyxPQUFPO1FBRXhDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDbkQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDbkUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLGtCQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM1RCxJQUFJLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUV2RSxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQyxJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWpDLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ25DLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7SUFDdkMsQ0FBQztJQUVNLFNBQVM7UUFDWixJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM3RCxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ3hFLENBQUM7SUFFTSxZQUFZO1FBQ2YsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDOUQsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUN6RSxDQUFDO0lBRUQsYUFBYTtJQUNMLFdBQVc7UUFDZixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDNUMsbUJBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO1NBQzdGO1FBQ0QsSUFBSSxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRTtZQUNoQixxQkFBVyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztZQUM5QyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQztTQUNsQjtRQUNELElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDaEMsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFTyxnQkFBZ0I7UUFDcEIsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBUyxFQUFFLEVBQUU7WUFDakMsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLEtBQUssU0FBUyxFQUFFO2dCQUM1QyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQztnQkFDcEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztnQkFDbEMsaUJBQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztnQkFDakMsaUJBQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO2FBQ3pEO1FBQ0wsQ0FBQyxFQUFFLEdBQUcsRUFBRTtZQUNKLE9BQU87WUFDUCxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDMUIsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDckIsQ0FBQztJQUVPLGNBQWM7UUFDbEIsa0JBQVEsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUU7WUFDckMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7WUFDcEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUNsQyxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO1FBQ3JDLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVPLFNBQVM7UUFDYixJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUU7WUFDdEIsaUJBQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLG1CQUFTLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDaEQ7UUFDRCxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztJQUNoQyxDQUFDO0NBQ0o7QUExRkQsa0NBMEZDOzs7OztBQzVHRCxrRUFBMkQ7QUFDM0QsOERBQXVEO0FBQ3ZELHFEQUEyQztBQUMzQyw4REFBdUQ7QUFDdkQsNERBQXFEO0FBQ3JELHdEQUFpRDtBQUNqRCx3REFBaUQ7QUFFakQ7O0dBRUc7QUFDSCx1QkFBdUMsU0FBUSxrQkFBUTtJQUluRDtRQUNJLEtBQUssQ0FBQyxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsY0FBRSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztRQUh4RSxVQUFLLEdBQVcsQ0FBQyxDQUFDO0lBSTFCLENBQUM7SUFFTSxRQUFRO1FBQ1gsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsa0JBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFFTSxTQUFTO1FBQ1osSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDakUsQ0FBQztJQUVNLFlBQVk7UUFDZixJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBRU8sV0FBVztRQUNmLGtCQUFRLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUFHLEVBQUU7WUFDN0IsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxrQkFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztZQUNuRSxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNsRCxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUE7SUFDVCxDQUFDO0NBQ0o7QUE1QkQsb0NBNEJDOzs7OztBQ3ZDRCxxREFBMkM7QUFDM0MsK0NBQXdDO0FBQ3hDLDBEQUFtRDtBQUNuRCx3REFBaUQ7QUFDakQsMkRBQW9EO0FBQ3BELHFFQUE4RDtBQUM5RCxnRUFBeUQ7QUFDekQsZ0VBQXlEO0FBRXpELGlCQUFpQyxTQUFRLGNBQUUsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLGFBQWE7SUFNeEU7UUFBZ0IsS0FBSyxFQUFFLENBQUM7UUFIaEIsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUNyQixTQUFJLEdBQVcsQ0FBQyxDQUFDO0lBRUEsQ0FBQztJQUUxQixJQUFJLFVBQVUsQ0FBQyxLQUFVO1FBQ3JCLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO1FBQ2xCLElBQUksQ0FBQyxRQUFRLEdBQUcscUJBQVcsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO1FBQzVDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQzVDLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQzVDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLG9DQUFvQyxDQUFDO1lBQ3pELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxHQUFHLGtDQUFrQyxDQUFDO1lBQ3RELElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLHFCQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO2dCQUNyRixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7Z0JBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7Z0JBQzFELG1CQUFTLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxtQkFBUyxDQUFDLHVCQUF1QixFQUFFLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsQ0FBQzthQUNoRztTQUNKO0lBQ0wsQ0FBQztJQUVPLFdBQVc7UUFDZixJQUFJLHFCQUFXLENBQUMsUUFBUSxJQUFJLHFCQUFXLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtZQUNuRCxJQUFJLEdBQUcsR0FBVyxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO1lBQ2hELGlCQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFO2dCQUMxQyxJQUFJLElBQUksRUFBRTtvQkFDTixJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxFQUFFO3dCQUNoQixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztxQkFDOUI7eUJBQU0sSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsRUFBRTt3QkFDdkIsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO3FCQUNuQzt5QkFBTTt3QkFDSCxnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7cUJBQ2xDO2lCQUNKO1lBQ0wsQ0FBQyxDQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7SUFFTyxtQkFBbUI7UUFDdkIsaUJBQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztRQUNqQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDM0IsaUJBQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLG1CQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDekMsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkQsQ0FBQztDQUNKO0FBL0NELDhCQStDQzs7Ozs7QUN4REQsa0VBQTJEO0FBQzNELDhEQUF1RDtBQUN2RCxxREFBMkM7QUFFM0MsMkRBQW9EO0FBQ3BELHFFQUE4RDtBQUM5RCwwREFBbUQ7QUFDbkQsd0RBQWlEO0FBQ2pELGdFQUF5RDtBQUN6RCxnRUFBeUQ7QUFFekQ7O0dBRUc7QUFDSCxpQkFBaUMsU0FBUSxrQkFBUTtJQUk3QztRQUNJLEtBQUssQ0FBQyxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsY0FBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDcEUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVNLE1BQU07UUFDVCxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7UUFFZixpQkFBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQyxJQUFTLEVBQUUsRUFBRTtZQUN0QyxXQUFXLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztZQUM1QixJQUFJLFdBQVcsQ0FBQyxRQUFRLEVBQUU7Z0JBQ3RCLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3pDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7Z0JBQ3hGLElBQUksQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ3JFLElBQUksQ0FBQyxJQUFJLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRTtvQkFDcEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxHQUFHLG9DQUFvQyxDQUFDO29CQUNoRSxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEdBQUcsa0NBQWtDLENBQUM7b0JBQ3pELElBQUksQ0FBQyxJQUFJLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO3dCQUM3RSxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO3dCQUMvQixJQUFJLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztxQkFDcEU7aUJBQ0o7YUFDSjtRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVNLFNBQVM7UUFDWixJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM3RCxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN0RSxDQUFDO0lBRU0sWUFBWTtRQUNmLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzlELElBQUksQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ2xFLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCxXQUFXO0lBQ0gsV0FBVztRQUNmLElBQUksV0FBVyxDQUFDLFFBQVEsSUFBSSxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRTtZQUNuRCxJQUFJLEdBQUcsR0FBVyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7WUFDaEQsaUJBQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUU7Z0JBQzFDLElBQUksSUFBSSxFQUFFO29CQUNOLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLEVBQUU7d0JBQ2hCLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRTs0QkFDVCxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO3lCQUM3RDs2QkFBTTs0QkFDSCxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDOzRCQUNqQyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDOzRCQUM5QixpQkFBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsbUJBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQzs0QkFDekMsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLGNBQWMsR0FBRyxXQUFXLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO3lCQUMzRTtxQkFDSjt5QkFBTSxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxFQUFFO3dCQUN2QixnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7cUJBQ25DO3lCQUFNO3dCQUNILGdCQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztxQkFDbEM7aUJBQ0o7WUFDTCxDQUFDLENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQztJQUVPLGNBQWM7UUFDbEIsaUJBQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLG1CQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVPLFlBQVksQ0FBQyxJQUFjLEVBQUUsS0FBYTtRQUM5QyxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFO1lBQ3BDLE9BQU87U0FDVjtRQUNELElBQUksSUFBSSxHQUFnQixJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBZ0IsQ0FBQztRQUNuRSxJQUFJLElBQUksRUFBRTtZQUNOLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN0QyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztTQUMxQjtJQUNMLENBQUM7O0FBN0VhLG9CQUFRLEdBQVEsSUFBSSxDQUFDO0FBRnZDLDhCQWdGQzs7Ozs7QUM5RkQsa0VBQTJEO0FBQzNELDhEQUF1RDtBQUN2RCxxREFBMkM7QUFDM0MsMkRBQW9EO0FBQ3BELHFFQUE4RDtBQUM5RCwwREFBbUQ7QUFFbkQsZ0JBQWdDLFNBQVEsa0JBQVE7SUFFNUM7UUFDSSxLQUFLLENBQUMsa0JBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLGNBQUUsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3RFLENBQUM7SUFFTSxNQUFNO1FBQ1QsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ25CLENBQUM7SUFFTSxTQUFTO1FBQ1osSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUVNLFlBQVk7UUFDZixJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM5RCxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRU8sV0FBVztRQUNmLGlCQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixFQUFFLENBQUM7SUFDNUMsQ0FBQztJQUVPLGNBQWM7UUFDbEIsaUJBQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLG1CQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDNUMsQ0FBQztDQUNKO0FBM0JELDZCQTJCQzs7Ozs7QUNsQ0QscURBQTJDO0FBQzNDLGtFQUEyRDtBQUUzRDs7R0FFRztBQUNILG9CQUFvQyxTQUFRLGNBQUUsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLGdCQUFnQjtJQUs1RTtRQUNJLEtBQUssRUFBRSxDQUFDO0lBQ1osQ0FBQztJQUVELFFBQVE7UUFDSixvQkFBVSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQzlGLENBQUM7SUFFRCxhQUFhO0lBQ04sZUFBZSxDQUFDLE9BQWUsRUFBRSxnQkFBMEIsSUFBSTtRQUNsRSxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQztRQUN4QixJQUFJLENBQUMsY0FBYyxHQUFHLGFBQWEsQ0FBQztRQUNwQyxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDbEIsb0JBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztTQUM3RjtJQUNMLENBQUM7Q0FDSjtBQXJCRCxpQ0FxQkM7Ozs7O0FDM0JELGlEQUEwQztBQUUxQyw0REFBcUQ7QUFHckQsOERBQXVEO0FBQ3ZELDZEQUFzRDtBQUN0RCw2REFBc0Q7QUFFdEQscUVBQThEO0FBQzlELDJEQUFvRDtBQUNwRCxxREFBOEM7QUFDOUMsaUVBQTBEO0FBRTFELDJEQUFvRDtBQUNwRCw2REFBc0Q7QUFDdEQseURBQWtEO0FBQ2xELHdEQUFpRDtBQUNqRCxrRUFBMkQ7QUFDM0QsK0RBQXdEO0FBQ3hELDJEQUFvRDtBQUlwRCxpQkFBaUMsU0FBUSxJQUFJLENBQUMsTUFBTTtJQVNoRDtRQUNJLEtBQUssRUFBRSxDQUFDO1FBTlosYUFBYTtRQUNMLHdCQUFtQixHQUFrQixJQUFJLENBQUM7UUFDMUMscUJBQWdCLEdBQVcsQ0FBQyxDQUFDO1FBS2pDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBQ0QsT0FBTztRQUNILElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNyQixDQUFDO0lBRU8sU0FBUztRQUNiLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLEVBQUU7WUFDckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLG1CQUFTLEVBQUUsQ0FBQztTQUNqQztJQUNMLENBQUM7SUFFRCxXQUFXO0lBQ0osT0FBTyxDQUFDLFFBQXNCO1FBQ2pDLElBQUksUUFBUSxFQUFFO1lBQ1YsSUFBSSxRQUFRLEdBQVcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQ25ILElBQUksbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxRQUFRLEVBQUU7Z0JBQ3pDLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSTtvQkFBRSxPQUFPO2dCQUNqRCxJQUFJLENBQUMsVUFBVSxDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLENBQUM7Z0JBQ3hELElBQUksQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUM5QyxRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUN2RyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUcsa0JBQVEsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ2xFLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUEsTUFBTTthQUNqRjtpQkFBTTtnQkFDSCxJQUFJLGtCQUFRLENBQUMsR0FBRyxDQUFDLGFBQWEsSUFBSSxDQUFDLGtCQUFRLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLElBQUksa0JBQVEsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFO29CQUN2RyxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsbUJBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO2lCQUNqRDtxQkFBTTtvQkFDSCxnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7aUJBQ2xDO2FBQ0o7U0FDSjtJQUNMLENBQUM7SUFFRCxXQUFXO0lBQ0osVUFBVSxDQUFDLEVBQVUsRUFBRSxhQUFzQixLQUFLO1FBQ3JELEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUMzRCxJQUFJLFFBQVEsR0FBRyxLQUFLLENBQUM7WUFDckIsSUFBSSxVQUFVLEVBQUU7Z0JBQ1osUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxHQUFHLEtBQUssR0FBRyxDQUFDLENBQUM7YUFDbkQ7WUFDRCxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDcEQsSUFBSSxJQUFJLEVBQUU7Z0JBQ04sSUFBSSxRQUFRLEdBQWEsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQWEsQ0FBQztnQkFDakUsSUFBSSxRQUFRLElBQUksUUFBUSxDQUFDLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFO29CQUNyRSxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7b0JBQzFCLFFBQVEsQ0FBQyxjQUFjLENBQUMsRUFBRSxFQUFFLFFBQVEsQ0FBQyxDQUFDO29CQUN0QyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNyQixVQUFVO29CQUNWLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO29CQUN4QixJQUFJLENBQUMsU0FBUyxHQUFHO3dCQUNiLENBQUMsRUFBRSxrQkFBUSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUU7d0JBQ3pFLENBQUMsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxDQUFDLEdBQUcsa0JBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUEsb0hBQW9IO3FCQUN4TCxDQUFDO29CQUNGLG9CQUFVLENBQUMsY0FBYyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUM7b0JBQzlGLElBQUksSUFBSSxDQUFDLGdCQUFnQixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7d0JBQ2pFLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxDQUFDLENBQUM7cUJBQzdCO29CQUNELElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxJQUFJLENBQUMsQ0FBQztvQkFDM0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFO3dCQUMvQyxJQUFJLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7d0JBQzlDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZUFBZSxHQUFHLENBQUMsQ0FBQyxDQUFDO3dCQUNoRSxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsbUJBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztvQkFDbkQsQ0FBQyxDQUFDLENBQUE7b0JBQ0YsSUFBSSxDQUFDLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQztvQkFDL0Isa0JBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLENBQUM7b0JBQzFCLE9BQU8sUUFBUSxDQUFDO2lCQUNuQjthQUNKO1NBQ0o7UUFDRCxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2IsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1NBQ3ZDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVELGVBQWU7SUFDUixjQUFjLENBQUMsUUFBa0IsRUFBRSxRQUFrQztRQUN4RSxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUM1QixRQUFRLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsTUFBTSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7UUFDbkMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsR0FBRyxDQUFDLEVBQUU7WUFDL0IsUUFBUSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1NBQ3BFO0lBQ0wsQ0FBQztJQUVELGNBQWM7SUFDUCxhQUFhLENBQUMsU0FBaUI7UUFDbEMsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQzNELElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNwRCxJQUFJLElBQUksRUFBRTtnQkFDTixJQUFJLFFBQVEsR0FBYSxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBYSxDQUFDO2dCQUNqRSxJQUFJLFFBQVEsRUFBRTtvQkFDVixRQUFRLENBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxTQUFTLENBQUMsQ0FBQztpQkFDeEM7YUFDSjtTQUNKO0lBQ0wsQ0FBQztJQUVELGFBQWE7SUFDTixZQUFZLENBQUMsS0FBYTtRQUM3QixtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUNyQyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3BELG1CQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxtQkFBUyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFRCxlQUFlO0lBQ1AsZUFBZTtRQUNuQixJQUFJLE9BQU8sR0FBWSxvQkFBVSxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLE9BQU8sRUFBRSxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDNUYsSUFBSSxPQUFPLEVBQUU7WUFDVCxJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUMxQyxJQUFJLENBQUMscUJBQXFCLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQ25EO0lBQ0wsQ0FBQztJQUVELGFBQWE7SUFDTixVQUFVLENBQUMsS0FBYTtRQUMzQixtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNuQyxJQUFJLFNBQVMsR0FBVyxDQUFDLENBQUM7UUFDMUIsSUFBSSxTQUFTLEdBQVcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUM7UUFDekQsSUFBSSxPQUFPLEdBQVksb0JBQVUsQ0FBQyxPQUFPLENBQUMsb0JBQVUsQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDekUsSUFBSSxPQUFPLEVBQUU7WUFDVCxTQUFTLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztZQUM5QixJQUFJLEdBQUcsR0FBRyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQztZQUNqRCxJQUFJLEdBQUcsSUFBSSxDQUFDLEVBQUU7Z0JBQ1YsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFDN0IsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLG9CQUFvQixHQUFHLENBQUMsR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDO2dCQUNuRSxJQUFJLE9BQU8sQ0FBQyxRQUFRLEdBQUcsQ0FBQyxFQUFFLEVBQUUsTUFBTTtvQkFDOUIsaUJBQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLG1CQUFTLENBQUMsZUFBZSxFQUFFLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQztpQkFDOUQ7cUJBQU07b0JBQ0gsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO29CQUNqQyxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsbUJBQVMsQ0FBQyxZQUFZLENBQUMsQ0FBQztpQkFDbkQ7Z0JBQ0QsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztnQkFDckIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUM1QjtZQUNELG1CQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxtQkFBUyxDQUFDLGVBQWUsRUFBRSxTQUFTLENBQUMsQ0FBQztTQUNoRTtJQUNMLENBQUM7SUFFRCxhQUFhO0lBQ04sYUFBYSxDQUFDLFlBQXFCLEtBQUs7UUFDM0MsUUFBUTtRQUNSLElBQUksS0FBSyxHQUFVLG9CQUFVLENBQUMsT0FBTyxDQUFDLG9CQUFVLENBQUMsS0FBSyxFQUFFLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN0RixJQUFJLEtBQUssRUFBRTtZQUNQLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1NBQ2pEO0lBQ0wsQ0FBQztJQUVELGVBQWU7SUFDUixnQkFBZ0I7UUFDbkIsSUFBSSxZQUFZLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUMzRCxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDcEQsSUFBSSxJQUFJLEVBQUU7Z0JBQ04sSUFBSSxRQUFRLEdBQWEsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQWEsQ0FBQztnQkFDakUsSUFBSSxRQUFRLEVBQUU7b0JBQ1YsWUFBWSxJQUFJLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLENBQUM7aUJBQ3JMO2FBQ0o7U0FDSjtRQUNELG1CQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxtQkFBUyxDQUFDLGFBQWEsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLFVBQVUsQ0FBQyxJQUFZLEVBQUUsVUFBbUIsSUFBSTtRQUNuRCxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyxlQUFlLEVBQUUsb0JBQVUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUEsVUFBVTtRQUM1RixJQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDdkMsQ0FBQztJQUVELGFBQWE7SUFDTixlQUFlLENBQUMsS0FBYTtRQUNoQyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFO1lBQ2xELElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEdBQUcsS0FBSyxFQUFFO2dCQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7Z0JBQzlCLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxxQkFBVyxDQUFDLGtCQUFrQixFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDbkUsT0FBTyxJQUFJLENBQUM7YUFDZjtTQUNKO2FBQU07WUFDSCxnQkFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDbkM7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBRUQsZUFBZTtJQUNSLFVBQVUsQ0FBQyxNQUFjO1FBQzVCLElBQUksVUFBVSxHQUFpQixvQkFBVSxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNuRixJQUFJLFVBQVUsRUFBRTtZQUNaLE9BQU8sVUFBVSxDQUFDLFlBQVksQ0FBQztTQUNsQztRQUNELE9BQU8sQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVELGlCQUFpQjtJQUNWLG9CQUFvQixDQUFDLE1BQWM7UUFDdEMsSUFBSSxVQUFVLEdBQWlCLG9CQUFVLENBQUMsT0FBTyxDQUFDLG9CQUFVLENBQUMsWUFBWSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBQ25GLElBQUksVUFBVSxFQUFFO1lBQ1osT0FBTyxVQUFVLENBQUMsVUFBVSxDQUFDO1NBQ2hDO1FBQ0QsT0FBTyxDQUFDLENBQUM7SUFDYixDQUFDO0lBRUQsa0JBQWtCO0lBQ1gsc0JBQXNCLENBQUMsTUFBYztRQUN4QyxJQUFJLFVBQVUsR0FBaUIsb0JBQVUsQ0FBQyxPQUFPLENBQUMsb0JBQVUsQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDbkYsSUFBSSxVQUFVLEVBQUU7WUFDWixPQUFPLFVBQVUsQ0FBQyxTQUFTLENBQUM7U0FDL0I7UUFDRCxPQUFPLENBQUMsQ0FBQztJQUNiLENBQUM7SUFFRCxXQUFXO0lBQ1gsSUFBVyxPQUFPO1FBQ2QsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELFlBQVk7SUFDTCxLQUFLLENBQUMsUUFBcUIsRUFBRSxPQUFlLENBQUMsRUFBRSxPQUFlLENBQUM7UUFDbEUsSUFBSSxRQUFRLEVBQUU7WUFDVixJQUFJLFFBQVEsR0FBZSxRQUFRLENBQUMsYUFBYSxFQUFFLENBQUM7WUFDcEQsSUFBSSxTQUFTLEdBQW1CLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsRUFDekUsUUFBUSxDQUFDLEtBQUssR0FBRyxJQUFJLEVBQUUsUUFBUSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsQ0FBQztZQUNuRCxPQUFPLFNBQVMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDckQ7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBRUQsY0FBYztJQUNQLFFBQVE7UUFDWCxJQUFJLFlBQVksR0FBRyxFQUFFLENBQUM7UUFDdEIsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQzNELElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNwRCxJQUFJLElBQUksRUFBRTtnQkFDTixJQUFJLFFBQVEsR0FBYSxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBYSxDQUFDO2dCQUNqRSxJQUFJLFFBQVEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRTtvQkFDdEUsSUFBSSxRQUFRLEdBQUc7d0JBQ1gsTUFBTSxFQUFFLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTTt3QkFDNUIsU0FBUyxFQUFFLFFBQVEsQ0FBQyxTQUFTO3dCQUM3QixVQUFVLEVBQUUsUUFBUSxDQUFDLFVBQVU7d0JBQy9CLE1BQU0sRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUs7cUJBQy9CLENBQUM7b0JBQ0YsSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFO3dCQUNYLFlBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUE7cUJBQzlCO3lCQUFNO3dCQUNILElBQUksUUFBUSxHQUFHLFlBQVksQ0FBQyxNQUFNLENBQUM7d0JBQ25DLElBQUksUUFBUSxHQUFHLFFBQVEsQ0FBQzt3QkFDeEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsRUFBRSxDQUFDLEVBQUUsRUFBRTs0QkFDL0IsSUFBSSxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRTtnQ0FDbEUsUUFBUSxHQUFHLENBQUMsQ0FBQztnQ0FDYixNQUFNOzZCQUNUO3lCQUNKO3dCQUNELFlBQVksQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQztxQkFDOUM7aUJBQ0o7YUFDSjtTQUNKO1FBQ0QsSUFBSSxTQUFTLEdBQVcsQ0FBQyxDQUFDO1FBQzFCLEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxLQUFLLEVBQUUsRUFBRTtZQUMzRCxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDcEQsSUFBSSxJQUFJLEVBQUU7Z0JBQ04sSUFBSSxRQUFRLEdBQWEsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQWEsQ0FBQztnQkFDakUsSUFBSSxRQUFRLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRTtvQkFDakQsSUFBSSxTQUFTLElBQUksWUFBWSxDQUFDLE1BQU0sRUFBRTt3QkFDbEMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDO3FCQUNwQjt5QkFBTTt3QkFDSCxJQUFJLFFBQVEsR0FBRyxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUM7d0JBQ3ZDLFFBQVEsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO3dCQUN6QyxRQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQzt3QkFDdEMsSUFBSSxRQUFRLENBQUMsVUFBVSxJQUFJLElBQUksRUFBRTs0QkFDN0IsUUFBUSxDQUFDLFVBQVUsR0FBRyxRQUFRLENBQUMsVUFBVSxDQUFDOzRCQUMxQyxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDOzRCQUN2QyxRQUFRLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7eUJBQ2pDO3dCQUNELFNBQVMsRUFBRSxDQUFDO3FCQUNmO29CQUNELElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLENBQUM7aUJBQ2xDO2FBQ0o7U0FDSjtJQUNMLENBQUM7SUFFRCxnQkFBZ0I7SUFDVCxlQUFlLENBQUMsV0FBcUIsRUFBRSxjQUF3QixJQUFJO1FBQ3RFLEtBQUssSUFBSSxHQUFHLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7WUFDbEMsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDeEMsSUFBSSxXQUFXLEVBQUU7Z0JBQ2IsSUFBSSxPQUFPLElBQUksT0FBTyxDQUFDLEVBQUUsSUFBSSxXQUFXLENBQUMsU0FBUyxFQUFFO29CQUNoRCxPQUFPLENBQUMsTUFBTSxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO2lCQUM1QzthQUNKO1lBQ0QsTUFBTTtZQUNOLElBQUksV0FBVyxFQUFFO2dCQUNiLElBQUksT0FBTyxJQUFJLE9BQU8sQ0FBQyxFQUFFLElBQUksV0FBVyxDQUFDLFNBQVMsRUFBRTtvQkFDaEQsT0FBTyxDQUFDLE1BQU0sR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztpQkFDNUM7YUFDSjtTQUNKO1FBQ0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLHFCQUFXLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCxnQkFBZ0I7SUFDVCxrQkFBa0IsQ0FBQyxLQUFhO1FBQ25DLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO1FBQzNDLElBQUksQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO1FBQzlCLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1FBQ3hCLGtCQUFRLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxtQkFBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFRCxrQkFBa0I7SUFDWCxxQkFBcUIsQ0FBQyxLQUFhO1FBQ3RDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxLQUFLLENBQUM7UUFDOUMsSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7SUFDbEMsQ0FBQztJQUVELGdCQUFnQjtJQUNULHNCQUFzQjtRQUN6QixJQUFJLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGtCQUFrQixFQUFFO1lBQzVFLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLElBQUksR0FBRyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZUFBZSxHQUFHLEdBQUcsR0FBRyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUM7U0FDMUg7YUFBTTtZQUNILG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsR0FBRyxDQUFDO1lBQ3pDLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUM7U0FDaEQ7UUFDRCxRQUFRO1FBQ1IsSUFBSSxDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEVBQUU7WUFDOUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsSUFBSSxHQUFHLG1DQUFtQyxDQUFDO1lBQ3pFLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQztZQUNqRCxNQUFNO1lBQ04sSUFBSSxJQUFJLENBQUMsbUJBQW1CLEVBQUU7Z0JBQzFCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsQ0FBQztnQkFDakMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQzthQUM3QztTQUNKO2FBQU07WUFDSCxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxJQUFJLEdBQUcsbUNBQW1DLENBQUM7WUFDekUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUN0QyxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDO1lBQ2pELFFBQVE7WUFDUixJQUFJLElBQUksQ0FBQyxtQkFBbUIsSUFBSSxJQUFJLEVBQUU7Z0JBQ2xDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDL0MsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxFQUFFLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUUsR0FBRyxDQUFDO3FCQUM5RyxRQUFRLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDO2FBQ2pHO1lBQ0QsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDMUM7UUFDRCxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7UUFDckgsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNwQyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7SUFDOUMsQ0FBQztJQUVELGlCQUFpQjtJQUNWLGlCQUFpQixDQUFDLFFBQWdCO1FBQ3JDLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxHQUFHLFFBQVEsQ0FBQztRQUNyQyxLQUFLLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDM0QsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3BELElBQUksSUFBSSxFQUFFO2dCQUNOLElBQUksUUFBUSxHQUFhLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFhLENBQUM7Z0JBQ2pFLElBQUksUUFBUSxJQUFJLFFBQVEsQ0FBQyxTQUFTLElBQUksQ0FBQyxFQUFFO29CQUNyQyxJQUFJLFVBQVUsR0FBUyxRQUFRLENBQUMsVUFBVSxDQUFDO29CQUMzQyxJQUFJLFVBQVUsRUFBRTt3QkFDWixVQUFVLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQztxQkFDM0Q7aUJBQ0o7YUFDSjtTQUNKO1FBQ0QsSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDNUIsQ0FBQztJQUVELGVBQWU7SUFDUixnQkFBZ0I7UUFDbkIsSUFBSSxLQUFLLEdBQWUsb0JBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxvQkFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDLElBQWMsRUFBRSxFQUFFO1lBQzFGLE9BQU8sbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQzFELENBQUMsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxLQUFLLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDM0IsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEtBQWUsRUFBRSxLQUFlLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzFFLE9BQU8sS0FBSyxDQUFDO1NBQ2hCO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVELElBQUksS0FBSyxDQUFDLEtBQWdCLElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQ3BELElBQUksS0FBSyxLQUFnQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBRTlDLElBQUksU0FBUyxDQUFDLEtBQWdCO1FBQzFCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFDRCxJQUFJLFNBQVM7UUFDVCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDM0IsQ0FBQztJQUdNLE1BQU0sS0FBSyxHQUFHO1FBQ2pCLElBQUksV0FBVyxDQUFDLFNBQVMsSUFBSSxJQUFJLEVBQUU7WUFDL0IsV0FBVyxDQUFDLFNBQVMsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO1NBQzdDO1FBQ0QsT0FBTyxXQUFXLENBQUMsU0FBUyxDQUFDO0lBQ2pDLENBQUM7Q0FDSjtBQTlaRCw4QkE4WkM7Ozs7O0FDdGJEOztBQUNJLFNBQVM7QUFDSyxpQkFBSSxHQUFXLEtBQUssQ0FBQztBQUNuQyxVQUFVO0FBQ0ksaUJBQUksR0FBVyxLQUFLLENBQUM7QUFDbkMsU0FBUztBQUNLLHVCQUFVLEdBQVcsS0FBSyxDQUFDO0FBQ3pDLFNBQVM7QUFDSyxpQkFBSSxHQUFXLEtBQUssQ0FBQztBQUNuQyxXQUFXO0FBQ0csbUJBQU0sR0FBVyxLQUFLLENBQUM7QUFDckMsU0FBUztBQUNLLG1CQUFNLEdBQVcsS0FBSyxDQUFDO0FBQ3JDLFdBQVc7QUFDRyxxQkFBUSxHQUFXLEtBQUssQ0FBQztBQWQzQywrQkFlQzs7Ozs7QUNmRCx3REFBaUQ7QUFDakQsK0RBQXdEO0FBRXhELG1FQUE0RDtBQUM1RCxrRUFBMkQ7QUFFM0Qsa0VBQTJEO0FBQzNELDhEQUF1RDtBQUN2RCxxRUFBOEQ7QUFHOUQsVUFBMEIsU0FBUSx1QkFBYTtJQThCM0M7UUFBZ0IsS0FBSyxFQUFFLENBQUM7UUE1QmpCLFdBQU0sR0FBVyxDQUFDLENBQUM7UUFDbkIsT0FBRSxHQUFXLENBQUMsQ0FBQztRQUNmLFVBQUssR0FBVyxDQUFDLENBQUM7UUFFekIsYUFBYTtRQUNMLG9CQUFlLEdBQVksS0FBSyxDQUFDO1FBQ3pDLFdBQVc7UUFDSCxrQkFBYSxHQUFrQixFQUFFLENBQUM7UUFDMUMsYUFBYTtRQUNMLGNBQVMsR0FBVyxFQUFFLENBQUM7UUFDL0IsYUFBYTtRQUNMLGVBQVUsR0FBVyxFQUFFLENBQUM7UUFFeEIsY0FBUyxHQUFrQixJQUFJLENBQUM7UUFDaEMsZUFBVSxHQUFrQixJQUFJLENBQUM7UUFDekMsY0FBYztRQUNOLGdCQUFXLEdBQVcsUUFBUSxDQUFDO1FBQy9CLGFBQVEsR0FBVyxNQUFNLENBQUM7UUFDMUIsYUFBUSxHQUFXLFVBQVUsQ0FBQztRQUM5QixjQUFTLEdBQVcsV0FBVyxDQUFDO1FBQ3hDLGFBQWE7UUFDTCxrQkFBYSxHQUF3QixFQUFFLENBQUM7UUFDeEMsd0JBQW1CLEdBQWU7WUFDdEMsRUFBRSxFQUFFLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFO1lBQzdFLEVBQUUsRUFBRSxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUscUNBQXFDLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtZQUMvRSxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUU7U0FDaEYsQ0FBQyxDQUFDLE1BQU07UUFnSlQsYUFBYTtRQUNMLGVBQVUsR0FBUSxJQUFJLENBQUM7SUEvSU4sQ0FBQztJQUUxQixhQUFhO0lBQ04sZ0JBQWdCLENBQUMsRUFBVTtRQUM5QixLQUFLLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLE9BQU8sR0FBRyxvQkFBVSxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEUsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2QsTUFBTTtZQUNOLElBQUksQ0FBQyxhQUFhLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzdDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUM7WUFDMUMsSUFBSSxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDN0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxvQkFBVSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQzthQUN4RTtZQUNELElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1lBQ3RFLElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQy9DLElBQUksQ0FBQyxVQUFVLEdBQUcsb0JBQVUsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7YUFDMUU7WUFDRCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDO1lBQzNDLE9BQU87WUFDUCxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3RDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDdkMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNoQixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7U0FFekI7SUFDTCxDQUFDO0lBRUQsZUFBZTtJQUNQLGNBQWM7UUFDbEIsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDL0UsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ3RELElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQzdDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUMsWUFBMEIsRUFBRSxFQUFFO29CQUNwRSxJQUFJLENBQUMsU0FBUyxHQUFHLFlBQVksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQy9DLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztvQkFDbEQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO29CQUMxQixJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDakMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBQzlCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQztvQkFDNUIsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsRUFBQyxVQUFVO3dCQUNsRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7cUJBQzFCO29CQUNELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQzdDLENBQUMsQ0FBQyxDQUFDO2FBQ047U0FDSjthQUFNO1lBQ0gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDOUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUM1QztJQUNMLENBQUM7SUFFRCxlQUFlO0lBQ1AsZUFBZTtRQUNuQixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN0RixJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDeEQsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDL0MsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxhQUEyQixFQUFFLEVBQUU7b0JBQ3RFLElBQUksQ0FBQyxVQUFVLEdBQUcsYUFBYSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDakQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO29CQUNwRCxJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDbEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7b0JBQy9CLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQztvQkFDN0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztnQkFDOUMsQ0FBQyxDQUFDLENBQUM7YUFDTjtTQUNKO2FBQU07WUFDSCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUMvQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQzdDO0lBQ0wsQ0FBQztJQUVELGFBQWE7SUFDTixhQUFhLENBQUMsUUFBZ0IsQ0FBQyxFQUFFLFdBQWdCLElBQUk7UUFDeEQsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLEtBQUs7WUFBRSxPQUFPO1FBQ2hDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLEVBQUU7WUFDakIsUUFBUTtZQUNSLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUU7Z0JBQzNCLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDMUIsQ0FBQyxDQUFDLENBQUM7WUFDSCxJQUFJLElBQUksQ0FBQyxTQUFTO2dCQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDcEU7YUFBTTtZQUNILElBQUksSUFBSSxDQUFDLFNBQVM7Z0JBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUNoRTtJQUNMLENBQUM7SUFFRCxhQUFhO0lBQ04sbUJBQW1CLENBQUMsR0FBVyxFQUFFLGFBQWtCO1FBQ3RELElBQUksR0FBRyxJQUFJLElBQUk7WUFBRSxPQUFPO1FBQ3hCLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDM0MsSUFBSSxZQUFZLElBQUksSUFBSSxFQUFFO1lBQ3RCLFlBQVksR0FBRyxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNsQyxZQUFZLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUU7Z0JBQzVDLGFBQWEsSUFBSSxhQUFhLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQzdDLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLEdBQUcsWUFBWSxDQUFDO1lBQzNDLENBQUMsQ0FBQyxDQUFDO1lBQ0gsWUFBWSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUM3QjthQUFNO1lBQ0gsYUFBYSxJQUFJLGFBQWEsQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUNoRDtJQUNMLENBQUM7SUFFRCxhQUFhO0lBQ04saUJBQWlCLENBQUMsY0FBbUIsSUFBSTtRQUM1QyxJQUFJLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxFQUFFO1lBQ3JCLElBQUksQ0FBQyxVQUFVLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7WUFDM0MsTUFBTTtZQUNOLElBQUksSUFBSSxDQUFDLGVBQWUsSUFBSSxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsSUFBSSxJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQyxFQUFFO2dCQUNqRixJQUFJLGFBQWEsR0FBVyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ3pGLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFXLENBQUM7Z0JBQy9ELElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsSUFBSSxZQUFZLEVBQUU7b0JBQ3JDLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO29CQUM1QixJQUFJLE9BQU8sR0FBWSxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztvQkFDdkQsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDO29CQUMxQyxPQUFPO29CQUNQLElBQUksT0FBTyxJQUFJLEtBQUssRUFBRTt3QkFDbEIsTUFBTSxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUM7d0JBQ2YsSUFBSSxJQUFJLENBQUMsVUFBVSxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7NEJBQ3ZELE1BQU0sQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO3lCQUNsQjtxQkFDSjtvQkFDRCxvQkFBVSxDQUFDLGtCQUFrQixDQUFDLElBQUksRUFBRSwwQ0FBMEMsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztpQkFDckg7YUFDSjtTQUNKO2FBQU07WUFDSCxJQUFJLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQyxDQUFDLE1BQU07WUFDL0IsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUcsTUFBTTtZQUM5QixJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQztZQUM3QixJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUU7Z0JBQ3hHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUM1QixJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0QixXQUFXLElBQUksV0FBVyxFQUFFLENBQUM7Z0JBQzdCLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxFQUFFLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRTtvQkFDbEksSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ2hDLENBQUMsQ0FBQyxDQUFDLENBQUE7WUFDUCxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ0osT0FBTyxJQUFJLENBQUM7U0FDZjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFJTSxrQkFBa0IsQ0FBQyxVQUFxQixFQUFFLFFBQW9CO1FBQ2pFLElBQUksSUFBSSxDQUFDLFlBQVksSUFBSSxJQUFJLEVBQUU7WUFDM0IsSUFBSSxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztZQUN0QixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztZQUNwQixJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNuQixJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUM3RyxJQUFJLFFBQVEsR0FBVyxNQUFNLENBQUM7WUFDOUIsSUFBSSxNQUFNLEdBQVksSUFBSSxDQUFDO1lBQzNCLElBQUksU0FBUyxHQUFXLEdBQUcsQ0FBQztZQUM1QixJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDeEUsSUFBSSxLQUFLLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFFO2dCQUNsQyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxJQUFJLEVBQUUsRUFBRTtvQkFDL0IsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUMsYUFBMkIsRUFBRSxFQUFFO3dCQUM5RSxLQUFLLEdBQUcsYUFBYSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDdkMsS0FBSyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQzt3QkFDaEMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7d0JBQ2pCLEtBQUssQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUM7d0JBQzlCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7d0JBQ3JCLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDO3dCQUNuQixJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxJQUFJLEVBQUUsRUFBRSxFQUFDLFVBQVU7NEJBQzNDLEtBQUssQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO3lCQUNqQjt3QkFDRCxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztvQkFDakMsQ0FBQyxDQUFDLENBQUM7aUJBQ047YUFDSjtpQkFBTTtnQkFDSCxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNyQixLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQzthQUNoQztZQUNELE1BQU07WUFDTixJQUFJLFVBQVUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQWtCLENBQUM7WUFDdEUsSUFBSSxVQUFVLElBQUksSUFBSSxFQUFFO2dCQUNwQixJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxJQUFJLEVBQUUsRUFBRTtvQkFDaEMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUMsYUFBMkIsRUFBRSxFQUFFO3dCQUMvRSxVQUFVLEdBQUcsYUFBYSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQzt3QkFDNUMsVUFBVSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO3dCQUNqQyxVQUFVLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO3dCQUNuQyxJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO3dCQUMxQixVQUFVLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQzt3QkFDeEIsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7b0JBQ3RDLENBQUMsQ0FBQyxDQUFDO2lCQUNOO2FBQ0o7aUJBQU07Z0JBQ0gsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsTUFBTSxDQUFDLENBQUM7YUFDckM7WUFDRCxJQUFJLFVBQVUsRUFBRTtnQkFDWixVQUFVLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUMxQixJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNqQyxJQUFJLFFBQVEsR0FBaUIsb0JBQVUsQ0FBQyxPQUFPLENBQUMsb0JBQVUsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUN0RixJQUFJLFFBQVEsRUFBRTtvQkFDVixJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO2lCQUMxQztnQkFDRCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3BDO1lBQ0QsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7U0FDNUI7UUFDRCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDN0IsQ0FBQztJQUVELGFBQWE7SUFDTixrQkFBa0IsQ0FBQyxTQUFrQixLQUFLO1FBQzdDLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtZQUNuQixJQUFJLE1BQU0sRUFBRTtnQkFDUixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFrQixDQUFDO2dCQUM5RSxJQUFJLE1BQU07b0JBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUMxQixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFrQixDQUFDO2dCQUNoRixJQUFJLE9BQU87b0JBQUUsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUM1QixJQUFJO2dCQUNKLElBQUksU0FBUyxHQUFRLG9CQUFVLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztnQkFDakUsb0JBQVUsQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQztnQkFDakYsSUFBSSxPQUFPLEdBQUcsSUFBSSxxQkFBVyxFQUFFLENBQUM7Z0JBQ2hDLElBQUksSUFBSSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sSUFBSSxPQUFPLEVBQUU7b0JBQzFELElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztpQkFDbkg7Z0JBQ0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQzthQUNqRDtTQUNKO0lBQ0wsQ0FBQztJQUVPLGVBQWU7UUFDbkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLElBQUksQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLGtCQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNoRCxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsSUFBSSxrQkFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDaEQsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFO1lBQ2xELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUM1QyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQy9CLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUM1RixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztTQUM1QjtJQUNMLENBQUM7SUFFRCxJQUFXLE9BQU87UUFDZCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUVELElBQVcsUUFBUTtRQUNmLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUMxQixDQUFDO0NBQ0o7QUFqUkQsdUJBaVJDOzs7OztBQzVSRCxtQkFBbUMsU0FBUSxJQUFJLENBQUMsTUFBTTtJQTJCbEQ7UUFDSSxLQUFLLEVBQUUsQ0FBQztRQTFCWixvQkFBb0I7UUFDVixZQUFPLEdBQVcsQ0FBQyxDQUFDO1FBQzlCLGFBQWE7UUFDSCxrQkFBYSxHQUFXLENBQUMsQ0FBQztRQUNwQyxhQUFhO1FBQ0gsbUJBQWMsR0FBVyxDQUFDLENBQUM7UUFDckMsYUFBYTtRQUNILG1CQUFjLEdBQVcsQ0FBQyxDQUFDO1FBQ3JDLGlCQUFpQjtRQUNQLFVBQUssR0FBVyxDQUFDLENBQUMsQ0FBQztRQUM3QixXQUFXO1FBQ0QsaUJBQVksR0FBa0IsSUFBSSxDQUFDO1FBQzdDLFlBQVk7UUFDRixhQUFRLEdBQVcsQ0FBQyxDQUFDO1FBQy9CLGVBQWU7UUFDTCxpQkFBWSxHQUFZLEtBQUssQ0FBQztRQUN4QyxhQUFhO1FBQ0gsYUFBUSxHQUFXLEVBQUUsQ0FBQztRQUNoQyxhQUFhO1FBQ0gsY0FBUyxHQUFXLEVBQUUsQ0FBQztRQUNqQyxjQUFjO1FBQ0osZUFBVSxHQUFXLFFBQVEsQ0FBQztRQUN4QyxXQUFXO1FBQ0QsZUFBVSxHQUFXLENBQUMsQ0FBQztJQUlqQyxDQUFDO0lBRUQsYUFBYTtJQUNOLGdCQUFnQixDQUFDLEVBQVU7SUFFbEMsQ0FBQztJQUVELGFBQWE7SUFDTixhQUFhLENBQUMsUUFBZ0IsQ0FBQyxFQUFFLFdBQWdCLElBQUk7SUFFNUQsQ0FBQztJQUVELGFBQWE7SUFDTixrQkFBa0IsQ0FBQyxVQUFxQixFQUFFLFFBQW9CO1FBRWpFLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxhQUFhO0lBQ04sa0JBQWtCLENBQUMsU0FBa0IsS0FBSztJQUVqRCxDQUFDO0lBRUQsU0FBUztJQUNGLGNBQWM7UUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQ3ZCLElBQUksSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUU7WUFDdEMsSUFBSTtZQUNKLElBQUksUUFBUSxHQUFrQixJQUFJLENBQUM7WUFDbkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEdBQUcsQ0FBQztZQUMzRCxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUU7Z0JBQzFJLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUNoQyxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztZQUM3QixDQUFDLENBQUMsQ0FBQyxDQUFBO1NBQ047YUFBTTtZQUNILElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1NBQzVCO0lBQ0wsQ0FBQztJQUVELGFBQWE7SUFDYixJQUFXLFVBQVU7UUFDakIsT0FBTyxJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsWUFBWTtJQUNMLGFBQWE7UUFDaEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsWUFBWTtJQUNaLElBQVcsVUFBVTtRQUNqQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDM0IsQ0FBQztJQUVELE1BQU07SUFDTixJQUFXLFlBQVk7UUFDbkIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQzdCLENBQUM7SUFFRCxJQUFXLFlBQVksQ0FBQyxRQUF1QjtRQUMzQyxJQUFJLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQztJQUNqQyxDQUFDO0lBRUQsSUFBVyxZQUFZLENBQUMsS0FBYztRQUNsQyxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztJQUM5QixDQUFDO0lBQ0QsU0FBUztJQUNULElBQVcsWUFBWTtRQUNuQixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDN0IsQ0FBQztJQUVELFNBQVM7SUFDVCxJQUFXLFFBQVE7UUFDZixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUVNLGlCQUFpQixDQUFDLEtBQWE7UUFDbEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7SUFDaEMsQ0FBQztJQUVNLGlCQUFpQixDQUFDLEtBQWE7UUFDbEMsSUFBSSxDQUFDLGNBQWMsR0FBRyxHQUFHLEdBQUcsS0FBSyxDQUFDO0lBQ3RDLENBQUM7SUFFRCwwQ0FBMEM7SUFDMUMsY0FBYztJQUNQLGVBQWUsQ0FBQyxFQUFjLEVBQUUsV0FBbUI7UUFDdEQsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2hDLElBQUksS0FBSyxHQUFHLEVBQUUsQ0FBQztRQUNmLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxXQUFXLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDbEMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQ2pEO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUNELGdDQUFnQztJQUNoQyxzQkFBc0I7SUFDZCxrQkFBa0IsQ0FBQyxFQUFjLEVBQUUsQ0FBUztRQUNoRCxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDekUsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3pFLE9BQU8sRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsQ0FBQztJQUN4QyxDQUFDO0lBQ08sYUFBYSxDQUFDLEVBQVUsRUFBRSxFQUFVLEVBQUUsRUFBVSxFQUFFLEVBQVUsRUFBRSxDQUFTO1FBQzNFLFNBQVM7UUFDVCxJQUFJLENBQVMsRUFBRSxDQUFTLEVBQUUsQ0FBUyxDQUFDO1FBQ3BDLElBQUksT0FBZSxFQUFFLEtBQWEsQ0FBQztRQUNuQyxVQUFVO1FBQ1YsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUNwQixDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN4QixDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBRXBCLFVBQVU7UUFDVixPQUFPLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNoQixLQUFLLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQztRQUNwQixPQUFPLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUVsRCxnQkFBZ0I7UUFDaEIsdUJBQXVCO1FBQ3ZCLDZEQUE2RDtJQUNqRSxDQUFDO0NBRUo7QUFySkQsZ0NBcUpDOzs7OztBQ3BKRCwrREFBd0Q7QUFDeEQsb0VBQTZEO0FBRTdELGVBQStCLFNBQVEsSUFBSSxDQUFDLE1BQU07SUFpRTlDO1FBQ0ksS0FBSyxFQUFFLENBQUM7UUFoRVosYUFBYTtRQUNOLGlCQUFZLEdBQVcsRUFBRSxDQUFDO1FBQ2pDLGFBQWE7UUFDTixjQUFTLEdBQVcsQ0FBQyxDQUFDO1FBQzdCLGFBQWE7UUFDTixpQkFBWSxHQUFXLEVBQUUsQ0FBQztRQUNqQyxhQUFhO1FBQ04sa0JBQWEsR0FBVyxDQUFDLENBQUM7UUFDakMsU0FBUztRQUNGLG9CQUFlLEdBQVcsQ0FBQyxDQUFDO1FBQ25DLGFBQWE7UUFDTixvQkFBZSxHQUFXLElBQUksQ0FBQyxDQUFBLE1BQU07UUFDNUMsU0FBUztRQUNGLG1CQUFjLEdBQVcsQ0FBQyxDQUFDO1FBQ2xDLGFBQWE7UUFDTixtQkFBYyxHQUFXLElBQUksQ0FBQyxDQUFBLE1BQU07UUFDM0MsY0FBYztRQUNQLHVCQUFrQixHQUFXLENBQUMsQ0FBQztRQUN0QyxXQUFXO1FBQ0osdUJBQWtCLEdBQVcsR0FBRyxDQUFDO1FBQ3hDLGFBQWE7UUFDTixrQkFBYSxHQUFXLENBQUMsQ0FBQztRQUNqQyxXQUFXO1FBQ0osaUJBQVksR0FBVyxDQUFDLENBQUM7UUFDaEMsZUFBZTtRQUNSLGNBQVMsR0FBVyxDQUFDLENBQUM7UUFDN0IsZ0JBQWdCO1FBQ1QsaUJBQVksR0FBUSxFQUFFLENBQUM7UUFDOUIsU0FBUztRQUNGLFdBQU0sR0FBZSxFQUFFLENBQUM7UUFDL0IsY0FBYztRQUNQLGVBQVUsR0FBWSxJQUFJLENBQUM7UUFDbEMsZUFBZTtRQUNSLHFCQUFnQixHQUFXLENBQUMsQ0FBQztRQUNwQyxhQUFhO1FBQ04sb0JBQWUsR0FBRyxpQkFBaUIsQ0FBQztRQUMzQyxXQUFXO1FBQ0osb0JBQWUsR0FBWSxLQUFLLENBQUM7UUFFeEMsNERBQTREO1FBQzVELGFBQWE7UUFDTiwwQkFBcUIsR0FBWSxLQUFLLENBQUM7UUFDOUMsYUFBYTtRQUNOLDBCQUFxQixHQUFZLEtBQUssQ0FBQztRQUM5QyxXQUFXO1FBQ0oscUJBQWdCLEdBQVksS0FBSyxDQUFDO1FBQ3pDLFdBQVc7UUFDSiwwQkFBcUIsR0FBWSxLQUFLLENBQUM7UUFDOUMsYUFBYTtRQUNOLHVCQUFrQixHQUFZLEtBQUssQ0FBQztRQUMzQywwREFBMEQ7UUFFMUQseURBQXlEO1FBQ2pELGNBQVMsR0FBeUQsRUFBRSxDQUFDO1FBQzdFLHFDQUFxQztRQUM3QixvQkFBZSxHQUFvRSxFQUFFLENBQUM7UUFDOUY7Ozs7V0FJRztRQUNLLDBCQUFxQixHQUFXLEVBQUUsQ0FBQztRQUl2QyxTQUFTO1FBQ1QsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDM0IsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLElBQUksQ0FBQyxZQUFZLEVBQUUsS0FBSyxFQUFFLEVBQUU7Z0JBQ3BELElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO2FBQ25FO1NBQ0o7SUFDTCxDQUFDO0lBRUQsb0JBQW9CO0lBQ2Isa0JBQWtCO1FBQ3JCLElBQUksU0FBUyxHQUFHLG9CQUFVLENBQUMsa0JBQWtCLENBQUMsb0JBQVUsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxJQUFrQixFQUFFLEVBQUU7WUFDMUYsT0FBTyxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUM7UUFDL0MsQ0FBQyxDQUFDLENBQUM7UUFDSCxJQUFJLFNBQVMsSUFBSSxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNuQyxPQUFPLFNBQVMsQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQzFDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVELDJCQUEyQjtJQUNwQixpQkFBaUIsQ0FBQyxXQUFtQixFQUFFLFFBQWdCLENBQUM7UUFDM0QsSUFBSSxRQUFRLEdBQW1CLG9CQUFVLENBQUMsV0FBVyxDQUFDLG9CQUFVLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDL0UsSUFBSSxRQUFRLEVBQUU7WUFDVixLQUFLLElBQUksR0FBRyxJQUFJLFFBQVEsRUFBRTtnQkFDdEIsSUFBSSxRQUFRLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxFQUFFO29CQUM5QixJQUFJLE9BQU8sR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7b0JBQzVCLElBQUksV0FBVyxHQUFHLE9BQU8sQ0FBQyxZQUFZLEVBQUU7d0JBQ3BDLElBQUksTUFBTSxHQUFXLFFBQVEsQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7d0JBQzNDLE9BQU8sb0JBQVUsQ0FBQyxPQUFPLENBQUMsb0JBQVUsQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUE7cUJBQzdEO2lCQUNKO2FBQ0o7U0FDSjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxlQUFlO0lBQ1IsZUFBZSxDQUFDLEtBQWEsRUFBRSxRQUFnQjtRQUNsRCxJQUFJLFFBQVEsR0FBRyxDQUFDLEVBQUU7WUFDZCxPQUFPLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxRQUFRLENBQUMsQ0FBQztTQUMzQztRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxlQUFlO0lBQ1Isa0JBQWtCLENBQUMsTUFBYyxFQUFFLFlBQXFCLEtBQUs7UUFDaEUsS0FBSyxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ2xDLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDeEMsSUFBSSxPQUFPLEVBQUU7Z0JBQ1QsSUFBSSxPQUFPLENBQUMsTUFBTSxJQUFJLE1BQU0sRUFBRTtvQkFDMUIsSUFBSSxTQUFTLEVBQUU7d0JBQ1gsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDLGVBQWUsQ0FBQztxQkFDcEQ7eUJBQU07d0JBQ0gsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQztxQkFDN0M7aUJBQ0o7YUFDSjtTQUNKO1FBQ0QsT0FBTyxDQUFDLENBQUM7SUFDYixDQUFDO0lBRUQsZUFBZTtJQUNSLG9CQUFvQixDQUFDLE1BQWMsRUFBRSxZQUFxQixLQUFLO1FBQ2xFLElBQUksS0FBSyxHQUFZLElBQUksQ0FBQztRQUMxQixLQUFLLElBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUU7WUFDbEMsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUN4QyxJQUFJLE9BQU8sSUFBSSxPQUFPLENBQUMsTUFBTSxJQUFJLE1BQU0sRUFBRTtnQkFDckMsSUFBSSxTQUFTLEVBQUU7b0JBQ1gsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxlQUFlLEVBQUUsQ0FBQztpQkFDL0M7cUJBQU07b0JBQ0gsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztpQkFDeEM7Z0JBQ0QsS0FBSyxHQUFHLEtBQUssQ0FBQztnQkFDZCxPQUFPO2FBQ1Y7U0FDSjtRQUNELElBQUksS0FBSyxFQUFFO1lBQ1AsSUFBSSxTQUFTLEVBQUU7Z0JBQ1gsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsZUFBZSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDbEY7aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsZUFBZSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDbEY7U0FDSjtRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxxQkFBVyxDQUFDLGtCQUFrQixFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRUQsZUFBZTtJQUNSLGdCQUFnQixDQUFDLFFBQWlCLEtBQUs7UUFDMUMsSUFBSSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7UUFDN0MsSUFBSSxLQUFLLEVBQUU7WUFDUCxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztTQUMzQjtRQUNELE9BQU8sZ0JBQWdCLENBQUM7SUFDNUIsQ0FBQztJQUVELGdCQUFnQjtJQUNULHNCQUFzQixDQUFDLE1BQWMsRUFBRSxRQUFnQjtRQUMxRCxJQUFJLE1BQU0sR0FBRyxDQUFDO1lBQUUsT0FBTyxJQUFJLENBQUMscUJBQXFCLENBQUM7UUFDbEQsSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDO1FBQzNDLElBQUksU0FBUyxHQUFHLEVBQUUsQ0FBQztRQUNuQixJQUFJLE1BQU0sR0FBRyxTQUFTLEVBQUU7WUFDcEIsU0FBUyxHQUFHLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLENBQUMsTUFBTSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUM7U0FDbkc7YUFBTTtZQUNILFNBQVMsR0FBRyxTQUFTLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN6RDtRQUNELElBQUksUUFBUSxHQUFHLENBQUMsRUFBRTtZQUNkLFNBQVMsR0FBRyxTQUFTLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDbkQ7UUFDRCxTQUFTLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLE1BQU07UUFDeEMsT0FBTyxTQUFTLENBQUM7SUFDckIsQ0FBQztJQUVELG9CQUFvQjtJQUNiLFlBQVk7UUFDZixJQUFJLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDakIsSUFBSSxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUM3QyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtnQkFDN0IsSUFBSSxPQUFPLElBQUksT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7b0JBQy9CLElBQUksRUFBRSxHQUFpQixvQkFBVSxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLFlBQVksRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7b0JBQ25GLElBQUksRUFBRSxFQUFFO3dCQUNKLFFBQVEsSUFBSSxJQUFJLENBQUMsZUFBZSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO3FCQUNqRjtpQkFDSjtZQUNMLENBQUMsQ0FBQyxDQUFDO1NBQ047UUFDRCxPQUFPLFFBQVEsQ0FBQztJQUNwQixDQUFDO0lBRUQsSUFBSSxRQUFRLENBQUMsS0FBWSxJQUFJLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUN0RCxJQUFJLFFBQVEsS0FBWSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0lBRWhELElBQUksY0FBYyxDQUFDLEtBQVksSUFBSSxJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDbEUsc0NBQXNDO0lBQ3RDLElBQUksY0FBYyxLQUFZLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7Q0FFL0Q7QUExTUQsNEJBME1DOzs7OztBQzlNRCxxREFBMkM7QUFDM0MsZ0VBQXlEO0FBQ3pELGdFQUF5RDtBQUN6RCxpRUFBMEQ7QUFDMUQsd0VBQWlFO0FBQ2pFLDhEQUF1RDtBQUN2RCxvRUFBNkQ7QUFDN0QsMkRBQW9EO0FBQ3BELHFFQUE4RDtBQUU5RDs7R0FFRztBQUNILGtCQUFrQyxTQUFRLGNBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLGNBQWM7SUFFdkUsZ0JBQWdCLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztJQUUxQixPQUFPO1FBQ0gsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFTyxTQUFTO1FBQ2IsbUJBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLG1CQUFTLENBQUMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3JGLG1CQUFTLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxtQkFBUyxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDbEYsbUJBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLG1CQUFTLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDakYsbUJBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLG1CQUFTLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDOUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQ3RFLENBQUM7SUFFRCxhQUFhO0lBQ0wsaUJBQWlCO1FBQ3JCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLEtBQUssR0FBRyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQzNELElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxxQkFBVyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUVELGFBQWE7SUFDTCxlQUFlLENBQUMsU0FBaUI7UUFDckMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLEdBQUcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxTQUFTLENBQUMsQ0FBQztRQUNqRSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUscUJBQVcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRCxlQUFlO0lBQ1AsY0FBYyxDQUFDLGFBQXFCO1FBQ3hDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBQ2pELElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLGtCQUFRLENBQUMsY0FBYyxDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDN0YsQ0FBQztJQUVELGFBQWE7SUFDTCxnQkFBZ0IsQ0FBQyxJQUFZLEVBQUUsS0FBYSxFQUFFLFVBQW1CLElBQUk7UUFDekUsUUFBUSxJQUFJLEVBQUU7WUFDVixLQUFLLG9CQUFVLENBQUMsSUFBSTtnQkFDaEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7Z0JBQ2hDLE1BQU07WUFDVixLQUFLLG9CQUFVLENBQUMsT0FBTztnQkFDbkIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7Z0JBQ25DLE1BQU07U0FDYjtJQUNMLENBQUM7SUFFRCxlQUFlO0lBQ1Asa0JBQWtCO1FBQ3RCLGlCQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxtQkFBUyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFTyxVQUFVLENBQUMsS0FBYSxFQUFFLE9BQWdCO1FBQzlDLElBQUksVUFBVSxHQUFHLENBQUMsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNwRCxJQUFJLE9BQU8sRUFBRTtZQUNULG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1NBQ3ZDO2FBQU07WUFDSCxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQztTQUN4QztRQUNELElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLGtCQUFRLENBQUMsY0FBYyxDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUMxRSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2IsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDcko7UUFDRCxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUscUJBQVcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFTyxhQUFhLENBQUMsS0FBYSxFQUFFLE9BQWdCO1FBQ2pELElBQUksYUFBYSxHQUFHLENBQUMsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUMxRCxJQUFJLE9BQU8sRUFBRTtZQUNULG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1NBQzFDO2FBQU07WUFDSCxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLEtBQUssQ0FBQztTQUMzQztRQUNELElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxHQUFHLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1FBQzVELElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDaEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDM0o7SUFDTCxDQUFDO0NBQ0o7QUE3RUQsK0JBNkVDOzs7OztBQzFGRCxxREFBMkM7QUFDM0MsZ0RBQXlDO0FBRXpDLGlFQUEwRDtBQUMxRCxrRUFBMkQ7QUFDM0QsZ0VBQXlEO0FBQ3pELGdFQUF5RDtBQUN6RCx3RUFBaUU7QUFDakUsOERBQXVEO0FBQ3ZELHdEQUFpRDtBQUNqRCwwREFBbUQ7QUFFbkQsNERBQXFEO0FBQ3JELDhEQUF1RDtBQUN2RCxvREFBNkM7QUFDN0Msb0VBQTZEO0FBQzdELDhEQUF1RDtBQUN2RCxnRUFBeUQ7QUFDekQsMkVBQW9FO0FBQ3BFLDJEQUFvRDtBQUNwRCxxRUFBOEQ7QUFDOUQsOENBQXVDO0FBRXZDLDhEQUF1RDtBQUN2RCx3REFBaUQ7QUFFakQseUNBQWtDO0FBQ2xDLGtFQUEyRDtBQUczRCx5REFBa0Q7QUFFbEQsZUFBK0IsU0FBUSxjQUFFLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxXQUFXO0lBVWpFO1FBQWdCLEtBQUssRUFBRSxDQUFDO1FBSGhCLHFCQUFnQixHQUFXLENBQUMsQ0FBQztJQUdaLENBQUM7SUFFMUIsT0FBTztRQUNILGdCQUFNLENBQUMsR0FBRyxDQUFDLHVCQUF1QixFQUFFLENBQUM7SUFDekMsQ0FBQztJQUVELFFBQVE7UUFDSixrQkFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxvQkFBVSxDQUFDLEtBQUssRUFBRSxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3hFLElBQUksQ0FBQyxLQUFLLENBQUMsa0JBQVEsQ0FBQyxXQUFXLEVBQUUsa0JBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUN2RCx5QkFBZSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNaLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDckIsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztRQUNyQixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFTyxJQUFJO1FBQ1IsSUFBSSxDQUFDLFFBQVEsR0FBRyxxQkFBVyxDQUFDLEdBQUcsQ0FBQztRQUNoQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztRQUNyRCxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDMUYsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDO1FBQzNELElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQztRQUN6RCxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDMUYsa0JBQVEsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLG1CQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDNUMsQ0FBQztJQUVELGNBQWM7SUFDTixZQUFZO1FBQ2hCLElBQUksbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUMvQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQztTQUMvRDtRQUNELElBQUksQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFBLE1BQU07UUFDL0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUEsTUFBTTtRQUMzRCxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsbUJBQVMsQ0FBQyxhQUFhLEVBQUUsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUEsWUFBWTtRQUM5RixJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdEQsbUJBQVMsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLG1CQUFTLENBQUMsZUFBZSxFQUFFLG9CQUFVLENBQUMsT0FBTyxFQUFFLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFBLFVBQVU7UUFDaEgsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFDekIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQ2pELHFCQUFXLENBQUMsdUJBQXVCLEVBQUUsQ0FBQztRQUN0QyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQzlCLGtCQUFRLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxZQUFZO0lBQ0osWUFBWTtRQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztJQUM5RCxDQUFDO0lBRUQsY0FBYztJQUNOLGFBQWE7UUFDakIsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO1FBQzdDLElBQUksS0FBSyxJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLElBQUksSUFBSSxJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDekcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQzdCLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUM1QixxQkFBVyxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUNwQztJQUNMLENBQUM7SUFFTyxTQUFTO1FBQ2IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3BFLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDakUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3RFLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFbkUsbUJBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLG1CQUFTLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDeEUsbUJBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLG1CQUFTLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDNUUsbUJBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLG1CQUFTLENBQUMsbUJBQW1CLEVBQUUsSUFBSSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNyRixtQkFBUyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsbUJBQVMsQ0FBQyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDckYsbUJBQVMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLG1CQUFTLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNoRixDQUFDO0lBRU8sZ0JBQWdCLENBQUMsRUFBVTtRQUMvQixRQUFRLEVBQUUsRUFBRTtZQUNSLEtBQUssc0JBQVksQ0FBQyxJQUFJO2dCQUNsQixpQkFBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsbUJBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDeEMsTUFBTTtZQUNWLEtBQUssc0JBQVksQ0FBQyxJQUFJO2dCQUNsQixpQkFBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsbUJBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDckMsTUFBTTtZQUNWLEtBQUssc0JBQVksQ0FBQyxVQUFVO2dCQUN4QixpQkFBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsbUJBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztnQkFDMUMsTUFBTTtZQUNWLEtBQUssc0JBQVksQ0FBQyxJQUFJO2dCQUNsQixpQkFBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsbUJBQVMsQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDckMsTUFBTTtZQUNWLEtBQUssc0JBQVksQ0FBQyxNQUFNO2dCQUVwQixNQUFNO1lBQ1YsS0FBSyxzQkFBWSxDQUFDLE1BQU07Z0JBQ3BCLGlCQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxtQkFBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO2dCQUN2QyxNQUFNO1lBQ1YsS0FBSyxzQkFBWSxDQUFDLFFBQVE7Z0JBRXRCLE1BQU07U0FDYjtJQUNMLENBQUM7SUFFTyxpQkFBaUIsQ0FBQyxDQUFhO1FBQ25DLElBQUksQ0FBQyxDQUFDLE1BQU0sWUFBWSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2pDLFFBQVEsQ0FBQyxDQUFDLE1BQU0sRUFBRTtnQkFDZCxLQUFLLElBQUksQ0FBQyxXQUFXLEVBQUMsTUFBTTtvQkFDeEIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO29CQUNuQixNQUFNO2dCQUNWLEtBQUssSUFBSSxDQUFDLE9BQU8sRUFBQyxJQUFJO29CQUNsQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7b0JBQ25CLE1BQU07Z0JBQ1YsS0FBSyxJQUFJLENBQUMsUUFBUSxFQUFDLElBQUk7b0JBQ25CLGlCQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxtQkFBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO29CQUNyQyxNQUFNO2dCQUNWLEtBQUssSUFBSSxDQUFDLGFBQWEsRUFBQyxPQUFPO29CQUMzQixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7b0JBQ3BCLE1BQU07YUFDYjtTQUNKO0lBQ0wsQ0FBQztJQUVELFdBQVc7SUFDSCxXQUFXO1FBQ2YsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGtCQUFrQixFQUFFLENBQUM7UUFDakUsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7WUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7WUFDN0MsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1NBQ2pEO0lBQ0wsQ0FBQztJQUVELGVBQWU7SUFDUixpQkFBaUIsQ0FBQyxjQUE0QixJQUFJO1FBQ3JELElBQUksV0FBVyxFQUFFO1lBQ2IsSUFBSSxDQUFDLGdCQUFnQixHQUFHLFdBQVcsQ0FBQztTQUN2QzthQUFNO1lBQ0gsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGtCQUFrQixFQUFFLENBQUM7U0FDcEU7UUFDRCxJQUFJLFFBQVEsR0FBVyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUM3SixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxrQkFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4RCxJQUFJLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxFQUFFO1lBQ3hDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQztTQUNwQzthQUFNO1lBQ0gsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDO1NBQ3BDO1FBQ0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUM7SUFDM0QsQ0FBQztJQUVPLFlBQVksQ0FBQyxDQUFhO1FBQzlCLElBQUksSUFBSSxDQUFDLGFBQWE7WUFBRSxPQUFPO1FBQy9CLEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDbkUsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDMUMsSUFBSSxJQUFJLEVBQUU7Z0JBQ04sSUFBSSxRQUFRLEdBQWEsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQWEsQ0FBQztnQkFDakUsSUFBSSxRQUFRLElBQUksUUFBUSxDQUFDLFFBQVEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEVBQUU7b0JBQ25GLFFBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQ3JCLElBQUksQ0FBQyxhQUFhLEdBQUcsUUFBUSxDQUFDO29CQUM5QixJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7b0JBQ25DLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxFQUFFLGtCQUFRLENBQUMsQ0FBQyxDQUFBLGtCQUFrQjtvQkFDMUYsSUFBSSxDQUFDLGFBQWEsQ0FBQyxjQUFjLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7b0JBQy9ELElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDO29CQUMzQyxJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBRyxHQUFHLENBQUM7b0JBQ2hDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO29CQUNsQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7b0JBQ3BCLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUNqRCxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7b0JBQzNCLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO29CQUMvRCxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztvQkFDM0QsTUFBTTtpQkFDVDthQUNKO1NBQ0o7SUFDTCxDQUFDO0lBRU8sbUJBQW1CLENBQUMsQ0FBYTtRQUNyQyxJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDcEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDcEQ7SUFDTCxDQUFDO0lBRU8saUJBQWlCLENBQUMsQ0FBYTtRQUNuQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7UUFDM0IsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFFO1lBQ3BCLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1lBQ2hFLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1lBQzVELElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLEVBQUMsTUFBTTtnQkFDNUMsSUFBSSxTQUFTLEdBQVcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxZQUFZLEVBQUUsQ0FBQztnQkFDMUQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztnQkFDM0Isb0JBQVUsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO2dCQUNyRSxvQkFBVSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLEtBQUssR0FBRyxrQkFBUSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUN0RixJQUFJLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLFNBQVMsQ0FBQyxDQUFDO2dCQUNsRSxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7Z0JBQ2xELElBQUksQ0FBQyxRQUFRLENBQUMsa0JBQWtCLENBQUMsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLENBQUMsQ0FBQzthQUM1RTtpQkFBTTtnQkFDSCxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDL0IsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBRSxLQUFLLEVBQUUsRUFBRTtvQkFDbkUsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQzFDLElBQUksSUFBSSxFQUFFO3dCQUNOLElBQUksUUFBUSxHQUFhLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFhLENBQUM7d0JBQ2pFLElBQUksUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFJLFFBQVEsSUFBSSxJQUFJLENBQUMsYUFBYSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUU7NEJBQ3BILElBQUksTUFBTSxHQUFXLFFBQVEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDOzRCQUMxQyxJQUFJLE1BQU0sSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7Z0NBQzFDLElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBRTtvQ0FDNUMsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2lDQUNoQztxQ0FBTSxFQUFFLE1BQU07b0NBQ1gsSUFBSSxTQUFTLEdBQVcsTUFBTSxHQUFHLENBQUMsQ0FBQztvQ0FDbkMsSUFBSSxHQUFHLEdBQVcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7b0NBQ25ELFFBQVEsQ0FBQyxjQUFjLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxDQUFDO29DQUMxQyxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztvQ0FDNUIsSUFBSSxRQUFRLEdBQUc7d0NBQ1gsQ0FBQyxFQUFFLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFO3dDQUN4QyxDQUFDLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsTUFBTTtxQ0FDcEcsQ0FBQztvQ0FDRixRQUFRLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO29DQUMxQyxvQkFBVSxDQUFDLGNBQWMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQztvQ0FDbEYsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztvQ0FDM0IsTUFBTTtvQ0FDTixvQkFBVSxDQUFDLG1CQUFtQixDQUFDLElBQUksRUFBRSxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7b0NBQ3ZELFFBQVE7b0NBQ1IsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsRUFBRTt3Q0FDMUMsaUJBQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLG1CQUFTLENBQUMsV0FBVyxFQUFFLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQzt3Q0FDekQsa0JBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLG1CQUFTLENBQUMsTUFBTSxDQUFDLENBQUM7cUNBQzdDO3lDQUFNO3dDQUNILGtCQUFRLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxtQkFBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO3FDQUNoRDtvQ0FDRCxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUU7d0NBQ1QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUMsQ0FBQzt3Q0FDM0QsSUFBSSxXQUFXLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7d0NBQy9ELElBQUksR0FBRyxHQUE2QixFQUFFLENBQUMsRUFBRSxXQUFXLENBQUMsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxLQUFLLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxXQUFXLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDO3dDQUN0RyxvQkFBVSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsTUFBTSxHQUFHLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQzt3Q0FDbkQsV0FBVyxHQUFHLElBQUksQ0FBQztxQ0FDdEI7b0NBQ0QsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7b0NBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztvQ0FDakMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztvQ0FDNUQsV0FBVztvQ0FDWCxJQUFJLENBQUMsUUFBUSxDQUFDLGtCQUFrQixDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0NBQ3pFLGlCQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQyxDQUFDO29DQUNwQyxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsQ0FBQztpQ0FDN0I7NkJBQ0o7aUNBQU0sRUFBSyxJQUFJO2dDQUNaLElBQUksT0FBTyxHQUFZLFFBQVEsQ0FBQyxPQUFPLENBQUM7Z0NBQ3hDLFFBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7Z0NBQ3hELFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsQ0FBQztnQ0FDaEQsSUFBSSxPQUFPLEVBQUU7b0NBQ1QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztvQ0FDbkgsSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztpQ0FDOUI7cUNBQU07b0NBQ0gsSUFBSSxDQUFDLGFBQWEsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7b0NBQzFDLElBQUksYUFBYSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDO29DQUNsRCxJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsR0FBRyxRQUFRLENBQUMsVUFBVSxDQUFDO29DQUNwRCxRQUFRLENBQUMsVUFBVSxHQUFHLGFBQWEsQ0FBQztpQ0FDdkM7Z0NBQ0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztnQ0FDNUQsa0JBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLG1CQUFTLENBQUMsU0FBUyxDQUFDLENBQUM7NkJBQ2hEOzRCQUNELE1BQU07eUJBQ1Q7cUJBQ0o7aUJBQ0o7YUFDSjtZQUNELElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUN0QixJQUFJLENBQUMsYUFBYSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7WUFDbEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNoQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3RELElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1NBQzdCO0lBQ0wsQ0FBQztJQUVELGFBQWE7SUFDTCxrQkFBa0I7UUFDdEIsSUFBSSxVQUFVLEdBQVksS0FBSyxDQUFDO1FBQ2hDLEtBQUssSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDbkUsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDMUMsSUFBSSxJQUFJLEVBQUU7Z0JBQ04sSUFBSSxRQUFRLEdBQWEsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQWEsQ0FBQztnQkFDakUsSUFBSSxRQUFRLElBQUksUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRTtvQkFDekQsVUFBVSxHQUFHLElBQUksQ0FBQztvQkFDbEIsSUFBSSxVQUFVLEdBQVMsUUFBUSxDQUFDLFVBQVUsQ0FBQztvQkFDM0MsSUFBSSxVQUFVLEVBQUU7d0JBQ1osSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxlQUFlLEVBQUU7NEJBQ3JDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7eUJBQ2hEO3dCQUNELFFBQVE7d0JBQ1IsSUFBSSxVQUFVLENBQUMsWUFBWSxFQUFFOzRCQUN6QixJQUFJLFVBQVUsQ0FBQyxZQUFZLElBQUksSUFBSSxFQUFFO2dDQUNqQyxJQUFJLElBQUksR0FBRyxVQUFVLENBQUMsUUFBUSxHQUFHLFVBQVUsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsYUFBYSxHQUFHLEdBQUcsQ0FBQztnQ0FDakcsVUFBVSxDQUFDLGtCQUFrQixDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzs2QkFDeEY7aUNBQU07Z0NBQ0gsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQzs2QkFDdEc7NEJBQ0QsVUFBVSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtnQ0FDOUIsSUFBSSxNQUFNLEdBQVEsRUFBRSxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsVUFBVSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQTtnQ0FDM0QsUUFBUTtnQ0FDUixJQUFJLFFBQVEsR0FBRyxVQUFVLENBQUMsWUFBb0IsQ0FBQztnQ0FDL0MsSUFBSSxRQUFRLEVBQUU7b0NBQ1YsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO29DQUNwQixNQUFNLEdBQUcsRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUE7b0NBQ25ELFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztpQ0FDdkM7Z0NBQ0QsSUFBSSxXQUFXLEdBQVcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxzQkFBc0IsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDO2dDQUNwSyxLQUFLO2dDQUNMLG9CQUFVLENBQUMsbUJBQW1CLENBQUMsSUFBSSxFQUFFLHdCQUF3QixFQUFFLEdBQUcsR0FBRyxrQkFBUSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0NBQ3pILElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsV0FBVyxDQUFDLENBQUM7NEJBQ3hFLENBQUMsQ0FBQyxDQUFDO3lCQUNOO3FCQUNKO2lCQUNKO2FBQ0o7U0FDSjtRQUNELElBQUksQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELFdBQVc7SUFDSCxVQUFVLENBQUMsVUFBbUI7UUFDbEMsSUFBSSxVQUFVLEVBQUU7WUFDWixNQUFNO1lBQ04sSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQztZQUMvRixJQUFJLFNBQVMsR0FBVyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7WUFDakcsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxlQUFlLElBQUksU0FBUyxFQUFFO2dCQUNsRCxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxlQUFlLEdBQUcsU0FBUyxDQUFDO2dCQUNoRCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxlQUFlLEVBQUUsU0FBUyxDQUFDLENBQUM7YUFDaEg7WUFDRCxNQUFNO1lBQ04sSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGFBQWEsR0FBRyxHQUFHLENBQUM7WUFDcEcsSUFBSSxZQUFZLEdBQVcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQ2xHLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsY0FBYyxJQUFJLFlBQVksRUFBRTtnQkFDcEQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsY0FBYyxHQUFHLFlBQVksQ0FBQztnQkFDbEQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsY0FBYyxFQUFFLFlBQVksQ0FBQyxDQUFDO2FBQ2hIO1lBQ0QsT0FBTztZQUNQLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxhQUFhLEdBQUcsR0FBRyxDQUFDO1lBQ25HLElBQUksaUJBQWlCLEdBQVcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDMUcsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsSUFBSSxpQkFBaUIsRUFBRTtnQkFDN0QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsa0JBQWtCLEdBQUcsaUJBQWlCLENBQUE7Z0JBQzFELElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGtCQUFrQixFQUFFLGlCQUFpQixDQUFDLENBQUM7YUFDdkg7U0FDSjtJQUNMLENBQUM7SUFFTyxlQUFlLENBQUMsV0FBZ0IsRUFBRSxXQUFnQixFQUFFLEtBQWEsRUFBRSxTQUFpQjtRQUN4RixJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLGFBQWEsR0FBRyxDQUFDLEVBQUU7WUFDdkMsSUFBSTtZQUNKLElBQUksU0FBUyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3BCLFdBQVcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxHQUFHLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDO2FBQzNDO2lCQUFNO2dCQUNILFdBQVcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxHQUFHLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDO2FBQzNDO1NBQ0o7YUFBTTtZQUNILElBQUk7WUFDSixJQUFJLFNBQVMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNwQixXQUFXLENBQUMsQ0FBQyxHQUFHLEtBQUssR0FBRyxTQUFTLENBQUM7YUFDckM7aUJBQU07Z0JBQ0gsV0FBVyxDQUFDLENBQUMsR0FBRyxLQUFLLEdBQUcsU0FBUyxDQUFDO2FBQ3JDO1NBQ0o7SUFDTCxDQUFDO0lBRU8sWUFBWSxDQUFDLElBQWMsRUFBRSxLQUFhO1FBQzlDLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRTtZQUN0QyxPQUFPO1NBQ1Y7UUFDRCxJQUFJLFFBQVEsR0FBYSxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBYSxDQUFDO1FBQ2pFLElBQUksUUFBUSxFQUFFO1lBQ1YsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDeEMsUUFBUSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7WUFDM0IsSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDakIsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUU7b0JBQzFELElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO29CQUN4QixJQUFJLFFBQVEsR0FBRzt3QkFDWCxDQUFDLEVBQUUsa0JBQVEsQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUU7d0JBQy9ELENBQUMsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsR0FBRyxrQkFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQSxvR0FBb0c7cUJBQzlKLENBQUM7b0JBQ0Ysb0JBQVUsQ0FBQyxjQUFjLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUM7b0JBQ2xGLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUU7d0JBQzNCLFFBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxRQUFRO3dCQUNuRCxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNyQixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO3dCQUMzQyxXQUFXO3dCQUNYLElBQUksQ0FBQyxRQUFRLENBQUMsa0JBQWtCLENBQUMsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGVBQWUsR0FBRyxDQUFDLENBQUMsQ0FBQztvQkFDN0UsQ0FBQyxDQUFDLENBQUE7Z0JBQ04sQ0FBQyxDQUFDLENBQUM7YUFDTjtTQUNKO0lBQ0wsQ0FBQztJQUVELGFBQWE7SUFDTCxXQUFXO1FBQ2YsSUFBSSxLQUFLLEdBQUcsa0JBQVEsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsRUFBRTtZQUN6QyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDekIsQ0FBQyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUVELFdBQVc7SUFDSCxhQUFhLENBQUMsWUFBb0IsRUFBRSxFQUFFLFlBQXFCLElBQUk7UUFDbkUsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxZQUFZLEdBQUcsQ0FBQyxFQUFFO1lBQ3RDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFlBQVksSUFBSSxTQUFTLENBQUM7WUFDOUMsT0FBTztTQUNWO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUM1QixJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxZQUFZLElBQUksU0FBUyxDQUFDO1FBQzlDLElBQUksU0FBUyxFQUFFO1lBQ1gsb0JBQVUsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDbEM7UUFDRCxJQUFJLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ2pELGtCQUFRLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxtQkFBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFRCxhQUFhO0lBQ0wsZUFBZTtRQUNuQixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUMsQ0FBQztRQUMvRCxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1FBQ2hELElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxHQUFHLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN4RyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFlBQVksR0FBRyxDQUFDLEVBQUU7WUFDdEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLENBQUM7WUFDbkMscUJBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUMvRCxvQkFBVSxDQUFDLGtCQUFrQixDQUFDLHdCQUF3QixDQUFDLENBQUM7U0FDM0Q7YUFBTTtZQUNILElBQUksQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbkMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1lBQzVDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUM3QixJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7U0FDcEM7SUFDTCxDQUFDO0lBRUQsY0FBYztJQUNOLGFBQWE7UUFDakIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ3RDLENBQUM7SUFFRCxnQkFBZ0I7SUFDUixZQUFZO1FBQ2hCLElBQUksTUFBTSxHQUFXLHFCQUFXLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDaEQsSUFBSSxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ1osSUFBSSxJQUFJLEdBQWEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDdEQsSUFBSSxJQUFJLEVBQUU7Z0JBQ04scUJBQVcsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQy9CLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQzthQUN4QjtTQUNKO0lBQ0wsQ0FBQztJQUVELGdCQUFnQjtJQUNSLGFBQWE7UUFDakIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEdBQUcscUJBQVcsQ0FBQyxZQUFZLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUVELGFBQWE7SUFDTCxVQUFVLENBQUMsSUFBWTtRQUMzQixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFRCxXQUFXO0lBQ0gsZUFBZTtRQUNuQixJQUFJLFlBQVksR0FBVyxxQkFBVyxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQ3RELElBQUksWUFBWSxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLElBQUksS0FBSyxFQUFFO1lBQ2xHLG9CQUFvQjtZQUNwQixrQ0FBa0M7WUFDbEMsc0RBQXNEO1lBQ3RELHNEQUFzRDtZQUN0RCx3Q0FBd0M7WUFDeEMsMkJBQTJCO1lBQzNCLElBQUksSUFBSSxHQUFXLENBQUMsQ0FBQztZQUNyQixJQUFJLGFBQWEsR0FBVyxFQUFFLEdBQUcsRUFBRSxDQUFDO1lBQ3BDLElBQUksVUFBVSxHQUFHLENBQUMsR0FBRyxhQUFhLENBQUM7WUFDbkMsSUFBSSxZQUFZLEdBQUcsVUFBVSxFQUFFO2dCQUMzQixJQUFJLEdBQUcsQ0FBQyxVQUFVLEdBQUcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLElBQUksQ0FBQzthQUNqRTtpQkFBTTtnQkFDSCxJQUFJLEdBQUcsQ0FBQyxZQUFZLEdBQUcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLElBQUksQ0FBQzthQUNuRTtZQUNELElBQUksSUFBSSxHQUFHLENBQUMsRUFBRTtnQkFDVixJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsQ0FBQztnQkFDaEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO2dCQUN0QyxJQUFJLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsQ0FBQyxFQUFFO29CQUNsQyxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsbUJBQVMsQ0FBQyxpQkFBaUIsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7aUJBQzdEO3FCQUFNO29CQUNILGdCQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLEdBQUcsa0JBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztpQkFDakU7YUFDSjtTQUNKO0lBQ0wsQ0FBQztJQUVELGlCQUFpQjtJQUNULFlBQVk7UUFDaEIsSUFBSSxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksRUFBRTtZQUN4QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFVBQVUsRUFBRSxrQkFBUSxDQUFDLENBQUM7WUFDaEUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQztZQUMvQyxJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDL0M7SUFDTCxDQUFDO0lBRUQsaUJBQWlCO0lBQ1QsY0FBYztRQUNsQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDekMsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDNUIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUM5QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztTQUN6QjtJQUNMLENBQUM7SUFFRCxhQUFhO0lBQ0wsZUFBZTtRQUNuQixJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNkLGdCQUFNLENBQUMsR0FBRyxDQUFDLHFCQUFxQixFQUFFLENBQUM7WUFDbkMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDO1NBQzlEO0lBQ0wsQ0FBQztJQUVPLGNBQWMsQ0FBQyxJQUFjLEVBQUUsS0FBYTtRQUNoRCxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7WUFDcEMsT0FBTztTQUNWO1FBQ0QsSUFBSSxHQUFHLEdBQWMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQWMsQ0FBQztRQUM5RCxJQUFJLEdBQUcsRUFBRTtZQUNMLEdBQUcsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDL0M7SUFDTCxDQUFDO0lBRUQsZUFBZTtJQUNQLGlCQUFpQjtRQUNyQixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDekIsQ0FBQztDQUVKO0FBemhCRCw0QkF5aEJDOzs7OztBQ3pqQkQscURBQTJDO0FBRzNDLDhEQUF1RDtBQUV2RCwrREFBd0Q7QUFDeEQsNkRBQXNEO0FBR3RELGNBQThCLFNBQVEsY0FBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVTtJQUsvRCxnQkFBZ0IsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRTFCLFFBQVE7UUFDSixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDWiw4REFBOEQ7WUFDOUQsMEJBQTBCO1lBQzFCLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNyQyxJQUFJLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUNaLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQ2Q7aUJBQU0sSUFBSSxJQUFJLENBQUMsQ0FBQyxHQUFHLGtCQUFRLENBQUMsZ0JBQWdCLEVBQUU7Z0JBQzNDLElBQUksQ0FBQyxDQUFDLEdBQUcsa0JBQVEsQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO2FBQ25EO1lBQ0QsSUFBSSxNQUFNLEdBQWlCLG9CQUFVLENBQUMsT0FBTyxDQUFDLG9CQUFVLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQy9GLElBQUksTUFBTSxFQUFFO2dCQUNSLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7Z0JBQ2pDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO2dCQUN4QyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQztnQkFDL0MsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7YUFDbkQ7WUFDRCxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7Z0JBQ2pDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxrQkFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQ3JFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUMxQixJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7YUFDNUI7U0FDSjtJQUNMLENBQUM7SUFFTSxVQUFVO1FBQ2IsSUFBSSxJQUFJLENBQUMsS0FBSztZQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDckMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFFRCxJQUFJLFVBQVUsQ0FBQyxLQUFVO1FBQ3JCLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLENBQUM7Q0FDSjtBQXhDRCwyQkF3Q0M7Ozs7O0FDakRELGtFQUEyRDtBQUMzRCw4REFBdUQ7QUFDdkQscURBQTJDO0FBQzNDLGlFQUEwRDtBQUMxRCwrREFBd0Q7QUFFeEQsNkRBQXNEO0FBQ3RELGdEQUF5QztBQUV6Qyw4REFBdUQ7QUFDdkQsd0RBQWlEO0FBQ2pELDREQUFxRDtBQUNyRCwyREFBb0Q7QUFDcEQscUVBQThEO0FBRTlEOztHQUVHO0FBQ0gsaUJBQWlDLFNBQVEsa0JBQVE7SUFPN0M7UUFDSSxLQUFLLENBQUMsa0JBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLGNBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBSDdELFdBQU0sR0FBVyxDQUFDLENBQUM7SUFJM0IsQ0FBQztJQUVNLFFBQVE7UUFDWCxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakIsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNyQyxJQUFJLENBQUMsT0FBTyxHQUFHLG9CQUFVLENBQUMsT0FBTyxDQUFDLG9CQUFVLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNwRSxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ2QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO2dCQUMxQyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksa0JBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQ2hFLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxHQUFHLEdBQUcsRUFBRTtnQkFFL0IsQ0FBQyxDQUFBO2dCQUNELElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUMxQixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQzNCLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQzthQUM1QjtZQUNELElBQUksQ0FBQyxTQUFTLEdBQUcsb0JBQVUsQ0FBQyxPQUFPLENBQUMsb0JBQVUsQ0FBQyxZQUFZLEVBQUUscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzlGLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDaEIsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQztnQkFDN0QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLE9BQU8sR0FBRyxrQkFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxHQUFHLElBQUksQ0FBQztnQkFDOUYsSUFBSSxRQUFRLEdBQUcscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO2dCQUMzSSxJQUFJLENBQUMsTUFBTSxHQUFHLFFBQVEsR0FBRyxHQUFHLENBQUM7YUFDaEM7WUFDRCxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLGtCQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUN2RTtJQUNMLENBQUM7SUFFTSxTQUFTO1FBQ1osSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDcEUsQ0FBQztJQUVNLFlBQVk7UUFDZixJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNyRSxDQUFDO0lBRU8sV0FBVztRQUNmLElBQUksbUJBQVMsQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUU7WUFDeEMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1NBQ3JCO2FBQU07WUFDSCxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFO2dCQUM3QixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDdEIsQ0FBQyxDQUFDLENBQUE7U0FDTDtJQUNMLENBQUM7SUFFTyxVQUFVO1FBQ2QsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsR0FBRyxrQkFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUNyRSxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsQ0FBQztRQUMvQyxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsbUJBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0sS0FBSyxDQUFDLEdBQUcsS0FBWTtRQUN4QixLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25CLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksSUFBSSxDQUFDLEtBQUs7WUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3pDLENBQUM7Q0FDSjtBQWxFRCw4QkFrRUM7Ozs7O0FDcEZELGtFQUEyRDtBQUMzRCw4REFBdUQ7QUFDdkQscURBQTJDO0FBQzNDLCtEQUF3RDtBQUN4RCxpRUFBMEQ7QUFHMUQ7O0dBRUc7QUFDSCxrQkFBa0MsU0FBUSxrQkFBUTtJQUs5QztRQUNJLEtBQUssQ0FBQyxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsY0FBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUVNLFFBQVE7UUFDWCxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxvQkFBVSxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLE9BQU8sRUFBRSxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUE7UUFDcEYsSUFBSSxDQUFDLFlBQVksR0FBRyxvQkFBVSxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLE9BQU8sRUFBRSxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQzdGLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLElBQUksR0FBRyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUV6RCxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsQ0FBQyxHQUFHLEdBQUcsbUJBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3hGLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzlHLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxHQUFHLEdBQUcsQ0FBQztRQUM1RSxJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxhQUFhLEdBQUcsR0FBRyxDQUFDO1FBQy9ELElBQUksQ0FBQyxFQUFFLENBQUMsZUFBZSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsR0FBRyxHQUFHLENBQUM7SUFDbkUsQ0FBQztDQUNKO0FBckJELCtCQXFCQzs7Ozs7QUMvQkQsd0RBQThDO0FBQzlDLGtFQUEyRDtBQUUzRCxzRUFBK0Q7QUFFL0QsMENBQW1DO0FBQ25DLG1EQUE0QztBQUM1QyxvRUFBNkQ7QUFDN0QsaUVBQTBEO0FBQzFELHFFQUE4RDtBQUk5RCxjQUE4QixTQUFRLGNBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVO0lBZXBFO1FBQWdCLEtBQUssRUFBRSxDQUFDO1FBWHhCLFlBQVk7UUFDSixnQkFBVyxHQUFTLElBQUksQ0FBQztRQUNqQyxzQkFBc0I7UUFDZCxXQUFNLEdBQVcsZUFBZSxDQUFDLElBQUksQ0FBQztRQUM5QyxXQUFXO1FBQ0gsWUFBTyxHQUFZLEtBQUssQ0FBQztRQUNqQyxhQUFhO1FBQ04sY0FBUyxHQUFXLENBQUMsQ0FBQyxDQUFDO1FBQ3RCLGdCQUFXLEdBQVcsQ0FBQyxDQUFDO1FBQ3pCLFVBQUssR0FBWSxLQUFLLENBQUM7SUFFTCxDQUFDO0lBRTFCLElBQUksVUFBVSxDQUFDLEtBQVU7UUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQzdCLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDckMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQzFDO0lBQ0wsQ0FBQztJQUVELFdBQVc7SUFDSixjQUFjLENBQUMsTUFBYyxFQUFFLFFBQWdCLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1FBQzFELElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDbEMsSUFBSSxLQUFLLElBQUksQ0FBQyxFQUFFO1lBQ1osSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7U0FDMUI7UUFDRCxJQUFJLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDWixJQUFJLElBQUksQ0FBQyxLQUFLO2dCQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztZQUMzQyxJQUFJLENBQUMsT0FBTyxHQUFHLG9CQUFVLENBQUMsT0FBTyxDQUFDLG9CQUFVLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQzdELElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDZCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxvQkFBVSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztnQkFDL0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO2FBQzlDO1NBQ0o7SUFDTCxDQUFDO0lBRUQsZUFBZTtJQUNSLGdCQUFnQixDQUFDLFVBQXFCLEVBQUUsUUFBa0M7UUFDN0UsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksRUFBRTtZQUMxQixJQUFJLElBQUksR0FBRyxJQUFJLGNBQUksRUFBRSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3pDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ25CLElBQUksVUFBVSxFQUFFO2dCQUNaLFVBQVUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQzFCLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2pDLElBQUksUUFBUSxHQUFpQixvQkFBVSxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUM1RixJQUFJLFFBQVEsRUFBRTtvQkFDVixJQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO2lCQUMxQztnQkFDRCxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFO29CQUMzQixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7Z0JBQzFCLENBQUMsQ0FBQyxDQUFBO2FBQ0w7WUFDRCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztZQUN4QixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7WUFDeEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQzFCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUMvQixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7U0FDNUI7UUFDRCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDNUIsQ0FBQztJQUVELFdBQVc7SUFDSixRQUFRLENBQUMsUUFBZ0IsQ0FBQztRQUM3QixJQUFJLGtCQUFRLENBQUMsR0FBRyxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUk7WUFBRSxPQUFPO1FBQzdELG9CQUFVLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUM1RixJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsR0FBRyxLQUFLLENBQUM7UUFDbEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUM7UUFDaEUsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxDQUFDLEVBQUU7WUFDdkIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7WUFDbEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1lBQ3RDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUNqQyxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZUFBZSxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQzNFLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUMzQixJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7WUFDOUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztTQUNuRDtJQUNMLENBQUM7SUFFTyxjQUFjO1FBQ2xCLElBQUksQ0FBQyxXQUFXLElBQUksQ0FBQyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQzVDLElBQUksSUFBSSxDQUFDLFdBQVcsSUFBSSxDQUFDLEVBQUU7WUFDdkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQzNDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUMvQixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7WUFDekIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7WUFDckIsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO2dCQUNsQixvQkFBVSxDQUFDLGNBQWMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUFDO2FBQ3JHO1lBQ0QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRTtnQkFDM0IsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO29CQUNsQixJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQztvQkFDN0MsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUM7b0JBQzFDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztvQkFDaEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO2lCQUN4QztnQkFDRCxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7Z0JBQzFCLHFCQUFXLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQzNFLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxDQUFDO1NBQ047SUFDTCxDQUFDO0lBRUQsZUFBZTtJQUNSLGdCQUFnQjtRQUNuQixJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDbEIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO1lBQ3RDLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDL0UsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7U0FDM0I7SUFDTCxDQUFDO0lBRUQsZUFBZTtJQUNmLElBQVcsVUFBVTtRQUNqQixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDNUIsQ0FBQztJQUVELGVBQWU7SUFDZixJQUFXLFVBQVUsQ0FBQyxVQUFnQjtRQUNsQyxJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztJQUNsQyxDQUFDO0lBRUQsYUFBYTtJQUNOLFlBQVk7UUFDZixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZCxJQUFJLFlBQVksR0FBaUIsb0JBQVUsQ0FBQyxPQUFPLENBQUMsb0JBQVUsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUM5RixJQUFJLFlBQVk7Z0JBQUUsT0FBTyxZQUFZLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQztTQUN4RDtRQUNELE9BQU8sQ0FBQyxDQUFDO0lBQ2IsQ0FBQztJQUVELFNBQVM7SUFDRixLQUFLO1FBQ1IsSUFBSSxJQUFJLENBQUMsS0FBSztZQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUN0QyxJQUFJLElBQUksQ0FBQyxPQUFPO1lBQUUsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDdEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQzNCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUMvQixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDckIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqQixJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztJQUM1QixDQUFDO0lBRUQsVUFBVTtJQUNILE9BQU8sQ0FBQyxNQUFlO1FBQzFCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO0lBQ2pELENBQUM7SUFFRCxzQkFBc0I7SUFDZixRQUFRLENBQUMsS0FBYTtRQUN6QixJQUFJLElBQUksQ0FBQyxPQUFPO1lBQUUsT0FBTztRQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztJQUN4QixDQUFDO0lBRUQsYUFBYTtJQUNiLElBQVcsUUFBUTtRQUNmLE9BQU8sSUFBSSxDQUFDLE1BQU0sSUFBSSxlQUFlLENBQUMsTUFBTSxDQUFDO0lBQ2pELENBQUM7SUFFRCxXQUFXO0lBQ1gsSUFBVyxPQUFPO1FBQ2QsT0FBTyxJQUFJLENBQUMsTUFBTSxJQUFJLGVBQWUsQ0FBQyxJQUFJLENBQUM7SUFDL0MsQ0FBQztJQUVELFdBQVc7SUFDWCxJQUFXLEtBQUs7UUFDWixPQUFPLElBQUksQ0FBQyxNQUFNLElBQUksZUFBZSxDQUFDLEdBQUcsQ0FBQztJQUM5QyxDQUFDO0lBRUQsV0FBVztJQUNYLElBQVcsTUFBTTtRQUNiLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN4QixDQUFDO0lBRUQsc0JBQXNCO0lBQ3RCLElBQUksU0FBUyxLQUFhLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDL0MsSUFBSSxJQUFJLEtBQXlELE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDckYsSUFBVyxNQUFNO1FBQ2IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3hCLENBQUM7Q0FDSjtBQTdMRCwyQkE2TEM7QUFFRCxJQUFLLGVBU0o7QUFURCxXQUFLLGVBQWU7SUFDaEIsU0FBUztJQUNULHFEQUFRLENBQUE7SUFDUixVQUFVO0lBQ1YseURBQU0sQ0FBQTtJQUNOLFNBQVM7SUFDVCxxREFBSSxDQUFBO0lBQ0osU0FBUztJQUNULG1EQUFHLENBQUE7QUFDUCxDQUFDLEVBVEksZUFBZSxLQUFmLGVBQWUsUUFTbkI7Ozs7O0FDck5ELHdEQUE4QztBQUU5QyxtRUFBNEQ7QUFDNUQsbUVBQTREO0FBQzVELHNFQUErRDtBQUMvRCw0REFBcUQ7QUFDckQscUVBQThEO0FBQzlELDJEQUFvRDtBQUVwRCxlQUErQixTQUFRLGNBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXO0lBQTFFOztRQUVZLFVBQUssR0FBYSxJQUFJLENBQUM7SUEwQ25DLENBQUM7SUF4Q0csSUFBSSxVQUFVLENBQUMsS0FBVTtRQUNyQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDWixJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDWixJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7U0FDcEI7SUFDTCxDQUFDO0lBRU8sSUFBSTtRQUNSLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNqQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksR0FBRyxvQkFBVSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEYsVUFBVTtRQUNWLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksc0JBQVksQ0FBQyxRQUFRLEVBQUU7WUFDeEMsSUFBSSxHQUFHLEdBQUcsb0JBQVUsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3BELGdCQUFNLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDO2dCQUM5QixDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ2xCLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNO2FBQy9ELENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQztJQUVPLFNBQVM7UUFDYixJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzVELG1CQUFTLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxtQkFBUyxDQUFDLHVCQUF1QixFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM5RixDQUFDO0lBRU8sVUFBVTtRQUNkLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNaLG1CQUFTLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxtQkFBUyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1NBQzlEO2FBQU07WUFDSCxPQUFPLENBQUMsR0FBRyxDQUFDLG1DQUFtQyxDQUFDLENBQUM7U0FDcEQ7SUFDTCxDQUFDO0lBRU8sZ0JBQWdCLENBQUMsRUFBVSxFQUFFLE1BQWU7UUFDaEQsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRTtZQUNuQyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7U0FDckM7SUFDTCxDQUFDO0NBRUo7QUE1Q0QsNEJBNENDOzs7OztBQ3JERCw4REFBdUQ7QUFHdkQsc0VBQStEO0FBRS9ELGtCQUFrQyxTQUFRLElBQUksQ0FBQyxNQUFNO0lBT2pEO1FBQ0ksS0FBSyxFQUFFLENBQUM7UUFOSixhQUFRLEdBQWdCLElBQUksQ0FBQztRQUM3QixXQUFNLEdBQVcsQ0FBQyxDQUFDO1FBTXZCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRU8sSUFBSTtRQUNSLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxzQkFBWSxFQUFFLENBQUM7UUFDeEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLEdBQUcsQ0FBQyxJQUFJLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDL0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLGtCQUFRLENBQUMsZ0JBQWdCLEVBQUUsa0JBQVEsQ0FBQyxpQkFBaUIsRUFBRSxTQUFTLENBQUMsQ0FBQztRQUN4RyxJQUFJLENBQUMsUUFBUSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7UUFFbEMsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXBFLElBQUksR0FBRyxHQUFXLDZCQUE2QixDQUFDO1FBQ2hELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUMsT0FBcUIsRUFBRSxFQUFFO1lBQzFHLElBQUksR0FBRyxHQUFlLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDcEUsR0FBRyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUN0QyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7WUFDekIsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1lBQzFCLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3BDLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDUixDQUFDO0lBRU0sV0FBVztRQUNkLGtCQUFRLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdkQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRU0sV0FBVztRQUNkLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRTtZQUN2QyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7WUFDL0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUUsQ0FBQztZQUNuQyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQy9CLElBQUksQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDL0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUMzQixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQy9DLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDOUM7UUFDRCxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVPLFVBQVUsQ0FBQyxJQUFZO1FBQzNCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNoRSxDQUFDO0lBR00sTUFBTSxLQUFLLEdBQUc7UUFDakIsSUFBSSxZQUFZLENBQUMsU0FBUyxJQUFJLElBQUksRUFBRTtZQUNoQyxZQUFZLENBQUMsU0FBUyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7U0FDL0M7UUFDRCxPQUFPLFlBQVksQ0FBQyxTQUFTLENBQUM7SUFDbEMsQ0FBQztDQUNKO0FBN0RELCtCQTZEQzs7Ozs7QUNsRUQscURBQTJDO0FBQzNDLCtEQUF3RDtBQUN4RCxpRUFBMEQ7QUFDMUQsd0RBQWlEO0FBQ2pELG9FQUE2RDtBQUM3RCw4REFBdUQ7QUFFdkQsZ0JBQWdDLFNBQVEsY0FBRSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsWUFBWTtJQVlwRTtRQUNJLEtBQUssRUFBRSxDQUFDO1FBWEosb0JBQWUsR0FBVyxDQUFDLENBQUM7UUFDNUIsWUFBTyxHQUFhO1lBQ3hCLGVBQWU7WUFDZixVQUFVO1lBQ1YsY0FBYztZQUNkLGNBQWM7WUFDZCxpQkFBaUI7WUFDakIsZ0JBQWdCO1NBQ25CLENBQUE7SUFJRCxDQUFDO0lBRUQsUUFBUTtRQUNKLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDcEIsQ0FBQztJQUVPLFFBQVE7UUFDWixJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDN0IscUJBQVcsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFO1lBQzFCLG9CQUFVLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUU7Z0JBQ3RCLHFCQUFXLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBYSxFQUFFLEVBQUU7b0JBQ3RDLElBQUksSUFBSSxFQUFFO3dCQUNOLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztxQkFDekI7Z0JBQ0wsQ0FBQyxDQUFDLENBQUE7WUFDTixDQUFDLENBQUMsQ0FBQTtRQUNOLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVELGVBQWU7SUFDUCxjQUFjO1FBQ2xCLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUU7WUFDdkIsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsS0FBYSxFQUFFLEVBQUU7Z0JBQ2pDLElBQUksQ0FBQyxlQUFlLEdBQUcsS0FBSyxDQUFDO2dCQUM3QixRQUFRLEtBQUssRUFBRTtvQkFDWCxLQUFLLENBQUMsRUFBQyxNQUFNO3dCQUNULElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsa0JBQVEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7d0JBQ2pGLE1BQU07b0JBQ1YsS0FBSyxDQUFDLEVBQUMsVUFBVTt3QkFDYixnQkFBTSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQzt3QkFDcEIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO3dCQUN0QixNQUFNO29CQUNWLEtBQUssQ0FBQyxFQUFDLE1BQU07d0JBQ1QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsWUFBWSxDQUFDO3dCQUNsQyxNQUFNO2lCQUNiO2dCQUNELElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO2dCQUMxQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7WUFDeEQsQ0FBQyxDQUFDLENBQUM7U0FDTjthQUFNO1lBQ0gsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQ3pCO0lBQ0wsQ0FBQztJQUVELFdBQVc7SUFDSCxjQUFjO1FBQ2xCLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBQzNCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQy9DLG1CQUFTLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLG1CQUFTLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUVELFlBQVk7SUFDSixlQUFlO1FBQ25CLHNDQUFzQztRQUN0QywwRkFBMEY7UUFDMUYseUZBQXlGO1FBQ3pGLDBEQUEwRDtRQUMxRCwwQkFBMEI7UUFDMUIsdUJBQXVCO1FBQ3ZCLGtDQUFrQztRQUNsQyxNQUFNO1FBQ04sMkJBQTJCO1FBRTNCLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDakQsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRTtZQUM5RixJQUFJLENBQUMsbUJBQW1CLEVBQUUsQ0FBQztRQUMvQixDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ1IsQ0FBQztJQUVPLG1CQUFtQjtRQUN2QixJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDckMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRU8sa0JBQWtCO1FBQ3RCLElBQUksSUFBSSxDQUFDLGVBQWUsSUFBSSxDQUFDLEVBQUU7WUFDM0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxrQkFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNwRjtRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsR0FBRyxFQUFFO1lBQ2pHLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsRUFBRSxNQUFNLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxHQUFHLENBQUMsQ0FBQztRQUNoRSxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ1AsQ0FBQztDQUNKO0FBbEdELDZCQWtHQzs7Ozs7QUN6R0Qsa0VBQTJEO0FBQzNELDhEQUF1RDtBQUN2RCxxREFBMkM7QUFDM0MsMERBQW1EO0FBQ25ELDhEQUF1RDtBQUN2RCw4REFBdUQ7QUFDdkQsaUVBQTBEO0FBQzFELHdEQUFpRDtBQUNqRCwyREFBb0Q7QUFDcEQscUVBQThEO0FBRTlELG1CQUFtQyxTQUFRLGtCQUFRO0lBVS9DO1FBQ0ksS0FBSyxDQUFDLGtCQUFRLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxjQUFFLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQVRwRSxnQkFBVyxHQUFXLEdBQUcsQ0FBQztRQUMxQixjQUFTLEdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTTtRQUM3QixhQUFRLEdBQVcsQ0FBQyxDQUFDLENBQUMsTUFBTTtRQUM1QixpQkFBWSxHQUFXLENBQUMsQ0FBQyxDQUFDLFNBQVM7UUFDbkMsZUFBVSxHQUFZLEtBQUssQ0FBQyxDQUFDLE1BQU07UUFDbkMsa0JBQWEsR0FBWSxLQUFLLENBQUMsQ0FBQyxVQUFVO1FBQzFDLGNBQVMsR0FBVyxDQUFDLENBQUMsQ0FBQztJQUkvQixDQUFDO0lBRU0sTUFBTTtRQUNULEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFO1lBQ3BCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNoQixJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztZQUN6QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ25ELENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVPLGFBQWEsQ0FBQyxXQUFxQixJQUFJO1FBQzNDLGlCQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUU7WUFDdEMsSUFBSSxHQUFHLEVBQUU7Z0JBQ0wsSUFBSSxJQUFJLENBQUMsYUFBYSxJQUFJLEtBQUssRUFBRTtvQkFDN0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxrQkFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7b0JBQ2pELElBQUksQ0FBQyxRQUFRLEdBQUcsa0JBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO29CQUNuRCxJQUFJLENBQUMsWUFBWSxHQUFHLGtCQUFRLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztpQkFDeEQ7Z0JBQ0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxrQkFBUSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7Z0JBQ3pELFNBQVM7Z0JBQ1QsSUFBSSxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsRUFBRTtvQkFDcEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7aUJBQ3JCO2dCQUNELFFBQVEsSUFBSSxRQUFRLEVBQUUsQ0FBQzthQUMxQjtRQUNMLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVPLFFBQVE7UUFDWixJQUFJLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsWUFBWSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDM0QsQ0FBQztJQUVPLGlCQUFpQjtRQUNyQixJQUFJLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDdEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUNuQzthQUFNO1lBQ0gsSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDO1NBQ3BEO0lBQ0wsQ0FBQztJQUVNLFNBQVM7UUFDWixJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN0RSxDQUFDO0lBRU0sWUFBWTtRQUNmLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCxXQUFXO0lBQ0gsY0FBYztRQUNsQixJQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0IsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFLEVBQUMsTUFBTTtZQUN4QixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztZQUN4QixJQUFJLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzVDO2FBQU0sSUFBSSxJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsRUFBRTtZQUMzQixJQUFJLENBQUMsa0JBQWtCLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzNDO2FBQU0sSUFBSSxtQkFBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDM0QsSUFBSSxDQUFDLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM5QzthQUFNO1lBQ0gsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQ25DLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO1NBQzdCO0lBQ0wsQ0FBQztJQUVPLGFBQWE7UUFDakIsSUFBSSxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsRUFBRTtZQUNuQixJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEdBQUcsWUFBWSxHQUFHLGtCQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDbkYsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQztZQUNuQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDbkI7YUFBTSxJQUFJLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxFQUFFO1lBQzlCLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxjQUFjLEdBQUcsa0JBQVEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN6RixJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDO1lBQ25DLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUNwQixJQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVE7U0FDL0I7YUFBTTtZQUNILElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFO2dCQUMxQixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7YUFDeEI7WUFDRCxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1NBQ3BDO1FBQ0QsTUFBTTtRQUNOLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFFTyxrQkFBa0IsQ0FBQyxJQUFZO1FBQ25DLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLGlCQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDLEdBQVEsRUFBRSxFQUFFO1lBQzVDLElBQUksQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLEVBQUUsSUFBSSxJQUFJLEVBQUU7Z0JBQ3hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLEVBQUUsSUFBSSxDQUFDLENBQUM7Z0JBQ3hDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO2dCQUMxQixPQUFPO2FBQ1Y7WUFDRCxJQUFJLE1BQU0sR0FBVyxHQUFHLENBQUMsRUFBRSxDQUFDO1lBQzVCLElBQUksUUFBUSxHQUFXLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLEdBQUcsR0FBRyxHQUFHLEVBQUUsQ0FBQztZQUN6RCxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsR0FBRyxDQUFDLEdBQUcsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQzVDLFFBQVEsSUFBSSxFQUFFO2dCQUNWLEtBQUssU0FBUyxDQUFDLElBQUk7b0JBQ2YsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7b0JBQzFCLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztvQkFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7b0JBQ2xCLE1BQU07Z0JBQ1YsS0FBSyxTQUFTLENBQUMsT0FBTztvQkFDbEIsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO29CQUNqQixJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztvQkFDbEIsaUJBQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztvQkFDakMsTUFBTTthQUNiO1FBQ0wsQ0FBQyxDQUFDLENBQUE7SUFDTixDQUFDO0lBRUQsU0FBUztJQUNELFVBQVUsQ0FBQyxRQUFnQixFQUFFLE1BQWM7UUFDL0MsSUFBSSxJQUFJLEdBQVcsR0FBRyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDO1FBQ3RELElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsRUFBRTtZQUNuQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUM7U0FDaEI7UUFDRCxJQUFJLFVBQVUsR0FBVyxDQUFDLENBQUM7UUFDM0IsSUFBSSxZQUFZLEdBQVcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdkUsSUFBSSxPQUFPLEdBQUcsR0FBRyxFQUFFO1lBQ2YsSUFBSSxJQUFJLEdBQUcsQ0FBQyxFQUFFO2dCQUNWLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsUUFBUSxHQUFHLFFBQVEsRUFBRTtvQkFDbkMsSUFBSSxRQUFRLEdBQUcsVUFBVSxHQUFHLFlBQVksQ0FBQztvQkFDekMsSUFBSTtvQkFDSixJQUFJLFFBQVEsR0FBRyxHQUFHLEVBQUU7d0JBQ2hCLElBQUksSUFBSSxHQUFHLENBQUM7cUJBQ2Y7eUJBQU0sSUFBSSxRQUFRLEdBQUcsR0FBRyxFQUFFO3dCQUN2QixJQUFJLElBQUksR0FBRyxDQUFDO3FCQUNmO29CQUNELElBQUksSUFBSSxHQUFHLEdBQUcsRUFBRTt3QkFDWixJQUFJLEdBQUcsR0FBRyxDQUFDO3FCQUNkO29CQUNELFVBQVUsSUFBSSxJQUFJLENBQUM7b0JBQ25CLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7aUJBQ2xDO3FCQUFNO29CQUNILElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7b0JBQ2xDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7b0JBQ3hDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO29CQUMxQixRQUFRO29CQUNSLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQy9CO2FBQ0o7aUJBQU0sSUFBSSxJQUFJLEdBQUcsQ0FBQyxFQUFFO2dCQUNqQixJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxRQUFRLEVBQUU7b0JBQ25DLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUM7aUJBQ2xDO3FCQUFNO29CQUNILElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7b0JBQ2xDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7b0JBQ3hDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO2lCQUM3QjthQUNKO1FBQ0wsQ0FBQyxDQUFBO1FBQ0QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUVELGFBQWE7SUFDTCxjQUFjLENBQUMsTUFBYztRQUNqQyxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsbUJBQVMsQ0FBQyxtQkFBbUIsRUFBRSxDQUFDLElBQWEsRUFBRSxFQUFFO1lBQzlELElBQUksSUFBSTtnQkFBRSxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUNyQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDWCxJQUFJLElBQUksQ0FBQyxTQUFTLElBQUksU0FBUyxDQUFDLElBQUksRUFBRTtZQUNsQyxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztTQUM5QjtJQUNMLENBQUM7SUFFTyxrQkFBa0IsQ0FBQyxZQUFxQixJQUFJO1FBQ2hELElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLFlBQVksR0FBRyxTQUFTLENBQUM7SUFDL0MsQ0FBQztDQUNKO0FBcExELGdDQW9MQztBQUVELElBQUssU0FPSjtBQVBELFdBQUssU0FBUztJQUNWLFNBQVM7SUFDVCx5Q0FBSSxDQUFBO0lBQ0osU0FBUztJQUNULCtDQUFPLENBQUE7SUFDUCxVQUFVO0lBQ1YsMkNBQUssQ0FBQTtBQUNULENBQUMsRUFQSSxTQUFTLEtBQVQsU0FBUyxRQU9iOzs7OztBQ3hNRCxxREFBMkM7QUFFM0MsY0FBOEIsU0FBUSxjQUFFLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVO0lBRS9ELGdCQUFnQixLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFMUIsSUFBSSxVQUFVLENBQUMsS0FBVTtRQUNyQixJQUFJLEtBQUssRUFBRTtZQUNQLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUM7WUFDckMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztZQUNoRSxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDO1lBQ3JDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxXQUFXLENBQUM7U0FDM0M7SUFDTCxDQUFDO0NBQ0o7QUFaRCwyQkFZQzs7Ozs7QUNkRCxrRUFBMkQ7QUFDM0QsOERBQXVEO0FBQ3ZELHFEQUEyQztBQUMzQywwREFBbUQ7QUFDbkQsOERBQXVEO0FBRXZELG1FQUE0RDtBQUU1RDs7R0FFRztBQUNILGNBQThCLFNBQVEsa0JBQVE7SUFTMUM7UUFDSSxLQUFLLENBQUMsa0JBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLGNBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBUjFELHFCQUFnQixHQUFXLENBQUMsQ0FBQyxDQUFDO1FBQzlCLG1CQUFjLEdBQVksS0FBSyxDQUFDO0lBUXhDLENBQUM7SUFFTSxNQUFNO1FBQ1QsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ2YsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUN4RixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELGFBQWE7SUFDTCxhQUFhO1FBQ2pCLGlCQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLENBQUMsSUFBUyxFQUFFLEVBQUU7WUFDOUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7WUFDM0IsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFO2dCQUNyQixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQzthQUM1QztZQUNELElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFRCxnQkFBZ0I7SUFDUixlQUFlO1FBQ25CLGlCQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUMsT0FBWSxFQUFFLEVBQUU7WUFDaEQsSUFBSSxPQUFPLEVBQUU7Z0JBQ1QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLE9BQU8sR0FBRyxFQUFFLENBQUM7YUFDMUM7UUFDTCxDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFRCxlQUFlO0lBQ1AsY0FBYztRQUNsQixpQkFBTyxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLElBQVMsRUFBRSxFQUFFO1lBQy9DLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO1lBQzVCLElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtnQkFDdEIsSUFBSSxJQUFJLENBQUMsZUFBZSxJQUFJLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtvQkFDekQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7d0JBQ25DLElBQUksS0FBSyxHQUFXLGtCQUFRLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQzt3QkFDakUsSUFBSSxLQUFLLEdBQUcsQ0FBQzs0QkFBRSxPQUFPLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztvQkFDM0MsQ0FBQyxDQUFDLENBQUM7aUJBQ047Z0JBQ0QsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7YUFDN0M7WUFDRCxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUM1QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxnQkFBZ0I7SUFDUixnQkFBZ0I7UUFDcEIsaUJBQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsQ0FBQyxPQUFZLEVBQUUsRUFBRTtZQUNqRCxJQUFJLE9BQU8sRUFBRTtnQkFDVCxJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEdBQUcsT0FBTyxHQUFHLEVBQUUsQ0FBQzthQUMxQztRQUNMLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQztJQUVPLGNBQWMsQ0FBQyxRQUFhO1FBQ2hDLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDbEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUM5QixJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ2xDLElBQUksUUFBUSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ2pDLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7WUFDbkMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztZQUM3QixJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQ2pDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUM7U0FDbEM7SUFDTCxDQUFDO0lBRU0sU0FBUztRQUNaLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFFTSxZQUFZO1FBQ2YsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDakUsQ0FBQztJQUVELHNCQUFzQjtJQUNkLFNBQVM7UUFDYixJQUFJLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxhQUFhO1lBQUUsT0FBTztRQUNwRSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxjQUFjLEdBQUcsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDNUQsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFLEVBQUcsS0FBSztZQUM3QixJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1lBQzNCLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7WUFDdEIsSUFBSSxDQUFDLGNBQWMsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7U0FDakc7YUFBTSxFQUFLLEtBQUs7WUFDYixJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO1lBQzNCLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7WUFDdEIsSUFBSSxDQUFDLGVBQWUsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7U0FDcEc7SUFDTCxDQUFDO0lBRU8sWUFBWSxDQUFDLElBQWMsRUFBRSxLQUFhO1FBQzlDLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNO1lBQUUsT0FBTztRQUMvQyxJQUFJLElBQUksR0FBYSxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBYSxDQUFDO1FBQzdELElBQUksSUFBSSxFQUFFO1lBQ04sSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDN0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztZQUM3QyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sR0FBRyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUM7WUFDOUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsS0FBSyxHQUFHLENBQUMsQ0FBQztZQUNqQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFO2dCQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxvQkFBVSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDO2FBQzdFO2lCQUFNO2dCQUNILElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQzthQUN6QztTQUNKO0lBQ0wsQ0FBQztDQUNKO0FBcEhELDJCQW9IQzs7Ozs7QUMvSEQscURBQTJDO0FBRzNDLCtEQUF3RDtBQUN4RCxtRUFBNEQ7QUFDNUQsd0RBQWlEO0FBRWpELDREQUFxRDtBQUNyRCw4REFBdUQ7QUFDdkQsaUVBQTBEO0FBQzFELHdEQUFpRDtBQUVqRCxvRUFBNkQ7QUFDN0QsMkRBQW9EO0FBQ3BELHFFQUE4RDtBQUU5RCxjQUE4QixTQUFRLGNBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVU7SUFPL0Q7UUFBZ0IsS0FBSyxFQUFFLENBQUM7UUFIaEIsaUJBQVksR0FBVyxDQUFDLENBQUM7UUFDekIsY0FBUyxHQUFXLENBQUMsQ0FBQztJQUVMLENBQUM7SUFFMUIsSUFBSSxVQUFVLENBQUMsS0FBVTtRQUNyQixJQUFJLEtBQUssRUFBRTtZQUNQLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQ3JCLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNaLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztTQUNwQjtJQUNMLENBQUM7SUFFTyxJQUFJO1FBQ1IsSUFBSSxDQUFDLEdBQUcsR0FBRyxvQkFBVSxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ2xFLElBQUksSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNWLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLG9CQUFVLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDO1lBQzNELElBQUkscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRTtnQkFDbkQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO2dCQUN6QixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7YUFDaEM7aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO2dCQUMxQixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7Z0JBQzVCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQztnQkFDM0MsSUFBSSxVQUFVLEdBQVcsRUFBRSxDQUFDO2dCQUM1QixLQUFLLElBQUksS0FBSyxHQUFHLENBQUMsRUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEtBQUssRUFBRSxFQUFFO29CQUMzRCxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFDdkMsSUFBSSxPQUFPLEVBQUU7d0JBQ1QsVUFBVSxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUM7cUJBQ2hDO2lCQUNKO2dCQUNELElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLFVBQVUsQ0FBQzthQUNuQztZQUNELElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxHQUFHLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUM7WUFDdkYsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQztZQUNqRCxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxJQUFJLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLEVBQUU7Z0JBQzlHLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUM7YUFDakQ7WUFDRCxJQUFJLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxFQUFFO2dCQUN2QixJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO2dCQUM3RSxJQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFO29CQUM3QixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7aUJBQ3ZCO2FBQ0o7aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO2FBQ3ZDO1lBQ0QsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1NBQzVCO0lBQ0wsQ0FBQztJQUVPLGNBQWM7UUFDbEIsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRTtZQUN0QixJQUFJLENBQUMsU0FBUyxHQUFHLHFCQUFXLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUscUJBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUN6SSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxrQkFBUSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7U0FDakU7SUFDTCxDQUFDO0lBRU8sU0FBUztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDeEQsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN4RCxJQUFJLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDMUUsQ0FBQztJQUVPLFlBQVk7UUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN6RCxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3pELElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBRUQsV0FBVztJQUNILFNBQVM7UUFDYixJQUFJLG1CQUFTLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUMvQyxxQkFBVyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3RDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztTQUN6QjthQUFNO1lBQ0gsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUM7U0FDNUM7SUFDTCxDQUFDO0lBRUQsVUFBVTtJQUNGLFNBQVM7UUFDYixrQkFBUSxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFO1lBQzdCLElBQUksSUFBSSxHQUFhLHFCQUFXLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN2RSxJQUFJLElBQUksSUFBSSxJQUFJLEVBQUU7Z0JBQ2QscUJBQVcsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQztnQkFDM0MsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUM7YUFDakQ7WUFDRCxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDeEIsQ0FBQyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUVELGFBQWE7SUFDTCxnQkFBZ0I7UUFDcEIsaUJBQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLG1CQUFTLENBQUMsY0FBYyxFQUFFLElBQUksRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUMvRixDQUFDO0lBRUQsY0FBYztJQUNOLGlCQUFpQjtRQUNyQixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPO1lBQUUsT0FBTztRQUN0QyxJQUFJLFVBQVUsR0FBVyxvQkFBVSxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzFGLElBQUksVUFBVSxFQUFFO1lBQ1osSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsb0JBQVUsQ0FBQyxTQUFTLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztZQUM3RCwrQkFBK0I7WUFDL0IsNkRBQTZEO1lBQzdELElBQUk7WUFDSiw0QkFBNEI7WUFDNUIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1lBQzNELElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLElBQUksSUFBSSxFQUFFO2dCQUNuQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksR0FBRyxHQUFHLENBQUM7YUFDbkM7U0FDSjtJQUNMLENBQUM7SUFFTyxZQUFZO1FBQ2hCLElBQUksa0JBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3ZFLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztTQUNoQzthQUFNO1lBQ0gsSUFBSSxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLEVBQUU7Z0JBQzVCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLGlDQUFpQyxDQUFDO2FBQ3pEO2lCQUFNO2dCQUNILElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxHQUFHLGlDQUFpQyxDQUFDO2FBQ3pEO1NBQ0o7SUFDTCxDQUFDO0NBQ0o7QUFqSUQsMkJBaUlDOzs7OztBQ2pKRCxrRUFBMkQ7QUFDM0QsOERBQXVEO0FBQ3ZELHFEQUEyQztBQUUzQywrREFBd0Q7QUFDeEQsMkRBQW9EO0FBQ3BELHFFQUE4RDtBQUU5RDs7R0FFRztBQUNILGNBQThCLFNBQVEsa0JBQVE7SUFJMUM7UUFDSSxLQUFLLENBQUMsa0JBQVEsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLGNBQUUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBSDFELGlCQUFZLEdBQVcsQ0FBQyxDQUFDO1FBSTdCLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFRCxLQUFLO0lBQ0UsTUFBTTtRQUNULEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNmLElBQUksU0FBUyxHQUFHLG9CQUFVLENBQUMsV0FBVyxDQUFDLG9CQUFVLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDaEUsSUFBSSxTQUFTLEVBQUU7WUFDWCxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO1lBQ2xDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUM7WUFDaEMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztZQUN4RixJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFO2dCQUN6QixJQUFJLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxFQUFFO29CQUN2QixJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO2lCQUM3QztZQUNMLENBQUMsQ0FBQyxDQUFBO1NBQ0w7SUFDTCxDQUFDO0lBRUQsYUFBYTtJQUNOLFNBQVM7UUFDWixJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN0RSxDQUFDO0lBRUQsYUFBYTtJQUNOLFlBQVk7UUFDZixJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRU8sWUFBWSxDQUFDLElBQWMsRUFBRSxLQUFhO1FBQzlDLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUU7WUFDcEMsT0FBTztTQUNWO1FBQ0QsSUFBSSxJQUFJLEdBQWEsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQWEsQ0FBQztRQUNqRSxJQUFJLElBQUksRUFBRTtZQUNOLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzdDLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLElBQUksS0FBSyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO2dCQUNoRSxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssR0FBRyxDQUFDLENBQUM7YUFDakM7U0FDSjtJQUNMLENBQUM7SUFFTyxjQUFjO1FBQ2xCLGlCQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxtQkFBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7Q0FFSjtBQXBERCwyQkFvREM7Ozs7O0FDL0RELHFEQUEyQztBQUMzQywwREFBbUQ7QUFDbkQsd0RBQWlEO0FBRWpELGNBQThCLFNBQVEsY0FBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVTtJQUkvRCxnQkFBZ0IsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRTFCLElBQUksVUFBVSxDQUFDLEtBQVU7UUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1osSUFBSSxTQUFTLEdBQVcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLElBQUksQ0FBQyxDQUFDO1lBQ2pELElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFO2dCQUM1QixTQUFTLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUM7YUFDOUI7WUFDRCxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssR0FBRyxHQUFHLEdBQUcsU0FBUyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7WUFDdEYsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO1lBQ2hELElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUM3QixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFHLENBQUMsRUFBRTtnQkFDNUIsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsR0FBRyxDQUFDLEVBQUUsRUFBQyxLQUFLO29CQUNsQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7aUJBQ2hDO3FCQUFNO29CQUNILElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztpQkFDakM7YUFDSjtpQkFBTTtnQkFDSCxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7YUFDaEM7WUFDRCxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7U0FDcEI7SUFDTCxDQUFDO0lBRU8sU0FBUztRQUNiLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDMUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBRU8sV0FBVztRQUNmLGlCQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBUyxFQUFFLEVBQUU7WUFDdEQsSUFBSSxJQUFJLEVBQUU7Z0JBQ04sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO2dCQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7Z0JBQzdCLGlCQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFFLENBQUM7Z0JBQ2pDLGdCQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQzthQUNuQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVPLFVBQVU7SUFFbEIsQ0FBQztDQUNKO0FBaERELDJCQWdEQzs7Ozs7QUNwREQsa0VBQTJEO0FBQzNELDhEQUF1RDtBQUN2RCxxREFBMkM7QUFFM0MsMERBQW1EO0FBRW5EOztHQUVHO0FBQ0gsY0FBOEIsU0FBUSxrQkFBUTtJQUUxQztRQUNJLEtBQUssQ0FBQyxrQkFBUSxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsY0FBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDOUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVNLE1BQU07UUFDVCxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDZixJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDOUIsaUJBQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUMsSUFBUyxFQUFFLEVBQUU7WUFDdEMsSUFBSSxJQUFJLEVBQUU7Z0JBQ04sSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztnQkFDbkMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztnQkFDM0IsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsYUFBYSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsWUFBWSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztnQkFDeEYsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQzthQUNoQztRQUNMLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUVPLFlBQVksQ0FBQyxJQUFjLEVBQUUsS0FBYTtRQUM5QyxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFO1lBQ3BDLE9BQU87U0FDVjtRQUNELElBQUksSUFBSSxHQUFhLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFhLENBQUM7UUFDN0QsSUFBSSxJQUFJLEVBQUU7WUFDTixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUNoRDtJQUNMLENBQUM7Q0FDSjtBQTlCRCwyQkE4QkM7Ozs7O0FDbkNELElBQUksR0FBRyxHQUFhLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDO0FBQzdDLElBQWMsRUFBRSxDQWlEZjtBQWpERCxXQUFjLEVBQUU7SUFBQyxJQUFBLFVBQVUsQ0FpRDFCO0lBakRnQixXQUFBLFVBQVU7UUFBQyxJQUFBLE1BQU0sQ0FpRGpDO1FBakQyQixXQUFBLE1BQU07WUFDOUIsc0JBQThCLFNBQVEsSUFBSSxDQUFDLElBQUk7Z0JBSzNDLGdCQUFlLEtBQUssRUFBRSxDQUFBLENBQUEsQ0FBQztnQkFDdkIsY0FBYztvQkFDVixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7b0JBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMsa0NBQWtDLENBQUMsQ0FBQztnQkFDdkQsQ0FBQzthQUNKO1lBVlksdUJBQWdCLG1CQVU1QixDQUFBO1lBQ0QsR0FBRyxDQUFDLHVDQUF1QyxFQUFDLGdCQUFnQixDQUFDLENBQUM7WUFDOUQseUJBQWlDLFNBQVEsSUFBSSxDQUFDLElBQUk7Z0JBSzlDLGdCQUFlLEtBQUssRUFBRSxDQUFBLENBQUEsQ0FBQztnQkFDdkIsY0FBYztvQkFDVixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7b0JBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMscUNBQXFDLENBQUMsQ0FBQztnQkFDMUQsQ0FBQzthQUNKO1lBVlksMEJBQW1CLHNCQVUvQixDQUFBO1lBQ0QsR0FBRyxDQUFDLDBDQUEwQyxFQUFDLG1CQUFtQixDQUFDLENBQUM7WUFDcEUsdUJBQStCLFNBQVEsSUFBSSxDQUFDLElBQUk7Z0JBTzVDLGdCQUFlLEtBQUssRUFBRSxDQUFBLENBQUEsQ0FBQztnQkFDdkIsY0FBYztvQkFDVixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7b0JBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMsbUNBQW1DLENBQUMsQ0FBQztnQkFDeEQsQ0FBQzthQUNKO1lBWlksd0JBQWlCLG9CQVk3QixDQUFBO1lBQ0QsR0FBRyxDQUFDLHdDQUF3QyxFQUFDLGlCQUFpQixDQUFDLENBQUM7WUFDaEUseUJBQWlDLFNBQVEsSUFBSSxDQUFDLElBQUk7Z0JBRzlDLGdCQUFlLEtBQUssRUFBRSxDQUFBLENBQUEsQ0FBQztnQkFDdkIsY0FBYztvQkFDVixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7b0JBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMscUNBQXFDLENBQUMsQ0FBQztnQkFDMUQsQ0FBQzthQUNKO1lBUlksMEJBQW1CLHNCQVEvQixDQUFBO1lBQ0QsR0FBRyxDQUFDLDBDQUEwQyxFQUFDLG1CQUFtQixDQUFDLENBQUM7UUFDeEUsQ0FBQyxFQWpEMkIsTUFBTSxHQUFOLGlCQUFNLEtBQU4saUJBQU0sUUFpRGpDO0lBQUQsQ0FBQyxFQWpEZ0IsVUFBVSxHQUFWLGFBQVUsS0FBVixhQUFVLFFBaUQxQjtBQUFELENBQUMsRUFqRGEsRUFBRSxHQUFGLFVBQUUsS0FBRixVQUFFLFFBaURmO0FBQ0QsV0FBYyxFQUFFO0lBQUMsSUFBQSxVQUFVLENBNEIxQjtJQTVCZ0IsV0FBQSxVQUFVO1FBQUMsSUFBQSxPQUFPLENBNEJsQztRQTVCMkIsV0FBQSxPQUFPO1lBQy9CLG1CQUEyQixTQUFRLElBQUksQ0FBQyxJQUFJO2dCQUt4QyxnQkFBZSxLQUFLLEVBQUUsQ0FBQSxDQUFBLENBQUM7Z0JBQ3ZCLGNBQWM7b0JBQ1YsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7Z0JBQ3JELENBQUM7YUFDSjtZQVZZLHFCQUFhLGdCQVV6QixDQUFBO1lBQ0QsR0FBRyxDQUFDLHFDQUFxQyxFQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3pELG1CQUEyQixTQUFRLElBQUksQ0FBQyxJQUFJO2dCQVF4QyxnQkFBZSxLQUFLLEVBQUUsQ0FBQSxDQUFBLENBQUM7Z0JBQ3ZCLGNBQWM7b0JBQ1YsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLGdDQUFnQyxDQUFDLENBQUM7Z0JBQ3JELENBQUM7YUFDSjtZQWJZLHFCQUFhLGdCQWF6QixDQUFBO1lBQ0QsR0FBRyxDQUFDLHFDQUFxQyxFQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzdELENBQUMsRUE1QjJCLE9BQU8sR0FBUCxrQkFBTyxLQUFQLGtCQUFPLFFBNEJsQztJQUFELENBQUMsRUE1QmdCLFVBQVUsR0FBVixhQUFVLEtBQVYsYUFBVSxRQTRCMUI7QUFBRCxDQUFDLEVBNUJhLEVBQUUsR0FBRixVQUFFLEtBQUYsVUFBRSxRQTRCZjtBQUNELFdBQWMsRUFBRTtJQUFDLElBQUEsVUFBVSxDQVcxQjtJQVhnQixXQUFBLFVBQVU7UUFBQyxJQUFBLE1BQU0sQ0FXakM7UUFYMkIsV0FBQSxNQUFNO1lBQzlCLGtCQUEwQixTQUFRLElBQUksQ0FBQyxLQUFLO2dCQUd4QyxnQkFBZSxLQUFLLEVBQUUsQ0FBQSxDQUFBLENBQUM7Z0JBQ3ZCLGNBQWM7b0JBQ1YsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLDhCQUE4QixDQUFDLENBQUM7Z0JBQ25ELENBQUM7YUFDSjtZQVJZLG1CQUFZLGVBUXhCLENBQUE7WUFDRCxHQUFHLENBQUMsbUNBQW1DLEVBQUMsWUFBWSxDQUFDLENBQUM7UUFDMUQsQ0FBQyxFQVgyQixNQUFNLEdBQU4saUJBQU0sS0FBTixpQkFBTSxRQVdqQztJQUFELENBQUMsRUFYZ0IsVUFBVSxHQUFWLGFBQVUsS0FBVixhQUFVLFFBVzFCO0FBQUQsQ0FBQyxFQVhhLEVBQUUsR0FBRixVQUFFLEtBQUYsVUFBRSxRQVdmO0FBQ0QsV0FBYyxFQUFFO0lBQUMsSUFBQSxVQUFVLENBVTFCO0lBVmdCLFdBQUEsVUFBVTtRQUFDLElBQUEsS0FBSyxDQVVoQztRQVYyQixXQUFBLEtBQUs7WUFDN0Isc0JBQThCLFNBQVEsSUFBSSxDQUFDLElBQUk7Z0JBRTNDLGdCQUFlLEtBQUssRUFBRSxDQUFBLENBQUEsQ0FBQztnQkFDdkIsY0FBYztvQkFDVixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7b0JBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMsaUNBQWlDLENBQUMsQ0FBQztnQkFDdEQsQ0FBQzthQUNKO1lBUFksc0JBQWdCLG1CQU81QixDQUFBO1lBQ0QsR0FBRyxDQUFDLHNDQUFzQyxFQUFDLGdCQUFnQixDQUFDLENBQUM7UUFDakUsQ0FBQyxFQVYyQixLQUFLLEdBQUwsZ0JBQUssS0FBTCxnQkFBSyxRQVVoQztJQUFELENBQUMsRUFWZ0IsVUFBVSxHQUFWLGFBQVUsS0FBVixhQUFVLFFBVTFCO0FBQUQsQ0FBQyxFQVZhLEVBQUUsR0FBRixVQUFFLEtBQUYsVUFBRSxRQVVmO0FBQ0QsV0FBYyxFQUFFO0lBQUMsSUFBQSxVQUFVLENBK0YxQjtJQS9GZ0IsV0FBQSxVQUFVO1FBQUMsSUFBQSxJQUFJLENBK0YvQjtRQS9GMkIsV0FBQSxJQUFJO1lBQzVCLG9CQUE0QixTQUFRLElBQUksQ0FBQyxJQUFJO2dCQVN6QyxnQkFBZSxLQUFLLEVBQUUsQ0FBQSxDQUFBLENBQUM7Z0JBQ3ZCLGNBQWM7b0JBQ1YsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLDhCQUE4QixDQUFDLENBQUM7Z0JBQ25ELENBQUM7YUFDSjtZQWRZLG1CQUFjLGlCQWMxQixDQUFBO1lBQ0QsR0FBRyxDQUFDLG1DQUFtQyxFQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQ3hELGlCQUF5QixTQUFRLElBQUksQ0FBQyxLQUFLO2dCQWdDdkMsZ0JBQWUsS0FBSyxFQUFFLENBQUEsQ0FBQSxDQUFDO2dCQUN2QixjQUFjO29CQUNWLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztvQkFDdkIsSUFBSSxDQUFDLFNBQVMsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO2dCQUNoRCxDQUFDO2FBQ0o7WUFyQ1ksZ0JBQVcsY0FxQ3ZCLENBQUE7WUFDRCxHQUFHLENBQUMsZ0NBQWdDLEVBQUMsV0FBVyxDQUFDLENBQUM7WUFDbEQsZ0JBQXdCLFNBQVEsSUFBSSxDQUFDLElBQUk7Z0JBS3JDLGdCQUFlLEtBQUssRUFBRSxDQUFBLENBQUEsQ0FBQztnQkFDdkIsY0FBYztvQkFDVixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7b0JBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMsMEJBQTBCLENBQUMsQ0FBQztnQkFDL0MsQ0FBQzthQUNKO1lBVlksZUFBVSxhQVV0QixDQUFBO1lBQ0QsR0FBRyxDQUFDLCtCQUErQixFQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ2hELG1CQUEyQixTQUFRLElBQUksQ0FBQyxJQUFJO2dCQU14QyxnQkFBZSxLQUFLLEVBQUUsQ0FBQSxDQUFBLENBQUM7Z0JBQ3ZCLGNBQWM7b0JBQ1YsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLDZCQUE2QixDQUFDLENBQUM7Z0JBQ2xELENBQUM7YUFDSjtZQVhZLGtCQUFhLGdCQVd6QixDQUFBO1lBQ0QsR0FBRyxDQUFDLGtDQUFrQyxFQUFDLGFBQWEsQ0FBQyxDQUFDO1lBQ3RELG9CQUE0QixTQUFRLElBQUksQ0FBQyxJQUFJO2dCQU96QyxnQkFBZSxLQUFLLEVBQUUsQ0FBQSxDQUFBLENBQUM7Z0JBQ3ZCLGNBQWM7b0JBQ1YsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLDhCQUE4QixDQUFDLENBQUM7Z0JBQ25ELENBQUM7YUFDSjtZQVpZLG1CQUFjLGlCQVkxQixDQUFBO1lBQ0QsR0FBRyxDQUFDLG1DQUFtQyxFQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQzVELENBQUMsRUEvRjJCLElBQUksR0FBSixlQUFJLEtBQUosZUFBSSxRQStGL0I7SUFBRCxDQUFDLEVBL0ZnQixVQUFVLEdBQVYsYUFBVSxLQUFWLGFBQVUsUUErRjFCO0FBQUQsQ0FBQyxFQS9GYSxFQUFFLEdBQUYsVUFBRSxLQUFGLFVBQUUsUUErRmY7QUFDRCxXQUFjLEVBQUU7SUFBQyxJQUFBLFVBQVUsQ0F5QjFCO0lBekJnQixXQUFBLFVBQVU7UUFBQyxJQUFBLElBQUksQ0F5Qi9CO1FBekIyQixXQUFBLElBQUk7WUFBQyxJQUFBLElBQUksQ0F5QnBDO1lBekJnQyxXQUFBLElBQUk7Z0JBQ2pDLGdCQUF3QixTQUFRLElBQUksQ0FBQyxJQUFJO29CQU9yQyxnQkFBZSxLQUFLLEVBQUUsQ0FBQSxDQUFBLENBQUM7b0JBQ3ZCLGNBQWM7d0JBQ1YsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO3dCQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLCtCQUErQixDQUFDLENBQUM7b0JBQ3BELENBQUM7aUJBQ0o7Z0JBWlksZUFBVSxhQVl0QixDQUFBO2dCQUNELEdBQUcsQ0FBQyxvQ0FBb0MsRUFBQyxVQUFVLENBQUMsQ0FBQztnQkFDckQsaUJBQXlCLFNBQVEsSUFBSSxDQUFDLElBQUk7b0JBR3RDLGdCQUFlLEtBQUssRUFBRSxDQUFBLENBQUEsQ0FBQztvQkFDdkIsY0FBYzt3QkFDVixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7d0JBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztvQkFDckQsQ0FBQztpQkFDSjtnQkFSWSxnQkFBVyxjQVF2QixDQUFBO2dCQUNELEdBQUcsQ0FBQyxxQ0FBcUMsRUFBQyxXQUFXLENBQUMsQ0FBQztZQUMzRCxDQUFDLEVBekJnQyxJQUFJLEdBQUosU0FBSSxLQUFKLFNBQUksUUF5QnBDO1FBQUQsQ0FBQyxFQXpCMkIsSUFBSSxHQUFKLGVBQUksS0FBSixlQUFJLFFBeUIvQjtJQUFELENBQUMsRUF6QmdCLFVBQVUsR0FBVixhQUFVLEtBQVYsYUFBVSxRQXlCMUI7QUFBRCxDQUFDLEVBekJhLEVBQUUsR0FBRixVQUFFLEtBQUYsVUFBRSxRQXlCZjtBQUNELFdBQWMsRUFBRTtJQUFDLElBQUEsVUFBVSxDQVkxQjtJQVpnQixXQUFBLFVBQVU7UUFBQyxJQUFBLEtBQUssQ0FZaEM7UUFaMkIsV0FBQSxLQUFLO1lBQzdCLGtCQUEwQixTQUFRLElBQUksQ0FBQyxLQUFLO2dCQUl4QyxnQkFBZSxLQUFLLEVBQUUsQ0FBQSxDQUFBLENBQUM7Z0JBQ3ZCLGNBQWM7b0JBQ1YsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLDZCQUE2QixDQUFDLENBQUM7Z0JBQ2xELENBQUM7YUFDSjtZQVRZLGtCQUFZLGVBU3hCLENBQUE7WUFDRCxHQUFHLENBQUMsa0NBQWtDLEVBQUMsWUFBWSxDQUFDLENBQUM7UUFDekQsQ0FBQyxFQVoyQixLQUFLLEdBQUwsZ0JBQUssS0FBTCxnQkFBSyxRQVloQztJQUFELENBQUMsRUFaZ0IsVUFBVSxHQUFWLGFBQVUsS0FBVixhQUFVLFFBWTFCO0FBQUQsQ0FBQyxFQVphLEVBQUUsR0FBRixVQUFFLEtBQUYsVUFBRSxRQVlmO0FBQ0QsV0FBYyxFQUFFO0lBQUMsSUFBQSxVQUFVLENBMEIxQjtJQTFCZ0IsV0FBQSxVQUFVO1FBQUMsSUFBQSxTQUFTLENBMEJwQztRQTFCMkIsV0FBQSxTQUFTO1lBQ2pDLDJCQUFtQyxTQUFRLElBQUksQ0FBQyxJQUFJO2dCQUloRCxnQkFBZSxLQUFLLEVBQUUsQ0FBQSxDQUFBLENBQUM7Z0JBQ3ZCLGNBQWM7b0JBQ1YsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLDBDQUEwQyxDQUFDLENBQUM7Z0JBQy9ELENBQUM7YUFDSjtZQVRZLCtCQUFxQix3QkFTakMsQ0FBQTtZQUNELEdBQUcsQ0FBQywrQ0FBK0MsRUFBQyxxQkFBcUIsQ0FBQyxDQUFDO1lBQzNFLHFCQUE2QixTQUFRLElBQUksQ0FBQyxJQUFJO2dCQU8xQyxnQkFBZSxLQUFLLEVBQUUsQ0FBQSxDQUFBLENBQUM7Z0JBQ3ZCLGNBQWM7b0JBQ1YsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7Z0JBQ3pELENBQUM7YUFDSjtZQVpZLHlCQUFlLGtCQVkzQixDQUFBO1lBQ0QsR0FBRyxDQUFDLHlDQUF5QyxFQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ25FLENBQUMsRUExQjJCLFNBQVMsR0FBVCxvQkFBUyxLQUFULG9CQUFTLFFBMEJwQztJQUFELENBQUMsRUExQmdCLFVBQVUsR0FBVixhQUFVLEtBQVYsYUFBVSxRQTBCMUI7QUFBRCxDQUFDLEVBMUJhLEVBQUUsR0FBRixVQUFFLEtBQUYsVUFBRSxRQTBCZjtBQUNELFdBQWMsRUFBRTtJQUFDLElBQUEsVUFBVSxDQWdDMUI7SUFoQ2dCLFdBQUEsVUFBVTtRQUFDLElBQUEsSUFBSSxDQWdDL0I7UUFoQzJCLFdBQUEsSUFBSTtZQUM1QixnQkFBd0IsU0FBUSxJQUFJLENBQUMsSUFBSTtnQkFVckMsZ0JBQWUsS0FBSyxFQUFFLENBQUEsQ0FBQSxDQUFDO2dCQUN2QixjQUFjO29CQUNWLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztvQkFDdkIsSUFBSSxDQUFDLFNBQVMsQ0FBQywwQkFBMEIsQ0FBQyxDQUFDO2dCQUMvQyxDQUFDO2FBQ0o7WUFmWSxlQUFVLGFBZXRCLENBQUE7WUFDRCxHQUFHLENBQUMsK0JBQStCLEVBQUMsVUFBVSxDQUFDLENBQUM7WUFDaEQsZ0JBQXdCLFNBQVEsSUFBSSxDQUFDLElBQUk7Z0JBT3JDLGdCQUFlLEtBQUssRUFBRSxDQUFBLENBQUEsQ0FBQztnQkFDdkIsY0FBYztvQkFDVixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7b0JBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMsMEJBQTBCLENBQUMsQ0FBQztnQkFDL0MsQ0FBQzthQUNKO1lBWlksZUFBVSxhQVl0QixDQUFBO1lBQ0QsR0FBRyxDQUFDLCtCQUErQixFQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3BELENBQUMsRUFoQzJCLElBQUksR0FBSixlQUFJLEtBQUosZUFBSSxRQWdDL0I7SUFBRCxDQUFDLEVBaENnQixVQUFVLEdBQVYsYUFBVSxLQUFWLGFBQVUsUUFnQzFCO0FBQUQsQ0FBQyxFQWhDYSxFQUFFLEdBQUYsVUFBRSxLQUFGLFVBQUUsUUFnQ2Y7QUFDRCxXQUFjLEVBQUU7SUFBQyxJQUFBLFVBQVUsQ0FpQzFCO0lBakNnQixXQUFBLFVBQVU7UUFBQyxJQUFBLElBQUksQ0FpQy9CO1FBakMyQixXQUFBLElBQUk7WUFDNUIsZ0JBQXdCLFNBQVEsSUFBSSxDQUFDLElBQUk7Z0JBYXJDLGdCQUFlLEtBQUssRUFBRSxDQUFBLENBQUEsQ0FBQztnQkFDdkIsY0FBYztvQkFDVixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7b0JBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMsMEJBQTBCLENBQUMsQ0FBQztnQkFDL0MsQ0FBQzthQUNKO1lBbEJZLGVBQVUsYUFrQnRCLENBQUE7WUFDRCxHQUFHLENBQUMsK0JBQStCLEVBQUMsVUFBVSxDQUFDLENBQUM7WUFDaEQsZ0JBQXdCLFNBQVEsSUFBSSxDQUFDLElBQUk7Z0JBS3JDLGdCQUFlLEtBQUssRUFBRSxDQUFBLENBQUEsQ0FBQztnQkFDdkIsY0FBYztvQkFDVixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7b0JBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMsMEJBQTBCLENBQUMsQ0FBQztnQkFDL0MsQ0FBQzthQUNKO1lBVlksZUFBVSxhQVV0QixDQUFBO1lBQ0QsR0FBRyxDQUFDLCtCQUErQixFQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3BELENBQUMsRUFqQzJCLElBQUksR0FBSixlQUFJLEtBQUosZUFBSSxRQWlDL0I7SUFBRCxDQUFDLEVBakNnQixVQUFVLEdBQVYsYUFBVSxLQUFWLGFBQVUsUUFpQzFCO0FBQUQsQ0FBQyxFQWpDYSxFQUFFLEdBQUYsVUFBRSxLQUFGLFVBQUUsUUFpQ2Y7QUFDRCxXQUFjLEVBQUU7SUFBQyxJQUFBLFVBQVUsQ0F3QjFCO0lBeEJnQixXQUFBLFVBQVU7UUFBQyxJQUFBLElBQUksQ0F3Qi9CO1FBeEIyQixXQUFBLElBQUk7WUFDNUIsZ0JBQXdCLFNBQVEsSUFBSSxDQUFDLElBQUk7Z0JBTXJDLGdCQUFlLEtBQUssRUFBRSxDQUFBLENBQUEsQ0FBQztnQkFDdkIsY0FBYztvQkFDVixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7b0JBQ3ZCLElBQUksQ0FBQyxTQUFTLENBQUMsMEJBQTBCLENBQUMsQ0FBQztnQkFDL0MsQ0FBQzthQUNKO1lBWFksZUFBVSxhQVd0QixDQUFBO1lBQ0QsR0FBRyxDQUFDLCtCQUErQixFQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ2hELGdCQUF3QixTQUFRLElBQUksQ0FBQyxJQUFJO2dCQUdyQyxnQkFBZSxLQUFLLEVBQUUsQ0FBQSxDQUFBLENBQUM7Z0JBQ3ZCLGNBQWM7b0JBQ1YsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO29CQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLDBCQUEwQixDQUFDLENBQUM7Z0JBQy9DLENBQUM7YUFDSjtZQVJZLGVBQVUsYUFRdEIsQ0FBQTtZQUNELEdBQUcsQ0FBQywrQkFBK0IsRUFBQyxVQUFVLENBQUMsQ0FBQztRQUNwRCxDQUFDLEVBeEIyQixJQUFJLEdBQUosZUFBSSxLQUFKLGVBQUksUUF3Qi9CO0lBQUQsQ0FBQyxFQXhCZ0IsVUFBVSxHQUFWLGFBQVUsS0FBVixhQUFVLFFBd0IxQjtBQUFELENBQUMsRUF4QmEsRUFBRSxHQUFGLFVBQUUsS0FBRixVQUFFLFFBd0JmIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xyXG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG4gICAgfTtcclxufSkoKTtcclxuKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIi8qKlRoaXMgY2xhc3MgaXMgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYnkgTGF5YUFpcklERSwgcGxlYXNlIGRvIG5vdCBtYWtlIGFueSBtb2RpZmljYXRpb25zLiAqL1xyXG5pbXBvcnQgU2NhbGVBbmltU2NyaXB0IGZyb20gXCIuL21vZHVsZS9jb21tb24vY29tcG9uZW50L1NjYWxlQW5pbVNjcmlwdFwiXG5pbXBvcnQgRGF5U2lnbkl0ZW0gZnJvbSBcIi4vbW9kdWxlL2RheVNpZ24vdmlldy9EYXlTaWduSXRlbVwiXG5pbXBvcnQgR3VpZGVTcGVha1ZpZXcgZnJvbSBcIi4vbW9kdWxlL2d1aWRlL3ZpZXcvR3VpZGVTcGVha1ZpZXdcIlxuaW1wb3J0IEhhbGxTY2VuZSBmcm9tIFwiLi9tb2R1bGUvaGFsbC92aWV3L0hhbGxTY2VuZVwiXG5pbXBvcnQgQ3VycmVuY3lWaWV3IGZyb20gXCIuL21vZHVsZS9oYWxsL3ZpZXcvQ3VycmVuY3lWaWV3XCJcbmltcG9ydCBIZWFkSXRlbSBmcm9tIFwiLi9tb2R1bGUvaGFsbC92aWV3L2l0ZW0vSGVhZEl0ZW1cIlxuaW1wb3J0IFN5c3RlbUJ0biBmcm9tIFwiLi9tb2R1bGUvaGFsbC92aWV3L2l0ZW0vU3lzdGVtQnRuXCJcbmltcG9ydCBMb2dpblNjZW5lIGZyb20gXCIuL21vZHVsZS9sb2dpbi92aWV3L0xvZ2luU2NlbmVcIlxuaW1wb3J0IFJhbmtJdGVtIGZyb20gXCIuL21vZHVsZS9yYW5rL3ZpZXcvUmFua0l0ZW1cIlxuaW1wb3J0IFNob3BJdGVtIGZyb20gXCIuL21vZHVsZS9zaG9wL3ZpZXcvU2hvcEl0ZW1cIlxuaW1wb3J0IFRhc2tJdGVtIGZyb20gXCIuL21vZHVsZS90YXNrL3ZpZXcvVGFza0l0ZW1cIlxyXG4vKlxyXG4qIOa4uOaIj+WIneWni+WMlumFjee9rjtcclxuKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZUNvbmZpZ3tcclxuICAgIHN0YXRpYyB3aWR0aDpudW1iZXI9NzUwO1xyXG4gICAgc3RhdGljIGhlaWdodDpudW1iZXI9MTMzNDtcclxuICAgIHN0YXRpYyBzY2FsZU1vZGU6c3RyaW5nPVwiZml4ZWR3aWR0aFwiO1xyXG4gICAgc3RhdGljIHNjcmVlbk1vZGU6c3RyaW5nPVwidmVydGljYWxcIjtcclxuICAgIHN0YXRpYyBhbGlnblY6c3RyaW5nPVwidG9wXCI7XHJcbiAgICBzdGF0aWMgYWxpZ25IOnN0cmluZz1cImxlZnRcIjtcclxuICAgIHN0YXRpYyBzdGFydFNjZW5lOmFueT1cIm1vZHVsZVZpZXcvbG9naW4vTG9naW5TY2VuZS5zY2VuZVwiO1xyXG4gICAgc3RhdGljIHNjZW5lUm9vdDpzdHJpbmc9XCJcIjtcclxuICAgIHN0YXRpYyBkZWJ1Zzpib29sZWFuPWZhbHNlO1xyXG4gICAgc3RhdGljIHN0YXQ6Ym9vbGVhbj1mYWxzZTtcclxuICAgIHN0YXRpYyBwaHlzaWNzRGVidWc6Ym9vbGVhbj1mYWxzZTtcclxuICAgIHN0YXRpYyBleHBvcnRTY2VuZVRvSnNvbjpib29sZWFuPXRydWU7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe31cclxuICAgIHN0YXRpYyBpbml0KCl7XHJcbiAgICAgICAgdmFyIHJlZzogRnVuY3Rpb24gPSBMYXlhLkNsYXNzVXRpbHMucmVnQ2xhc3M7XHJcbiAgICAgICAgcmVnKFwibW9kdWxlL2NvbW1vbi9jb21wb25lbnQvU2NhbGVBbmltU2NyaXB0LnRzXCIsU2NhbGVBbmltU2NyaXB0KTtcbiAgICAgICAgcmVnKFwibW9kdWxlL2RheVNpZ24vdmlldy9EYXlTaWduSXRlbS50c1wiLERheVNpZ25JdGVtKTtcbiAgICAgICAgcmVnKFwibW9kdWxlL2d1aWRlL3ZpZXcvR3VpZGVTcGVha1ZpZXcudHNcIixHdWlkZVNwZWFrVmlldyk7XG4gICAgICAgIHJlZyhcIm1vZHVsZS9oYWxsL3ZpZXcvSGFsbFNjZW5lLnRzXCIsSGFsbFNjZW5lKTtcbiAgICAgICAgcmVnKFwibW9kdWxlL2hhbGwvdmlldy9DdXJyZW5jeVZpZXcudHNcIixDdXJyZW5jeVZpZXcpO1xuICAgICAgICByZWcoXCJtb2R1bGUvaGFsbC92aWV3L2l0ZW0vSGVhZEl0ZW0udHNcIixIZWFkSXRlbSk7XG4gICAgICAgIHJlZyhcIm1vZHVsZS9oYWxsL3ZpZXcvaXRlbS9TeXN0ZW1CdG4udHNcIixTeXN0ZW1CdG4pO1xuICAgICAgICByZWcoXCJtb2R1bGUvbG9naW4vdmlldy9Mb2dpblNjZW5lLnRzXCIsTG9naW5TY2VuZSk7XG4gICAgICAgIHJlZyhcIm1vZHVsZS9yYW5rL3ZpZXcvUmFua0l0ZW0udHNcIixSYW5rSXRlbSk7XG4gICAgICAgIHJlZyhcIm1vZHVsZS9zaG9wL3ZpZXcvU2hvcEl0ZW0udHNcIixTaG9wSXRlbSk7XG4gICAgICAgIHJlZyhcIm1vZHVsZS90YXNrL3ZpZXcvVGFza0l0ZW0udHNcIixUYXNrSXRlbSk7XHJcbiAgICB9XHJcbn1cclxuR2FtZUNvbmZpZy5pbml0KCk7IiwiaW1wb3J0IEdhbWVDb25maWcgZnJvbSBcIi4vR2FtZUNvbmZpZ1wiO1xuaW1wb3J0IFBhdGhDb25maWcgZnJvbSBcIi4vY29yZV93cS9jb25maWcvUGF0aENvbmZpZ1wiO1xuaW1wb3J0IEFwcENvbmZpZyBmcm9tIFwiLi9jb3JlX3dxL2NvbmZpZy9BcHBDb25maWdcIjtcbmNsYXNzIE1haW4ge1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHQvL+agueaNrklEReiuvue9ruWIneWni+WMluW8leaTjlx0XHRcblx0XHRpZiAod2luZG93W1wiTGF5YTNEXCJdKSBMYXlhM0QuaW5pdChHYW1lQ29uZmlnLndpZHRoLCBHYW1lQ29uZmlnLmhlaWdodCk7XG5cdFx0ZWxzZSBMYXlhLmluaXQoR2FtZUNvbmZpZy53aWR0aCwgR2FtZUNvbmZpZy5oZWlnaHQsIExheWFbXCJXZWJHTFwiXSk7XG5cdFx0TGF5YVtcIlBoeXNpY3NcIl0gJiYgTGF5YVtcIlBoeXNpY3NcIl0uZW5hYmxlKCk7XG5cdFx0TGF5YVtcIkRlYnVnUGFuZWxcIl0gJiYgTGF5YVtcIkRlYnVnUGFuZWxcIl0uZW5hYmxlKCk7XG5cdFx0TGF5YS5zdGFnZS5zY2FsZU1vZGUgPSBMYXlhLlN0YWdlLlNDQUxFX0VYQUNURklUO1xuXHRcdExheWEuc3RhZ2Uuc2NyZWVuTW9kZSA9IEdhbWVDb25maWcuc2NyZWVuTW9kZTtcblx0XHQvL+WFvOWuueW+ruS/oeS4jeaUr+aMgeWKoOi9vXNjZW5l5ZCO57yA5Zy65pmvXG5cdFx0TGF5YS5VUkwuZXhwb3J0U2NlbmVUb0pzb24gPSBHYW1lQ29uZmlnLmV4cG9ydFNjZW5lVG9Kc29uO1xuXG5cdFx0Ly/miZPlvIDosIPor5XpnaLmnb/vvIjpgJrov4dJREXorr7nva7osIPor5XmqKHlvI/vvIzmiJbogIV1cmzlnLDlnYDlop7liqBkZWJ1Zz10cnVl5Y+C5pWw77yM5Z2H5Y+v5omT5byA6LCD6K+V6Z2i5p2/77yJXG5cdFx0aWYgKEdhbWVDb25maWcuZGVidWcgfHwgTGF5YS5VdGlscy5nZXRRdWVyeVN0cmluZyhcImRlYnVnXCIpID09IFwidHJ1ZVwiKSBMYXlhLmVuYWJsZURlYnVnUGFuZWwoKTtcblx0XHRpZiAoR2FtZUNvbmZpZy5waHlzaWNzRGVidWcgJiYgTGF5YVtcIlBoeXNpY3NEZWJ1Z0RyYXdcIl0pIExheWFbXCJQaHlzaWNzRGVidWdEcmF3XCJdLmVuYWJsZSgpO1xuXHRcdGlmIChHYW1lQ29uZmlnLnN0YXQpIExheWEuU3RhdC5zaG93KCk7XG5cdFx0TGF5YS5hbGVydEdsb2JhbEVycm9yID0gdHJ1ZTtcblx0XHRpZiAoIUFwcENvbmZpZy5pc0RlYnVnIHx8IExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7IC8v5piv5ZCm6K+75Y+W5aSW6YOo5Zyw5Z2A55qE6LWE5rqQXG5cdFx0XHRMYXlhLlVSTC5iYXNlUGF0aCA9IFBhdGhDb25maWcuQXBwUmVzVXJsO1xuXHRcdH1cblx0XHQvL+a/gOa0u+i1hOa6kOeJiOacrOaOp+WItu+8jHZlcnNpb24uanNvbueUsUlEReWPkeW4g+WKn+iDveiHquWKqOeUn+aIkO+8jOWmguaenOayoeacieS5n+S4jeW9seWTjeWQjue7rea1geeoi1xuXHRcdExheWEuUmVzb3VyY2VWZXJzaW9uLmVuYWJsZShcInZlcnNpb24uanNvblwiLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25WZXJzaW9uTG9hZGVkKSwgTGF5YS5SZXNvdXJjZVZlcnNpb24uRklMRU5BTUVfVkVSU0lPTik7XG5cdH1cblxuXHRvblZlcnNpb25Mb2FkZWQoKTogdm9pZCB7XG5cdFx0Ly/mv4DmtLvlpKflsI/lm77mmKDlsITvvIzliqDovb3lsI/lm77nmoTml7blgJnvvIzlpoLmnpzlj5HnjrDlsI/lm77lnKjlpKflm77lkIjpm4bph4zpnaLvvIzliJnkvJjlhYjliqDovb3lpKflm77lkIjpm4bvvIzogIzkuI3mmK/lsI/lm75cblx0XHRMYXlhLkF0bGFzSW5mb01hbmFnZXIuZW5hYmxlKFwiZmlsZWNvbmZpZy5qc29uXCIsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkNvbmZpZ0xvYWRlZCkpO1xuXHR9XG5cblx0b25Db25maWdMb2FkZWQoKTogdm9pZCB7XG5cdFx0Ly/liqDovb1JREXmjIflrprnmoTlnLrmma9cblx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSk7XG5cdH1cbn1cbi8v5r+A5rS75ZCv5Yqo57G7XG5uZXcgTWFpbigpO1xuIiwiaW1wb3J0IFBhdGhDb25maWcgZnJvbSBcIi4uL2NvbmZpZy9QYXRoQ29uZmlnXCI7XG5cbi8qKiDpvpnpqqjliqjnlLsgKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJvbmVBbmltIGV4dGVuZHMgTGF5YS5TcHJpdGUge1xuXG4gICAgcHVibGljIGNvbXBsZXRlQmFjazogRnVuY3Rpb247XG5cbiAgICBwcml2YXRlIF9hbmlQYXRoOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBfZmFjdG9yeTogTGF5YS5UZW1wbGV0O1xuICAgIHByaXZhdGUgX2FybWF0dXJlOiBMYXlhLlNrZWxldG9uO1xuICAgIHByaXZhdGUgX2N1cnJJbmRleDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF9pc0xvb3A6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKGJvbmVOYW1lOiBzdHJpbmcsIGlzTG9vcDogYm9vbGVhbiA9IGZhbHNlLCBpc0hlcm9Cb25lOiBib29sZWFuID0gZmFsc2UpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5faXNMb29wID0gaXNMb29wO1xuICAgICAgICBpZiAoaXNIZXJvQm9uZSkge1xuICAgICAgICAgICAgdGhpcy5fYW5pUGF0aCA9IFBhdGhDb25maWcuQk9ORV9QQVRILnJlcGxhY2UoXCJ7MH1cIiwgYm9uZU5hbWUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fYW5pUGF0aCA9IFwiaW1hZ2VzL2JvbmVBbmltL2NvbW1vbi9cIiArIGJvbmVOYW1lICsgXCIuc2tcIjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9mYWN0b3J5ID0gbmV3IExheWEuVGVtcGxldCgpO1xuICAgICAgICB0aGlzLmFkZEV2ZW50cygpO1xuICAgICAgICB0aGlzLl9mYWN0b3J5LmxvYWRBbmkodGhpcy5fYW5pUGF0aCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhZGRFdmVudHMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX2ZhY3Rvcnkub24oTGF5YS5FdmVudC5DT01QTEVURSwgdGhpcywgdGhpcy5wYXJzZUNvbXBsZXRlKTtcbiAgICAgICAgdGhpcy5fZmFjdG9yeS5vbihMYXlhLkV2ZW50LkVSUk9SLCB0aGlzLCB0aGlzLm9uRXJyb3IpO1xuICAgIH1cblxuICAgIHByaXZhdGUgcmVtb3ZlRXZlbnRzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLl9mYWN0b3J5Lm9mZihMYXlhLkV2ZW50LkNPTVBMRVRFLCB0aGlzLCB0aGlzLnBhcnNlQ29tcGxldGUpO1xuICAgICAgICB0aGlzLl9mYWN0b3J5Lm9mZihMYXlhLkV2ZW50LkVSUk9SLCB0aGlzLCB0aGlzLm9uRXJyb3IpO1xuICAgICAgICB0aGlzLl9hcm1hdHVyZS5vZmYoTGF5YS5FdmVudC5TVE9QUEVELCB0aGlzLCB0aGlzLmNvbXBsZXRlSGFuZGxlcik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkVycm9yKCk6IHZvaWQge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkBEYXZpZCDpvpnpqqjliqjnlLvot6/lvoTvvJpcIiArIHRoaXMuX2FuaVBhdGggKyBcIiAtIOWIm+W7uuWksei0pe+8gVwiKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHBhcnNlQ29tcGxldGUoKTogdm9pZCB7XG4gICAgICAgIGlmIChMYXlhLmxvYWRlci5nZXRSZXModGhpcy5fYW5pUGF0aCkpIHtcbiAgICAgICAgICAgIHRoaXMuX2FybWF0dXJlID0gdGhpcy5fZmFjdG9yeS5idWlsZEFybWF0dXJlKDApO1xuICAgICAgICAgICAgdGhpcy5hZGRDaGlsZCh0aGlzLl9hcm1hdHVyZSk7XG4gICAgICAgICAgICB0aGlzLl9hcm1hdHVyZS5vbihMYXlhLkV2ZW50LlNUT1BQRUQsIHRoaXMsIHRoaXMuY29tcGxldGVIYW5kbGVyKTtcbiAgICAgICAgICAgIHRoaXMuX2FybWF0dXJlLnBsYXkoMCwgdGhpcy5faXNMb29wKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjb21wbGV0ZUhhbmRsZXIoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9hcm1hdHVyZSAmJiAhdGhpcy5faXNMb29wKSB7XG4gICAgICAgICAgICB0aGlzLmNvbXBsZXRlQmFjayAmJiB0aGlzLmNvbXBsZXRlQmFjaygpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHBsYXkocGxheU5hbWU6IGFueSA9IDAsIGlzTG9vcDogYm9vbGVhbiA9IGZhbHNlKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9hcm1hdHVyZSkge1xuICAgICAgICAgICAgdGhpcy5fYXJtYXR1cmUucGxheShwbGF5TmFtZSwgdGhpcy5faXNMb29wKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBkZXN0cm95KCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5fYXJtYXR1cmUpIHtcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlRXZlbnRzKCk7XG4gICAgICAgICAgICB0aGlzLl9hcm1hdHVyZS5zdG9wKCk7Ly/lgZzmraLpvpnpqqjliqjnlLvmkq3mlL5cbiAgICAgICAgICAgIHRoaXMuX2FybWF0dXJlLnJlbW92ZVNlbGYoKTsvL+S7juaYvuekuuWIl+ihqOenu+mZpOm+memqqOWKqOeUu+acrOi6q1xuICAgICAgICAgICAgdGhpcy5fYXJtYXR1cmUucmVtb3ZlQ2hpbGRyZW4oKTsvL+S7juaYvuekuuWIl+ihqOenu+mZpOm+memqqOWKqOeUu+WtkOWvueixoVxuICAgICAgICAgICAgdGhpcy5fYXJtYXR1cmUuZGVzdHJveSh0cnVlKTsvL+S7juaYvuWtmOmUgOavgem+memqqOWKqOeUu+WPiuWFtuWtkOWvueixoVxuICAgICAgICAgICAgdGhpcy5fYXJtYXR1cmUgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5fZmFjdG9yeS5kZXN0cm95KCk7Ly/ph4rmlL7liqjnlLvmqKHmnb/nsbvkuIvnmoTnurnnkIbmlbDmja5cbiAgICAgICAgICAgIHRoaXMucmVtb3ZlQ2hpbGRyZW4oKTtcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlU2VsZigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBhcm1hdHVyZSgpOiBMYXlhLlNrZWxldG9uIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2FybWF0dXJlO1xuICAgIH1cbiAgICBwdWJsaWMgc2V0IGFybWF0dXJlKHZhbHVlOiBMYXlhLlNrZWxldG9uKSB7XG4gICAgICAgIHRoaXMuX2FybWF0dXJlID0gdmFsdWU7XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwcENvbmZpZyB7XG5cbiAgICBwdWJsaWMgc3RhdGljIGlzRGVidWc6IGJvb2xlYW4gPSB0cnVlO1xuICAgIHB1YmxpYyBzdGF0aWMgSGFsbFNjZW5lOiBhbnkgPSBcIm1vZHVsZVZpZXcvaGFsbC9IYWxsU2NlbmUuc2NlbmVcIjtcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQYXRoQ29uZmlnIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xuXG4gICAgcHVibGljIHN0YXRpYyBBcHBVcmw6IHN0cmluZyA9IFwiaHR0cHM6Ly9zYW5ndW8ueGlhb2R1b2dhbWUuY24vYXBpL1wiOyAvL+ato+W8j+acjeWcsOWdgFxuICAgIHB1YmxpYyBzdGF0aWMgQXBwUmVzVXJsOiBzdHJpbmcgPSBcImh0dHBzOi8vbWluaWFwcC52dWdnYW1lLmNvbS9zYW5ndW9feGlhb2R1b2dhbWVfY24vdjEvXCI7XG4gICAgcHVibGljIHN0YXRpYyBSRVNfVVJMOiBzdHJpbmcgPSBQYXRoQ29uZmlnLkFwcFJlc1VybCArIFwiaW1hZ2VzL1wiO1xuICAgIHB1YmxpYyBzdGF0aWMgSEVBRF9QQVRIOiBzdHJpbmcgPSBQYXRoQ29uZmlnLlJFU19VUkwgKyBcImhlYWRJbWcvXCI7XG4gICAgcHVibGljIHN0YXRpYyBCT05FX1BBVEg6IHN0cmluZyA9IFBhdGhDb25maWcuUkVTX1VSTCArIFwiYm9uZUFuaW0vezB9LnNrXCI7XG4gICAgcHVibGljIHN0YXRpYyBCT05FX01PTlNURVJfUEFUSDogc3RyaW5nID0gUGF0aENvbmZpZy5SRVNfVVJMICsgXCJib25lQW5pbS9lbmVteS97MH0uc2tcIjtcbiAgICAvKiog5aOw6Z+z6Lev5b6EICovXG4gICAgcHVibGljIHN0YXRpYyBTT1VORF9QQVRIOiBzdHJpbmcgPSBcIm11c2ljcy97MH0ubXAzXCI7XG4gICAgLyoqIOaOkuihjOamnOaOkuWQjeWbvueJh+i3r+W+hCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgUkFOS19QQVRIOiBzdHJpbmcgPSBcImltYWdlcy9yYW5rL2NlbGxfdG9wezB9LnBuZ1wiO1xuICAgIC8qKiDlip/og73mjInpkq7lm77niYfot6/lvoQgKi9cbiAgICBwdWJsaWMgc3RhdGljIFNZU1RFTV9CVE5fUEFUSDogc3RyaW5nID0gXCJpbWFnZXMvaGFsbC97MH0ucG5nXCI7XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGltZUNvbmZpZyB7XG4gICAgLyoqXG5cdCAqIOS7peenkuS4uuWNleS9jeaXtu+8jOihqOekujHnp5LnmoTlgLzvvIzljbMxXG5cdCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgU0VDOiBudW1iZXIgPSAxO1xuXHQvKipcblx0ICog5Lul56eS5Li65Y2V5L2N5pe277yM6KGo56S6MeWIhumSn+eahOWAvO+8jOWNszYwXG5cdCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgTUlOOiBudW1iZXIgPSA2MDtcblx0LyoqXG5cdCAqIOS7peenkuS4uuWNleS9jeaXtu+8jOihqOekujHlsI/ml7bnmoTlgLzvvIzljbM2MCB4IDYwXG5cdCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgSE9VUjogbnVtYmVyID0gNjAgKiA2MDtcblxuXHQvKipcblx0ICog5Lul5q+r56eS5Li65Y2V5L2N5pe277yM6KGo56S6MeenkueahOWAvO+8jOWNszEwMDBcblx0ICovXG4gICAgcHVibGljIHN0YXRpYyBTRUNfSU5fTUlMSTogbnVtYmVyID0gMTAwMDtcblx0LyoqXG5cdCAqIOS7peavq+enkuS4uuWNleS9jeaXtu+8jOihqOekujHliIbpkp/nmoTlgLzvvIzljbMxMDAwIHggNjBcblx0ICovXG4gICAgcHVibGljIHN0YXRpYyBNSU5fSU5fTUlMSTogbnVtYmVyID0gMTAwMCAqIDYwO1xuXHQvKipcblx0ICog5Lul5q+r56eS5Li65Y2V5L2N5pe277yM6KGo56S6MeWwj+aXtueahOWAvO+8jOWNszEwMDAgeCA2MCB4IDYwXG5cdCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgSE9VUl9JTl9NSUxJOiBudW1iZXIgPSAxMDAwICogNjAgKiA2MDtcbn0iLCJpbXBvcnQgUGF0aENvbmZpZyBmcm9tIFwiLi4vY29uZmlnL1BhdGhDb25maWdcIjtcbmltcG9ydCBIZXJvVk8gZnJvbSBcIi4vdm8vSGVyb1ZPXCI7XG5pbXBvcnQgVFNEaWN0aW9uYXJ5IGZyb20gXCIuLi91dGlscy9UU0RpY3Rpb25hcnlcIjtcbmltcG9ydCBDU1ZQYXJzZXIgZnJvbSBcIi4vYmFzZS9DU1ZQYXJzZXJcIjtcbmltcG9ydCBIZXJvQ29uZmlnVk8gZnJvbSBcIi4vdm8vSGVyb0NvbmZpZ1ZPXCI7XG5pbXBvcnQgTGV2ZWxWTyBmcm9tIFwiLi92by9MZXZlbFZPXCI7XG5pbXBvcnQgU291bmRWTyBmcm9tIFwiLi92by9Tb3VuZFZPXCI7XG5pbXBvcnQgR3VpZGVWTyBmcm9tIFwiLi92by9HdWlkZVZPXCI7XG5pbXBvcnQgTWFwVk8gZnJvbSBcIi4vdm8vTWFwVk9cIjtcbmltcG9ydCBTeXN0ZW1WTyBmcm9tIFwiLi92by9TeXN0ZW1WT1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHbG9iYWxEYXRhIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xuXG4gICAgLyoqIGpzb27mlbDmja7mmK/lkKblhajpg6jop6PmnpDlrozmr5UgKi9cbiAgICBwcml2YXRlIF9oYXNQYXJhc0NvbXBsZXRlOiBib29sZWFuID0gZmFsc2U7XG4gICAgcHJpdmF0ZSBfdG90YWxTdGVwQ3N2TGlzdDogVFNEaWN0aW9uYXJ5PHN0cmluZywgYW55PjtcbiAgICBwcml2YXRlIF9uZWVkUGFyc2VDb3VudDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF9jdXJyUGFyc2VDb3VudDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF9qc29uQ291bnQ6IG51bWJlciA9IDA7XG4gICAgcHJpdmF0ZSBfY2FsbEJhY2s6IEZ1bmN0aW9uO1xuICAgIHByaXZhdGUgc3RhdGljIEFsbENhY2hlRGF0YTogVFNEaWN0aW9uYXJ5PHN0cmluZywgVFNEaWN0aW9uYXJ5PG51bWJlciwgYW55Pj47XG5cbiAgICBwdWJsaWMgc2V0dXAoY2FsbGJhY2s6IEZ1bmN0aW9uKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX2NhbGxCYWNrID0gY2FsbGJhY2s7XG4gICAgICAgIHRoaXMuX3RvdGFsU3RlcENzdkxpc3QgPSBuZXcgVFNEaWN0aW9uYXJ5PHN0cmluZywgYW55PigpO1xuICAgICAgICBHbG9iYWxEYXRhLkFsbENhY2hlRGF0YSA9IG5ldyBUU0RpY3Rpb25hcnk8c3RyaW5nLCBUU0RpY3Rpb25hcnk8bnVtYmVyLCBhbnk+PigpO1xuICAgICAgICB0aGlzLmluaXRNb2RlbCgpO1xuICAgICAgICB0aGlzLmluaXRTdGVwKCk7XG4gICAgfVxuXG4gICAgLyoqIOiLsembhOWfuuehgOihqCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgSGVyb1ZPOiBzdHJpbmcgPSBcIkhlcm9fanNvblwiO1xuICAgIC8qKiDoi7Hpm4TphY3nva7ooaggKi9cbiAgICBwdWJsaWMgc3RhdGljIEhlcm9Db25maWdWTzogc3RyaW5nID0gXCJIZXJvQ29uZmlnX2pzb25cIjtcbiAgICAvKiog562J57qn6YWN572u6KGoICovXG4gICAgcHVibGljIHN0YXRpYyBMZXZlbFZPOiBzdHJpbmcgPSBcIkxldmVsX2pzb25cIjtcbiAgICAvKiog5aOw6Z+z6KGoICovXG4gICAgcHVibGljIHN0YXRpYyBTb3VuZFZPOiBzdHJpbmcgPSBcIlNvdW5kX2pzb25cIjtcbiAgICAvKiog5paw5omL5byV5a+86KGoICovXG4gICAgcHVibGljIHN0YXRpYyBHdWlkZVZPOiBzdHJpbmcgPSBcIkd1aWRlX2pzb25cIjtcbiAgICAvKiog5Zyw5Zu+6KGoICovXG4gICAgcHVibGljIHN0YXRpYyBNYXBWTzogc3RyaW5nID0gXCJNYXBfanNvblwiO1xuICAgIC8qKiDlip/og73lvIDmlL7ooaggKi9cbiAgICBwdWJsaWMgc3RhdGljIFN5c3RlbVZPOiBzdHJpbmcgPSBcIlN5c3RlbV9qc29uXCI7XG5cbiAgICBwcml2YXRlIGluaXRNb2RlbCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fdG90YWxTdGVwQ3N2TGlzdC5BZGQoR2xvYmFsRGF0YS5IZXJvVk8sIEhlcm9WTyk7XG4gICAgICAgIHRoaXMuX3RvdGFsU3RlcENzdkxpc3QuQWRkKEdsb2JhbERhdGEuSGVyb0NvbmZpZ1ZPLCBIZXJvQ29uZmlnVk8pO1xuICAgICAgICB0aGlzLl90b3RhbFN0ZXBDc3ZMaXN0LkFkZChHbG9iYWxEYXRhLkxldmVsVk8sIExldmVsVk8pO1xuICAgICAgICB0aGlzLl90b3RhbFN0ZXBDc3ZMaXN0LkFkZChHbG9iYWxEYXRhLlNvdW5kVk8sIFNvdW5kVk8pO1xuICAgICAgICB0aGlzLl90b3RhbFN0ZXBDc3ZMaXN0LkFkZChHbG9iYWxEYXRhLkd1aWRlVk8sIEd1aWRlVk8pO1xuICAgICAgICB0aGlzLl90b3RhbFN0ZXBDc3ZMaXN0LkFkZChHbG9iYWxEYXRhLk1hcFZPLCBNYXBWTyk7XG4gICAgICAgIHRoaXMuX3RvdGFsU3RlcENzdkxpc3QuQWRkKEdsb2JhbERhdGEuU3lzdGVtVk8sIFN5c3RlbVZPKTtcbiAgICB9XG5cbiAgICAvLyDop6PmnpDliJ3lp4vmlbDmja7ooahcbiAgICBwcml2YXRlIGluaXRTdGVwKCk6IHZvaWQge1xuICAgICAgICB0aGlzLl9uZWVkUGFyc2VDb3VudCA9IHRoaXMuX3RvdGFsU3RlcENzdkxpc3QuR2V0TGVuZ2h0KCk7XG4gICAgICAgIHRoaXMub25FbnRlckZyYW1lTG9hZGVyKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkVudGVyRnJhbWVMb2FkZXIoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9jdXJyUGFyc2VDb3VudCA+PSB0aGlzLl9uZWVkUGFyc2VDb3VudCkge1xuICAgICAgICAgICAgdGhpcy5faGFzUGFyYXNDb21wbGV0ZSA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLl9jYWxsQmFjayAmJiB0aGlzLl9jYWxsQmFjaygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy/kuIDmrKHop6PmnpDkuKTkuKrmlofku7ZcbiAgICAgICAgICAgIHRoaXMuZ2V0Q3N2RmlsZSgpO1xuICAgICAgICAgICAgLy8gdGhpcy5nZXRDc3ZGaWxlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog5byA5aeL6YCQ5Liq6YCQ5Liq6Kej5p6QSlNPTuaWh+S7tiAqL1xuICAgIHByaXZhdGUgZ2V0Q3N2RmlsZSgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuX2pzb25Db3VudCA8IHRoaXMuX25lZWRQYXJzZUNvdW50KSB7XG4gICAgICAgICAgICBsZXQga2V5OiBzdHJpbmcgPSB0aGlzLl90b3RhbFN0ZXBDc3ZMaXN0LmdldEtleUJ5SW5kZXgodGhpcy5fanNvbkNvdW50KTtcbiAgICAgICAgICAgIGtleSA9IFwiY29uZmlnL2Nzdkpzb24vXCIgKyBrZXk7XG4gICAgICAgICAgICBrZXkgPSBrZXkucmVwbGFjZSgnXycsICcuJyk7XG4gICAgICAgICAgICBMYXlhLmxvYWRlci5sb2FkKGtleSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uTG9hZGVkLCBba2V5XSksIG51bGwsIExheWEuTG9hZGVyLlRFWFQsIDAsIHRydWUpO1xuICAgICAgICAgICAgdGhpcy5fanNvbkNvdW50Kys7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIG9uTG9hZGVkKGtleTogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIGxldCBkYXRhID0gTGF5YS5sb2FkZXIuZ2V0UmVzKGtleSk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGxldCBkYXRhX2pzb246IGFueSA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICAgICAgICAgICAgbGV0IGNzdlN0cjogc3RyaW5nID0gSlNPTi5zdHJpbmdpZnkoZGF0YV9qc29uKTtcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXJTaW5nbGVQYXJzZShjc3ZTdHIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgdGhpcy5fanNvbkNvdW50LS07XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLm9uRW50ZXJGcmFtZUxvYWRlcigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGFyU2luZ2xlUGFyc2UoY3N2U3RyOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgbGV0IGtleTogc3RyaW5nID0gdGhpcy5fdG90YWxTdGVwQ3N2TGlzdC5nZXRLZXlCeUluZGV4KHRoaXMuX2N1cnJQYXJzZUNvdW50KTtcbiAgICAgICAgbGV0IERhdGFDbGFzczogYW55ID0gdGhpcy5fdG90YWxTdGVwQ3N2TGlzdC5nZXRWYWx1ZUJ5SW5kZXgodGhpcy5fY3VyclBhcnNlQ291bnQpO1xuICAgICAgICBsZXQgZGljOiBUU0RpY3Rpb25hcnk8bnVtYmVyLCBhbnk+ID0gQ1NWUGFyc2VyLlBhcnNlSnNvbkRhdGEoRGF0YUNsYXNzLCBjc3ZTdHIpO1xuICAgICAgICBHbG9iYWxEYXRhLkFsbENhY2hlRGF0YS5BZGQoa2V5LCBkaWMpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIkBEYXZpZCDooajmlbDmja7vvJprZXk6XCIsIGtleSwgXCIgLS0tIGRhdGE6XCIsIGRpYyk7XG4gICAgICAgIHRoaXMuX2N1cnJQYXJzZUNvdW50Kys7XG4gICAgfVxuXG4gICAgLyoqIOiOt+WPluWvueW6lOihqOeahOaMh+WumuafkOadoeaVsOaNriAqL1xuICAgIHB1YmxpYyBzdGF0aWMgZ2V0RGF0YSh0eXBlOiBzdHJpbmcsIGtleTogbnVtYmVyKTogYW55IHtcbiAgICAgICAgbGV0IGRpYzogVFNEaWN0aW9uYXJ5PG51bWJlciwgYW55PiA9IEdsb2JhbERhdGEuQWxsQ2FjaGVEYXRhLlRyeUdldFZhbHVlKHR5cGUpO1xuICAgICAgICByZXR1cm4gZGljLlRyeUdldFZhbHVlKGtleSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6I635Y+W5a+55bqU6KGo55qE5p+Q5p2h5pWw5o2u5Lit5oyH5a6a5ZCN5a2X5LiL55qE5pWw5o2uXG4gICAgICogQHBhcmFtIHR5cGUg6YKj5byg6KGoXG4gICAgICogQHBhcmFtIGZpbHRlclR5cGUg5p+Q5LiA6aG55ZCN5a2XXG4gICAgICogQHBhcmFtIGZpbHRlclZhbHVlIOWAvFxuICAgICAqIOS+i+Wmgu+8mnBhcnNlSW50KEdsb2JsZVZPRGF0YS5nZXREYXRhQnlGaWx0ZXIoR2xvYmxlVk9EYXRhLlNlcnZlckNvbmZpZ1ZPLCBcImlkXCIsIFwiTUFYX01BUF9DT1VOVFwiKVswXS52YWx1ZSlcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGdldERhdGFCeUZpbHRlcih0eXBlOiBzdHJpbmcsIGZpbHRlclR5cGU6IGFueSwgZmlsdGVyVmFsdWU6IGFueSk6IGFueVtdIHtcbiAgICAgICAgbGV0IGRpYzogVFNEaWN0aW9uYXJ5PG51bWJlciwgYW55PiA9IEdsb2JhbERhdGEuQWxsQ2FjaGVEYXRhLlRyeUdldFZhbHVlKHR5cGUpO1xuICAgICAgICBpZiAoZGljID09IG51bGwpIHJldHVybiBbXTtcbiAgICAgICAgbGV0IGZpbHRlcmQ6IGFueVtdID0gZGljLlRyeUdldExpc3RCeUNvbmRpdGlvbigoYmVhbikgPT4gYmVhbltmaWx0ZXJUeXBlXSA9PSBmaWx0ZXJWYWx1ZSk7XG4gICAgICAgIHJldHVybiBmaWx0ZXJkO1xuICAgIH1cblxuICAgIC8qKiDojrflj5blr7nlupTooajnmoTmiYDmnInmlbDmja4gKi9cbiAgICBwdWJsaWMgc3RhdGljIGdldEFsbFZhbHVlKHR5cGU6IHN0cmluZyk6IEFycmF5PGFueT4ge1xuICAgICAgICBsZXQgZGljOiBUU0RpY3Rpb25hcnk8bnVtYmVyLCBhbnk+ID0gR2xvYmFsRGF0YS5BbGxDYWNoZURhdGEuVHJ5R2V0VmFsdWUodHlwZSk7XG4gICAgICAgIHJldHVybiBkaWMgPT0gbnVsbCA/IFtdIDogZGljLmdldFZhbHVlcygpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiDmn6Xmib7lr7nlupTmnaHku7bnmoTmlbDmja5cbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGdldERhdGFCeUNvbmRpdGlvbih0eXBlOiBzdHJpbmcsIHZhbHVlOiAodmFsdWU6IGFueSkgPT4gYm9vbGVhbik6IEFycmF5PGFueT4ge1xuICAgICAgICBsZXQgZGljOiBUU0RpY3Rpb25hcnk8bnVtYmVyLCBhbnk+ID0gR2xvYmFsRGF0YS5BbGxDYWNoZURhdGEuVHJ5R2V0VmFsdWUodHlwZSk7XG4gICAgICAgIGlmIChkaWMgPT0gbnVsbCkgcmV0dXJuIFtdO1xuICAgICAgICBsZXQgYXJyOiBhbnlbXSA9IGRpYy5UcnlHZXRMaXN0QnlDb25kaXRpb24odmFsdWUpO1xuICAgICAgICByZXR1cm4gYXJyO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogR2xvYmFsRGF0YTtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnMoKTogR2xvYmFsRGF0YSB7XG4gICAgICAgIGlmICghR2xvYmFsRGF0YS5faW5zdGFuY2UpIHtcbiAgICAgICAgICAgIEdsb2JhbERhdGEuX2luc3RhbmNlID0gbmV3IEdsb2JhbERhdGEoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gR2xvYmFsRGF0YS5faW5zdGFuY2U7XG4gICAgfVxufSIsImltcG9ydCBUU0RpY3Rpb25hcnkgZnJvbSBcIi4uLy4uL3V0aWxzL1RTRGljdGlvbmFyeVwiO1xuXG4vKipcbiAqIENTVuino+aekOexu1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDU1ZQYXJzZXIge1xuXG4gICAgLy/nlKhqc29u5pu/5o2iY3N2LGpzb27op6PmnpDmlofku7ZcbiAgICBwdWJsaWMgc3RhdGljIFBhcnNlSnNvbkRhdGEoaW5mb0NsYXNzOiBhbnksIHNvdXJjZVRleHQ6IHN0cmluZyk6IFRTRGljdGlvbmFyeTxudW1iZXIsIGFueT4ge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIHZhciByZXN1bHQ6IFRTRGljdGlvbmFyeTxudW1iZXIsIGFueT4gPSBuZXcgVFNEaWN0aW9uYXJ5PG51bWJlciwgYW55PigpO1xuICAgICAgICBzb3VyY2VUZXh0ID0gc291cmNlVGV4dC50cmltKCk7XG4gICAgICAgIGxldCBvYmogPSBKU09OLnBhcnNlKHNvdXJjZVRleHQpO1xuICAgICAgICB2YXIga2V5TGlzdDogQXJyYXk8c3RyaW5nPiA9IG51bGw7XG4gICAgICAgIHZhciB0eXBlTGlzdDogQXJyYXk8c3RyaW5nPiA9IG51bGw7XG4gICAgICAgIHZhciBkYXRhTGlzdDogQXJyYXk8YW55PiA9IG51bGw7XG4gICAgICAgIHZhciBpdGVtTGlzdDogQXJyYXk8YW55PiA9IG51bGw7XG5cbiAgICAgICAga2V5TGlzdCA9IG9iai50aXRsZXM7XG4gICAgICAgIGlmIChvYmouZGF0YSA9PSBudWxsKSByZXR1cm4gcmVzdWx0Oy8v56m66KGo5LiN5YGa5aSE55CGXG4gICAgICAgIGRhdGFMaXN0ID0gb2JqLmRhdGE7Ly/mlbDmja7mmK/ku44w5byA5aeLXG4gICAgICAgIHR5cGVMaXN0ID0gZGF0YUxpc3RbMF07XG4gICAgICAgIHZhciBpOiBudW1iZXIgPSAwO1xuICAgICAgICB2YXIgZGF0YUxlbjogbnVtYmVyID0gZGF0YUxpc3QubGVuZ3RoO1xuXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBkYXRhTGVuOyBpKyspIHtcbiAgICAgICAgICAgIHZhciByZWNvcmQ6IGFueSA9IG5ldyBpbmZvQ2xhc3MoKTtcbiAgICAgICAgICAgIGl0ZW1MaXN0ID0gZGF0YUxpc3RbaV07XG4gICAgICAgICAgICBzZWxmLlBhcnNlUmVjb3JkKGtleUxpc3QsIGl0ZW1MaXN0LCByZWNvcmQpO1xuICAgICAgICAgICAgcmVzdWx0LkFkZChwYXJzZUludChpdGVtTGlzdFswXSksIHJlY29yZCk7XG4gICAgICAgIH1cbiAgICAgICAgc291cmNlVGV4dCA9IG51bGw7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgUGFyc2VSZWNvcmQoa2V5TGlzdDogQXJyYXk8c3RyaW5nPiwgaXRlbUxpc3Q6IEFycmF5PHN0cmluZz4sIHJlY29yZDogT2JqZWN0KSB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgdmFyIG46IG51bWJlciA9IGl0ZW1MaXN0Lmxlbmd0aDtcbiAgICAgICAgZm9yICh2YXIgaTogbnVtYmVyID0gMDsgaSA8IG47IGkrKykge1xuICAgICAgICAgICAgcmVjb3JkW2tleUxpc3RbaV1dID0gaXRlbUxpc3RbaV07XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IE1hdGhVdGlsIGZyb20gXCIuLi8uLi91dGlscy9NYXRoVXRpbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHdWlkZVZPIHtcblxuICAgIC8qKiDmraXpqqQgKi9cbiAgICBwdWJsaWMgc3RlcElkOiBudW1iZXI7XG4gICAgLyoqIOexu+WeiyAw77ya5Lu75oSPICAgMe+8mueUqOaIt+etiee6pyAgIDLvvJroi7Hpm4TnrYnnuqcgKi9cbiAgICBwdWJsaWMgdHlwZTogbnVtYmVyO1xuICAgIC8qKiDmnaHku7blgLwgMOWwseaYr+ayoeacieadoeS7tiAqL1xuICAgIHB1YmxpYyBjb25kaXRpb246IG51bWJlcjtcbiAgICAvKiog5Y+v54K55Ye75Yy65Z+f5Y+C5pWwICB4I3kjdyNoICovXG4gICAgcHJpdmF0ZSBfY2xpY2tBcmVhUGFyYW06IG51bWJlcltdO1xuICAgIC8qKiDlr7nor53moYbkvY3nva7lj4LmlbAgIHgjeSAqL1xuICAgIHByaXZhdGUgX3NwZWFrUGFyYW06IG51bWJlcltdO1xuICAgIC8qKiDmiYvmjIfmjIflvJXkvY3nva7lj4LmlbAgeCN5ICovXG4gICAgcHJpdmF0ZSBfZmluZ2VyUGFyYW06IG51bWJlcltdO1xuICAgIC8qKiDmiYvmjIfotYTmupDml4vovazop5LluqYgKi9cbiAgICBwdWJsaWMgZmluZ2VyUm90YXRpb246IG51bWJlcjtcbiAgICAvKiog5a+56K+d5YaF5a65ICovXG4gICAgcHVibGljIHNwZWFrQ29udGVudDogc3RyaW5nO1xuICAgIC8qKiDmjIflvJXliqjnlLvnsbvlnosgMTrmjIflvJXlip/og73ns7vnu58gIDLvvJrmjIflvJXlkIjmiJDoi7Hpm4QgKi9cbiAgICBwdWJsaWMgZmluZ2VyRWZmZWN0VHlwZTogbnVtYmVyO1xuXG5cbiAgICBwcml2YXRlIF9pc0ZvcmNlOiBib29sZWFuO1xuICAgIHB1YmxpYyBzZXQgaXNGb3JjZSh2YWx1ZTogYW55KSB7XG4gICAgICAgIHRoaXMuX2lzRm9yY2UgPSBOdW1iZXIodmFsdWUpID09IDAgPyBmYWxzZSA6IHRydWU7XG4gICAgfVxuICAgIC8qKiDmmK/lkKblvLrliLblvJXlr7wgKi9cbiAgICBwdWJsaWMgZ2V0IGlzRm9yY2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc0ZvcmNlO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgY2xpY2tBcmVhUGFyYW0odmFsdWUpIHtcbiAgICAgICAgdGhpcy5fY2xpY2tBcmVhUGFyYW0gPSBNYXRoVXRpbC5zcGxpdFRvTnVtYmVyKHZhbHVlKTtcbiAgICB9XG4gICAgLyoqIOWPr+eCueWHu+WMuuWfn+WPguaVsCAgeCN5I3cjaCAqL1xuICAgIHB1YmxpYyBnZXQgY2xpY2tBcmVhUGFyYW0oKTogbnVtYmVyW10ge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpY2tBcmVhUGFyYW07XG4gICAgfVxuXG4gICAgcHVibGljIHNldCBmaW5nZXJQYXJhbSh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9maW5nZXJQYXJhbSA9IE1hdGhVdGlsLnNwbGl0VG9OdW1iZXIodmFsdWUpO1xuICAgIH1cbiAgICAvKiog5omL5oyH5oyH5byV5L2N572u5Y+C5pWwIHgjeSAqL1xuICAgIHB1YmxpYyBnZXQgZmluZ2VyUGFyYW0oKTogbnVtYmVyW10ge1xuICAgICAgICByZXR1cm4gdGhpcy5fZmluZ2VyUGFyYW07XG4gICAgfVxuXG4gICAgcHVibGljIHNldCBzcGVha1BhcmFtKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX3NwZWFrUGFyYW0gPSBNYXRoVXRpbC5zcGxpdFRvTnVtYmVyKHZhbHVlKTtcbiAgICB9XG4gICAgLyoqIOWvueivneahhuS9jee9ruWPguaVsCAgeCN5ICovXG4gICAgcHVibGljIGdldCBzcGVha1BhcmFtKCk6IG51bWJlcltdIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NwZWFrUGFyYW07XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEhlcm9Db25maWdWTyB7XG5cbiAgICBwdWJsaWMgaWQ6IG51bWJlcjtcbiAgICBwdWJsaWMgbmFtZTogc3RyaW5nO1xuICAgIC8qKiDliJ3lp4vmiJDmnKzku7cgKi9cbiAgICBwdWJsaWMgYnV5UHJpY2U6IG51bWJlcjtcbiAgICAvKiog5Lqn5Ye66YeR5biBICovXG4gICAgcHVibGljIHRvdGFsQ29pbjogbnVtYmVyO1xuICAgIC8qKiDmr4/np5Lkuqflh7rph5HluIEgKi9cbiAgICBwdWJsaWMgUGVyU2VjQ29pbjogbnVtYmVyO1xuICAgIC8qKiDnp7vliqjpgJ/luqYgKi9cbiAgICBwdWJsaWMgc3BlZWQ6IG51bWJlcjtcbiAgICAvKiog5Zue5pS25Lu35qC8ICovXG4gICAgcHVibGljIHNlbGxQcmljZTogbnVtYmVyO1xuICAgIC8qKiDlkIjmiJDkuIvkuIDnuqfpsbznp43pnIDmsYLmlbDph48gKi9cbiAgICBwdWJsaWMgdXBOZWVkTnVtOiBudW1iZXI7XG4gICAgLyoqIOWbvumJtOino+mUgeWItumAoOmcgOaxguino+mUgemxvOenjSAqL1xuICAgIHB1YmxpYyB1bmxvY2tOZWVkSWQ6IG51bWJlcjtcbiAgICAvKiog5ZCI5oiQ57uP6aqMICovXG4gICAgcHVibGljIHN5bnRoZXRpY0V4cDogbnVtYmVyO1xufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEhlcm9WTyB7XG5cbiAgICBwdWJsaWMgaWQ6IG51bWJlciA9IDA7XG4gICAgcHVibGljIHR5cGU6IG51bWJlciA9IDA7XG4gICAgcHVibGljIG5hbWU6IHN0cmluZyA9IFwiXCI7XG4gICAgLyoqIOWktOWDj+WbvueJhyAqL1xuICAgIHB1YmxpYyBpbWdVcmw6IHN0cmluZyA9IFwiXCI7XG4gICAgLyoqIOWvueeZvSAqL1xuICAgIHB1YmxpYyBkaWFsb2d1ZTogc3RyaW5nID0gXCJcIjtcbiAgICAvKiog6b6Z6aqo5Yqo55S7ICovXG4gICAgcHVibGljIG1vZGVsSW1nVXJsOiBzdHJpbmcgPSBcIlwiO1xuICAgIC8qKiDlnZDpqpEgKi9cbiAgICBwdWJsaWMgaG9yc2U6IHN0cmluZyA9IFwiXCI7XG4gICAgLyoqIOaUu+WHu+WKqOS9nCAqL1xuICAgIHB1YmxpYyBhdGtBbmltS2V5OiBzdHJpbmcgPSBcIlwiO1xuXG5cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBMZXZlbFZPIHtcblxuICAgIHB1YmxpYyBpZDogbnVtYmVyO1xuICAgIC8qKiDkvY3nva7lvIDmlL7mlbDph48gKi9cbiAgICBwdWJsaWMgb3BlbkNlbGxDb3VudDogbnVtYmVyO1xuICAgIC8qKiDkuIrpmLXmiJjmlpfmlbDph48gKi9cbiAgICBwdWJsaWMgYmF0dGxlQ291bnQ6IG51bWJlcjtcbiAgICAvKiog5Y2H57qn5omA6ZyA57uP6aqMICovXG4gICAgcHVibGljIHVwTmVlZGV4cDogbnVtYmVyO1xuICAgIC8qKiDljYfnuqfpop3lpJbkuqflh7rlpZblirEgKi9cbiAgICBwdWJsaWMgZXh0cmFQcm9kdWNlOiBudW1iZXI7XG4gICAgLyoqIOWPjOWAjeWKoOmAn+aXtumXtChzKSAqL1xuICAgIHB1YmxpYyBhY2NTcGVlZFRpbWU6IG51bWJlcjtcbiAgICAvKiog6YeR5biB56S85YyF77yIMjAq56eS5Lqn6YeR5biB77yJICovXG4gICAgcHVibGljIGdvbGRHaWZ0OiBudW1iZXI7XG4gICAgLyoqIOmSu+efs++8iOekvOWMhTLvvInnrYnnuqcqMi4wMyAqL1xuICAgIHB1YmxpYyBkaWFtb25kc0dpZnQ6IG51bWJlcjtcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBNYXBWTyB7XG5cbiAgICBwdWJsaWMgaWQ6IG51bWJlcjtcbiAgICAvKiogMDrph5EgIDHvvJrmnKggIDLvvJrmsLQgIDPvvJrngasgICA077ya5ZyfICovXG4gICAgcHVibGljIHR5cGU6IG51bWJlcjtcbiAgICAvKiog5Z+O5rGg5ZCN5a2XICovXG4gICAgcHVibGljIG5hbWU6IHN0cmluZztcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTb3VuZFZPIHtcbiAgICBcbiAgICBwdWJsaWMgbXVzaWNJRDogbnVtYmVyO1xuICAgIHB1YmxpYyBkZXNjOiBzdHJpbmc7XG4gICAgcHVibGljIGZpbGU6IHN0cmluZztcbiAgICBwdWJsaWMgcmVzTW9kZWxOYW1lOiBzdHJpbmc7XG4gICAgLyoqIOaSreaUvuasoeaVsCAqL1xuICAgIHB1YmxpYyBsb29wOiBudW1iZXI7XG4gICAgLyoqIOmfs+mHjyAqL1xuICAgIHB1YmxpYyB2b2x1bWU6IG51bWJlcjtcbn0iLCIvKipcbiAqIOWKn+iDveW8gOaUvuihqFxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTeXN0ZW1WTyB7XG5cbiAgICBwdWJsaWMgaWQ6IG51bWJlciA9IDA7XG4gICAgLyoqIOWQjeWtlyAqL1xuICAgIHB1YmxpYyBuYW1lOiBzdHJpbmcgPSBcIlwiO1xuICAgIC8qKiDmj4/ov7AgKi9cbiAgICBwdWJsaWMgZGVzOiBzdHJpbmcgPSBcIlwiO1xuICAgIC8qKiDlvIDmlL7nrYnnuqcgKi9cbiAgICBwdWJsaWMgb3BlbkxldmVsOiBudW1iZXIgPSAwO1xuICAgIC8qKiDmjpLluo/kvY3nva4gKi9cbiAgICBwdWJsaWMgc29ydDogbnVtYmVyID0gMDtcbiAgICAvKiog5Zu+54mHICovXG4gICAgcHVibGljIGljb246IHN0cmluZyA9IFwiXCI7XG5cblxufSIsImltcG9ydCBNYXRoVXRpbCBmcm9tIFwiLi4vdXRpbHMvTWF0aFV0aWxcIjtcbmltcG9ydCBUaW1lQ29uZmlnIGZyb20gXCIuLi9jb25maWcvVGltZUNvbmZpZ1wiO1xuaW1wb3J0IFBvb2xNZ3IgZnJvbSBcIi4uL21zZy9Qb29sTWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEl0ZW1FeHBsb2RlIGV4dGVuZHMgTGF5YS5TcHJpdGUge1xuXG4gICAgcHJpdmF0ZSBzdGF0aWMgbGFzdFRpbWVzdGFtcDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIHN0YXRpYyBDT09MX0RPV046IG51bWJlciA9IDUwMDtcblxuICAgIHByaXZhdGUgX2FuaW1OdW06IG51bWJlcjtcbiAgICBwcml2YXRlIF9hbmltTGVuOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfYW5pbWF0aW9uTmFtZTogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoYW5pbWF0aW9uTmFtZTogc3RyaW5nID0gXCJyb2xsaW5nQ29pblwiKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuX2FuaW1hdGlvbk5hbWUgPSBhbmltYXRpb25OYW1lO1xuICAgIH1cblxuICAgIHB1YmxpYyBwbGF5KGZyb21YOiBudW1iZXIsIGZyb21ZOiBudW1iZXIpOiBMYXlhLlNwcml0ZSB7XG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcDogbnVtYmVyID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgICAgIGlmICh0aW1lc3RhbXAgLSBJdGVtRXhwbG9kZS5sYXN0VGltZXN0YW1wID4gSXRlbUV4cGxvZGUuQ09PTF9ET1dOKSB7XG4gICAgICAgICAgICBJdGVtRXhwbG9kZS5sYXN0VGltZXN0YW1wID0gdGltZXN0YW1wO1xuICAgICAgICAgICAgdGhpcy5fYW5pbU51bSA9IDA7XG4gICAgICAgICAgICB0aGlzLl9hbmltTGVuID0gNztcbiAgICAgICAgICAgIHRoaXMucG9zKGZyb21YLCBmcm9tWSk7XG4gICAgICAgICAgICB0aGlzLmNyZWF0ZUFuaW0oKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIExheWEudGltZXIuZnJhbWVPbmNlKDUsIHRoaXMsIHRoaXMub25BbmltQ29tcGxldGUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cblxuICAgIHByaXZhdGUgY3JlYXRlQW5pbSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fYW5pbU51bSsrO1xuICAgICAgICBjb25zdCBhbmltOiBMYXlhLkFuaW1hdGlvbiA9IFBvb2xNZ3IuSW5zLmdldChMYXlhLkFuaW1hdGlvbiwgdGhpcy5fYW5pbWF0aW9uTmFtZSk7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgaWYgKCFhbmltLnVybF9sb2FkZWQpIHtcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGFuaW0udXJsX2xvYWRlZCA9IHRydWU7XG4gICAgICAgICAgICBhbmltLmxvYWRBdGxhcyhcImltYWdlcy9ib25lQW5pbS9lZmZlY3QvXCIgKyB0aGlzLl9hbmltYXRpb25OYW1lICsgXCIuanNvblwiKTtcbiAgICAgICAgICAgIGFuaW0uaW50ZXJ2YWwgPSAyNTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHNjYWxlOiBudW1iZXIgPSBNYXRoVXRpbC5yYW5nZSgwLjYsIDAuOCk7XG4gICAgICAgIGFuaW1cbiAgICAgICAgICAgIC5waXZvdCgzMCwgMzApXG4gICAgICAgICAgICAucG9zKE1hdGhVdGlsLnJhbmdlSW50KC01LCA1KSwgTWF0aFV0aWwucmFuZ2VJbnQoLTUsIDUpKVxuICAgICAgICAgICAgLnNjYWxlKHNjYWxlLCBzY2FsZSk7XG4gICAgICAgIGFuaW0ucGxheSgwLCB0cnVlKTtcbiAgICAgICAgYW5pbS5hbHBoYSA9IDE7XG5cbiAgICAgICAgY29uc3QgdHg6IG51bWJlciA9IChNYXRoLmFicyhhbmltLngpIC8gYW5pbS54KSAqIE1hdGhVdGlsLnJhbmdlSW50KDMwLCAyMjApO1xuXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgYW5pbS5zcGVlZFkgPSBNYXRoVXRpbC5yYW5nZSgtNy41LCAtNSk7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgYW5pbS5nID0gMC4zO1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGFuaW0udXBkYXRlSGFuZGxlciA9IExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkFuaW1VcGRhdGUsIFthbmltXSwgZmFsc2UpO1xuICAgICAgICBjb25zdCBkdXJhdGlvbjogbnVtYmVyID0gVGltZUNvbmZpZy5TRUNfSU5fTUlMSSAqIE1hdGhVdGlsLnJhbmdlKDAuNiwgMC44KTtcbiAgICAgICAgLy8gcHJldHRpZXItaWdub3JlXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgTGF5YS5Ud2Vlbi50byhhbmltLCB7IHg6IHR4LCB1cGRhdGU6IGFuaW0udXBkYXRlSGFuZGxlciB9LCBkdXJhdGlvbiAqIDEuNSwgTGF5YS5FYXNlLnF1YWRPdXQpO1xuICAgICAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICAgICAgTGF5YS5Ud2Vlbi50byhhbmltLCB7IGFscGhhOiAwLCBjb21wbGV0ZTogTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uQW5pbUNvbXBsZXRlLCBbYW5pbV0pIH0sIGR1cmF0aW9uICogMC40LCBMYXlhLkVhc2UucXVhZE91dCwgbnVsbCwgZHVyYXRpb24gKiAwLjYpO1xuXG4gICAgICAgIExheWEudGltZXIuZnJhbWVPbmNlKDEsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuYWRkQ2hpbGQoYW5pbSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICh0aGlzLl9hbmltTnVtIDwgdGhpcy5fYW5pbUxlbikge1xuICAgICAgICAgICAgLy8gcHJldHRpZXItaWdub3JlXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZUFuaW0oKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgb25BbmltVXBkYXRlKGFuaW06IExheWEuQW5pbWF0aW9uKSB7XG4gICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgYW5pbS55ICs9IGFuaW0uc3BlZWRZO1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIGFuaW0uc3BlZWRZICs9IGFuaW0uZztcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uQW5pbUNvbXBsZXRlKGFuaW0/OiBMYXlhLkFuaW1hdGlvbikge1xuICAgICAgICBpZiAoYW5pbSkge1xuICAgICAgICAgICAgYW5pbS5zdG9wKCk7XG4gICAgICAgICAgICBhbmltLnJlbW92ZVNlbGYoKTtcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgIGFuaW0udXBkYXRlSGFuZGxlci5jbGVhcigpO1xuICAgICAgICAgICAgUG9vbE1nci5JbnMucmV0dXJuKGFuaW0sIHRoaXMuX2FuaW1hdGlvbk5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAodGhpcyAmJiB0aGlzLm51bUNoaWxkcmVuIDw9IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRlc3Ryb3kodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdARlJFRU1BTjogSXRlbUV4cGxvZGUudHMgPT4gJywgZSk7XG4gICAgICAgIH1cbiAgICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXZlbnRUeXBlIHtcblxuICAgIC8qKiDmm7TmlrDotKfluIEgKi9cbiAgICBwdWJsaWMgc3RhdGljIFVQREFURV9DVVJSRU5DWTogc3RyaW5nID0gXCJVUERBVEVfQ1VSUkVOQ1lcIjtcbiAgICAvKiog5pu05paw55So5oi3562J57qnICovXG4gICAgcHVibGljIHN0YXRpYyBVUERBVEVfVVNFUl9MRVZFTDogc3RyaW5nID0gXCJVUERBVEVfVVNFUl9MRVZFTFwiO1xuICAgIC8qKiDmm7TmlrDnlKjmiLfnu4/pqowgKi9cbiAgICBwdWJsaWMgc3RhdGljIFVQREFURV9VU0VSX0VYUDogc3RyaW5nID0gXCJVUERBVEVfVVNFUl9FWFBcIjtcbiAgICAvKiog5pu05paw5q+P56eS5pS255uKICovXG4gICAgcHVibGljIHN0YXRpYyBVUERBVEVfSU5DT01FOiBzdHJpbmcgPSBcIlVQREFURV9JTkNPTUVcIjtcbiAgICAvKiog5Zue5Yiw5ri45oiP5LitICovXG4gICAgcHVibGljIHN0YXRpYyBDT01FX0JBQ0tfR0FNRTogc3RyaW5nID0gXCJDT01FX0JBQ0tfR0FNRVwiO1xuICAgIC8qKiDoi7Hpm4TlgqjlrZjnrrEgKi9cbiAgICBwdWJsaWMgc3RhdGljIEhFUk9fQk9YOiBzdHJpbmcgPSBcIkhFUk9fQk9YXCI7XG4gICAgLyoqIOWKoOmAnyAqL1xuICAgIHB1YmxpYyBzdGF0aWMgR0FNRV9BQ0NFX1NUQVJUOiBzdHJpbmcgPSBcIkdBTUVfQUNDRV9TVEFSVFwiO1xuICAgIC8qKiDmr4/ml6Xnrb7liLDlpZblirHpooblj5blrozmr5UgKi9cbiAgICBwdWJsaWMgc3RhdGljIERBWVNJR05fUkVXQVJEX0NPTVBMRVRFOiBzdHJpbmcgPSBcIkRBWVNJR05fUkVXQVJEX0NPTVBMRVRFXCI7XG4gICAgLyoqIOaYvuekuuemu+e6v+WlluWKsSAqL1xuICAgIHB1YmxpYyBzdGF0aWMgU0hPV19PRkZMSU5FX1JFV0FSRDogc3RyaW5nID0gXCJTSE9XX09GRkxJTkVfUkVXQVJEXCI7XG4gICAgLyoqIOaWsOaJi+S4i+S4gOatpSAqL1xuICAgIHB1YmxpYyBzdGF0aWMgR1VJREVfTkVYVF9TVEVQOiBzdHJpbmcgPSBcIkdVSURFX05FWFRfU1RFUFwiO1xuICAgIC8qKiDmiZPlvIDlip/og73nlYzpnaIgKi9cbiAgICBwdWJsaWMgc3RhdGljIE9QRU5fVklFVzogc3RyaW5nID0gXCJPUEVOX1ZJRVdcIjtcbiAgICAvKiog56e76Zmk5ZWG5bqX57qi54K5ICovXG4gICAgcHVibGljIHN0YXRpYyBSRU1PVkVfU0hPUF9SRU5fUE9JTlQ6IHN0cmluZyA9IFwiUkVNT1ZFX1NIT1BfUkVOX1BPSU5UXCI7XG4gICAgLyoqIOenu+mZpOS7u+WKoee6oueCuSAqL1xuICAgIHB1YmxpYyBzdGF0aWMgUkVNT1ZFX1RBU0tfUkVOX1BPSU5UOiBzdHJpbmcgPSBcIlJFTU9WRV9UQVNLX1JFTl9QT0lOVFwiO1xuICAgIC8qKiDnp7vpmaTovaznm5jnuqLngrkgKi9cbiAgICBwdWJsaWMgc3RhdGljIFJFTU9WRV9MVUNLX1BSSVpFX1JFTl9QT0lOVDogc3RyaW5nID0gXCJSRU1PVkVfTFVDS19QUklaRV9SRU5fUE9JTlRcIjtcbiAgICAvKiog56e76Zmk562+5Yiw57qi54K5ICovXG4gICAgcHVibGljIHN0YXRpYyBSRU1PVkVfU0lHTl9SRU5fUE9JTlQ6IHN0cmluZyA9IFwiUkVNT1ZFX1NJR05fUkVOX1BPSU5UXCI7XG4gICAgLyoqIOenu+mZpOWFs+azqOe6oueCuSAqL1xuICAgIHB1YmxpYyBzdGF0aWMgUkVNT1ZFX0ZPTExPV19SRU5fUE9JTlQ6IHN0cmluZyA9IFwiUkVNT1ZFX0ZPTExPV19SRU5fUE9JTlRcIjtcbiAgICAvKiog5pu05paw57O757uf5Yqf6IO957qi54K5ICovXG4gICAgcHVibGljIHN0YXRpYyBVUERBVEVfU1lTVEVNX1JFRF9QT0lOVDogc3RyaW5nID0gXCJVUERBVEVfU1lTVEVNX1JFRF9QT0lOVFwiO1xuICAgIC8qKiDmm7TmlrDns7vnu5/lip/og73mjInpkq4gKi9cbiAgICBwdWJsaWMgc3RhdGljIFVQREFURV9TWVNURU1fQlROOiBzdHJpbmcgPSBcIlVQREFURV9TWVNURU1fQlROXCI7XG5cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudHNNZ3IgZXh0ZW5kcyBMYXlhLlNwcml0ZSB7XG5cbiAgICBwcml2YXRlIGRpY3Q6IGFueTtcbiAgICBwcml2YXRlIGVWZWM6IEFycmF5PE1lc3NhZ2VWbz47XG4gICAgcHJpdmF0ZSBsYXN0UnVuVGltZTogbnVtYmVyO1xuICAgIHByaXZhdGUgdHlwZTogbnVtYmVyID0gMTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmRpY3QgPSB7fTtcbiAgICAgICAgdGhpcy5lVmVjID0gbmV3IEFycmF5PE1lc3NhZ2VWbz4oKTtcbiAgICAgICAgdGhpcy5sYXN0UnVuVGltZSA9IDA7XG4gICAgICAgIGlmICh0aGlzLnR5cGUgPT0gMCkge1xuICAgICAgICAgICAgdGhpcy5mcmFtZUxvb3AoMSwgdGhpcywgdGhpcy5vblJ1bik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmt7vliqDmtojmga/nm5HlkKxcbiAgICAgKiBAcGFyYW0gdHlwZSDmtojmga/llK/kuIDmoIfor4ZcbiAgICAgKiBAcGFyYW0gbGlzdGVuZXIg5L6m5ZCs5Ye95pWwXG4gICAgICogQHBhcmFtIGxpc3RlbmVyT2JqIOS+puWQrOWHveaVsOaJgOWxnuWvueixoVxuICAgICAqXG4gICAgICovXG4gICAgcHVibGljIGFkZExpc3RlbmVyKHR5cGU6IHN0cmluZywgbGlzdGVuZXI6IEZ1bmN0aW9uLCBsaXN0ZW5lck9iajogYW55KTogdm9pZCB7XG4gICAgICAgIGxldCBhcnI6IEFycmF5PGFueT4gPSB0aGlzLmRpY3RbdHlwZV07XG4gICAgICAgIGlmIChhcnIgPT0gbnVsbCkge1xuICAgICAgICAgICAgYXJyID0gbmV3IEFycmF5PGFueT4oKTtcbiAgICAgICAgICAgIHRoaXMuZGljdFt0eXBlXSA9IGFycjtcbiAgICAgICAgfVxuICAgICAgICAvL+ajgOa1i+aYr+WQpuW3sue7j+WtmOWcqFxuICAgICAgICBsZXQgaTogbnVtYmVyID0gMDtcbiAgICAgICAgbGV0IGxlbjogbnVtYmVyID0gYXJyLmxlbmd0aDtcbiAgICAgICAgZm9yIChpOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChhcnJbaV1bMF0gPT0gbGlzdGVuZXIgJiYgYXJyW2ldWzFdID09IGxpc3RlbmVyT2JqKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgYXJyLnB1c2goW2xpc3RlbmVyLCBsaXN0ZW5lck9ial0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOenu+mZpOa2iOaBr+ebkeWQrFxuICAgICAqIEBwYXJhbSB0eXBlIOa2iOaBr+WUr+S4gOagh+ivhlxuICAgICAqIEBwYXJhbSBsaXN0ZW5lciDkvqblkKzlh73mlbBcbiAgICAgKiBAcGFyYW0gbGlzdGVuZXJPYmog5L6m5ZCs5Ye95pWw5omA5bGe5a+56LGhXG4gICAgICovXG4gICAgcHVibGljIHJlbW92ZUxpc3RlbmVyKHR5cGU6IHN0cmluZywgbGlzdGVuZXI6IEZ1bmN0aW9uLCBsaXN0ZW5lck9iajogYW55KTogdm9pZCB7XG4gICAgICAgIGxldCBhcnI6IEFycmF5PGFueT4gPSB0aGlzLmRpY3RbdHlwZV07XG4gICAgICAgIGlmIChhcnIgPT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICBsZXQgaTogbnVtYmVyID0gMDtcbiAgICAgICAgbGV0IGxlbjogbnVtYmVyID0gYXJyLmxlbmd0aDtcbiAgICAgICAgZm9yIChpOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChhcnJbaV1bMF0gPT0gbGlzdGVuZXIgJiYgYXJyW2ldWzFdID09IGxpc3RlbmVyT2JqKSB7XG4gICAgICAgICAgICAgICAgYXJyLnNwbGljZShpLCAxKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoYXJyLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmRpY3RbdHlwZV0gPSBudWxsO1xuICAgICAgICAgICAgZGVsZXRlIHRoaXMuZGljdFt0eXBlXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOenu+mZpOafkOS4gOWvueixoeeahOaJgOacieebkeWQrFxuICAgICAqIEBwYXJhbSBsaXN0ZW5lck9iaiDkvqblkKzlh73mlbDmiYDlsZ7lr7nosaFcbiAgICAgKi9cbiAgICBwdWJsaWMgcmVtb3ZlQWxsKGxpc3RlbmVyT2JqOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgbGV0IGtleXMgPSBPYmplY3Qua2V5cyh0aGlzLmRpY3QpO1xuICAgICAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwLCBsZW4gPSBrZXlzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgdHlwZSA9IGtleXNbaV07XG4gICAgICAgICAgICBsZXQgYXJyOiBBcnJheTxhbnk+ID0gdGhpcy5kaWN0W3R5cGVdO1xuICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBhcnIubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoYXJyW2pdWzFdID09IGxpc3RlbmVyT2JqKSB7XG4gICAgICAgICAgICAgICAgICAgIGFyci5zcGxpY2UoaiwgMSk7XG4gICAgICAgICAgICAgICAgICAgIGotLTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChhcnIubGVuZ3RoID09IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRpY3RbdHlwZV0gPSBudWxsO1xuICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzLmRpY3RbdHlwZV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDop6blj5Hmtojmga9cbiAgICAgKiBAcGFyYW0gdHlwZSDmtojmga/llK/kuIDmoIfor4ZcbiAgICAgKiBAcGFyYW0gcGFyYW0g5raI5oGv5Y+C5pWwXG4gICAgICovXG4gICAgcHVibGljIGRpc3BhdGNoKHR5cGU6IHN0cmluZywgLi4ucGFyYW06IGFueVtdKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmRpY3RbdHlwZV0gPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCB2bzogTWVzc2FnZVZvID0gTGF5YS5Qb29sLmdldEl0ZW1CeUNsYXNzKFwiTWVzc2FnZVZvXCIsIE1lc3NhZ2VWbyk7XG4gICAgICAgIHZvLnR5cGUgPSB0eXBlO1xuICAgICAgICB2by5wYXJhbSA9IHBhcmFtO1xuICAgICAgICBpZiAodGhpcy50eXBlID09IDApIHtcbiAgICAgICAgICAgIHRoaXMuZVZlYy5wdXNoKHZvKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLnR5cGUgPT0gMSkge1xuICAgICAgICAgICAgdGhpcy5kZWFsTXNnKHZvKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIExvZy50cmFjZShcIk1lc3NhZ2VDZW50ZXLmnKrlrp7njrDnmoTnsbvlnotcIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog6L+Q6KGMICovXG4gICAgcHJpdmF0ZSBvblJ1bigpOiB2b2lkIHtcbiAgICAgICAgbGV0IGN1cnJUaW1lOiBudW1iZXIgPSBMYXlhLkJyb3dzZXIubm93KCk7XG4gICAgICAgIGxldCBpblNsZWVwOiBib29sZWFuID0gY3VyclRpbWUgLSB0aGlzLmxhc3RSdW5UaW1lID4gMTAwO1xuICAgICAgICB0aGlzLmxhc3RSdW5UaW1lID0gY3VyclRpbWU7XG4gICAgICAgIGlmIChpblNsZWVwKSB7XG4gICAgICAgICAgICB3aGlsZSAodGhpcy5lVmVjLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmRlYWxNc2codGhpcy5lVmVjLnNoaWZ0KCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgd2hpbGUgKHRoaXMuZVZlYy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kZWFsTXNnKHRoaXMuZVZlYy5zaGlmdCgpKTtcbiAgICAgICAgICAgICAgICBpZiAoKExheWEuQnJvd3Nlci5ub3coKSAtIGN1cnJUaW1lKSA+IDUpIHtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOWkhOeQhuS4gOadoea2iOaBryAqL1xuICAgIHByaXZhdGUgZGVhbE1zZyhtc2dWbzogTWVzc2FnZVZvKTogdm9pZCB7XG4gICAgICAgIGxldCBsaXN0ZW5lcnM6IEFycmF5PGFueT4gPSB0aGlzLmRpY3RbbXNnVm8udHlwZV07XG4gICAgICAgIGxldCBpOiBudW1iZXIgPSAwO1xuICAgICAgICBsZXQgbGVuOiBudW1iZXIgPSBsaXN0ZW5lcnMubGVuZ3RoO1xuICAgICAgICBsZXQgbGlzdGVuZXI6IEFycmF5PGFueT4gPSBudWxsO1xuICAgICAgICB3aGlsZSAoaSA8IGxlbikge1xuICAgICAgICAgICAgbGlzdGVuZXIgPSBsaXN0ZW5lcnNbaV07XG4gICAgICAgICAgICBsaXN0ZW5lclswXS5hcHBseShsaXN0ZW5lclsxXSwgbXNnVm8ucGFyYW0pO1xuICAgICAgICAgICAgaWYgKGxpc3RlbmVycy5sZW5ndGggIT0gbGVuKSB7XG4gICAgICAgICAgICAgICAgbGVuID0gbGlzdGVuZXJzLmxlbmd0aDtcbiAgICAgICAgICAgICAgICBpLS07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH1cbiAgICAgICAgbXNnVm8uZGlzcG9zZSgpO1xuICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcihcIk1lc3NhZ2VWb1wiLCBtc2dWbyk7XG4gICAgfVxuXG4gICAgLyoqIOa4heepuuWkhOeQhiAqL1xuICAgIHB1YmxpYyBjbGVhcigpIHtcbiAgICAgICAgdGhpcy5kaWN0ID0ge307XG4gICAgICAgIHRoaXMuZVZlYy5zcGxpY2UoMCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luczogRXZlbnRzTWdyO1xuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IElucygpOiBFdmVudHNNZ3Ige1xuICAgICAgICBpZiAoRXZlbnRzTWdyLl9pbnMgPT0gbnVsbCkge1xuICAgICAgICAgICAgRXZlbnRzTWdyLl9pbnMgPSBuZXcgRXZlbnRzTWdyKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEV2ZW50c01nci5faW5zO1xuICAgIH1cbn1cblxuY2xhc3MgTWVzc2FnZVZvIHtcbiAgICBwdWJsaWMgdHlwZTogc3RyaW5nO1xuICAgIHB1YmxpYyBwYXJhbTogYW55W107XG5cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7XG4gICAgfVxuXG4gICAgcHVibGljIGRpc3Bvc2UoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudHlwZSA9IG51bGxcbiAgICAgICAgdGhpcy5wYXJhbSA9IG51bGw7XG4gICAgfVxufSIsImltcG9ydCBFdmVudHNNZ3IgZnJvbSBcIi4uL2V2ZW50L0V2ZW50c01nclwiO1xuaW1wb3J0IEV2ZW50VHlwZSBmcm9tIFwiLi4vZXZlbnQvRXZlbnRUeXBlXCI7XG5pbXBvcnQgTGF5ZXJNZ3IgZnJvbSBcIi4uL2xheWVyL0xheWVyTWdyXCI7XG5pbXBvcnQgR3VpZGVTcGVha1ZpZXcgZnJvbSBcIi4uLy4uL21vZHVsZS9ndWlkZS92aWV3L0d1aWRlU3BlYWtWaWV3XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEd1aWRlTWFzayBleHRlbmRzIExheWEuU3ByaXRlIHtcblxuICAgIHByaXZhdGUgZ3VpZGVDb250YWluZXI6IExheWEuU3ByaXRlO1xuICAgIHB1YmxpYyBoaXRBcmVhOiBMYXlhLkhpdEFyZWE7XG4gICAgcHJpdmF0ZSBpbnRlcmFjdGlvbkFyZWE6IExheWEuU3ByaXRlO1xuICAgIHByaXZhdGUgX3NwZWFrVmlldzogR3VpZGVTcGVha1ZpZXc7XG4gICAgLyoqIOaYr+WQpueCueWHu+epuueZveWMuuWfn+i/m+WFpeS4i+S4gOatpeW8leWvvCAqL1xuICAgIHB1YmxpYyBpc0NsaWNrTWFza05leHRTdGVwOiBib29sZWFuID0gZmFsc2U7XG4gICAgcHJpdmF0ZSBfZmluZ2VyOiBMYXlhLkltYWdlO1xuICAgIHByaXZhdGUgX3RpbWVMaW5lOiBMYXlhLlRpbWVMaW5lO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgaW5pdCgpOiB2b2lkIHtcbiAgICAgICAgLy/nu5jliLbkuIDkuKrok53oibLmlrnlnZfvvIzkuI3ooqvmiqDlm75cbiAgICAgICAgdmFyIGdhbWVDb250YWluZXI6IExheWEuU3ByaXRlID0gbmV3IExheWEuU3ByaXRlKCk7XG4gICAgICAgIGdhbWVDb250YWluZXIuYWxwaGEgPSAwO1xuICAgICAgICBnYW1lQ29udGFpbmVyLmxvYWRJbWFnZShcImltYWdlcy9jb21wb25lbnQvdGlwX2JnLnBuZ1wiKTtcbiAgICAgICAgdGhpcy5hZGRDaGlsZChnYW1lQ29udGFpbmVyKTtcblxuICAgICAgICAvLyDlvJXlr7zmiYDlnKjlrrnlmahcbiAgICAgICAgdGhpcy5ndWlkZUNvbnRhaW5lciA9IG5ldyBMYXlhLlNwcml0ZSgpO1xuICAgICAgICAvLyDorr7nva7lrrnlmajkuLrnlLvluIPnvJPlrZhcbiAgICAgICAgdGhpcy5ndWlkZUNvbnRhaW5lci5jYWNoZUFzID0gXCJiaXRtYXBcIjtcbiAgICAgICAgdGhpcy5hZGRDaGlsZCh0aGlzLmd1aWRlQ29udGFpbmVyKTtcbiAgICAgICAgZ2FtZUNvbnRhaW5lci5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uTmV4dFN0ZXApO1xuXG4gICAgICAgIC8v57uY5Yi26YGu572p5Yy677yM5ZCr6YCP5piO5bqm77yM5Y+v6KeB5ri45oiP6IOM5pmvXG4gICAgICAgIHZhciBtYXNrQXJlYTogTGF5YS5TcHJpdGUgPSBuZXcgTGF5YS5TcHJpdGUoKTtcbiAgICAgICAgbWFza0FyZWEuYWxwaGEgPSAwLjU7XG4gICAgICAgIG1hc2tBcmVhLmdyYXBoaWNzLmRyYXdSZWN0KDAsIDAsIExheWVyTWdyLnN0YWdlRGVzaWduV2lkdGgsIExheWVyTWdyLnN0YWdlRGVzaWduSGVpZ2h0LCBcIiMwMDAwMDBcIik7XG4gICAgICAgIHRoaXMuZ3VpZGVDb250YWluZXIuYWRkQ2hpbGQobWFza0FyZWEpO1xuXG4gICAgICAgIC8v57uY5Yi25LiA5Liq5ZyG5b2i5Yy65Z+f77yM5Yip55So5Y+g5Yqg5qih5byP77yM5LuO6YGu572p5Yy65Z+f5oqg5Ye65Y+v5Lqk5LqS5Yy6XG4gICAgICAgIHRoaXMuaW50ZXJhY3Rpb25BcmVhID0gbmV3IExheWEuU3ByaXRlKCk7XG4gICAgICAgIC8v6K6+572u5Y+g5Yqg5qih5byPXG4gICAgICAgIHRoaXMuaW50ZXJhY3Rpb25BcmVhLmJsZW5kTW9kZSA9IFwiZGVzdGluYXRpb24tb3V0XCI7XG4gICAgICAgIHRoaXMuZ3VpZGVDb250YWluZXIuYWRkQ2hpbGQodGhpcy5pbnRlcmFjdGlvbkFyZWEpO1xuXG4gICAgICAgIHRoaXMuaGl0QXJlYSA9IG5ldyBMYXlhLkhpdEFyZWEoKTtcbiAgICAgICAgdGhpcy5oaXRBcmVhLmhpdC5kcmF3UmVjdCgwLCAwLCBMYXllck1nci5zdGFnZURlc2lnbldpZHRoLCBMYXllck1nci5zdGFnZURlc2lnbkhlaWdodCwgXCIjMDAwMDAwXCIpO1xuXG4gICAgICAgIHRoaXMuZ3VpZGVDb250YWluZXIuaGl0QXJlYSA9IHRoaXMuaGl0QXJlYTtcbiAgICAgICAgdGhpcy5ndWlkZUNvbnRhaW5lci5tb3VzZUVuYWJsZWQgPSB0cnVlO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25OZXh0U3RlcCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuaXNDbGlja01hc2tOZXh0U3RlcCkge1xuICAgICAgICAgICAgdGhpcy5yZXNldCgpO1xuICAgICAgICAgICAgRXZlbnRzTWdyLklucy5kaXNwYXRjaChFdmVudFR5cGUuR1VJREVfTkVYVF9TVEVQKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDlj6/ngrnlh7vljLrln5/nmoTlpKflsI8gKi9cbiAgICBwdWJsaWMgZHJhd0NsaWNsQXJlYVNpemUoZGF0YTogeyB4OiBudW1iZXIsIHk6IG51bWJlciwgdzogbnVtYmVyLCBoOiBudW1iZXIgfSk6IHZvaWQge1xuICAgICAgICB0aGlzLmhpdEFyZWEudW5IaXQuY2xlYXIoKTtcbiAgICAgICAgdGhpcy5oaXRBcmVhLnVuSGl0LmRyYXdSZWN0KGRhdGEueCwgZGF0YS55LCBkYXRhLncsIGRhdGEuaCwgXCIjMDAwMDAwXCIpO1xuXG4gICAgICAgIHRoaXMuaW50ZXJhY3Rpb25BcmVhLmdyYXBoaWNzLmNsZWFyKCk7XG4gICAgICAgIHRoaXMuaW50ZXJhY3Rpb25BcmVhLmdyYXBoaWNzLmRyYXdSZWN0KGRhdGEueCwgZGF0YS55LCBkYXRhLncsIGRhdGEuaCwgXCIjMDAwMDAwXCIpO1xuICAgIH1cblxuICAgIC8qKiDmmL7npLrlr7nor53moYYgKi9cbiAgICBwdWJsaWMgc2hvd1NwZWFrVmlldyhjb250ZW50OiBzdHJpbmcsIHBvczogeyB4OiBudW1iZXIsIHk6IG51bWJlciB9LCBzcGVha0NvbXBsZXRlOiBGdW5jdGlvbiA9IG51bGwpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuX3NwZWFrVmlldyA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLl9zcGVha1ZpZXcgPSBuZXcgR3VpZGVTcGVha1ZpZXcoKTtcbiAgICAgICAgICAgIHRoaXMuX3NwZWFrVmlldy56T3JkZXIgPSAxMDAwO1xuICAgICAgICAgICAgdGhpcy5hZGRDaGlsZCh0aGlzLl9zcGVha1ZpZXcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3NwZWFrVmlldy52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fc3BlYWtWaWV3LnBvcyhwb3MueCwgcG9zLnkpO1xuICAgICAgICB0aGlzLl9zcGVha1ZpZXcuc2V0U3BlYWtDb250ZW50KGNvbnRlbnQsIHNwZWFrQ29tcGxldGUpO1xuICAgIH1cblxuICAgIC8qKiDmmL7npLrmiYvmjIfmjIflvJUgKi9cbiAgICBwdWJsaWMgc2hvd0ZpZ25lcihwb3M6IHsgeDogbnVtYmVyLCB5OiBudW1iZXIgfSwgcm90YXRpb246IG51bWJlciA9IC00MCwgZWZmZWN0VHlwZTogbnVtYmVyID0gMSk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5fZmluZ2VyID09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuX2ZpbmdlciA9IG5ldyBMYXlhLkltYWdlKFwiaW1hZ2VzL2d1aWRlL2d1aWRlX2ppYW50b3UyLnBuZ1wiKTtcbiAgICAgICAgICAgIHRoaXMuX2Zpbmdlci56T3JkZXIgPSAxMDAwO1xuICAgICAgICAgICAgdGhpcy5fZmluZ2VyLmFuY2hvclggPSB0aGlzLl9maW5nZXIuYW5jaG9yWSA9IDAuNTtcbiAgICAgICAgICAgIHRoaXMuYWRkQ2hpbGQodGhpcy5fZmluZ2VyKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9maW5nZXIudmlzaWJsZSA9IHRydWU7XG4gICAgICAgIHRoaXMuX2Zpbmdlci5yb3RhdGlvbiA9IHJvdGF0aW9uO1xuICAgICAgICB0aGlzLl9maW5nZXIucG9zKHBvcy54LCBwb3MueSk7XG4gICAgICAgIGlmIChlZmZlY3RUeXBlID09IDEpIHtcbiAgICAgICAgICAgIHRoaXMuX3RpbWVMaW5lID0gbmV3IExheWEuVGltZUxpbmUoKTtcbiAgICAgICAgICAgIHRoaXMuX3RpbWVMaW5lLmFkZExhYmVsKFwidGwxXCIsIDApLnRvKHRoaXMuX2ZpbmdlciwgeyB4OiB0aGlzLl9maW5nZXIueCAtIDIwLCB5OiB0aGlzLl9maW5nZXIueSArIDIwIH0sIDUwMClcbiAgICAgICAgICAgICAgICAuYWRkTGFiZWwoXCJ0bDJcIiwgMCkudG8odGhpcy5fZmluZ2VyLCB7IHg6IHRoaXMuX2Zpbmdlci54LCB5OiB0aGlzLl9maW5nZXIueSB9LCA1MDAsIExheWEuRWFzZS5iYWNrSW5PdXQpO1xuICAgICAgICAgICAgdGhpcy5fdGltZUxpbmUucGxheSgwLCB0cnVlKTtcbiAgICAgICAgfSBlbHNlIGlmIChlZmZlY3RUeXBlID09IDIpIHtcbiAgICAgICAgICAgIHRoaXMuX3RpbWVMaW5lID0gbmV3IExheWEuVGltZUxpbmUoKTtcbiAgICAgICAgICAgIHRoaXMuX3RpbWVMaW5lLmFkZExhYmVsKFwidGwxXCIsIDApLnRvKHRoaXMuX2ZpbmdlciwgeyB4OiB0aGlzLl9maW5nZXIueCAtIDEwMCwgeTogdGhpcy5fZmluZ2VyLnkgfSwgNTAwKVxuICAgICAgICAgICAgICAgIC5hZGRMYWJlbChcInRsMlwiLCAwKS50byh0aGlzLl9maW5nZXIsIHsgeDogdGhpcy5fZmluZ2VyLngsIHk6IHRoaXMuX2Zpbmdlci55IH0sIDUwMCwgTGF5YS5FYXNlLmJhY2tJbk91dCk7XG4gICAgICAgICAgICB0aGlzLl90aW1lTGluZS5wbGF5KDAsIHRydWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHJlc2V0KCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5fc3BlYWtWaWV3KSB7XG4gICAgICAgICAgICB0aGlzLl9zcGVha1ZpZXcudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9maW5nZXIpIHtcbiAgICAgICAgICAgIHRoaXMuX2Zpbmdlci52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX3RpbWVMaW5lKSB7XG4gICAgICAgICAgICB0aGlzLl90aW1lTGluZS5kZXN0cm95KCk7XG4gICAgICAgICAgICB0aGlzLl90aW1lTGluZSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52aXNpYmxlID0gZmFsc2U7XG4gICAgfVxufSIsImltcG9ydCBHdWlkZU1hc2sgZnJvbSBcIi4vR3VpZGVNYXNrXCI7XG5pbXBvcnQgTGF5ZXJNZ3IgZnJvbSBcIi4uL2xheWVyL0xheWVyTWdyXCI7XG5pbXBvcnQgRXZlbnRzTWdyIGZyb20gXCIuLi9ldmVudC9FdmVudHNNZ3JcIjtcbmltcG9ydCBFdmVudFR5cGUgZnJvbSBcIi4uL2V2ZW50L0V2ZW50VHlwZVwiO1xuaW1wb3J0IEd1aWRlVk8gZnJvbSBcIi4uL2RiL3ZvL0d1aWRlVk9cIjtcbmltcG9ydCBHbG9iYWxEYXRhIGZyb20gXCIuLi9kYi9HbG9iYWxEYXRhXCI7XG5pbXBvcnQgSGFsbENvbnRyb2wgZnJvbSBcIi4uLy4uL21vZHVsZS9oYWxsL0hhbGxDb250cm9sXCI7XG5cbi8qKlxuICog5paw5omL5byV5a+8XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEd1aWRlTWdyIHtcblxuICAgIHByaXZhdGUgX21hc2tWaWV3OiBHdWlkZU1hc2s7XG4gICAgcHJpdmF0ZSBfZ3VpZGVTdGVwOiBudW1iZXIgPSAxO1xuICAgIHByaXZhdGUgX2d1aWRlVk86IEd1aWRlVk87XG4gICAgcHJpdmF0ZSBfZ3VpZGVMZW46IG51bWJlcjtcbiAgICAvKiog5piv5ZCm5Zyo6L+b6KGM5paw5omL5rWB56iLICovXG4gICAgcHVibGljIGlzR3VpZGU6IGJvb2xlYW4gPSBmYWxzZTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuXG4gICAgfVxuXG4gICAgcHVibGljIHNldHVwKCk6IHZvaWQge1xuICAgICAgICB0aGlzLl9ndWlkZUxlbiA9IEdsb2JhbERhdGEuZ2V0QWxsVmFsdWUoR2xvYmFsRGF0YS5HdWlkZVZPKS5sZW5ndGg7XG4gICAgICAgIGlmICh0aGlzLl9ndWlkZVN0ZXAgPCAwIHx8IHRoaXMuX2d1aWRlU3RlcCA+PSB0aGlzLl9ndWlkZUxlbikgcmV0dXJuO1xuICAgICAgICB0aGlzLl9tYXNrVmlldyA9IG5ldyBHdWlkZU1hc2soKTtcbiAgICAgICAgdGhpcy5fbWFza1ZpZXcudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICBMYXllck1nci5JbnMuZ3VpZGVMYXllci5hZGRDaGlsZCh0aGlzLl9tYXNrVmlldyk7XG4gICAgICAgIEV2ZW50c01nci5JbnMuYWRkTGlzdGVuZXIoRXZlbnRUeXBlLkdVSURFX05FWFRfU1RFUCwgdGhpcy5vbk5leHRTdGVwLCB0aGlzKTtcbiAgICAgICAgdGhpcy5vbk5leHRTdGVwKCk7XG4gICAgfVxuXG4gICAgcHVibGljIG9uTmV4dFN0ZXAoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9tYXNrVmlldyA9PSBudWxsIHx8IHRoaXMuX2d1aWRlU3RlcCA8IDAgfHwgdGhpcy5fZ3VpZGVTdGVwID4gdGhpcy5fZ3VpZGVMZW4pIHtcbiAgICAgICAgICAgIHRoaXMuaXNHdWlkZSA9IGZhbHNlO1xuICAgICAgICAgICAgaWYgKHRoaXMuX21hc2tWaWV3KSB0aGlzLl9tYXNrVmlldy5yZXNldCgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX21hc2tWaWV3LnZpc2libGUgPSB0cnVlO1xuICAgICAgICB0aGlzLl9ndWlkZVZPID0gR2xvYmFsRGF0YS5nZXREYXRhKEdsb2JhbERhdGEuR3VpZGVWTywgdGhpcy5fZ3VpZGVTdGVwKTtcbiAgICAgICAgaWYgKHRoaXMuX2d1aWRlVk8pIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmlzTmV4dFN0ZXAoKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuaXNHdWlkZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy5fbWFza1ZpZXcudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2d1aWRlVk8uaXNGb3JjZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXNrVmlldy5kcmF3Q2xpY2xBcmVhU2l6ZSh7IHg6IHRoaXMuX2d1aWRlVk8uY2xpY2tBcmVhUGFyYW1bMF0sIHk6IHRoaXMuX2d1aWRlVk8uY2xpY2tBcmVhUGFyYW1bMV0sIHc6IHRoaXMuX2d1aWRlVk8uY2xpY2tBcmVhUGFyYW1bMl0sIGg6IHRoaXMuX2d1aWRlVk8uY2xpY2tBcmVhUGFyYW1bM10gfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9ndWlkZVZPLnNwZWFrUGFyYW0ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXNrVmlldy5zaG93U3BlYWtWaWV3KHRoaXMuX2d1aWRlVk8uc3BlYWtDb250ZW50LCB7IHg6IHRoaXMuX2d1aWRlVk8uc3BlYWtQYXJhbVswXSwgeTogdGhpcy5fZ3VpZGVWTy5zcGVha1BhcmFtWzFdIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fZ3VpZGVWTy5maW5nZXJQYXJhbS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX21hc2tWaWV3LnNob3dGaWduZXIoeyB4OiB0aGlzLl9ndWlkZVZPLmZpbmdlclBhcmFtWzBdLCB5OiB0aGlzLl9ndWlkZVZPLmZpbmdlclBhcmFtWzFdIH0sIHRoaXMuX2d1aWRlVk8uZmluZ2VyUm90YXRpb24sIHRoaXMuX2d1aWRlVk8uZmluZ2VyRWZmZWN0VHlwZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8v54m55q6K6KaB5rGCXG4gICAgICAgICAgICAgICAgc3dpdGNoICh0aGlzLl9ndWlkZVN0ZXApIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOiAvL+esrOS4gOasoei0reS5sOiLsembhFxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjogLy/nrKzkuIDmrKHlkIjmiJDoi7Hpm4RcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5pc0d1aWRlID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLl9tYXNrVmlldy5yZXNldCgpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJARGF2aWQg5q2l6aqkSUTml6Dms5Xmib7liLDooajkuK3lr7nlupTmlbDmja4gIHN0ZXDvvJpcIiwgdGhpcy5fZ3VpZGVTdGVwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9ndWlkZVN0ZXArKztcbiAgICB9XG5cbiAgICAvKiog5piv5ZCm5Y+v5Lul6L+b5YWl5LiL5LiA5q2l6aqkICovXG4gICAgcHJpdmF0ZSBpc05leHRTdGVwKCk6IGJvb2xlYW4ge1xuICAgICAgICBzd2l0Y2ggKHRoaXMuX2d1aWRlVk8udHlwZSkge1xuICAgICAgICAgICAgY2FzZSBHVUlERV9UWVBFLlBBU1M6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICBjYXNlIEdVSURFX1RZUEUuVVNFUl9MRVZFTDpcblxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBHVUlERV9UWVBFLkhFUk9fTEVWRUw6XG5cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgR1VJREVfVFlQRS5IRVJPX0NPVU5UOlxuICAgICAgICAgICAgICAgIGlmIChIYWxsQ29udHJvbC5JbnMuTW9kZWwuaGVyb0NvdW50ID49IHRoaXMuX2d1aWRlVk8uY29uZGl0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX21hc2tWaWV3LnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cblxuICAgIHB1YmxpYyBnZXQgZ3VpZGVTdGVwKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLl9ndWlkZVN0ZXA7XG4gICAgfVxuXG4gICAgcHVibGljIHNldCBndWlkZVN0ZXAodmFsdWU6IG51bWJlcikge1xuICAgICAgICB0aGlzLl9ndWlkZVN0ZXAgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnMoKTogR3VpZGVNZ3Ige1xuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlKSB7XG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBHdWlkZU1ncigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZTtcbiAgICB9XG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBHdWlkZU1ncjtcbn1cblxuZW51bSBHVUlERV9UWVBFIHtcbiAgICBQQVNTID0gMCxcbiAgICAvKiog55So5oi3562J57qnICovXG4gICAgVVNFUl9MRVZFTCA9IDEsXG4gICAgLyoqIOiLsembhOetiee6pyAqL1xuICAgIEhFUk9fTEVWRUwsXG4gICAgLyoqIOiLsembhOaVsOmHjyAqL1xuICAgIEhFUk9fQ09VTlQsXG59IiwiaW1wb3J0IExheWVyIGZyb20gXCIuL2Jhc2UvTGF5ZXJcIjtcbmltcG9ydCBNYXNrTGF5ZXIgZnJvbSBcIi4vYmFzZS9NYXNrTGF5ZXJcIjtcbmltcG9ydCBQb2ludFV0aWxzIGZyb20gXCIuLi91dGlscy9Qb2ludFV0aWxzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExheWVyTWdyIHtcblxuICAgIHB1YmxpYyBnZXQgbGF5ZXJzKCk6IExheWVyW10ge1xuICAgICAgICByZXR1cm4gdGhpcy5fbGF5ZXJzO1xuICAgIH1cblxuICAgIC8qKiDlvZPliY3nmoTpvKDmoIfkvY3nva4gWCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IG1vdXNlWCgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gTGF5YS5zdGFnZS5tb3VzZVggLyBMYXllck1nci5hZGFwdFNjYWxlWDtcbiAgICB9XG5cbiAgICAvKiog5b2T5YmN55qE6byg5qCH5L2N572uIFkgKi9cbiAgICBwdWJsaWMgc3RhdGljIGdldCBtb3VzZVkoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIExheWEuc3RhZ2UubW91c2VZIC8gTGF5ZXJNZ3IuYWRhcHRTY2FsZVk7XG4gICAgfVxuXG4gICAgLyoqIOiOt+WPluWvueixoeeahOWunumZheiInuWPsOWPmOW9ouaVsOaNriAqL1xuICAgIHB1YmxpYyBzdGF0aWMgZ2V0UmVhbFN0YWdlUmVjdCh0YXJnZXQ6IExheWEuU3ByaXRlKTogTGF5YS5SZWN0YW5nbGUge1xuICAgICAgICBsZXQgbG9jOiBMYXlhLlBvaW50ID0gUG9pbnRVdGlscy5sb2NhbFRvR2xvYmFsKHRhcmdldCk7XG4gICAgICAgIGxldCByZWN0OiBMYXlhLlJlY3RhbmdsZSA9IG5ldyBMYXlhLlJlY3RhbmdsZShcbiAgICAgICAgICAgIGxvYy54ICogTGF5ZXJNZ3IuYWRhcHRTY2FsZSArIHRoaXMubGVmdCxcbiAgICAgICAgICAgIGxvYy55ICogTGF5ZXJNZ3IuYWRhcHRTY2FsZSArIHRoaXMudG9wLFxuICAgICAgICAgICAgdGFyZ2V0LndpZHRoICogTGF5ZXJNZ3IuYWRhcHRTY2FsZSxcbiAgICAgICAgICAgIHRhcmdldC5oZWlnaHQgKiBMYXllck1nci5hZGFwdFNjYWxlKTtcblxuICAgICAgICBsZXQgc2NhbGVGYWN0b3I6IG51bWJlciA9IExheWEuc3RhZ2UuZGVzaWduV2lkdGggLyBMYXlhLkJyb3dzZXIuY2xpZW50V2lkdGg7XG4gICAgICAgIHJlY3QueCA9IE1hdGgucm91bmQocmVjdC54IC8gc2NhbGVGYWN0b3IpO1xuICAgICAgICByZWN0LnkgPSBNYXRoLnJvdW5kKHJlY3QueSAvIHNjYWxlRmFjdG9yKTtcbiAgICAgICAgcmVjdC53aWR0aCA9IE1hdGgucm91bmQocmVjdC53aWR0aCAvIHNjYWxlRmFjdG9yKTtcbiAgICAgICAgcmVjdC5oZWlnaHQgPSBNYXRoLnJvdW5kKHJlY3QuaGVpZ2h0IC8gc2NhbGVGYWN0b3IpO1xuICAgICAgICByZXR1cm4gcmVjdDtcbiAgICB9XG5cbiAgICAvKiogTGF5YS5zdGFnZSDnmoTorr7orqHlrr3luqbvvIzkuIDoiKzkuLrkurrkuLrorr7lrpogKi9cbiAgICBwdWJsaWMgc3RhdGljIHN0YWdlRGVzaWduV2lkdGg6IG51bWJlciA9IDA7XG5cbiAgICAvKiogTGF5YS5zdGFnZSDnmoTorr7orqHpq5jluqbvvIzkuIDoiKzkuLrkurrkuLrorr7lrpogKi9cbiAgICBwdWJsaWMgc3RhdGljIHN0YWdlRGVzaWduSGVpZ2h0OiBudW1iZXIgPSAwO1xuXG4gICAgLyoqIExheWEuc3RhZ2Ug55qE6K6+5aSH5a695bqm77yM5LiA6Iis5qC55o2u5py65Zmo6Ieq5Yqo6K6+5a6aICovXG4gICAgcHVibGljIHN0YXRpYyBjbGllbnRXaWR0aDogbnVtYmVyID0gMDtcblxuICAgIC8qKiBMYXlhLnN0YWdlIOeahOiuvuWkh+mrmOW6pu+8jOS4gOiIrOagueaNruacuuWZqOiHquWKqOiuvuWumiAqL1xuICAgIHB1YmxpYyBzdGF0aWMgY2xpZW50SGVpZ2h0OiBudW1iZXIgPSAwO1xuXG4gICAgLyoqIExheWEuc3RhZ2Uud2lkdGgg6ZKI5a+56K6+5aSH55qE6YCC5bqU5YCN5pWwICovXG4gICAgcHVibGljIHN0YXRpYyBhZGFwdFNjYWxlWDogbnVtYmVyID0gMDtcblxuICAgIC8qKiBMYXlhLnN0YWdlLmhlaWdodCDpkojlr7norr7lpIfnmoTpgILlupTlgI3mlbAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGFkYXB0U2NhbGVZOiBudW1iZXIgPSAwO1xuXG4gICAgLyoqIExheWVyTWdyLl9sYXllcnMg6ZKI5a+56K6+5aSH55qE6YCC5bqU5YCN5pWwICovXG4gICAgcHVibGljIHN0YXRpYyBhZGFwdFNjYWxlOiBudW1iZXIgPSAwO1xuXG4gICAgLyoqIOiuvuWkh+WDj+e0oOWAjeeOhyAqL1xuICAgIHB1YmxpYyBzdGF0aWMgcGl4ZWxSYXRpbzogbnVtYmVyID0gMTtcblxuICAgIC8qKiDlr7norr7lpIfpgILlupTlkI7vvIxMYXllck1nci5fbGF5ZXJzIOi3neemu+Wxj+W5lemhtumDqOeahOi3neemuyAqL1xuICAgIHB1YmxpYyBzdGF0aWMgdG9wOiBudW1iZXIgPSAwO1xuXG4gICAgLyoqIOWvueiuvuWkh+mAguW6lOWQju+8jExheWVyTWdyLl9sYXllcnMg6Led56a75bGP5bmV5bem5L6n55qE6Led56a7ICovXG4gICAgcHVibGljIHN0YXRpYyBsZWZ0OiBudW1iZXIgPSAwO1xuXG4gICAgLyoqIOiuvuWkh1RvcO+8jOi3neemu+Wxj+W5lemhtumDqOeahOecn+WunuWxj+W5lei3neemuyAqL1xuICAgIHB1YmxpYyBzdGF0aWMgY2xpZW50VG9wOiBudW1iZXIgPSAwO1xuXG4gICAgLyoqIOiuvuWkh0xlZnTvvIzot53nprvlsY/luZXlt6bkvqfnmoTnnJ/lrp7lsY/luZXot53nprsgKi9cbiAgICBwdWJsaWMgc3RhdGljIGNsaWVudExlZnQ6IG51bWJlciA9IDA7XG5cbiAgICAvKipcblx0ICog5riy5p+T5bGC77yM5LiA6Iis5aSE5LqO5ri45oiP5pyA5bqV5bGC44CCXG5cdCAqIOS4u+imgea3u+WKoOihl+mBk+WcuuaZr+OAgeWcsOWbvuWcuuaZr+OAgeaImOaWl+WcuuaZr+etieOAglxuXHQgKi9cbiAgICBwdWJsaWMgcmVuZGVyTGF5ZXI6IExheWVyO1xuXHQvKipcblx0ICog5a+86Iiq5bGC77yM5LiA6Iis5aSE5LqO5riy5p+T5bGC5LmL5LiK44CCXG5cdCAqIOS4u+imgea3u+WKoOW3peWFt+aMiemSruagj++8jOa0u+WKqOaMiemSruagj++8jOWKn+iDveaMiemSruagj+etieWQhOS4quaooeWdl+eahOW/q+mAn+WFpeWPo++8jOWmguacieiBiuWkqeahhuS4gOiIrOS5n+aUvuWcqOi/meS4gOWxguOAglxuXHQgKi9cbiAgICBwdWJsaWMgbmF2TGF5ZXI6IExheWVyO1xuXHQvKipcblx0ICog6aOY54mp5bGC77yM5LiA6Iis5aSE5LqO5a+86Iiq5bGC5LmL5LiK44CCXG5cdCAqIOS4u+imgea3u+WKoOWcuuaZr+S4reeahOmjnuihjOeJqVxuXHQgKi9cbiAgICBwdWJsaWMgZmx5TGF5ZXI6IExheWVyO1xuXHQvKipcblx0ICog56qX5Y+j5bGC77yM5LiA6Iis5aSE5LqO5a+86Iiq5bGC5LmL5LiK44CCXG5cdCAqIOS4u+imgea3u+WKoOWQhOS4quWKn+iDveeahOeql+WPo+inhuWbvuOAglxuXHQgKi9cbiAgICBwdWJsaWMgZnJhbWVMYXllcjogTWFza0xheWVyO1xuXHQvKipcblx0ICog5LqM57qn56qX5Y+j5bGC77yM5LiA6Iis5aSE5LqO56qX5Y+j5bGC5LmL5LiK44CCXG5cdCAqIOS4u+imgea3u+WKoOWQhOS4quWKn+iDveeql+WPo+inhuWbvueahOS6jOe6p+eql+WPo+OAglxuXHQgKi9cbiAgICBwdWJsaWMgc3ViRnJhbWVMYXllcjogTWFza0xheWVyO1xuXHQvKipcblx0ICog6K2m5ZGK56Gu6K6k5bGC77yM5LiA6Iis5aSE5LqO5LqM57qn56qX5Y+j5bGC5LmL5LiK44CCXG5cdCAqIOS4u+imgea3u+WKoOWQhOenjemAmuefpeOAgeaPkOmGku+8jOS7peWPiueUqOaIt+eahOaTjeS9nOehruiupOOAglxuXHQgKi9cbiAgICBwdWJsaWMgYWxlcnRMYXllcjogTWFza0xheWVyO1xuXHQvKipcblx0ICog5bGP5bmV54m55pWI5bGC77yM5LiA6Iis5aSE5LqO6K2m5ZGK5bGC5LmL5LiK44CCXG5cdCAqIOS4u+imgea3u+WKoOWQhOenjeWxj+W5leeJueaViOOAglxuXHQgKi9cbiAgICBwdWJsaWMgc2NyZWVuRWZmZWN0TGF5ZXI6IExheWVyO1xuXHQvKipcblx0ICog5rua5Yqo5L+h5oGv5bGC77yM5LiA6Iis5aSE5LqO5bGP5bmV54m55pWI5bGC56qX5Y+j5bGC5LmL5LiK44CCXG5cdCAqIOS4u+imgea3u+WKoOWxj+W5leeahOa7muWKqOaWh+acrOaPkOmGkuOAgeWWh+WPrea7muWKqOaWh+acrOetieOAglxuXHQgKi9cbiAgICBwdWJsaWMgcm9sbE1lc3NhZ2VMYXllcjogTGF5ZXI7XG5cdC8qKlxuXHQgKiDlvJXlr7zlsYLvvIzkuIDoiKzlpITkuo7kuoznuqfnqpflj6PlsYLkuYvkuIrjgIJcblx0ICog5Li76KaB5re75Yqg5paw5omL5byV5a+85ZKM5YW25LuW5qih5Z2X5byV5a+855u45YWz55qE6KeG5Zu+44CCXG5cdCAqL1xuICAgIHB1YmxpYyBndWlkZUxheWVyOiBMYXllcjtcblxuXHQvKipcblx0ICog5bCPTG9hZGluZ+Wxgu+8jOS4gOiIrOWkhOS6juW8leWvvOWxguS5i+S4iuOAglxuXHQgKiDkuLvopoHmt7vliqDlsI9Mb2FkaW5n6KeG5Zu+77yM5bCPTG9hZGluZ+WNs++8jOa4uOaIj+WGheeahOWxgOmDqOWKoOi9veetieWQjuacn+OAglxuXHQgKi9cbiAgICBwdWJsaWMgc21hbGxMb2FkaW5nTGF5ZXI6IE1hc2tMYXllcjtcblxuXHQvKipcblx0ICog5YWs5ZGK5bGC77yM5LiA6Iis5aSE5LqO5bCPTG9hZGluZ+WxguS5i+S4iuOAglxuXHQgKiDkuLvopoHmt7vliqDmnI3liqHlmajlhazlkYrjgIJcblx0ICovXG4gICAgcHVibGljIG5vdGVMYXllcjogTGF5ZXI7XG5cdC8qKlxuXHQgKiDosIPor5XlsYLvvIzkuIDoiKzlpITkuo7mnIDkuIrlsYLjgIJcblx0ICog5Li76KaB5re75Yqg5ZCE56eN6LCD6K+V5bel5YW355qE6KeG5Zu+44CCXG5cdCAqL1xuICAgIHB1YmxpYyBkZWJ1Z0xheWVyOiBMYXllcjtcblxuICAgIHByaXZhdGUgcmVhZG9ubHkgX2xheWVyczogTGF5ZXJbXTtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9sYXllcnMgPSBbXTtcbiAgICB9XG5cbiAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICBwdWJsaWMgaW5pdExheWVyKGNvbnRhaW5lcjogTGF5YS5TdGFnZSwgZGVzaWduV2lkdGg/OiBudW1iZXIsIGRlc2lnbkhlaWdodD86IG51bWJlcik6IHZvaWQge1xuICAgICAgICBsZXQgcGl4ZWxSYXRpbzogbnVtYmVyID0gTGF5YS5Ccm93c2VyLnBpeGVsUmF0aW87XG5cbiAgICAgICAgbGV0IGNsaWVudFdpZHRoOiBudW1iZXIgPSBMYXlhLkJyb3dzZXIuY2xpZW50V2lkdGggKiBwaXhlbFJhdGlvO1xuICAgICAgICBsZXQgY2xpZW50SGVpZ2h0OiBudW1iZXIgPSBMYXlhLkJyb3dzZXIuY2xpZW50SGVpZ2h0ICogcGl4ZWxSYXRpbztcblxuICAgICAgICBsZXQgYWRhcHRTY2FsZVg6IG51bWJlciA9IGNsaWVudFdpZHRoIC8gZGVzaWduV2lkdGg7XG4gICAgICAgIGxldCBhZGFwdFNjYWxlWTogbnVtYmVyID0gY2xpZW50SGVpZ2h0IC8gZGVzaWduSGVpZ2h0O1xuXG4gICAgICAgIGxldCBhZGFwdFNjYWxlOiBudW1iZXIgPSBNYXRoLm1pbihhZGFwdFNjYWxlWCwgYWRhcHRTY2FsZVkpO1xuXG4gICAgICAgIGxldCBzdGFnZVdpZHRoOiBudW1iZXIgPSBkZXNpZ25XaWR0aCAqIGFkYXB0U2NhbGVYO1xuICAgICAgICBsZXQgc3RhZ2VIZWlnaHQ6IG51bWJlciA9IGRlc2lnbkhlaWdodCAqIGFkYXB0U2NhbGVZO1xuXG4gICAgICAgIGxldCB0b3A6IG51bWJlciA9IDA7XG4gICAgICAgIGxldCBsZWZ0OiBudW1iZXIgPSAwO1xuICAgICAgICBpZiAoYWRhcHRTY2FsZSA9PT0gYWRhcHRTY2FsZVgpIHtcbiAgICAgICAgICAgIHRvcCA9IChzdGFnZUhlaWdodCAtIGRlc2lnbkhlaWdodCAqIGFkYXB0U2NhbGUpICogMC41O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGVmdCA9IChzdGFnZVdpZHRoIC0gZGVzaWduV2lkdGggKiBhZGFwdFNjYWxlKSAqIDAuNTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRhaW5lci53aWR0aCA9IHN0YWdlV2lkdGg7XG4gICAgICAgIGNvbnRhaW5lci5oZWlnaHQgPSBzdGFnZUhlaWdodDtcbiAgICAgICAgTGF5ZXJNZ3Iuc3RhZ2VEZXNpZ25XaWR0aCA9IGRlc2lnbldpZHRoO1xuICAgICAgICBMYXllck1nci5zdGFnZURlc2lnbkhlaWdodCA9IGRlc2lnbkhlaWdodDtcbiAgICAgICAgTGF5ZXJNZ3IuY2xpZW50V2lkdGggPSBMYXlhLkJyb3dzZXIuY2xpZW50V2lkdGg7XG4gICAgICAgIExheWVyTWdyLmNsaWVudEhlaWdodCA9IExheWEuQnJvd3Nlci5jbGllbnRIZWlnaHQ7XG4gICAgICAgIExheWVyTWdyLmFkYXB0U2NhbGVYID0gYWRhcHRTY2FsZVg7XG4gICAgICAgIExheWVyTWdyLmFkYXB0U2NhbGVZID0gYWRhcHRTY2FsZVk7XG4gICAgICAgIExheWVyTWdyLmFkYXB0U2NhbGUgPSBhZGFwdFNjYWxlO1xuICAgICAgICBMYXllck1nci5waXhlbFJhdGlvID0gcGl4ZWxSYXRpbztcbiAgICAgICAgTGF5ZXJNZ3IudG9wID0gdG9wO1xuICAgICAgICBMYXllck1nci5sZWZ0ID0gbGVmdDtcbiAgICAgICAgTGF5ZXJNZ3IuY2xpZW50VG9wID0gKHRvcCAvIHBpeGVsUmF0aW8pO1xuICAgICAgICBMYXllck1nci5jbGllbnRMZWZ0ID0gKGxlZnQgLyBwaXhlbFJhdGlvKTtcblxuICAgICAgICAvLyBjb25zb2xlLmxvZyhTdHJpbmdUb29scy53cmFwVmFsdWVPYmplY3RzKFtcImRlc2lnbldpZHRoXCIsIFwiZGVzaWduSGVpZ2h0XCJdLFtkZXNpZ25XaWR0aCwgZGVzaWduSGVpZ2h0XSkpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhTdHJpbmdUb29scy53cmFwVmFsdWVPYmplY3RzKFtcImNsaWVudFdpZHRoXCIsIFwiY2xpZW50SGVpZ2h0XCJdLFtjbGllbnRXaWR0aCwgY2xpZW50SGVpZ2h0XSkpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhTdHJpbmdUb29scy53cmFwVmFsdWVPYmplY3RzKFtcImFkYXB0U2NhbGVYXCIsIFwiYWRhcHRTY2FsZVlcIiwgXCJwaXhlbFJhdGlvXCJdLFthZGFwdFNjYWxlWCwgYWRhcHRTY2FsZVksIHBpeGVsUmF0aW9dKSk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFN0cmluZ1Rvb2xzLndyYXBWYWx1ZU9iamVjdHMoW1widG9wXCIsIFwibGVmdFwiXSwgW3RvcCwgbGVmdF0pKTtcblxuICAgICAgICBsZXQgaWR4OiBudW1iZXIgPSAwO1xuICAgICAgICB0aGlzLnJlbmRlckxheWVyID0gdGhpcy5jcmVhdGVMYXllcihpZHgrKywgXCJyZW5kZXJMYXllclwiLCBjb250YWluZXIpO1xuICAgICAgICB0aGlzLm5hdkxheWVyID0gdGhpcy5jcmVhdGVMYXllcihpZHgrKywgXCJuYXZMYXllclwiLCBjb250YWluZXIpO1xuICAgICAgICB0aGlzLmZseUxheWVyID0gdGhpcy5jcmVhdGVMYXllcihpZHgrKywgXCJmbHlMYXllclwiLCBjb250YWluZXIpO1xuICAgICAgICB0aGlzLmZyYW1lTGF5ZXIgPSB0aGlzLmNyZWF0ZU1hc2tMYXllcihpZHgrKywgXCJmcmFtZUxheWVyXCIsIGNvbnRhaW5lcik7XG4gICAgICAgIHRoaXMuc3ViRnJhbWVMYXllciA9IHRoaXMuY3JlYXRlTWFza0xheWVyKGlkeCsrLCBcInN1YkZyYW1lTGF5ZXJcIiwgY29udGFpbmVyKTtcbiAgICAgICAgdGhpcy5hbGVydExheWVyID0gdGhpcy5jcmVhdGVNYXNrTGF5ZXIoaWR4KyssIFwiYWxlcnRMYXllclwiLCBjb250YWluZXIpO1xuICAgICAgICB0aGlzLnNjcmVlbkVmZmVjdExheWVyID0gdGhpcy5jcmVhdGVMYXllcihpZHgrKywgXCJzY3JlZW5FZmZlY3RMYXllclwiLCBjb250YWluZXIpO1xuICAgICAgICB0aGlzLnJvbGxNZXNzYWdlTGF5ZXIgPSB0aGlzLmNyZWF0ZUxheWVyKGlkeCsrLCBcInJvbGxNZXNzYWdlTGF5ZXJcIiwgY29udGFpbmVyKTtcbiAgICAgICAgdGhpcy5ndWlkZUxheWVyID0gdGhpcy5jcmVhdGVMYXllcihpZHgrKywgXCJndWlkZUxheWVyXCIsIGNvbnRhaW5lcik7XG4gICAgICAgIHRoaXMuc21hbGxMb2FkaW5nTGF5ZXIgPSB0aGlzLmNyZWF0ZU1hc2tMYXllcihpZHgrKywgXCJzbWFsbExvYWRpbmdMYXllclwiLCBjb250YWluZXIpO1xuICAgICAgICB0aGlzLm5vdGVMYXllciA9IHRoaXMuY3JlYXRlTGF5ZXIoaWR4KyssIFwibm90ZUxheWVyXCIsIGNvbnRhaW5lcik7XG4gICAgICAgIHRoaXMuZGVidWdMYXllciA9IHRoaXMuY3JlYXRlTGF5ZXIoaWR4KyssIFwiZGVidWdMYXllclwiLCBjb250YWluZXIpO1xuXG4gICAgICAgIGZvciAobGV0IGxheWVyIG9mIHRoaXMuX2xheWVycykge1xuICAgICAgICAgICAgbGF5ZXIucG9zKGxlZnQsIDApO1xuICAgICAgICAgICAgbGF5ZXIuc2NhbGUoYWRhcHRTY2FsZVgsIGFkYXB0U2NhbGVZKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwcml2YXRlIGNyZWF0ZUxheWVyKGluZGV4OiBudW1iZXIsIG5hbWU6IHN0cmluZywgY29udGFpbmVyOiBMYXlhLlNwcml0ZSk6IExheWVyIHtcbiAgICAgICAgdGhpcy5fbGF5ZXJzLnB1c2goY29udGFpbmVyLmFkZENoaWxkKG5ldyBMYXllcihpbmRleCwgbmFtZSkpIGFzIExheWVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xheWVyc1t0aGlzLl9sYXllcnMubGVuZ3RoIC0gMV07XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjcmVhdGVNYXNrTGF5ZXIoaW5kZXg6IG51bWJlciwgbmFtZTogc3RyaW5nLCBjb250YWluZXI6IExheWEuU3ByaXRlKTogTWFza0xheWVyIHtcbiAgICAgICAgdGhpcy5fbGF5ZXJzLnB1c2goY29udGFpbmVyLmFkZENoaWxkKFxuICAgICAgICAgICAgbmV3IE1hc2tMYXllcihpbmRleCwgbmFtZSlcbiAgICAgICAgKSBhcyBNYXNrTGF5ZXIpO1xuICAgICAgICByZXR1cm4gdGhpcy5fbGF5ZXJzW3RoaXMuX2xheWVycy5sZW5ndGggLSAxXSBhcyBNYXNrTGF5ZXI7XG4gICAgfVxuXG5cbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnMoKTogTGF5ZXJNZ3Ige1xuICAgICAgICBpZiAoIXRoaXMuX2luc3RhbmNlKSB7XG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZSA9IG5ldyBMYXllck1ncigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZTtcbiAgICB9XG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBMYXllck1ncjtcbn0iLCJpbXBvcnQgSUxheWVyIGZyb20gXCIuL0lMYXllclwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMYXllciBleHRlbmRzIExheWEuU3ByaXRlIGltcGxlbWVudHMgSUxheWVyIHtcblxuICAgIHB1YmxpYyBnZXQgbGF5ZXJJZCgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5fbGF5ZXJJZDtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2xheWVySWQ6IG51bWJlcjtcbiAgICBjb25zdHJ1Y3RvcihsYXllcklkOiBudW1iZXIsICRuYW1lOiBzdHJpbmcgPSBudWxsKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuX2xheWVySWQgPSBsYXllcklkO1xuICAgICAgICB0aGlzLm1vdXNlRW5hYmxlZCA9IHRydWU7XG4gICAgICAgIHRoaXMubW91c2VUaHJvdWdoID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5uYW1lID0gJG5hbWU7XG4gICAgfVxuXG4gICAgcHVibGljIGdldExheWVySWQoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxufSIsImltcG9ydCBMYXllciBmcm9tIFwiLi9MYXllclwiO1xuaW1wb3J0IExheWVyRXZlbnQgZnJvbSBcIi4uL2V2ZW50L0xheWVyRXZlbnRcIjtcbmltcG9ydCBMYXllck1nciBmcm9tIFwiLi4vTGF5ZXJNZ3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFza0xheWVyIGV4dGVuZHMgTGF5ZXIge1xuXG4gICAgcHVibGljIHNldCBtYXNrRW5hYmxlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLl9tYXNrRW5hYmxlZCA9IHZhbHVlO1xuICAgICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm51bUNoaWxkcmVuID4gMCkge1xuICAgICAgICAgICAgICAgIHN1cGVyLmFkZENoaWxkQXQodGhpcy5fbWFzaywgMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9tYXNrLnJlbW92ZVNlbGYoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgbWFza0FscGhhKHZhbHVlOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5fbWFzay5hbHBoYSA9IHZhbHVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgdXNlQW5pbWF0aW9uKHZhbHVlOiBib29sZWFuKSB7XG4gICAgICAgIHRoaXMuX3VzZUFuaW1hdGlvbiA9IHZhbHVlO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgYW5pbWF0aW9uQ29tcGxldGUoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hbmltYXRpb25Db21wbGV0ZVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgREVGQVVMVF9NQVNLX0FMUEhBOiBudW1iZXIgPSAwLjc7XG5cbiAgICBwcm90ZWN0ZWQgX21hc2s6IExheWEuU3ByaXRlO1xuICAgIHByb3RlY3RlZCBfbWFza0VuYWJsZWQ6IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIF91c2VBbmltYXRpb246IGJvb2xlYW47XG4gICAgcHJvdGVjdGVkIF9hbmltYXRpb25Db21wbGV0ZTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgX2hhbmRsZXJzOiBMYXlhLkhhbmRsZXJbXTtcblxuICAgIHByb3RlY3RlZCBfdXNpbmdDdXN0b21NYXNrOiBib29sZWFuO1xuICAgIHByb3RlY3RlZCBfY3VzdG9tTWFzazogTGF5YS5TcHJpdGU7XG4gICAgcHJvdGVjdGVkIF9jdXN0b21NYXNrUGFyZW50OiBMYXlhLlNwcml0ZTtcbiAgICBwcm90ZWN0ZWQgX2N1c3RvbU1hc2tJbmRleDogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3IobGF5ZXJJZDogbnVtYmVyLCAkbmFtZTogc3RyaW5nID0gbnVsbCkge1xuICAgICAgICBzdXBlcihsYXllcklkLCAkbmFtZSk7XG4gICAgICAgIHRoaXMuaW5pdE1hc2soKTtcbiAgICAgICAgdGhpcy5faGFuZGxlcnMgPSBbXTtcbiAgICAgICAgdGhpcy5fbWFza0VuYWJsZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLl91c2VBbmltYXRpb24gPSB0cnVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOa3u+WKoOeahOWbnuiwg+WPquS8muinpuWPke+8jOS4gOiIrOeUqOadpeWFs+mXreW3suaJk+W8gOeahOinhuWbvueql+WPo1xuICAgICAqIEBwYXJhbSBjYWxsZXJcbiAgICAgKiBAcGFyYW0gbGlzdGVuZXJcbiAgICAgKiBAcGFyYW0gYXJnc1xuICAgICAqIEBwYXJhbSBtYXNrQWxwaGFcbiAgICAgKi9cbiAgICBwdWJsaWMgYWRkQ2hpbGRXaXRoTWFza0NhbGwoXG4gICAgICAgIGNhbGxlcjogYW55LFxuICAgICAgICBsaXN0ZW5lcjogKC4uLmFyZ3MpID0+IHZvaWQsXG4gICAgICAgIGFyZ3M6IGFueVtdID0gbnVsbCxcbiAgICAgICAgbWFza0FscGhhOiBudW1iZXIgPSBNYXNrTGF5ZXIuREVGQVVMVF9NQVNLX0FMUEhBXG4gICAgKTogdm9pZCB7XG4gICAgICAgIHRoaXMubWFza0VuYWJsZWQgPSB0cnVlO1xuICAgICAgICBpZiAobWFza0FscGhhICE9PSBNYXNrTGF5ZXIuREVGQVVMVF9NQVNLX0FMUEhBKSB7XG4gICAgICAgICAgICB0aGlzLl9tYXNrLmFscGhhID0gbWFza0FscGhhO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYWRkQ2hpbGQoY2FsbGVyKTtcbiAgICAgICAgdGhpcy5faGFuZGxlcnMucHVzaChMYXlhLkhhbmRsZXIuY3JlYXRlKGNhbGxlciwgbGlzdGVuZXIsIGFyZ3MpKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkQ2hpbGRXaXRoQ3VzdG9tTWFzayhcbiAgICAgICAgY3VzdG9tTWFzazogTGF5YS5TcHJpdGUsXG4gICAgICAgIGNhbGxlcjogTGF5YS5Ob2RlLFxuICAgICAgICBsaXN0ZW5lcjogKC4uLmFyZ3MpID0+IHZvaWQsXG4gICAgICAgIGFyZ3M6IGFueVtdID0gbnVsbFxuICAgICk6IHZvaWQge1xuICAgICAgICBpZiAoIWN1c3RvbU1hc2spIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLm1hc2tFbmFibGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fdXNpbmdDdXN0b21NYXNrID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fY3VzdG9tTWFzayA9IGN1c3RvbU1hc2s7XG4gICAgICAgIGlmICh0aGlzLl9jdXN0b21NYXNrLnBhcmVudCkge1xuICAgICAgICAgICAgdGhpcy5fY3VzdG9tTWFza1BhcmVudCA9IHRoaXMuX2N1c3RvbU1hc2sucGFyZW50IGFzIExheWEuU3ByaXRlO1xuICAgICAgICAgICAgdGhpcy5fY3VzdG9tTWFza0luZGV4ID0gdGhpcy5fY3VzdG9tTWFzay5wYXJlbnQuZ2V0Q2hpbGRJbmRleCh0aGlzLl9jdXN0b21NYXNrKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9tYXNrLmFscGhhID0gMDtcbiAgICAgICAgdGhpcy5hZGRDaGlsZChjYWxsZXIpO1xuICAgICAgICB0aGlzLl9oYW5kbGVycy5wdXNoKExheWEuSGFuZGxlci5jcmVhdGUoY2FsbGVyLCBsaXN0ZW5lciwgYXJncykpO1xuICAgIH1cblxuICAgIHB1YmxpYyBhZGRDaGlsZChub2RlOiBMYXlhLk5vZGUpOiBMYXlhLk5vZGUge1xuICAgICAgICB0aGlzLnN1cGVyQWRkQ2hpbGQobm9kZSk7XG4gICAgICAgIGlmICh0aGlzLl91c2luZ0N1c3RvbU1hc2sgJiYgdGhpcy5fY3VzdG9tTWFzaykge1xuICAgICAgICAgICAgc3VwZXIuYWRkQ2hpbGRBdCh0aGlzLl9jdXN0b21NYXNrLCAwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fbWFza0VuYWJsZWQpIHtcbiAgICAgICAgICAgIHN1cGVyLmFkZENoaWxkQXQodGhpcy5fbWFzaywgMCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5ldmVudChMYXllckV2ZW50LkNISUxEX0FEREVELCB0aGlzLm51bUNoaWxkcmVuKTtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuXG4gICAgcHVibGljIHJlbW92ZUNoaWxkKG5vZGU6IExheWEuTm9kZSk6IExheWEuTm9kZSB7XG4gICAgICAgIHN1cGVyLnJlbW92ZUNoaWxkKG5vZGUpO1xuXG4gICAgICAgIGxldCBzcDogTGF5YS5TcHJpdGUgPSBub2RlIGFzIExheWEuU3ByaXRlO1xuICAgICAgICBpZiAoc3ApIHtcbiAgICAgICAgICAgIGlmIChzcC5sYXllcl90d2Vlbikge1xuICAgICAgICAgICAgICAgIHNwLmxheWVyX3R3ZWVuLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICAgICAgc3Auc2NhbGUoc3AubGF5ZXJfb3JpZ2luX3NjYWxlLngsIHNwLmxheWVyX29yaWdpbl9zY2FsZS55KTtcbiAgICAgICAgICAgICAgICBkZWxldGUgc3AubGF5ZXJfdHdlZW47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5udW1DaGlsZHJlbiA9PT0gMiAmJiB0aGlzLl91c2luZ0N1c3RvbU1hc2spIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jdXN0b21NYXNrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2N1c3RvbU1hc2tQYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VzdG9tTWFza1BhcmVudC5hZGRDaGlsZEF0KHRoaXMuX2N1c3RvbU1hc2ssIHRoaXMuX2N1c3RvbU1hc2tJbmRleCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuX3VzaW5nQ3VzdG9tTWFzayA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuX2N1c3RvbU1hc2sgPSBudWxsO1xuICAgICAgICAgICAgICAgIHRoaXMuX2N1c3RvbU1hc2tQYXJlbnQgPSBudWxsO1xuICAgICAgICAgICAgICAgIHRoaXMuX2N1c3RvbU1hc2tJbmRleCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMubnVtQ2hpbGRyZW4gPT09IDEgJiYgdGhpcy5nZXRDaGlsZEF0KDApID09PSB0aGlzLl9tYXNrKSB7XG4gICAgICAgICAgICBzdXBlci5yZW1vdmVDaGlsZCh0aGlzLl9tYXNrKTtcbiAgICAgICAgICAgIHRoaXMuX2FuaW1hdGlvbkNvbXBsZXRlID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLl9tYXNrLmFscGhhID0gTWFza0xheWVyLkRFRkFVTFRfTUFTS19BTFBIQTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZXZlbnQoTGF5ZXJFdmVudC5DSElMRF9SRU1PVkVELCB0aGlzLm51bUNoaWxkcmVuKTtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGluaXRNYXNrKCk6IHZvaWQge1xuICAgICAgICB0aGlzLl9tYXNrID0gbmV3IExheWEuU3ByaXRlKCk7XG4gICAgICAgIHRoaXMuX21hc2suZ3JhcGhpY3MuY2xlYXIoKTtcbiAgICAgICAgdGhpcy5fbWFzay5ncmFwaGljcy5kcmF3UmVjdCgwLCAwLCBMYXllck1nci5zdGFnZURlc2lnbldpZHRoLCBMYXllck1nci5zdGFnZURlc2lnbkhlaWdodCwgXCIjMDAwMDAwXCIpO1xuICAgICAgICB0aGlzLl9tYXNrLmFscGhhID0gTWFza0xheWVyLkRFRkFVTFRfTUFTS19BTFBIQTtcbiAgICAgICAgdGhpcy5fbWFzay5zaXplKExheWVyTWdyLnN0YWdlRGVzaWduV2lkdGgsIExheWVyTWdyLnN0YWdlRGVzaWduSGVpZ2h0KTtcbiAgICAgICAgdGhpcy5fbWFzay5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLmFwcGx5Q2xpY2spO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBzdXBlckFkZENoaWxkKG5vZGU6IGFueSwgaW5kZXg/OiBudW1iZXIpOiBMYXlhLk5vZGUge1xuICAgICAgICBpZiAodGhpcy5fdXNlQW5pbWF0aW9uICYmICF0aGlzLl9hbmltYXRpb25Db21wbGV0ZSkge1xuICAgICAgICAgICAgbGV0IHNwOiBMYXlhLlNwcml0ZSA9IG5vZGUgYXMgTGF5YS5TcHJpdGU7XG4gICAgICAgICAgICBpZiAoc3AgJiYgIXNwLmxheWVyX3R3ZWVuKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFzcC5sYXllcl9vcmlnaW5fc2NhbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgc3AubGF5ZXJfb3JpZ2luX3NjYWxlID0gbmV3IExheWEuUG9pbnQoc3Auc2NhbGVYLCBzcC5zY2FsZVkpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGxldCBjb21wOiBMYXlhLkNvbXBvbmVudCA9IG5vZGUgYXMgTGF5YS5Db21wb25lbnQ7XG4gICAgICAgICAgICAgICAgbGV0IHNpemU6IExheWEuUG9pbnQgPSBuZXcgTGF5YS5Qb2ludCgpO1xuICAgICAgICAgICAgICAgIGlmIChjb21wKSB7XG4gICAgICAgICAgICAgICAgICAgIHNpemUuc2V0VG8oc3AuZGlzcGxheVdpZHRoLCBzcC5kaXNwbGF5SGVpZ2h0KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsZXQgcmVjdDogTGF5YS5SZWN0YW5nbGUgPSBzcC5nZXRCb3VuZHMoKTtcbiAgICAgICAgICAgICAgICAgICAgc2l6ZS5zZXRUbyhyZWN0LndpZHRoLCByZWN0LmhlaWdodCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHNwLmxheWVyX3R3ZWVuID0gTGF5YS5Ud2Vlbi5mcm9tKG5vZGUsIHsgeDogc3AueCArIChzaXplLnggPj4gMSksIHk6IHNwLnkgKyAoc2l6ZS55ID4+IDEpLCBzY2FsZVg6IDAsIHNjYWxlWTogMCB9LCAzMDAsIExheWEuRWFzZS5iYWNrSW5PdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9hbmltYXRpb25Db21wbGV0ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQoTGF5ZXJFdmVudC5MQVlFUl9BTklNQVRJT05fQ09NUExFVEUsIHRoaXMuX2FuaW1hdGlvbkNvbXBsZXRlKTtcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbWFzay5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5hcHBseUNsaWNrKTtcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKDEwMDAgKiAyLCB0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9tYXNrLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuYXBwbHlDbGljayk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoaW5kZXgpIHtcbiAgICAgICAgICAgIHN1cGVyLmFkZENoaWxkQXQobm9kZSwgaW5kZXgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc3VwZXIuYWRkQ2hpbGQobm9kZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGFwcGx5Q2xpY2soKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9oYW5kbGVycy5sZW5ndGgpIHtcbiAgICAgICAgICAgICh0aGlzLl9oYW5kbGVycy5wb3AoKSBhcyBMYXlhLkhhbmRsZXIpLnJ1bigpO1xuICAgICAgICB9XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIExheWVyRXZlbnQge1xuICAgIFxuICAgIHB1YmxpYyBzdGF0aWMgQ0hJTERfQURERUQ6IHN0cmluZyA9IFwiQ0hJTERfQURERURcIjtcbiAgICBwdWJsaWMgc3RhdGljIENISUxEX1JFTU9WRUQ6IHN0cmluZyA9IFwiQ0hJTERfUkVNT1ZFRFwiO1xuICAgIHB1YmxpYyBzdGF0aWMgTEFZRVJfQU5JTUFUSU9OX0NPTVBMRVRFOiBzdHJpbmcgPSBcIkxBWUVSX0FOSU1BVElPTl9DT01QTEVURVwiO1xufSIsImltcG9ydCBMYXllck1nciBmcm9tIFwiLi4vbGF5ZXIvTGF5ZXJNZ3JcIjtcbmltcG9ydCBBbGlnblV0aWxzIGZyb20gXCIuLi91dGlscy9BbGlnblV0aWxzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1zZ01nciBleHRlbmRzIExheWEuU2NyaXB0IHtcblxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XG5cbiAgICAvKiog5pi+56S65o+Q56S65raI5oGvICovXG4gICAgcHVibGljIHNob3dNc2coY29udGVudDogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIHZhciB0aXBCYXJTcCA9IG5ldyBMYXlhLkltYWdlKFwiaW1hZ2VzL2NvbXBvbmVudC90aXBfYmcucG5nXCIpO1xuICAgICAgICBBbGlnblV0aWxzLnNldFRvU2NyZWVuR29sZGVuUG9zKHRpcEJhclNwKTtcbiAgICAgICAgTGF5ZXJNZ3IuSW5zLnJvbGxNZXNzYWdlTGF5ZXIuYWRkQ2hpbGQodGlwQmFyU3ApO1xuICAgICAgICB0aXBCYXJTcC56T3JkZXIgPSAxMDAxO1xuICAgICAgICB0aXBCYXJTcC53aWR0aCA9IDUwMDtcbiAgICAgICAgdGlwQmFyU3AuaGVpZ2h0ID0gODA7XG4gICAgICAgIHRpcEJhclNwLnBpdm90KHRpcEJhclNwLndpZHRoIC8gMiwgdGlwQmFyU3AuaGVpZ2h0IC8gMik7XG4gICAgICAgIHRpcEJhclNwLnNpemVHcmlkID0gXCIxMCwxMCwxMCwxMFwiO1xuXG4gICAgICAgIHZhciBjb2luTGFiZWwgPSBuZXcgTGF5YS5MYWJlbCgpO1xuICAgICAgICBjb2luTGFiZWwudGV4dCA9IGNvbnRlbnQ7XG4gICAgICAgIGNvaW5MYWJlbC5mb250U2l6ZSA9IDQwO1xuICAgICAgICBjb2luTGFiZWwuY29sb3IgPSBcIiNmZmZmZmZcIjtcblxuICAgICAgICBjb2luTGFiZWwud2lkdGggPSB0aXBCYXJTcC53aWR0aCAqIDAuOTg7XG4gICAgICAgIC8v6K6+572u5paH5pys5rC05bmz5bGF5LitXG4gICAgICAgIGNvaW5MYWJlbC5hbGlnbiA9IFwiY2VudGVyXCI7XG4gICAgICAgIC8v6K6+572u5paH5pys5Z6C55u05bGF5LitXG4gICAgICAgIGNvaW5MYWJlbC52YWxpZ24gPSBcIm1pZGRsZVwiO1xuICAgICAgICAvL+iuvue9ruiHquWKqOaNouihjFxuICAgICAgICBjb2luTGFiZWwud29yZFdyYXAgPSB0cnVlO1xuICAgICAgICAvL+mHjee9ruiDjOaZr+mrmOW6plxuICAgICAgICB0aXBCYXJTcC5oZWlnaHQgPSBjb2luTGFiZWwuaGVpZ2h0ICsgMjA7XG5cbiAgICAgICAgdGlwQmFyU3AuYWRkQ2hpbGQoY29pbkxhYmVsKTtcbiAgICAgICAgY29pbkxhYmVsLnBvcyh0aXBCYXJTcC53aWR0aCAvIDIsIHRpcEJhclNwLmhlaWdodCAvIDIpO1xuICAgICAgICBjb2luTGFiZWwucGl2b3QoY29pbkxhYmVsLndpZHRoIC8gMiwgY29pbkxhYmVsLmhlaWdodCAvIDIpO1xuXG4gICAgICAgIExheWEuVHdlZW4udG8odGlwQmFyU3AsIHsgeDogdGlwQmFyU3AueCwgeTogKHRpcEJhclNwLnkgLSAxMDApLCBhbHBoYTogMCB9LCAzMDAwLFxuICAgICAgICAgICAgTGF5YS5FYXNlLmN1YmljSW5PdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKHRpcEJhclNwOiBMYXlhLk5vZGUpID0+IHtcbiAgICAgICAgICAgICAgICB0aXBCYXJTcC5yZW1vdmVTZWxmKCk7XG4gICAgICAgICAgICB9LCBbY29pbkxhYmVsXSkpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogTXNnTWdyO1xuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IElucygpOiBNc2dNZ3Ige1xuICAgICAgICBpZiAoTXNnTWdyLl9pbnN0YW5jZSA9PSBudWxsKSB7XG4gICAgICAgICAgICBNc2dNZ3IuX2luc3RhbmNlID0gbmV3IE1zZ01ncigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBNc2dNZ3IuX2luc3RhbmNlO1xuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb29sTWdyIHtcblxuICAgIHByaXZhdGUgX2luc3RhbmNlczogYW55O1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuX2luc3RhbmNlcyA9IHt9O1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQoY2xhc3NEZWZpbml0aW9uOiBhbnksIG5hbWU/OiBzdHJpbmcpOiBhbnkge1xuICAgICAgICBpZiAoIW5hbWUpIHtcbiAgICAgICAgICAgIG5hbWUgPSBjbGFzc0RlZmluaXRpb24uX19jbGFzc05hbWU7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGluc3RhbmNlczogYW55W10gPSB0aGlzLl9pbnN0YW5jZXNbbmFtZV07XG4gICAgICAgIGlmICghaW5zdGFuY2VzKSB7XG4gICAgICAgICAgICBpbnN0YW5jZXMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMuX2luc3RhbmNlc1tuYW1lXSA9IGluc3RhbmNlcztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbnN0YW5jZXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuIGluc3RhbmNlcy5wb3AoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuZXcgY2xhc3NEZWZpbml0aW9uKCk7XG4gICAgfVxuXG4gICAgcHVibGljIHJldHVybihpbnN0YW5jZTogYW55LCBuYW1lPzogc3RyaW5nKTogYW55IHtcbiAgICAgICAgaWYgKCFuYW1lKSB7XG4gICAgICAgICAgICBuYW1lID0gaW5zdGFuY2UuX19wcm90b19fLl9fY2xhc3NOYW1lO1xuICAgICAgICB9XG4gICAgICAgIGxldCBpbnN0YW5jZXM6IGFueVtdID0gdGhpcy5faW5zdGFuY2VzW25hbWVdO1xuICAgICAgICBpZiAoIWluc3RhbmNlcykge1xuICAgICAgICAgICAgaW5zdGFuY2VzID0gW107XG4gICAgICAgICAgICB0aGlzLl9pbnN0YW5jZXNbbmFtZV0gPSBpbnN0YW5jZXM7XG4gICAgICAgIH1cbiAgICAgICAgaW5zdGFuY2VzLnB1c2goaW5zdGFuY2UpO1xuICAgICAgICByZXR1cm4gaW5zdGFuY2U7XG4gICAgfVxuXG5cbiAgICBwcml2YXRlIHN0YXRpYyBfaW5zdGFuY2U6IFBvb2xNZ3I7XG4gICAgcHVibGljIHN0YXRpYyBnZXQgSW5zKCk6IFBvb2xNZ3Ige1xuICAgICAgICBpZiAoUG9vbE1nci5faW5zdGFuY2UgPT0gbnVsbCkge1xuICAgICAgICAgICAgUG9vbE1nci5faW5zdGFuY2UgPSBuZXcgUG9vbE1ncigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQb29sTWdyLl9pbnN0YW5jZTtcbiAgICB9XG59IiwiaW1wb3J0IFNoYXJlTWdyIGZyb20gXCIuL1NoYXJlTWdyXCI7XG5pbXBvcnQgSGFsbENvbnRyb2wgZnJvbSBcIi4uLy4uL21vZHVsZS9oYWxsL0hhbGxDb250cm9sXCI7XG5pbXBvcnQgRXZlbnRzTWdyIGZyb20gXCIuLi9ldmVudC9FdmVudHNNZ3JcIjtcbmltcG9ydCBFdmVudFR5cGUgZnJvbSBcIi4uL2V2ZW50L0V2ZW50VHlwZVwiO1xuaW1wb3J0IFN5c3RlbUNvbmZpZyBmcm9tIFwiLi4vLi4vbW9kdWxlL2hhbGwvY29uZmlnL1N5c3RlbUNvbmZpZ1wiO1xuXG4vKipcbiAqIOe6oueCueeuoeeQhuexu1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWRQb2ludE1nciB7XG5cbiAgICBwdWJsaWMgdXBkYXRlUmVkUG9pbnQoKTogdm9pZCB7XG4gICAgICAgIEV2ZW50c01nci5JbnMuZGlzcGF0Y2goRXZlbnRUeXBlLlVQREFURV9TWVNURU1fUkVEX1BPSU5ULCBTeXN0ZW1Db25maWcuU0lHTiwgdGhpcy5pc1Nob3dTaWduUmVkUG9pbnQpO1xuICAgICAgICBFdmVudHNNZ3IuSW5zLmRpc3BhdGNoKEV2ZW50VHlwZS5VUERBVEVfU1lTVEVNX1JFRF9QT0lOVCwgU3lzdGVtQ29uZmlnLlRBU0ssIHRoaXMuaXNTaG93VGFza1JlZFBvaW50KTtcbiAgICAgICAgRXZlbnRzTWdyLklucy5kaXNwYXRjaChFdmVudFR5cGUuVVBEQVRFX1NZU1RFTV9SRURfUE9JTlQsIFN5c3RlbUNvbmZpZy5MVUNLX1BSSVpFLCB0aGlzLmlzU2hvd0x1Y2tQcml6ZVJlZFBvaW50KTtcbiAgICAgICAgRXZlbnRzTWdyLklucy5kaXNwYXRjaChFdmVudFR5cGUuVVBEQVRFX1NZU1RFTV9SRURfUE9JTlQsIFN5c3RlbUNvbmZpZy5GT0xMT1csIHRoaXMuaXNTaG93Rm9sbG93UmVkUG9pbnQpO1xuICAgIH1cblxuICAgIC8qKiDmmK/lkKbmmL7npLrllYblupfnuqLngrkgKi9cbiAgICBwdWJsaWMgZ2V0IGlzU2hvd1Nob3BSZWRQb2ludCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICgoU2hhcmVNZ3IuSW5zLmdldEFkVGltZXMoMTEpICsgU2hhcmVNZ3IuSW5zLmdldFNoYXJlVGltZXMoMTEpKSA+IDApICYmIChIYWxsQ29udHJvbC5JbnMuTW9kZWwuaGVyb0xldmVsID49IDYgJiYgSGFsbENvbnRyb2wuSW5zLk1vZGVsLmhlcm9MZXZlbCA8IEhhbGxDb250cm9sLklucy5Nb2RlbC5oZXJvTWF4TGV2ZWwpO1xuICAgIH1cbiAgICAvKiog56e76Zmk5ZWG5bqX57qi54K5ICovXG4gICAgcHVibGljIHJlbW92ZUNhclNob3BSZWRQb2luKCk6IHZvaWQge1xuICAgICAgICBFdmVudHNNZ3IuSW5zLmRpc3BhdGNoKEV2ZW50VHlwZS5SRU1PVkVfU0hPUF9SRU5fUE9JTlQsIHRydWUpO1xuICAgIH1cblxuICAgIC8qKiDmmK/lkKbmmL7npLrku7vliqHnuqLngrkgKi9cbiAgICBwdWJsaWMgZ2V0IGlzU2hvd1Rhc2tSZWRQb2ludCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIEhhbGxDb250cm9sLklucy5Nb2RlbC5zaG93VGFza1JlZFBvaW50O1xuICAgIH1cbiAgICAvKiog56e76Zmk5Lu75Yqh57qi54K5ICovXG4gICAgcHVibGljIHJlbW92ZVRhc2tSZWRQb2ludCgpOiB2b2lkIHtcbiAgICAgICAgSGFsbENvbnRyb2wuSW5zLk1vZGVsLnNob3dUYXNrUmVkUG9pbnQgPSBmYWxzZTtcbiAgICAgICAgRXZlbnRzTWdyLklucy5kaXNwYXRjaChFdmVudFR5cGUuUkVNT1ZFX1RBU0tfUkVOX1BPSU5ULCB0cnVlKTtcbiAgICB9XG5cbiAgICAvKiog5piv5ZCm5pi+56S66L2s55uY57qi54K5ICovXG4gICAgcHVibGljIGdldCBpc1Nob3dMdWNrUHJpemVSZWRQb2ludCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIEhhbGxDb250cm9sLklucy5Nb2RlbC5zaG93THVja1ByaXplUmVkUG9pbnQ7XG4gICAgfVxuICAgIC8qKiDnp7vpmaTovaznm5jnuqLngrkgKi9cbiAgICBwdWJsaWMgcmVtb3ZlTHVja1ByaXplUmVkUG9pbnQoKTogdm9pZCB7XG4gICAgICAgIEhhbGxDb250cm9sLklucy5Nb2RlbC5zaG93THVja1ByaXplUmVkUG9pbnQgPSBmYWxzZTtcbiAgICAgICAgRXZlbnRzTWdyLklucy5kaXNwYXRjaChFdmVudFR5cGUuUkVNT1ZFX0xVQ0tfUFJJWkVfUkVOX1BPSU5ULCB0cnVlKTtcbiAgICB9XG5cbiAgICAvKiog5piv5ZCm5pi+56S65q+P5pel562+5Yiw57qi54K5ICovXG4gICAgcHVibGljIGdldCBpc1Nob3dTaWduUmVkUG9pbnQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiBIYWxsQ29udHJvbC5JbnMuTW9kZWwuc2hvd0RhaWx5U2lnblJlZFBvaW50O1xuICAgIH1cbiAgICAvKiog56e76Zmk562+5Yiw57qi54K5ICovXG4gICAgcHVibGljIHJlbW92ZVNpZ25SZWRQb2ludCgpOiB2b2lkIHtcbiAgICAgICAgSGFsbENvbnRyb2wuSW5zLk1vZGVsLnNob3dEYWlseVNpZ25SZWRQb2ludCA9IGZhbHNlO1xuICAgICAgICBFdmVudHNNZ3IuSW5zLmRpc3BhdGNoKEV2ZW50VHlwZS5SRU1PVkVfU0lHTl9SRU5fUE9JTlQsIHRydWUpO1xuICAgIH1cblxuICAgIC8qKiDmmK/lkKbmmL7npLrlhbPms6jnuqLngrkgKi9cbiAgICBwdWJsaWMgZ2V0IGlzU2hvd0ZvbGxvd1JlZFBvaW50KCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gSGFsbENvbnRyb2wuSW5zLk1vZGVsLnNob3dGb2xsb3dSZWRQb2ludDtcbiAgICB9XG4gICAgLyoqIOenu+mZpOWFs+azqOe6oueCuSAqL1xuICAgIHB1YmxpYyByZW1vdmVGb2xsb3dSZWRQb2ludCgpOiB2b2lkIHtcbiAgICAgICAgSGFsbENvbnRyb2wuSW5zLk1vZGVsLnNob3dGb2xsb3dSZWRQb2ludCA9IGZhbHNlO1xuICAgICAgICBFdmVudHNNZ3IuSW5zLmRpc3BhdGNoKEV2ZW50VHlwZS5SRU1PVkVfRk9MTE9XX1JFTl9QT0lOVCwgdHJ1ZSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBSZWRQb2ludE1ncjtcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnMoKTogUmVkUG9pbnRNZ3Ige1xuICAgICAgICBpZiAoUmVkUG9pbnRNZ3IuX2luc3RhbmNlID09IG51bGwpIHtcbiAgICAgICAgICAgIFJlZFBvaW50TWdyLl9pbnN0YW5jZSA9IG5ldyBSZWRQb2ludE1ncigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBSZWRQb2ludE1nci5faW5zdGFuY2U7XG4gICAgfVxufSIsImltcG9ydCBIdHRwTWdyIGZyb20gXCIuLi9uZXQvSHR0cE1nclwiO1xuaW1wb3J0IFNoYXJlTWdyIGZyb20gXCIuL1NoYXJlTWdyXCI7XG5pbXBvcnQgUGxheWVyTWdyIGZyb20gXCIuLi9wbGF5ZXIvUGxheWVyTWdyXCI7XG5pbXBvcnQgU291bmRNZ3IgZnJvbSBcIi4uL3NvdW5kL1NvdW5kTWdyXCI7XG5pbXBvcnQgU291bmRUeXBlIGZyb20gXCIuLi9zb3VuZC9Tb3VuZFR5cGVcIjtcbmltcG9ydCBNc2dNZ3IgZnJvbSBcIi4vTXNnTWdyXCI7XG5pbXBvcnQgU3RvcmFnZVV0aWwgZnJvbSBcIi4uL3V0aWxzL1N0b3JhZ2VVdGlsXCI7XG5pbXBvcnQgSGFsbENvbnRyb2wgZnJvbSBcIi4uLy4uL21vZHVsZS9oYWxsL0hhbGxDb250cm9sXCI7XG5pbXBvcnQgTGF5ZXJNZ3IgZnJvbSBcIi4uL2xheWVyL0xheWVyTWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNES01nciBleHRlbmRzIExheWEuU2NyaXB0IHtcblxuICAgIHB1YmxpYyBiYW5uZXJBZDogYW55OyAvL2Jhbm5lckFkXG4gICAgcHVibGljIGlzRm9yYmlkQmFubmVyQWQ6IGJvb2xlYW47IC8v5piv5ZCm56aB5q2i5pKt5pS+YmFubmVyQWRcbiAgICBwdWJsaWMgdmlkZW9BZDogYW55OyAvL3ZpZGVvQWRcbiAgICBwcml2YXRlIF9hdXRoZW50aWNMb2dpbkJ0bjogYW55ID0gbnVsbDsgLy/mjojmnYMv55m75b2V5LiT55SoXG4gICAgcHJpdmF0ZSBfaXNTaGFyaW5nID0gZmFsc2U7IC8v5piv5ZCm5q2j5Zyo5YiG5Lqr77yI56a757q/5aWW5Yqx77yJXG5cbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxuXG4gICAgLyoqIOWIneWni+WMluW+ruS/oSAqL1xuICAgIHB1YmxpYyBpbml0V1goKTogdm9pZCB7XG4gICAgICAgIGlmICghTGF5YS5Ccm93c2VyLm9uV2VpWGluKSByZXR1cm47XG4gICAgICAgIHRoaXMud3hPblNob3coKTtcbiAgICAgICAgdGhpcy53eE9uSGlkZSgpO1xuICAgICAgICB0aGlzLnd4TWVtb3J5V2FybmluZygpO1xuICAgICAgICB0aGlzLnd4U2V0S2VlcFNjcmVlbk9uKCk7XG4gICAgfVxuXG4gICAgLyoqIOi3s+i9rOWwj+eoi+W6jyAqL1xuICAgIHB1YmxpYyBvbk1pbmlQcm9ncmFtKF9taW5pQ29kZTogc3RyaW5nLCBfbWluaVBhZ2VQYXRoOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgaWYgKF9taW5pQ29kZSA9PSBudWxsIHx8IF9taW5pQ29kZS5sZW5ndGggPCAxKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy53eE5hdmlnYXRlVG9NaW5pUHJvZ3JhbSh7XG4gICAgICAgICAgICAvLyBhcHBJZDogJ3d4MTBlMTU1NGI2MDRkNzU2OCcsXG4gICAgICAgICAgICBhcHBJZDogX21pbmlDb2RlLFxuICAgICAgICAgICAgcGF0aDogX21pbmlQYWdlUGF0aCxcbiAgICAgICAgICAgIC8vIGV4dHJhRGF0YToge1xuICAgICAgICAgICAgLy8gICAgIGJveDogJzEnXG4gICAgICAgICAgICAvLyB9LFxuICAgICAgICAgICAgLy8gZW52VmVyc2lvbjogJ2RldmVsb3AnLFxuICAgICAgICAgICAgc3VjY2VzcyhyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm1pbmnot7PovazmiJDlip9cIiwgcmVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIC8v5bCP56iL5bqP6Lez6L2s5qyh5pWw57uf6K6hXG4gICAgICAgIEh0dHBNZ3IuSW5zLnJlcXVlc3RTaGFyZUFkRmluaXNoKFwibWluaXByb19cIiArIF9taW5pQ29kZSk7XG4gICAgfVxuXG4gICAgLyoqIOaYvuekumJhbm5lcuW5v+WRiiAqL1xuICAgIHB1YmxpYyBzaG93QmFubmVyQWQoX2ZvcmNlOiBib29sZWFuID0gZmFsc2UsIF9vZmZzZXRZOiBudW1iZXIgPSAwKTogdm9pZCB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOaYvuekumJhbm5lcuW5v+WRilwiKTtcbiAgICAgICAgaWYgKHRoaXMuaXNGb3JiaWRCYW5uZXJBZCAmJiBfZm9yY2UgPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNsb3NlQmFubmVyQWQoKTtcbiAgICAgICAgbGV0IGJhbm5lckFkID0gdGhpcy53eENyZWF0ZUJhbm5lckFkKHtcbiAgICAgICAgICAgIGFkVW5pdElkOiAnYWR1bml0LWFjOWQ3OWUxYjc1MzJjMjEnLFxuICAgICAgICAgICAgdG9wOiAoMTMzNCArIF9vZmZzZXRZKVxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGJhbm5lckFkKSB7XG4gICAgICAgICAgICBiYW5uZXJBZC5zaG93KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5iYW5uZXJBZCA9IGJhbm5lckFkO1xuICAgICAgICByZXR1cm4gYmFubmVyQWQ7XG4gICAgfVxuXG4gICAgcHVibGljIGNsb3NlQmFubmVyQWQoX2ZvcmJpZDogYm9vbGVhbiA9IGZhbHNlKTogdm9pZCB7XG4gICAgICAgIGlmIChfZm9yYmlkKSB7XG4gICAgICAgICAgICB0aGlzLmlzRm9yYmlkQmFubmVyQWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmJhbm5lckFkKSB7XG4gICAgICAgICAgICB0aGlzLmJhbm5lckFkLmhpZGUoKTtcbiAgICAgICAgICAgIHRoaXMuYmFubmVyQWQuZGVzdHJveSgpO1xuICAgICAgICAgICAgdGhpcy5iYW5uZXJBZCA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog5pi+56S65r+A5Yqx6KeG6aKRICovXG4gICAgcHVibGljIHNob3dWaWRlb0FkKF9jYWxsYmFjazogYW55LCBfbm9BZENhbGxiYWNrOiBhbnkgPSBudWxsLCBfc2hhcmVFbmFibGVkOiBib29sZWFuID0gdHJ1ZSk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy52aWRlb0FkKSByZXR1cm47XG4gICAgICAgIGxldCB2aWRlb0FkID0gdGhpcy53eENyZWF0ZVJld2FyZGVkVmlkZW9BZCh7IGFkVW5pdElkOiAnYWR1bml0LTE4NDdmMzY3NWU5ZjU2OTknIH0pO1xuICAgICAgICBpZiAodmlkZW9BZCkge1xuICAgICAgICAgICAgdGhpcy52aWRlb0FkID0gdmlkZW9BZDtcbiAgICAgICAgICAgIHZpZGVvQWQubG9hZCgpLnRoZW4oKCkgPT4gdmlkZW9BZC5zaG93KCkpO1xuICAgICAgICAgICAgbGV0IGNsb3NlQ2FsbGJhY2sgPSAocmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8g55So5oi354K55Ye75LqG44CQ5YWz6Zet5bm/5ZGK44CR5oyJ6ZKuXG4gICAgICAgICAgICAgICAgLy8g5bCP5LqOIDIuMS4wIOeahOWfuuehgOW6k+eJiOacrO+8jHJlcyDmmK/kuIDkuKogdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMuaXNFbmRlZCB8fCByZXMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAvLyDmraPluLjmkq3mlL7nu5PmnZ/vvIzlj6/ku6XkuIvlj5HmuLjmiI/lpZblirFcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIOaSreaUvuS4remAlOmAgOWHuu+8jOS4jeS4i+WPkea4uOaIj+WlluWKsVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLmlzRm9yYmlkQmFubmVyQWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBfY2FsbGJhY2sgJiYgX2NhbGxiYWNrKHJlcyk7XG5cbiAgICAgICAgICAgICAgICB2aWRlb0FkLm9mZkNsb3NlKGNsb3NlQ2FsbGJhY2spO1xuICAgICAgICAgICAgICAgIHRoaXMudmlkZW9BZCA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2aWRlb0FkLm9uQ2xvc2UoY2xvc2VDYWxsYmFjayk7XG4gICAgICAgICAgICBsZXQgZXJyQ2FsbGJhY2sgPSAoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgX25vQWRDYWxsYmFjayAmJiBfbm9BZENhbGxiYWNrKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdmlkZW9BZC5vbkVycm9yKGVyckNhbGxiYWNrKTtcbiAgICAgICAgICAgIHRoaXMuaXNGb3JiaWRCYW5uZXJBZCA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgd3hHZXRPcGVuRGF0YUNvbnRleHQoKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3dbXCJ3eFwiXSA/IHd4LmdldE9wZW5EYXRhQ29udGV4dCgpIDogbnVsbDtcbiAgICB9XG5cbiAgICAvKiog6YCa55+l5Z+f5Yi35pawICovXG4gICAgcHVibGljIHd4UG9zdE1lc3NhZ2UoZGF0YSkge1xuICAgICAgICB3eC5wb3N0TWVzc2FnZShkYXRhKTtcbiAgICB9XG5cbiAgICAvKiog6I635Y+W5b6u5L+hdG9rZW4gKi9cbiAgICBwdWJsaWMgd3hIdHRwVG9rZW4oYmFzZVVybDogYW55LCBjYWxsQmFjazogRnVuY3Rpb24gPSBudWxsLCBmb3JjZU5ldzogYm9vbGVhbiA9IGZhbHNlKTogYW55IHtcbiAgICAgICAgbGV0IHRva2VuID0gd2luZG93W1wid3hcIl0gPyB3eC5nZXRTdG9yYWdlU3luYyhcInRva2VuXCIpIDogXCJcIjtcbiAgICAgICAgaWYgKHRva2VuICYmIGZvcmNlTmV3ID09IGZhbHNlKSB7XG4gICAgICAgICAgICBjYWxsQmFjayAmJiBjYWxsQmFjayh0b2tlbik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnd4Q3JlYXRlVG9rZW4oYmFzZVVybCwgKHRva2VuKSA9PiB7XG4gICAgICAgICAgICAgICAgY2FsbEJhY2sgJiYgY2FsbEJhY2sodG9rZW4pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdG9rZW47XG4gICAgfVxuXG4gICAgLyoqIOW+ruS/oeeZu+mZhiAqL1xuICAgIHB1YmxpYyB3eExvZ2luKHN0YXR1c0NhbGxiYWNrOiBGdW5jdGlvbik6IHZvaWQge1xuICAgICAgICB3eC5nZXRTZXR0aW5nKHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IChyZXN1bHQ6IF9nZXRTZXR0aW5nU3VjY2Vzc09iamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuYXV0aFNldHRpbmdbJ3Njb3BlLnVzZXJJbmZvJ10pIHsgLy/mjojmnYPmiJDlip9cbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzQ2FsbGJhY2sgJiYgc3RhdHVzQ2FsbGJhY2soMSk7XG4gICAgICAgICAgICAgICAgICAgIHd4LmdldFVzZXJJbmZvKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qKiDmmK/lkKbluKbkuIrnmbvlvZXmgIHkv6Hmga8gKi9cbiAgICAgICAgICAgICAgICAgICAgICAgIHdpdGhDcmVkZW50aWFsczogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhbmc6IFwiemhfQ05cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IChyZXN1bHQ6IF9nZXRVc2VySW5mb1N1Y2Nlc3NPYmplY3QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDojrflj5bnlKjmiLfkv6Hmga9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fYXV0aGVudGljTG9naW5CdG4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fYXV0aGVudGljTG9naW5CdG4uZGVzdHJveSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9hdXRoZW50aWNMb2dpbkJ0biA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIHVzZXJJbmZvOlwiLCByZXN1bHQudXNlckluZm8pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBsYXllck1nci5JbnMuSW5mby53eFVzZXJJbmZvID0gcmVzdWx0LnVzZXJJbmZvO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1c0NhbGxiYWNrICYmIHN0YXR1c0NhbGxiYWNrKDIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhaWw6ICgpID0+IHsgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlOiAoKSA9PiB7IH1cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9IGVsc2UgeyAvL+ayoeacieaOiOadg1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXNDYWxsYmFjayAmJiBzdGF0dXNDYWxsYmFjaygzKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX2F1dGhlbnRpY0xvZ2luQnRuKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9hdXRoZW50aWNMb2dpbkJ0bi5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX2F1dGhlbnRpY0xvZ2luQnRuID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBidXR0b24gPSB3eC5jcmVhdGVVc2VySW5mb0J1dHRvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICcnLCAvLyfojrflj5bnlKjmiLfkv6Hmga8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IExheWEuc3RhZ2Uud2lkdGgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogTGF5YS5zdGFnZS5oZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVIZWlnaHQ6IDQwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250U2l6ZTogMTYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogNFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uLm9uVGFwKChyZXMxKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnV0dG9uLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+mHjeaWsOmqjOivgVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMud3hMb2dpbihzdGF0dXNDYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fYXV0aGVudGljTG9naW5CdG4gPSBidXR0b247XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDogKCkgPT4ge1xuXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29tcGxldGU6ICgpID0+IHtcblxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog6K6+572u5ri45oiP5bi45LquICovXG4gICAgcHVibGljIHd4U2V0S2VlcFNjcmVlbk9uKCk6IHZvaWQge1xuICAgICAgICB3eC5zZXRLZWVwU2NyZWVuT24oe1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiDmmK/lkKbkv53mjIHlsY/luZXluLjkuq5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAga2VlcFNjcmVlbk9uOiB0cnVlLFxuICAgICAgICAgICAgc3VjY2VzczogKHJlc3VsdDogX3NldEtlZXBTY3JlZW5PblN1Y2Nlc3NPYmplY3QpID0+IHsgfSxcbiAgICAgICAgICAgIGZhaWw6ICgpID0+IHsgfSxcbiAgICAgICAgICAgIGNvbXBsZXRlOiAoKSA9PiB7IH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwcml2YXRlIHd4Q3JlYXRlVG9rZW4odXJsOiBzdHJpbmcsIGNhbGxiYWNrOiBGdW5jdGlvbiA9IG51bGwpOiB2b2lkIHtcbiAgICAgICAgbGV0IGxhdW5jaE9wdGlvbnMgPSB3aW5kb3dbXCJ3eFwiXSA/IHd4LmdldExhdW5jaE9wdGlvbnNTeW5jKCkgOiBcIlwiO1xuICAgICAgICAvLyDojrflj5bivLTlkYppZFxuICAgICAgICBsZXQgYWlkID0gMDtcbiAgICAgICAgbGV0IGNoYW5uZWwgPSBcIjBfXCIgKyBsYXVuY2hPcHRpb25zLnNjZW5lO1xuICAgICAgICBpZiAobGF1bmNoT3B0aW9ucyAmJiBsYXVuY2hPcHRpb25zLnF1ZXJ5ICYmIGxhdW5jaE9wdGlvbnMucXVlcnkuY2hhbm5lbCkge1xuICAgICAgICAgICAgbGV0IGdkdF92aWQgPSBsYXVuY2hPcHRpb25zLnF1ZXJ5LmdkdF92aWQ7XG4gICAgICAgICAgICBsZXQgd2VpeGluYWRpbmZvID0gbGF1bmNoT3B0aW9ucy5xdWVyeS53ZWl4aW5hZGluZm87XG4gICAgICAgICAgICBpZiAod2VpeGluYWRpbmZvKSB7XG4gICAgICAgICAgICAgICAgbGV0IHdlaXhpbmFkaW5mb0FyciA9IHdlaXhpbmFkaW5mby5zcGxpdChcIi5cIik7XG4gICAgICAgICAgICAgICAgYWlkID0gd2VpeGluYWRpbmZvQXJyWzBdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2hhbm5lbCA9IFwiXCIgKyBsYXVuY2hPcHRpb25zLnF1ZXJ5LmNoYW5uZWwgKyBcIl9cIiArIGxhdW5jaE9wdGlvbnMuc2NlbmU7XG4gICAgICAgIH0gZWxzZSBpZiAobGF1bmNoT3B0aW9ucyAmJiBsYXVuY2hPcHRpb25zLnJlZmVycmVySW5mbykge1xuICAgICAgICAgICAgaWYgKGxhdW5jaE9wdGlvbnMucmVmZXJyZXJJbmZvLmV4dHJhRGF0YSAmJiBsYXVuY2hPcHRpb25zLnJlZmVycmVySW5mby5leHRyYURhdGEuY2hhbm5lbCkge1xuICAgICAgICAgICAgICAgIGNoYW5uZWwgPSBcIlwiICsgbGF1bmNoT3B0aW9ucy5yZWZlcnJlckluZm8uZXh0cmFEYXRhLmNoYW5uZWwgKyBcIl9cIiArIGxhdW5jaE9wdGlvbnMuc2NlbmU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChsYXVuY2hPcHRpb25zLnJlZmVycmVySW5mby5hcHBJZCkge1xuICAgICAgICAgICAgICAgICAgICBjaGFubmVsID0gbGF1bmNoT3B0aW9ucy5yZWZlcnJlckluZm8uYXBwSWQgKyBcIl9cIiArIGxhdW5jaE9wdGlvbnMuc2NlbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh3aW5kb3dbXCJ3eFwiXSkge1xuICAgICAgICAgICAgd3gubG9naW4oe1xuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IChyZXN1bHQ6IF9sb2dpblN1Y2Nlc3NPYmplY3QpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgd3gucmVxdWVzdCh7XG4gICAgICAgICAgICAgICAgICAgICAgICB1cmw6IHVybCArIFwidjEvdG9rZW4vdXNlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvZGU6IHJlc3VsdC5jb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5uZWw6IGNoYW5uZWwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWlkOiBhaWRcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXI6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIC8vIOm7mOiupOWAvFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YVR5cGU6IFwianNvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiBcInRleHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IChyZXN1bHQ6IF9yZXF1ZXN0U3VjY2Vzc09iamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIFRPS0VOOlwiLCByZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHd4LnNldFN0b3JhZ2Uoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IFwidG9rZW5cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogcmVzdWx0LmRhdGEudG9rZW4sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6ICgpID0+IHsgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFpbDogKCkgPT4geyB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZTogKCkgPT4geyB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2socmVzdWx0LmRhdGEudG9rZW4pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhaWw6ICgpID0+IHsgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlOiAoKSA9PiB7IH1cbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZhaWw6ICgpID0+IHsgfSxcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogKCkgPT4geyB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOa4uOaIj+aWsOeJiOacrOaPkOekuiAqL1xuICAgIHB1YmxpYyB3eFNob3dVcGRhdGVWZXJzaW9uVGlwcygpOiB2b2lkIHtcbiAgICAgICAgaWYgKCFMYXlhLkJyb3dzZXIub25XZWlYaW4pIHJldHVybjtcbiAgICAgICAgY29uc3QgdXBkYXRlTWFuYWdlciA9IHd4LmdldFVwZGF0ZU1hbmFnZXIoKTtcbiAgICAgICAgaWYgKHVwZGF0ZU1hbmFnZXIpIHtcbiAgICAgICAgICAgIHVwZGF0ZU1hbmFnZXIub25DaGVja0ZvclVwZGF0ZShmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgLy8g6K+35rGC5a6M5paw54mI5pys5L+h5oGv55qE5Zue6LCDXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmhhc1VwZGF0ZSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB1cGRhdGVNYW5hZ2VyLm9uVXBkYXRlUmVhZHkoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHd4LnNob3dNb2RhbCh7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiBcIuabtOaWsOaPkOekulwiLFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBcIuaWsOeJiOacrOW3sue7j+WHhuWkh+Wlve+8jOaYr+WQpumHjeWQr+W6lOeUqO+8n1wiLFxuICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICog5piv5ZCm5pi+56S65Y+W5raI5oyJ6ZKu77yM6buY6K6k5Li6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgICAgIHNob3dDYW5jZWw6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICAgICAgICAgKiDlj5bmtojmjInpkq7nmoTmloflrZfvvIzpu5jorqTkuLpcIuWPlua2iFwi77yM5pyA5aSaIDQg5Liq5a2X56ymXG4gICAgICAgICAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgICAgICAgICBjYW5jZWxUZXh0OiBcIuWPlua2iFwiLFxuICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICog5Y+W5raI5oyJ6ZKu55qE5paH5a2X6aKc6Imy77yM6buY6K6k5Li6XCIjMDAwMDAwXCJcbiAgICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgICAgIGNhbmNlbENvbG9yOiBcIiMwMDAwMDBcIixcbiAgICAgICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgICAgICAqIOehruWumuaMiemSrueahOaWh+Wtl++8jOm7mOiupOS4ulwi56Gu5a6aXCLvvIzmnIDlpJogNCDkuKrlrZfnrKZcbiAgICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpcm1UZXh0OiBcIuehruWumlwiLFxuICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICog56Gu5a6a5oyJ6ZKu55qE5paH5a2X6aKc6Imy77yM6buY6K6k5Li6XCIjM0NDNTFGXCJcbiAgICAgICAgICAgICAgICAgICAgICovXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpcm1Db2xvcjogXCIjM0NDNTFGXCIsXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IChyZXN1bHQ6IF9zaG93TW9kYWxTdWNjZXNzT2JqZWN0KSA9PiB7IH0sXG4gICAgICAgICAgICAgICAgICAgIGZhaWw6ICgpID0+IHsgfSxcbiAgICAgICAgICAgICAgICAgICAgY29tcGxldGU6ICgpID0+IHsgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgdXBkYXRlTWFuYWdlci5vblVwZGF0ZUZhaWxlZChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5ri45oiP5paw54mI5pys5pu05paw5aSx6LSl77yBXCIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyB3eE9uU2hvdygpOiB2b2lkIHtcbiAgICAgICAgd3gub25TaG93KChvcHRpb25zOiBhbnkpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIG9uTGF1bmNoOlwiLCBvcHRpb25zKTtcbiAgICAgICAgICAgIFBsYXllck1nci5JbnMuSW5mby53eExhdW5jaCA9IG9wdGlvbnM7XG4gICAgICAgICAgICBpZiAoIVNvdW5kTWdyLklucy5iZ09uKSB7XG4gICAgICAgICAgICAgICAgU291bmRNZ3IuSW5zLnNldEJnT24odHJ1ZSk7XG4gICAgICAgICAgICAgICAgU291bmRNZ3IuSW5zLnNldEVmZmVjdE9uKHRydWUpO1xuICAgICAgICAgICAgICAgIFNvdW5kTWdyLklucy5wbGF5QmcoU291bmRUeXBlLkJHX01VU0lDKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8v5p+l6K+i5piv5ZCm5pyJ56a757q/5aWW5YqxXG4gICAgICAgICAgICBTdG9yYWdlVXRpbC5yZXF1ZXN0T2ZmbGluZVByaXplRGF0YSgpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIHB1YmxpYyB3eE9uSGlkZSgpOiB2b2lkIHtcbiAgICAgICAgd3gub25IaWRlKCgpID0+IHtcbiAgICAgICAgICAgIFNvdW5kTWdyLklucy5zZXRCZ09uKGZhbHNlKTtcbiAgICAgICAgICAgIFNvdW5kTWdyLklucy5zZXRFZmZlY3RPbihmYWxzZSk7XG4gICAgICAgICAgICBTdG9yYWdlVXRpbC5zYXZlU3RvcmFnZVRvTG9jYWwodHJ1ZSk7XG4gICAgICAgICAgICB0aGlzLnd4U2V0VXNlckNsb3VkU3RvcmFnZSgpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8qKiDkuIrkvKDmlbDmja7liLDlvIDmlL7ln58gKi9cbiAgICBwdWJsaWMgd3hTZXRVc2VyQ2xvdWRTdG9yYWdlKCk6IHZvaWQge1xuICAgICAgICAvL+S4iuS8oOW+ruS/oeS6kVxuICAgICAgICBsZXQgbW9uZXkgPSBNYXRoLmZsb29yKFBsYXllck1nci5JbnMuSW5mby51c2VyR29sZCArIEhhbGxDb250cm9sLklucy5Nb2RlbC5oZXJvQWxsQXNzZXQoKSkudG9TdHJpbmcoKTtcbiAgICAgICAgbGV0IGt2RGF0YUxpc3QgPSBbe1xuICAgICAgICAgICAgXCJrZXlcIjogXCJzY29yZVwiLFxuICAgICAgICAgICAgXCJ2YWx1ZVwiOiBtb25leVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBcImtleVwiOiBcImNpdHlcIixcbiAgICAgICAgICAgIFwidmFsdWVcIjogKFBsYXllck1nci5JbnMuSW5mby53eFVzZXJJbmZvID8gUGxheWVyTWdyLklucy5JbmZvLnd4VXNlckluZm8uY2l0eSA6ICfngavmmJ8nKVxuICAgICAgICB9LCB7XG4gICAgICAgICAgICBcImtleVwiOiBcInVzZXJJZFwiLFxuICAgICAgICAgICAgXCJ2YWx1ZVwiOiBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlcklkLnRvU3RyaW5nKClcbiAgICAgICAgfV07XG4gICAgICAgIHd4LnNldFVzZXJDbG91ZFN0b3JhZ2Uoe1xuICAgICAgICAgICAgXCJLVkRhdGFMaXN0XCI6IGt2RGF0YUxpc3QsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoc3JjKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJzZXRVc2VyQ2xvdWRTdG9yYWdlIHN1Y2Nlc3NcIiwgc3JjKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChzcmMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInNldFVzZXJDbG91ZFN0b3JhZ2UgZmFpbFwiLCBzcmMpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLyoqIOWGheWtmOitpuWRiiAqL1xuICAgIHB1YmxpYyB3eE1lbW9yeVdhcm5pbmcoKTogdm9pZCB7XG4gICAgICAgIHd4Lm9uTWVtb3J5V2FybmluZygoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkBEYXZpZCDlhoXlrZjov4fpq5jorablkYrvvIHvvIHvvIFcIik7XG4gICAgICAgICAgICB3eC50cmlnZ2VyR0MoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIHd4T25TaGFyZShfZGF0YSk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5faXNTaGFyaW5nKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9pc1NoYXJpbmcgPSB0cnVlO1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2lzU2hhcmluZyA9IGZhbHNlO1xuICAgICAgICB9LCAzNTApO1xuICAgICAgICAvLyDnvqTliIbkuqvorr7nva53aXRoU2hhcmVUaWNrZXQ6dHJ1ZSBcbiAgICAgICAgaWYgKF9kYXRhLmlzR3JvdXBTaGFyZSkge1xuICAgICAgICAgICAgd3gudXBkYXRlU2hhcmVNZW51KHtcbiAgICAgICAgICAgICAgICB3aXRoU2hhcmVUaWNrZXQ6IHRydWUsXG4gICAgICAgICAgICAgICAgc3VjY2VzczogKCkgPT4geyB9LCBmYWlsOiAoKSA9PiB7IH0sIGNvbXBsZXRlOiAoKSA9PiB7IH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgd3gudXBkYXRlU2hhcmVNZW51KHtcbiAgICAgICAgICAgICAgICB3aXRoU2hhcmVUaWNrZXQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6ICgpID0+IHsgfSwgZmFpbDogKCkgPT4geyB9LCBjb21wbGV0ZTogKCkgPT4geyB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHd4LnNoYXJlQXBwTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgdGl0bGU6IF9kYXRhLnRpdGxlLFxuICAgICAgICAgICAgICAgIGltYWdlVXJsOiBfZGF0YS5pbWFnZVVybCxcbiAgICAgICAgICAgICAgICBxdWVyeTogX2RhdGEucXVlcnksIC8vXCLlv4XpobvmmK8ga2V5MT12YWwxJmtleTI9dmFsMiDnmoTmoLzlvI9cIlxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKF9kYXRhLmlzR3JvdXBTaGFyZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgd3guZ2V0U3lzdGVtSW5mbyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogKHJlc3VsdDogX2dldFN5c3RlbUluZm9TdWNjZXNzT2JqZWN0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQucGxhdGZvcm0gPT0gJ2FuZHJvaWQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+iOt+WPlue+pOivpue7huS/oeaBr1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd3guZ2V0U2hhcmVJbmZvKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaGFyZVRpY2tldDogcmVzLnNoYXJlVGlja2V0cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiAocmVzdWx0OiBfZ2V0U2hhcmVJbmZvU3VjY2Vzc09iamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+i/memHjOWGmeS9oOWIhuS6q+WIsOe+pOS5i+WQjuimgeWBmueahOS6i+aDhe+8jOavlOWmguWinuWKoOasoeaVsOS7gOS5iOeahFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfZGF0YS5zdWNjZXNzICYmIF9kYXRhLnN1Y2Nlc3MocmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhaWw6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2RhdGEuc3VjY2VzcyAmJiBfZGF0YS5zdWNjZXNzKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlOiAoKSA9PiB7IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LnBsYXRmb3JtID09ICdpb3MnKSB7Ly/lpoLmnpznlKjmiLfnmoTorr7lpIfmmK9JT1NcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXMuc2hhcmVUaWNrZXRzICE9IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwi5YiG5Lqr55qE5piv576kOlwiLCByZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHd4LmdldFNoYXJlSW5mbyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNoYXJlVGlja2V0OiByZXMuc2hhcmVUaWNrZXRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiAocmVzdWx0OiBfZ2V0U2hhcmVJbmZvU3VjY2Vzc09iamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/liIbkuqvliLDnvqTkuYvlkI7kvaDopoHlgZrnmoTkuovmg4VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9kYXRhLnN1Y2Nlc3MgJiYgX2RhdGEuc3VjY2VzcyhyZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWlsOiAoKSA9PiB7IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlOiAoKSA9PiB7IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugey8v5YiG5Lqr5Yiw5Liq5Lq66KaB5YGa55qE5LqL5oOF77yM5oiR57uZ55qE5piv5LiA5Liq5o+Q56S6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCLliIbkuqvnmoTmmK/kuKrkurpcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2RhdGEuc3VjY2VzcyAmJiBfZGF0YS5zdWNjZXNzKGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFpbDogKCkgPT4geyB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlOiAoKSA9PiB7IH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgX2RhdGEuc3VjY2VzcyAmJiBfZGF0YS5zdWNjZXNzKHJlcylcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgICAgICBfZGF0YS5mYWlsICYmIF9kYXRhLmZhaWwocmVzKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY29tcGxldGU6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faXNTaGFyaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9pc1NoYXJpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfSwgMzUwKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0sIDEpXG4gICAgfVxuXG4gICAgLyoqIOWIm+W7uua/gOWKseinhumikSAqL1xuICAgIHByaXZhdGUgd3hDcmVhdGVSZXdhcmRlZFZpZGVvQWQocGFyYW0pIHtcbiAgICAgICAgbGV0IHZpZGVvMSA9IHd4LmNyZWF0ZVJld2FyZGVkVmlkZW9BZCh7IGFkVW5pdElkOiBwYXJhbS5hZFVuaXRJZCB9KVxuICAgICAgICByZXR1cm4gdmlkZW8xO1xuICAgIH1cblxuICAgIC8qKiDliJvlu7pCYW5uZXLlub/lkYogKi9cbiAgICBwcml2YXRlIHd4Q3JlYXRlQmFubmVyQWQoX3BhcmFtKSB7XG4gICAgICAgIGxldCBzeXN0ZW1JbmZvID0gd3guZ2V0U3lzdGVtSW5mb1N5bmMoKTtcbiAgICAgICAgbGV0IHBSYXRpbyA9IHN5c3RlbUluZm8ud2luZG93V2lkdGggLyA3NTAuMDtcbiAgICAgICAgbGV0IGJhbm5lclkgPSAxMzM0ICogcFJhdGlvO1xuICAgICAgICBpZiAoX3BhcmFtLnRvcCkge1xuICAgICAgICAgICAgYmFubmVyWSA9IF9wYXJhbS50b3AgKiBwUmF0aW87XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGJhbm5lckFkID0gd3guY3JlYXRlQmFubmVyQWQoe1xuICAgICAgICAgICAgYWRVbml0SWQ6IF9wYXJhbS5hZFVuaXRJZCxcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgbGVmdDogKHN5c3RlbUluZm8uc2NyZWVuV2lkdGggLSAzMDApIC8gMixcbiAgICAgICAgICAgICAgICB0b3A6IGJhbm5lclkgLSAxMDAsXG4gICAgICAgICAgICAgICAgd2lkdGg6IDMwMCxcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChiYW5uZXJBZCkge1xuICAgICAgICAgICAgbGV0IGlzUmVzaXplID0gZmFsc2U7XG4gICAgICAgICAgICBiYW5uZXJBZC5vblJlc2l6ZShyZXMgPT4ge1xuICAgICAgICAgICAgICAgIC8v6YCC6YWNXG4gICAgICAgICAgICAgICAgaWYgKGlzUmVzaXplID09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlzUmVzaXplID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgYmFubmVyQWQuc3R5bGUudG9wID0gYmFubmVyWSAtIHJlcy5oZWlnaHQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJhbm5lckFkO1xuICAgIH1cblxuICAgIC8qKiDot7PovazlsI/nqIvluo8gKi9cbiAgICBwcml2YXRlIHd4TmF2aWdhdGVUb01pbmlQcm9ncmFtKGRhdGEpIHtcbiAgICAgICAgd3gubmF2aWdhdGVUb01pbmlQcm9ncmFtKGRhdGEpO1xuICAgIH1cblxuICAgIC8qKiDlrqLmnI0gKi9cbiAgICBwdWJsaWMgd3hPcGVuQ3VzdG9tZXJTZXJ2aWNlKHBhcmFtKSB7XG4gICAgICAgIHd4Lm9wZW5DdXN0b21lclNlcnZpY2VDb252ZXJzYXRpb24ocGFyYW0pO1xuICAgIH1cblxuICAgIC8qKiDmipXor4nlu7rorq7mjInpkq4gKi9cbiAgICBwdWJsaWMgd3hDcmVhdGVGZWVkYmFja0J1dHRvbihidG5WZWN0KSB7XG4gICAgICAgIGlmICh3aW5kb3dbXCJ3eFwiXSkge1xuICAgICAgICAgICAgbGV0IHN5c3RlbUluZm8gPSB3eC5nZXRTeXN0ZW1JbmZvU3luYygpO1xuICAgICAgICAgICAgbGV0IHBSYXRpbyA9IHN5c3RlbUluZm8ud2luZG93V2lkdGggLyA3NTAuMDtcbiAgICAgICAgICAgIGxldCBidXR0b24gPSB3eC5jcmVhdGVGZWVkYmFja0J1dHRvbih7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICAgICAgICAgIHRleHQ6ICcnLCAvL+aJk+W8gOaEj+ingeWPjemmiOmhtemdolxuICAgICAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IGJ0blZlY3QueCAqIHBSYXRpbyxcbiAgICAgICAgICAgICAgICAgICAgdG9wOiBidG5WZWN0LnkgKiBwUmF0aW8sXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBidG5WZWN0LndpZHRoICogcFJhdGlvLFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IGJ0blZlY3QuaGVpZ2h0ICogcFJhdGlvLFxuICAgICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiA0MCxcbiAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IDE2LFxuICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IDQsXG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAuMVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBTREtNZ3I7XG4gICAgcHVibGljIHN0YXRpYyBnZXQgSW5zKCk6IFNES01nciB7XG4gICAgICAgIGlmIChTREtNZ3IuX2luc3RhbmNlID09IG51bGwpIHtcbiAgICAgICAgICAgIFNES01nci5faW5zdGFuY2UgPSBuZXcgU0RLTWdyKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFNES01nci5faW5zdGFuY2U7XG4gICAgfVxufSIsImltcG9ydCBIYWxsQ29udHJvbCBmcm9tIFwiLi4vLi4vbW9kdWxlL2hhbGwvSGFsbENvbnRyb2xcIjtcbmltcG9ydCBIYWxsTW9kZWwgZnJvbSBcIi4uLy4uL21vZHVsZS9oYWxsL21vZGVsL0hhbGxNb2RlbFwiO1xuaW1wb3J0IE1hdGhVdGlsIGZyb20gXCIuLi91dGlscy9NYXRoVXRpbFwiO1xuaW1wb3J0IEh0dHBNZ3IgZnJvbSBcIi4uL25ldC9IdHRwTWdyXCI7XG5pbXBvcnQgTXNnTWdyIGZyb20gXCIuL01zZ01nclwiO1xuaW1wb3J0IFBsYXllck1nciBmcm9tIFwiLi4vcGxheWVyL1BsYXllck1nclwiO1xuaW1wb3J0IEV2ZW50c01nciBmcm9tIFwiLi4vZXZlbnQvRXZlbnRzTWdyXCI7XG5pbXBvcnQgRXZlbnRUeXBlIGZyb20gXCIuLi9ldmVudC9FdmVudFR5cGVcIjtcbmltcG9ydCBTREtNZ3IgZnJvbSBcIi4vU0RLTWdyXCI7XG5pbXBvcnQgQXBwQ29uZmlnIGZyb20gXCIuLi9jb25maWcvQXBwQ29uZmlnXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNoYXJlTWdyIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xuXG4gICAgcHJpdmF0ZSBfbW9kZWw6IEhhbGxNb2RlbDtcbiAgICBwcml2YXRlIF9zaGFyZUZhaWxlZFRpbWVzOiBudW1iZXIgPSAwOyAvL+WIhuS6q+Wksei0peS/neW6lVxuICAgIHByaXZhdGUgX2lzT3BlblNoYXJlQWQ6IGJvb2xlYW4gPSBmYWxzZTsgLy/miZPlvIDop4bpopHliIbkuqtcbiAgICBwdWJsaWMgc2hhcmVTd2l0Y2hPcGVuOiBib29sZWFuID0gZmFsc2U7IC8v5YiG5Lqr5byA5YWz5omT5byAXG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5fbW9kZWwgPSBIYWxsQ29udHJvbC5JbnMuTW9kZWw7XG4gICAgfVxuXG4gICAgLyoqIOivt+axguWIhuS6qy/op4bpopEgKi9cbiAgICBwdWJsaWMgc2hvd1NoYXJlT3JBZHYoY2FsbGJhY2s6IGFueSA9IG51bGwsIHR5cGU6IG51bWJlciA9IDAsIGlzVGFzazogYm9vbGVhbiA9IGZhbHNlLCBpc0dyb3VwU2hhcmU6IGJvb2xlYW4gPSBmYWxzZSk6IG51bWJlciB7XG4gICAgICAgIGlmIChBcHBDb25maWcuaXNEZWJ1Zykge1xuICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5faXNPcGVuU2hhcmVBZCkge1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5faXNPcGVuU2hhcmVBZCA9IHRydWU7XG4gICAgICAgIExheWEuc3RhZ2UudGltZXJPbmNlKDEwMDAsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2lzT3BlblNoYXJlQWQgPSBmYWxzZTtcbiAgICAgICAgfSlcbiAgICAgICAgLy/mmK/lkKbkvJjlhYjop4bpopHlub/lkYpcbiAgICAgICAgaWYgKHRoaXMuZ2V0QWRUaW1lcyh0eXBlKSA+IDApIHtcbiAgICAgICAgICAgIFNES01nci5JbnMuc2hvd1ZpZGVvQWQoKF9yZXM6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChfcmVzICYmIF9yZXMuaXNFbmRlZCB8fCBfcmVzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kZWNyZUFkVGltZXModHlwZSk7XG4gICAgICAgICAgICAgICAgICAgIGxldCBhZEtleTogc3RyaW5nID0gXCJhZFwiO1xuICAgICAgICAgICAgICAgICAgICBpZiAodHlwZSA9PSAxMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWRLZXkgPSBcImFkX2FjY2VcIjtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDExKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhZEtleSA9IFwiYWRfZnJlZV9jYXJcIjtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDEyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhZEtleSA9IFwiYWRfbm9fbW9uZXlcIjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBIdHRwTWdyLklucy5yZXF1ZXN0U2hhcmVBZEZpbmlzaChhZEtleSk7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgIC8v5peg6KeG6aKR5Zue6LCDXG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kZWwuaGFzVmlkZW9BZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuX2lzT3BlblNoYXJlQWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aGlzLnNob3dTaGFyZU9yQWR2KGNhbGxiYWNrLCB0eXBlLCBpc1Rhc2ssIGlzR3JvdXBTaGFyZSk7XG4gICAgICAgICAgICB9LCB0aGlzLmlzU2hhcmVFbmFibGUpO1xuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICBjYXNlIDE6ICAvL+W5v+WRiuaXoOmZkOasoeaVsFxuICAgICAgICAgICAgICAgIFNES01nci5JbnMuc2hvd1ZpZGVvQWQoKF9yZXM6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoX3JlcyAmJiBfcmVzLmlzRW5kZWQgfHwgX3JlcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdFNoYXJlQWRGaW5pc2goXCJhZF9vdGhlclwiLCBfcmVzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgLy/ml6Dop4bpopHlm57osINcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbW9kZWwuaGFzVmlkZW9BZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9pc09wZW5TaGFyZUFkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd1NoYXJlT3JBZHYoY2FsbGJhY2ssIDAsIGlzVGFzaywgaXNHcm91cFNoYXJlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMTA6Ly/liqDpgJ9cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nZXRTaGFyZVRpbWVzKHR5cGUpIDwgMSkge1xuICAgICAgICAgICAgICAgICAgICBNc2dNZ3IuSW5zLnNob3dNc2coXCLku4rml6XliIbkuqvmrKHmlbDlt7LnlKjlroxcIik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnRvU2hhcmUoKF9yZXM6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRlY3JlU2hhcmVUaW1lcyh0eXBlKTtcbiAgICAgICAgICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdFNoYXJlQWRGaW5pc2goXCJzaGFyZV9hY2NlXCIsIF9yZXMpO1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgIH0sIGlzVGFzaywgaXNHcm91cFNoYXJlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgMTE6Ly/lhY3otLnnmoTovaZcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nZXRTaGFyZVRpbWVzKHR5cGUpIDwgMSkge1xuICAgICAgICAgICAgICAgICAgICBNc2dNZ3IuSW5zLnNob3dNc2coXCLku4rml6XliIbkuqvmrKHmlbDlt7LnlKjlroxcIik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnRvU2hhcmUoKF9yZXM6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmRlY3JlU2hhcmVUaW1lcyh0eXBlKTtcbiAgICAgICAgICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdFNoYXJlQWRGaW5pc2goXCJzaGFyZV9mcmVlX2NhclwiLCBfcmVzKTtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICB9LCBpc1Rhc2ssIGlzR3JvdXBTaGFyZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIDEyOi8v5peg6YeR5biBXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2V0U2hhcmVUaW1lcyh0eXBlKSA8IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5LuK5pel5YiG5Lqr5qyh5pWw5bey55So5a6MXCIpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy50b1NoYXJlKChfcmVzOiBhbnkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5rGC5Yqp5bey5Y+R5Ye6XCIpO1xuICAgICAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMzAwMDAsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGVjcmVTaGFyZVRpbWVzKHR5cGUpO1xuICAgICAgICAgICAgICAgICAgICBIdHRwTWdyLklucy5yZXF1ZXN0U2hhcmVBZEZpbmlzaChcInNoYXJlX25vX21vbmV5XCIsIF9yZXMpO1xuICAgICAgICAgICAgICAgIH0sIGlzVGFzaywgaXNHcm91cFNoYXJlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6Ly/liIbkuqvml6DpmZDmrKHmlbBcbiAgICAgICAgICAgICAgICB0aGlzLnRvU2hhcmUoKF9yZXM6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICBIdHRwTWdyLklucy5yZXF1ZXN0U2hhcmVBZEZpbmlzaChcInNoYXJlX290aGVyXCIsIF9yZXMpO1xuICAgICAgICAgICAgICAgIH0sIGlzVGFzaywgaXNHcm91cFNoYXJlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICAvKiog5YiG5Lqr5bm/5ZGK5Y+v54K55Ye75qyh5pWwICovXG4gICAgcHVibGljIGdldEFkVGltZXModHlwZTogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgICAgaWYgKHRoaXMuX21vZGVsICYmIHRoaXMuX21vZGVsLnNoYXJlQWRUaW1lcyAmJiB0aGlzLl9tb2RlbC5oYXNWaWRlb0FkKSB7XG4gICAgICAgICAgICBpZiAodHlwZSA9PSAxMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBNYXRoVXRpbC5wYXJzZUludCh0aGlzLl9tb2RlbC5zaGFyZUFkVGltZXMuYWRfYWNjZV9udW0pO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDExKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hdGhVdGlsLnBhcnNlSW50KHRoaXMuX21vZGVsLnNoYXJlQWRUaW1lcy5hZF9mcmVlX2Nhcl9udW0pO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDEyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hdGhVdGlsLnBhcnNlSW50KHRoaXMuX21vZGVsLnNoYXJlQWRUaW1lcy5hZF9ub19tb25leV9udW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cblxuICAgIC8qKiDliIbkuqvliankvZnmrKHmlbAgKi9cbiAgICBwdWJsaWMgZ2V0U2hhcmVUaW1lcyh0eXBlOiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgICBpZiAodGhpcy5fbW9kZWwgJiYgdGhpcy5fbW9kZWwuc2hhcmVBZFRpbWVzKSB7XG4gICAgICAgICAgICBpZiAodHlwZSA9PSAxMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBNYXRoVXRpbC5wYXJzZUludCh0aGlzLl9tb2RlbC5zaGFyZUFkVGltZXMuc2hhcmVfYWNjZV9udW0pO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDExKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hdGhVdGlsLnBhcnNlSW50KHRoaXMuX21vZGVsLnNoYXJlQWRUaW1lcy5zaGFyZV9mcmVlX2Nhcl9udW0pO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDEyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE1hdGhVdGlsLnBhcnNlSW50KHRoaXMuX21vZGVsLnNoYXJlQWRUaW1lcy5zaGFyZV9ub19tb25leV9udW0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cblxuICAgIC8qKiDlh4/lsJHliIbkuqvlub/lkYrlj6/ngrnlh7vmrKHmlbAgKi9cbiAgICBwdWJsaWMgZGVjcmVBZFRpbWVzKHR5cGU6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5fbW9kZWwgJiYgdGhpcy5fbW9kZWwuc2hhcmVBZFRpbWVzKSB7XG4gICAgICAgICAgICBpZiAodHlwZSA9PSAxMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZGVsLnNoYXJlQWRUaW1lcy5hZF9hY2NlX251bS0tO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDExKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kZWwuc2hhcmVBZFRpbWVzLmFkX2ZyZWVfY2FyX251bS0tO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDEyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kZWwuc2hhcmVBZFRpbWVzLmFkX25vX21vbmV5X251bS0tO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9tb2RlbC5zaGFyZUFkVGltZXMuYWRfbnVtLS07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coXCJARGF2aWQg5YeP5bCR5YiG5Lqr5bm/5ZGK5Y+v54K55Ye75qyh5pWwOlwiLCB0aGlzLl9tb2RlbC5zaGFyZUFkVGltZXMpO1xuICAgIH1cblxuICAgIC8qKiDlh4/lsJHliIbkuqvlj6/ngrnlh7vmrKHmlbAgKi9cbiAgICBwdWJsaWMgZGVjcmVTaGFyZVRpbWVzKHR5cGU6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5fbW9kZWwuc2hhcmVBZFRpbWVzKSB7XG4gICAgICAgICAgICBpZiAodHlwZSA9PSAxMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZGVsLnNoYXJlQWRUaW1lcy5zaGFyZV9hY2NlX251bS0tO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDExKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kZWwuc2hhcmVBZFRpbWVzLnNoYXJlX2ZyZWVfY2FyX251bS0tO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlID09IDEyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kZWwuc2hhcmVBZFRpbWVzLnNoYXJlX25vX21vbmV5X251bS0tO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOWHj+WwkeWIhuS6q+WPr+eCueWHu+asoeaVsDpcIiwgdGhpcy5fbW9kZWwuc2hhcmVBZFRpbWVzKTtcbiAgICB9XG5cbiAgICAvKiog5YiG5Lqr5oiW5bm/5ZGK5byA5YWzICovXG4gICAgcHVibGljIGlzQWRTdGFnZSh0eXBlOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLmdldEFkVGltZXModHlwZSkgPiAwKTtcbiAgICB9XG5cblxuICAgIC8v6K+35rGC5YiG5LqrXG4gICAgcHJpdmF0ZSB0b1NoYXJlKGNhbGxiYWNrOiBhbnkgPSBudWxsLCBpc1Rhc2s6IGJvb2xlYW4gPSBmYWxzZSwgaXNHcm91cFNoYXJlOiBib29sZWFuID0gZmFsc2UpOiB2b2lkIHtcbiAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdFNoYXJlU3ViamVjdCgoX3JlcykgPT4ge1xuICAgICAgICAgICAgaWYgKCFfcmVzKSB7XG4gICAgICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5LuK5pel5YiG5Lqr5qyh5pWw5bey55So5a6MXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBzaGFyZUNmZyA9IHsgaW1hZ2VVcmw6IF9yZXMuaW1hZ2UsIGNvbnRlbnQ6IF9yZXMuZGVzY3JpYmUsIGlkOiBfcmVzLmlkIH07XG4gICAgICAgICAgICBsZXQgcXVlcnlEYXRhOiBzdHJpbmcgPSBudWxsO1xuICAgICAgICAgICAgaWYgKGlzVGFzaykge1xuICAgICAgICAgICAgICAgIHF1ZXJ5RGF0YSA9IFwidXNlcklkPVwiICsgUGxheWVyTWdyLklucy5JbmZvLnVzZXJJZCArIFwiJnNoYXJlSWQ9XCIgKyBzaGFyZUNmZy5pZCArIFwiJnNoYXJlVHlwZT10YXNrXCI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHF1ZXJ5RGF0YSA9IFwidXNlcklkPVwiICsgUGxheWVyTWdyLklucy5JbmZvLnVzZXJJZCArIFwiJnNoYXJlSWQ9XCIgKyBzaGFyZUNmZy5pZCArIFwiJnNoYXJlVHlwZT1zaGFyZVwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy/ph43ov5TmuLjmiI9cbiAgICAgICAgICAgIGxldCBjdXJUaW1lOiBudW1iZXIgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpIC8gMTAwMDtcbiAgICAgICAgICAgIGxldCBpc0F1dG9TaGFyZTogYm9vbGVhbiA9IHRydWU7XG4gICAgICAgICAgICBFdmVudHNNZ3IuSW5zLmFkZExpc3RlbmVyKEV2ZW50VHlwZS5DT01FX0JBQ0tfR0FNRSwgKGRhdGE6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBiYWNrVGltZTogbnVtYmVyID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKSAvIDEwMDA7XG4gICAgICAgICAgICAgICAgbGV0IGxlYXZlVGltZSA9IGJhY2tUaW1lIC0gY3VyVGltZTtcbiAgICAgICAgICAgICAgICBpZiAoaXNBdXRvU2hhcmUgJiYgbGVhdmVUaW1lID4gMi4zKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9zaGFyZUZhaWxlZFRpbWVzID4gMSB8fCBNYXRoLnJhbmRvbSgpID4gMC41KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9zaGFyZUZhaWxlZFRpbWVzID0gMDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKHNoYXJlQ2ZnLmlkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIEh0dHBNZ3IuSW5zLnJlcXVlc3RTaGFyZUZpbmlzaChzaGFyZUNmZy5pZCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9zaGFyZUZhaWxlZFRpbWVzKys7XG4gICAgICAgICAgICAgICAgICAgICAgICBNc2dNZ3IuSW5zLnNob3dNc2coXCLliIbkuqvlpLHotKXvvIzor7flsJ3or5Xph43mlrDliIbkuqtcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCB0aGlzKTtcblxuICAgICAgICAgICAgU0RLTWdyLklucy53eE9uU2hhcmUoe1xuICAgICAgICAgICAgICAgIHRpdGxlOiBzaGFyZUNmZy5jb250ZW50LFxuICAgICAgICAgICAgICAgIGltYWdlVXJsOiBzaGFyZUNmZy5pbWFnZVVybCxcbiAgICAgICAgICAgICAgICBxdWVyeTogcXVlcnlEYXRhLFxuICAgICAgICAgICAgICAgIGlzR3JvdXBTaGFyZTogaXNHcm91cFNoYXJlLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChfcmVzKSB7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6L2s5Y+R5aSx6LSlISEhXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgcHVibGljIGdldCBpc1NoYXJlRW5hYmxlKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5zaGFyZVN3aXRjaE9wZW47XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBTaGFyZU1ncjtcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnMoKTogU2hhcmVNZ3Ige1xuICAgICAgICBpZiAoU2hhcmVNZ3IuX2luc3RhbmNlID09IG51bGwpIHtcbiAgICAgICAgICAgIFNoYXJlTWdyLl9pbnN0YW5jZSA9IG5ldyBTaGFyZU1ncigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBTaGFyZU1nci5faW5zdGFuY2U7XG4gICAgfVxufSIsImltcG9ydCBQYXRoQ29uZmlnIGZyb20gXCIuLi9jb25maWcvUGF0aENvbmZpZ1wiO1xuaW1wb3J0IEh0dHBSZXF1ZXN0SGVscGVyIGZyb20gXCIuL0h0dHBSZXF1ZXN0SGVscGVyXCI7XG5pbXBvcnQgTXNnTWdyIGZyb20gXCIuLi9tc2cvTXNnTWdyXCI7XG5pbXBvcnQgRXZlbnRzTWdyIGZyb20gXCIuLi9ldmVudC9FdmVudHNNZ3JcIjtcbmltcG9ydCBFdmVudFR5cGUgZnJvbSBcIi4uL2V2ZW50L0V2ZW50VHlwZVwiO1xuaW1wb3J0IFBsYXllckluZm8gZnJvbSBcIi4uL3BsYXllci9kYXRhL1BsYXllckluZm9cIjtcbmltcG9ydCBQbGF5ZXJNZ3IgZnJvbSBcIi4uL3BsYXllci9QbGF5ZXJNZ3JcIjtcbmltcG9ydCBTdG9yYWdlVXRpbCBmcm9tIFwiLi4vdXRpbHMvU3RvcmFnZVV0aWxcIjtcbmltcG9ydCBNYXRoVXRpbCBmcm9tIFwiLi4vdXRpbHMvTWF0aFV0aWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSHR0cE1nciBleHRlbmRzIExheWEuU2NyaXB0IHtcblxuICAgIC8qKiDlhYPlrp3otK3ovaborqLljZUgKi9cbiAgICBwdWJsaWMgcmVxdWVzdERpYW1vbmRCdXlPcmRlcihkaWFtb25kOiBudW1iZXIsIGNhbGxiYWNrOiBhbnksIHR5cGU6IG51bWJlciA9IDApOiB2b2lkIHtcbiAgICAgICAgbGV0IHN0cktpbmQ6IHN0cmluZyA9ICdidXlfY2FyJztcbiAgICAgICAgaWYgKHR5cGUgPT0gMSkgc3RyS2luZCA9ICdkaWFtb25kX2FjY2UnO1xuICAgICAgICBsZXQgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2MS9kaWFtb25kL29yZGVyLycgKyBkaWFtb25kICsgJyZraW5kPScgKyBzdHJLaW5kLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOWFg+Wunei0rei9puiuouWNlVwiLCByZXMpO1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKHJlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKiDlhYPlrp3otK3ovaYgKi9cbiAgICBwdWJsaWMgcmVxdWVzdERpYW1vbmRCdXkob3JkZXJJZDogbnVtYmVyLCBjYWxsYmFjazogYW55KTogdm9pZCB7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL2RpYW1vbmQvYnV5X2Nhci8nICsgb3JkZXJJZCxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkBEYXZpZCDlhYPlrp3otK3ovaZcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog6K+35rGC562J57qn5aWW5Yqx5YWD5a6dICovXG4gICAgcHVibGljIHJlcXVlc3RMZXZlbFByaXplRGlhbW9uZChsZXZlbDogbnVtYmVyLCBkaWFtb25kOiBudW1iZXIsIGNhbGxiYWNrOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgbGV0IGRhdGFTdHJpbmcgPSAnbGV2ZWw9JyArIGxldmVsICsgJyZkaWFtb25kPScgKyBkaWFtb25kO1xuICAgICAgICBsZXQgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2Mi91c2VyaW5mby91cGdyYWRlX3Jld2FyZF9kaWFtb25kJyxcbiAgICAgICAgICAgIG1ldGhvZDogJ1Bvc3QnLFxuICAgICAgICAgICAgZGF0YTogZGF0YVN0cmluZyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkBEYXZpZCDor7fmsYLnrYnnuqflpZblirHlhYPlrp06XCIsIHJlcyk7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2socmVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqIOaLieWPluWIhuS6q+S/oeaBryAqL1xuICAgIHB1YmxpYyByZXF1ZXN0VGFza0luZm8oY2FsbGJhY2s6IGFueSk6IHZvaWQge1xuICAgICAgICBsZXQgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2MS90YXNrL2luZm8nLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOaLieWPluWIhuS6q+S/oeaBrzpcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog5ouJ5Y+W5Lu75Yqh5aWW5YqxICovXG4gICAgcHVibGljIHJlcXVlc3RUYXNrUHJpemUoaXRlbUlkOiBudW1iZXIsIGNhbGxiYWNrOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgbGV0IEh0dHBSZXFIZWxwZXIgPSBuZXcgSHR0cFJlcXVlc3RIZWxwZXIoUGF0aENvbmZpZy5BcHBVcmwpO1xuICAgICAgICBIdHRwUmVxSGVscGVyLnJlcXVlc3Qoe1xuICAgICAgICAgICAgdXJsOiAndjEvdGFzay9yZXdhcmRzLycgKyBpdGVtSWQsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJARGF2aWQg5ouJ5Y+W5Lu75Yqh5aWW5YqxOlwiLCByZXMpO1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKHJlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKiDmi4nlj5bliIbkuqvkv6Hmga8gKi9cbiAgICBwdWJsaWMgcmVxdWVzdFNoYXJlSW5mbyhjYWxsYmFjazogYW55KTogdm9pZCB7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL3NoYXJlL2ZyaWVuZF9udW0nLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOaLieWPluWIhuS6q+S/oeaBrzpcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog5ouJ5Y+W5Lu75Yqh5aWW5YqxICovXG4gICAgcHVibGljIHJlcXVlc3RUYXNrUmV3YXJkUHJpemUoaXRlbUlkOiBudW1iZXIsIGNhbGxiYWNrOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgbGV0IEh0dHBSZXFIZWxwZXIgPSBuZXcgSHR0cFJlcXVlc3RIZWxwZXIoUGF0aENvbmZpZy5BcHBVcmwpO1xuICAgICAgICBIdHRwUmVxSGVscGVyLnJlcXVlc3Qoe1xuICAgICAgICAgICAgdXJsOiAndjEvc2hhcmUvZnJpZW5kX3Jld2FyZHMvJyArIGl0ZW1JZCxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkBEYXZpZCDmi4nlj5bku7vliqHlpZblirFcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog5ouJ5Y+W5q+P5pel562+5Yiw5aWW5YqxICovXG4gICAgcHVibGljIHJlcXVlc3REYXlTaWduUHJpemUoaXRlbUlkOiBudW1iZXIsIGNhbGxiYWNrOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgbGV0IEh0dHBSZXFIZWxwZXIgPSBuZXcgSHR0cFJlcXVlc3RIZWxwZXIoUGF0aENvbmZpZy5BcHBVcmwpO1xuICAgICAgICBIdHRwUmVxSGVscGVyLnJlcXVlc3Qoe1xuICAgICAgICAgICAgdXJsOiAndjEvc2lnbi9jb21taXQvJyArIGl0ZW1JZCxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog5ouJ5Y+W562+5Yiw5L+h5oGvICovXG4gICAgcHVibGljIHJlcXVlc3RTaWduSW5mbyhjYWxsYmFjazogYW55KTogdm9pZCB7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL3NpZ24vaW5mbycsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJARGF2aWQg5ouJ5Y+W562+5Yiw5L+h5oGvXCIsIHJlcyk7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2socmVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqIOaLieWPluWFrOS8l+S6jOe7tOeggSAqL1xuICAgIHB1YmxpYyByZXF1ZXN0T2ZmaWNpYWxBY2NEYXRhKGNhbGxiYWNrOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgbGV0IEh0dHBSZXFIZWxwZXIgPSBuZXcgSHR0cFJlcXVlc3RIZWxwZXIoUGF0aENvbmZpZy5BcHBVcmwpO1xuICAgICAgICBIdHRwUmVxSGVscGVyLnJlcXVlc3Qoe1xuICAgICAgICAgICAgdXJsOiAndjEvc3Vic2NyaXB0aW9uL2dldF9pbmZvJyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInJlcXVlc3RPZmZpY2lhbEFjY0RhdGFcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog5ouJ5Y+W5YWs5LyX5aWW5YqxICovXG4gICAgcHVibGljIHJlcXVlc3RBY2NvdW50UmV3YXJkUHJpemUoKTogdm9pZCB7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL3N1YnNjcmlwdGlvbi9yZXdhcmRzJyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInJlcXVlc3RQcml6ZVwiLCByZXMpO1xuICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIuWlluWKsemihuWPluaIkOWKn1wiKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlcXVlc3REaWFtb25kRGF0YSgpO1xuICAgICAgICAgICAgICAgICAgICAvL+enu+mZpOe6oueCuVxuICAgICAgICAgICAgICAgICAgICAvLyBpZiAodXNlckRhdGEpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIHVzZXJEYXRhLnJlbW92ZUZvbGxvd1JlZFBvaW50KCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHJlcy5jb2RlID09IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5pyq5YWz5rOo5YWs5LyX5Y+3XCIpXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZXMuY29kZSA9PSAzKSB7XG4gICAgICAgICAgICAgICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIuWlluWKseW3sumihuWPllwiKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoq5Yi35paw55So5oi35YWD5a6d5pWw6YePICovXG4gICAgcHVibGljIHJlcXVlc3REaWFtb25kRGF0YSgpOiB2b2lkIHtcbiAgICAgICAgbGV0IEh0dHBSZXFIZWxwZXIgPSBuZXcgSHR0cFJlcXVlc3RIZWxwZXIoUGF0aENvbmZpZy5BcHBVcmwpO1xuICAgICAgICBIdHRwUmVxSGVscGVyLnJlcXVlc3Qoe1xuICAgICAgICAgICAgdXJsOiAndjEvdXNlcmluZm8vZ2V0X2RpYW1vbmQnLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOWIt+aWsOeUqOaIt+WFg+WuneaVsOmHjzpcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBpZiAocmVzKSB7XG4gICAgICAgICAgICAgICAgICAgIEV2ZW50c01nci5JbnMuZGlzcGF0Y2goRXZlbnRUeXBlLlVQREFURV9DVVJSRU5DWSwgUGxheWVySW5mby5ESUFNT05ELCByZXMuZGlhbW9uZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog6Iux6ZuE5pWw5o2uICovXG4gICAgcHVibGljIHJlcXVlc3RDYXJwYXJrRGF0YShjYWxsYmFjazogYW55KTogdm9pZCB7XG4gICAgICAgIGxldCB0aGF0ID0gdGhpcztcbiAgICAgICAgbGV0IEh0dHBSZXFIZWxwZXIgPSBuZXcgSHR0cFJlcXVlc3RIZWxwZXIoUGF0aENvbmZpZy5BcHBVcmwpO1xuICAgICAgICBIdHRwUmVxSGVscGVyLnJlcXVlc3Qoe1xuICAgICAgICAgICAgdXJsOiAndjEvc2VhdC9nZXQnLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOiLsembhOaVsOaNrjpcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgICAgIC8vIENvbW1vbkZ1bi5zdG9wV2FpdEVmZmVjdCgpO1xuICAgICAgICAgICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIue9kee7nOW8guW4uFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqIOavj+aXpeS7u+WKoee7n+iuoSAqL1xuICAgIHB1YmxpYyByZXF1ZXN0RGFpbHlUYXNrRGF0YSh0YXNrSWQ6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBsZXQgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2MS90YXNrL3Byb2dyZXNzLycgKyB0YXNrSWQsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJyZXF1ZXN0RGFpbHlUYXNrRGF0YTpcIiwgcmVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqIOWIhuS6q+W5v+WRiuWujOaIkCAqL1xuICAgIHB1YmxpYyByZXF1ZXN0U2hhcmVBZEZpbmlzaCh0eXBlOiBzdHJpbmcsIHNoYXJlSWQ6IG51bWJlciA9IDApOiB2b2lkIHtcbiAgICAgICAgbGV0IGRhdGFTdHJpbmcgPSAndHlwZT0nICsgdHlwZSArICcmc2hhcmVfaWQ9JyArIHNoYXJlSWQ7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL29wZXJhdGlvbmFsL3Bvc3RfaW5mbycsXG4gICAgICAgICAgICBtZXRob2Q6ICdQb3N0JyxcbiAgICAgICAgICAgIGRhdGE6IGRhdGFTdHJpbmcsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqIOWVhuW6l+aVsOaNriAqL1xuICAgIHB1YmxpYyByZXF1ZXN0Q2Fyc2hvcERhdGEoY2FsbGJhY2s6IGFueSk6IHZvaWQge1xuICAgICAgICBsZXQgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2MS9zaG9wL2dldCcsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJARGF2aWQg5ZWG5bqX5pWw5o2uOlwiLCByZXMpO1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKHJlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICAgICAgLy8gQ29tbW9uRnVuLnN0b3BXYWl0RWZmZWN0KCk7XG4gICAgICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi572R57uc5byC5bi4XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog5YiG5Lqr5a6M5oiQICovXG4gICAgcHVibGljIHJlcXVlc3RTaGFyZUZpbmlzaChzaGFyZUlkOiBudW1iZXIsIGVuY3J5cHRlZERhdGE6IHN0cmluZyA9ICcnLCBpdjogc3RyaW5nID0gJycsIGNhbGxiYWNrOiBhbnkgPSBudWxsKTogdm9pZCB7XG4gICAgICAgIGxldCBkYXRhU3RyaW5nID0gJ3NoYXJlX2lkPScgKyBzaGFyZUlkICsgJyZlbmNyeXB0ZWREYXRhPScgKyBlbmNyeXB0ZWREYXRhICsgJyZpdj0nICsgaXY7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL3NoYXJlL2ZpbmlzaCcsXG4gICAgICAgICAgICBtZXRob2Q6ICdQb3N0JyxcbiAgICAgICAgICAgIGRhdGE6IGRhdGFTdHJpbmcsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog6I635Y+W5YiG5Lqr5Li76aKYICovXG4gICAgcHVibGljIHJlcXVlc3RTaGFyZVN1YmplY3QoY2FsbGJhY2s6IGFueSk6IHZvaWQge1xuICAgICAgICBsZXQgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2MS9zaGFyZS90bycsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog6YCa55+l5pyN5Yqh5Zmo5bey6aKG5Y+W56a757q/5pS255uKICovXG4gICAgcHVibGljIHJlcXVlc3ROb3RpZnlTZXJ2ZXJQcml6ZSgpOiB2b2lkIHtcbiAgICAgICAgbGV0IEh0dHBSZXFIZWxwZXIgPSBuZXcgSHR0cFJlcXVlc3RIZWxwZXIoUGF0aENvbmZpZy5BcHBVcmwpO1xuICAgICAgICBIdHRwUmVxSGVscGVyLnJlcXVlc3Qoe1xuICAgICAgICAgICAgdXJsOiAndjEvdXNlcmluZm8vcmV3YXJkJyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInJlcXVlc3ROb3RpZnlTZXJ2ZXJQcml6ZTpcIiwgcmVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqIOaWsOiAgeeJiOacrOabtOaWsOajgOa1i++8iOmYsuatouiAgeaVsOaNruimhueblu+8iSAqL1xuICAgIHB1YmxpYyByZXF1ZXN0VmVyc2lvbkNoZWNrKGNhbGxiYWNrOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgbGV0IEh0dHBSZXFIZWxwZXIgPSBuZXcgSHR0cFJlcXVlc3RIZWxwZXIoUGF0aENvbmZpZy5BcHBVcmwpO1xuICAgICAgICBIdHRwUmVxSGVscGVyLnJlcXVlc3Qoe1xuICAgICAgICAgICAgdXJsOiAndjEvY2hlY2svdmVyc2lvbicsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJyZXF1ZXN0VmVyc2lvbkNoZWNrXCIsIHJlcyk7XG4gICAgICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMuY2xlYXJfZmxhZykge1xuICAgICAgICAgICAgICAgICAgICAvL+a4heeQhuiAgeaVsOaNrlxuICAgICAgICAgICAgICAgICAgICBTdG9yYWdlVXRpbC5jbGVhckxvY2FsRGF0YSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog5paw6ICB54mI5pys5riF55CG5Zue6LCDICovXG4gICAgcHVibGljIHJlcXVlc3RWZXJzaW9uQ2xlYXIoY2FsbGJhY2s6IGFueSk6IHZvaWQge1xuICAgICAgICBsZXQgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2MS9jbGVhci91c2VyX2RhdGEnLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicmVxdWVzdFZlcnNpb25DbGVhclwiLCByZXMpO1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKHJlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKiDnlKjmiLfln7rnoYDmlbDmja4gKi9cbiAgICBwdWJsaWMgcmVxdWVzdFVzZXJJbmZvRGF0YShjYWxsYmFjazogYW55KTogdm9pZCB7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL3VzZXJpbmZvL2dldCcsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJARGF2aWQg55So5oi35Z+656GA5pWw5o2uOlwiLCByZXMpO1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKHJlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICAgICAgLy8gQ29tbW9uRnVuLnN0b3BXYWl0RWZmZWN0KCk7XG4gICAgICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi572R57uc5byC5bi4XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog6K+35rGC5YiG5Lqr5byA5YWzICovXG4gICAgcHVibGljIHJlcXVlc3RTaGFyZUZsYWcoY2FsbGJhY2s6IGFueSk6IHZvaWQge1xuICAgICAgICBsZXQgdGhhdCA9IHRoaXM7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL3NoYXJlL2ZsYWcnLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKiDnlKjmiLfln7rnoYDmlbDmja7otYvlgLwgKi9cbiAgICBwdWJsaWMgcmVxdWVzdFVzZXJCYXNlRGF0YShjYWxsYmFjazogYW55ID0gbnVsbCk6IHZvaWQge1xuICAgICAgICBsZXQgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2Mi91c2VyL2luZm8nLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOeUqOaIt+WfuuehgOaVsOaNrui1i+WAvDpcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBpZiAocmVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKHJlcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkBEYXZpZCDnlKjmiLfln7rnoYDmlbDmja7otYvlgLzlpLHotKU6XCIsIHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8v6I635Y+W5oq95aWW5L+h5oGvXG4gICAgcHVibGljIHJlcXVlc3RQcml6ZUluZm8oY2FsbGJhY2s6IGFueSk6IHZvaWQge1xuICAgICAgICBsZXQgdGhhdCA9IHRoaXM7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL2FjdGl2aXR5L2dldC9yb3VsZXR0ZScsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJARGF2aWQg6I635Y+W5oq95aWW5L+h5oGvOlwiLCByZXMpO1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKHJlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKiDovaznm5jmir3lpZYgKi9cbiAgICBwdWJsaWMgcmVxdWVzdERyYXdQcml6ZSh0eXBlOiBudW1iZXIsIGNhbGxiYWNrOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgbGV0IHRoYXQgPSB0aGlzO1xuICAgICAgICBsZXQgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2Mi9hY3Rpdml0eS9yb3VsZXR0ZS8nICsgdHlwZSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInJlcXVlc3REcmF3UHJpemVcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKGZhbHNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqIOi9rOebmOe7n+iuoSAqL1xuICAgIHB1YmxpYyByZXF1ZXN0UHJpemVDZW5zdXMoaXRlbUlkOiBudW1iZXIsIG51bTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGxldCBkYXRhU3RyaW5nID0gJ3ByaXplSWQ9JyArIGl0ZW1JZCArICcmcHJpemVOdW09JyArIG51bTtcbiAgICAgICAgY29uc29sZS5sb2coXCJyZXF1ZXN0UHJpemVDZW5zdXM6XCIsIGRhdGFTdHJpbmcpO1xuICAgICAgICBsZXQgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2MS9hY3Rpdml0eS9yb3VsZXR0ZS9sb2cnLFxuICAgICAgICAgICAgbWV0aG9kOiAnUG9zdCcsXG4gICAgICAgICAgICBkYXRhOiBkYXRhU3RyaW5nLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicmVxdWVzdFByaXplQ2Vuc3VzOlwiLCByZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog6K+35rGC5LiW55WM5o6S6KGM5pWw5o2uICovXG4gICAgcHVibGljIHJlcXVlc3RXb3JsZFJhbmtpbmdEYXRhKGNhbGxiYWNrOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgICB2YXIgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2MS9yYW5rL3dlZWsnLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOivt+axguS4lueVjOaOkuihjOaVsOaNrjpcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog6K+35rGC5oiR55qE5LiW55WM5o6S6KGM5pWw5o2uICovXG4gICAgcHVibGljIHJlcXVlc3RNeVdvcmxkUmFua0RhdGEoY2FsbGJhY2s6IGFueSk6IHZvaWQge1xuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICAgIHZhciBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL3JhbmsvbXknLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOivt+axguaIkeeahOS4lueVjOaOkuihjOaVsOaNrjpcIiwgcmVzKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhyZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog6K+35rGC5pS255uK5ZGo5o6S6KGM5pWw5o2uICovXG4gICAgcHVibGljIHJlcXVlc3RJbmNvbWVSYW5raW5nRGF0YShjYWxsYmFjazogYW55KTogdm9pZCB7XG4gICAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgICAgdmFyIEh0dHBSZXFIZWxwZXIgPSBuZXcgSHR0cFJlcXVlc3RIZWxwZXIoUGF0aENvbmZpZy5BcHBVcmwpO1xuICAgICAgICBIdHRwUmVxSGVscGVyLnJlcXVlc3Qoe1xuICAgICAgICAgICAgdXJsOiAndjEvcmFuay93ZWVrJyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkBEYXZpZCDor7fmsYLmlLbnm4rlkajmjpLooYzmlbDmja46XCIsIHJlcyk7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2socmVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqIOivt+axguaIkeeahOaUtuebiuWRqOaOkuihjOaVsOaNriAqL1xuICAgIHB1YmxpYyByZXF1ZXN0TXlJbmNvbWVSYW5rRGF0YShjYWxsYmFjazogYW55KTogdm9pZCB7XG4gICAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgICAgdmFyIEh0dHBSZXFIZWxwZXIgPSBuZXcgSHR0cFJlcXVlc3RIZWxwZXIoUGF0aENvbmZpZy5BcHBVcmwpO1xuICAgICAgICBIdHRwUmVxSGVscGVyLnJlcXVlc3Qoe1xuICAgICAgICAgICAgdXJsOiAndjEvcmFuay9teScsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJARGF2aWQg6K+35rGC5oiR55qE5pS255uK5ZGo5o6S6KGM5pWw5o2uOlwiLCByZXMpO1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKHJlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogSHR0cE1ncjtcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnMoKTogSHR0cE1nciB7XG4gICAgICAgIGlmIChIdHRwTWdyLl9pbnN0YW5jZSA9PSBudWxsKSB7XG4gICAgICAgICAgICBIdHRwTWdyLl9pbnN0YW5jZSA9IG5ldyBIdHRwTWdyKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEh0dHBNZ3IuX2luc3RhbmNlO1xuICAgIH1cbn0iLCJpbXBvcnQgU0RLTWdyIGZyb20gXCIuLi9tc2cvU0RLTWdyXCI7XG5pbXBvcnQgQXBwQ29uZmlnIGZyb20gXCIuLi9jb25maWcvQXBwQ29uZmlnXCI7XG5cbi8v5pWw5o2u57yT5a2YXG52YXIgcmVxdWVzdENhY2hlID0ge31cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSHR0cFJlcXVlc3RIZWxwZXIge1xuXHRiYXNlVXJsID0gbnVsbDtcblx0Y29uc3RydWN0b3IoX3VybCkge1xuXHRcdHRoaXMuYmFzZVVybCA9IF91cmw7XG5cdH1cblxuXHQvKiogaHR0cOivt+axgiAqL1xuXHRyZXF1ZXN0KHBhcmFtczogYW55LCBub1Rva2VuOiBib29sZWFuID0gZmFsc2UpOiB2b2lkIHtcblx0XHRjb25zb2xlLmxvZyhcIkBEYXZpZCBodHRwIHJlcXVlc3Q9PT4+XCIsIHBhcmFtcy51cmwpO1xuXHRcdGxldCBzZWxmID0gdGhpcztcblx0XHRpZiAoIXBhcmFtcy5tZXRob2QpIHtcblx0XHRcdHBhcmFtcy5tZXRob2QgPSAnR2V0J1xuXHRcdH07XG5cdFx0Ly/ku4XnvJPlrZhHZXTmlbDmja5cblx0XHRpZiAocGFyYW1zLmNhY2hlICYmIHBhcmFtcy5tZXRob2QgPT0gJ0dldCcpIHtcblx0XHRcdHZhciByZXMgPSByZXF1ZXN0Q2FjaGVbcGFyYW1zLnVybF07XG5cdFx0XHRpZiAocmVzICYmIHBhcmFtcy5zdWNjZXNzKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiY2FjaGU6XCIgKyBwYXJhbXMudXJsKTtcblx0XHRcdFx0cGFyYW1zLnN1Y2Nlc3MocmVzKVxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9O1xuXHRcdH07XG5cblx0XHR2YXIgaHIgPSBuZXcgTGF5YS5IdHRwUmVxdWVzdCgpO1xuXHRcdGhyLmh0dHAudGltZW91dCA9IDEwMDAwO1xuXHRcdGhyLm9uKExheWEuRXZlbnQuUFJPR1JFU1MsIHNlbGYsIChlOiBhbnkpID0+IHtcblx0XHRcdGNvbnNvbGUubG9nKGUpO1xuXHRcdH0pO1xuXHRcdGhyLm9uY2UoTGF5YS5FdmVudC5FUlJPUiwgc2VsZiwgKGU6IGFueSkgPT4ge1xuXHRcdFx0Y29uc29sZS5sb2coXCJARGF2aWQgTGF5YS5FdmVudC5FUlJPUjpcIiwgZSlcblx0XHRcdGlmIChlLmluZGV4T2YoJzQwMScpID4gMCkge1xuXHRcdFx0XHRpZiAoIW5vVG9rZW4pIHtcblx0XHRcdFx0XHRTREtNZ3IuSW5zLnd4SHR0cFRva2VuKHNlbGYuYmFzZVVybCwgKHRva2VuKSA9PiB7XG5cdFx0XHRcdFx0XHRzZWxmLnJlcXVlc3QocGFyYW1zLCB0cnVlKVxuXHRcdFx0XHRcdH0sIHRydWUpO1xuXHRcdFx0XHR9O1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dmFyIHJlcyA9IGhyLmRhdGE7XG5cdFx0XHRcdGlmIChwYXJhbXMgJiYgcGFyYW1zLmZhaWwpIHtcblx0XHRcdFx0XHRwYXJhbXMuZmFpbChyZXMpXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KTtcblx0XHRoci5vbmNlKExheWEuRXZlbnQuQ09NUExFVEUsIHNlbGYsIChlOiBhbnkpID0+IHtcblx0XHRcdHZhciByZXMgPSBoci5kYXRhO1xuXHRcdFx0aWYgKHJlcyA9PSAnNDAxJykge1xuXHRcdFx0XHRpZiAoIW5vVG9rZW4pIHtcblx0XHRcdFx0XHRTREtNZ3IuSW5zLnd4SHR0cFRva2VuKHNlbGYuYmFzZVVybCwgKHRva2VuKSA9PiB7XG5cdFx0XHRcdFx0XHRzZWxmLnJlcXVlc3QocGFyYW1zKVxuXHRcdFx0XHRcdH0sIHRydWUpO1xuXHRcdFx0XHR9O1xuXHRcdFx0fSBlbHNlIGlmIChyZXMgPT0gJzUwMCcpIHtcblx0XHRcdFx0Y29uc29sZS5sb2coXCJARGF2aWQgcmVxdWVzdC1lcnI6IFwiLCBwYXJhbXMudXJsKTtcblx0XHRcdH0gZWxzZSBpZiAocGFyYW1zLnN1Y2Nlc3MpIHtcblx0XHRcdFx0dmFyIGRhdGFKc29uID0gcmVzO1xuXHRcdFx0XHR2YXIganNvbk9iaiA9IGRhdGFKc29uO1xuXHRcdFx0XHRpZiAoZGF0YUpzb24pIHtcblx0XHRcdFx0XHRqc29uT2JqID0gSlNPTi5wYXJzZShkYXRhSnNvbik7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmVxdWVzdENhY2hlW3BhcmFtcy51cmxdID0ganNvbk9iajtcblx0XHRcdFx0cGFyYW1zLnN1Y2Nlc3MoanNvbk9iailcblx0XHRcdH07XG5cdFx0fSk7XG5cdFx0dmFyIHRva2VuID0gU0RLTWdyLklucy53eEh0dHBUb2tlbihzZWxmLmJhc2VVcmwpO1xuXHRcdHZhciBoZWFkZXIgPSBbXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD11dGYtOFwiLCBcInRva2VuXCIsIHRva2VuXTtcblx0XHRpZiAocGFyYW1zLm1ldGhvZCA9PSAnUG9zdCcpIHtcblx0XHRcdGhyLnNlbmQoc2VsZi5iYXNlVXJsICsgcGFyYW1zLnVybCwgcGFyYW1zLmRhdGEsICdQT1NUJywgJ2pzb25wJywgaGVhZGVyKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0aHIuc2VuZChzZWxmLmJhc2VVcmwgKyBwYXJhbXMudXJsLCBudWxsLCAnR0VUJywgJ2pzb25wJywgaGVhZGVyKTtcblx0XHR9XG5cdH1cbn1cbiIsImltcG9ydCBQbGF5ZXJJbmZvIGZyb20gXCIuL2RhdGEvUGxheWVySW5mb1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5ZXJNZ3IgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XG5cbiAgICBwcml2YXRlIF9pbmZvOiBQbGF5ZXJJbmZvO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgaW5pdCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5faW5mbyA9IG5ldyBQbGF5ZXJJbmZvKCk7XG4gICAgfVxuXG4gICAgc2V0IEluZm8odmFsdWU6IFBsYXllckluZm8pIHsgdGhpcy5faW5mbyA9IHZhbHVlOyB9XG4gICAgZ2V0IEluZm8oKTogUGxheWVySW5mbyB7IHJldHVybiB0aGlzLl9pbmZvOyB9XG5cblxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogUGxheWVyTWdyO1xuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IElucygpOiBQbGF5ZXJNZ3Ige1xuICAgICAgICBpZiAoUGxheWVyTWdyLl9pbnN0YW5jZSA9PSBudWxsKSB7XG4gICAgICAgICAgICBQbGF5ZXJNZ3IuX2luc3RhbmNlID0gbmV3IFBsYXllck1ncigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQbGF5ZXJNZ3IuX2luc3RhbmNlO1xuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5ZXJJbmZvIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgR09MRDogbnVtYmVyID0gMDtcbiAgICBwdWJsaWMgc3RhdGljIERJQU1PTkQ6IG51bWJlciA9IDE7XG5cbiAgICAvKiog5b6u5L+h55So5oi35L+h5oGvICovXG4gICAgcHVibGljIHd4VXNlckluZm86IGFueSA9IG51bGw7XG4gICAgcHVibGljIHd4TGF1bmNoOiBhbnkgPSBudWxsO1xuXG4gICAgLyoqIOaLpeaciemHkeW4gSAqL1xuICAgIHB1YmxpYyB1c2VyR29sZDogbnVtYmVyID0gMTAwMDAwO1xuICAgIC8qKiDmi6XmnInpkrvnn7MgKi9cbiAgICBwdWJsaWMgdXNlckRpYW1vbmQ6IG51bWJlciA9IDA7XG4gICAgLyoqIOeUqOaIt0lEICovXG4gICAgcHVibGljIHVzZXJJZDogbnVtYmVyID0gMDtcbiAgICAvKiog55So5oi3562J57qnICovXG4gICAgcHVibGljIHVzZXJMZXZlbDogbnVtYmVyID0gMTtcbiAgICAvKiog55So5oi357uP6aqMICovXG4gICAgcHVibGljIHVzZXJFeHA6IG51bWJlciA9IDA7XG4gICAgLyoqIOetiee6p+WinumVv+eahOaUtuebiiAqL1xuICAgIHB1YmxpYyB1c2VyTGV2ZWxFeHRyYUluY29tZTogbnVtYmVyID0gMTtcbiAgICAvKiog5pys5Zyw57yT5a2Y5pWw5o2uICovXG4gICAgcHVibGljIHN0b3JlX2tleTogc3RyaW5nID0gXCJzdG9yZV9rZXlcIjtcbiAgICAvKiog5q+P56eS5pS255uKICovXG4gICAgcHVibGljIHVzZXJJbmNvbWVTZWM6IG51bWJlciA9IDA7XG4gICAgLyoqIOmineWkluaUtuebii3miJjmlpfkurrmlbDmu6HlkI4rMTAlICovXG4gICAgcHVibGljIHVzZXJFeHRyYUluY29tZTogbnVtYmVyID0gMTtcbiAgICAvKiog5ZCv5Yqo5Yqg6YCfeDIgKi9cbiAgICBwdWJsaWMgdXNlckFjY2VWYWx1ZTogbnVtYmVyID0gMTtcbiAgICAvKiog5Yqg6YCf5pe26Ze0ICovXG4gICAgcHVibGljIHVzZXJBY2NlVGltZTogbnVtYmVyID0gMDtcbiAgICAvKiog6LeR6YGT6L2m5pWw6YePICovXG4gICAgcHVibGljIHVzZXJSdW5jYXJDb3VudDogbnVtYmVyID0gMDtcbiAgICAvKiog6LeR6YGT6L2m5pWw6YeP5pyA5aSn5YC8ICovXG4gICAgcHVibGljIHVzZXJSdW5jYXJDb3VudE1heDogbnVtYmVyID0gMDtcbn0iLCJpbXBvcnQgUGF0aENvbmZpZyBmcm9tIFwiLi4vY29uZmlnL1BhdGhDb25maWdcIjtcbmltcG9ydCBTb3VuZFZPIGZyb20gXCIuLi9kYi92by9Tb3VuZFZPXCI7XG5pbXBvcnQgR2xvYmFsRGF0YSBmcm9tIFwiLi4vZGIvR2xvYmFsRGF0YVwiO1xuaW1wb3J0IFNvdW5kTWdyIGZyb20gXCIuL1NvdW5kTWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2VTb3VuZCB7XG5cbiAgICBwcml2YXRlIF9jYWNoZTogYW55O1xuICAgIHByaXZhdGUgX2xvYWRpbmdDYWNoZTogQXJyYXk8c3RyaW5nPjtcbiAgICBwcml2YXRlIF9rZXk6IHN0cmluZztcbiAgICBwdWJsaWMgc291bmRQYXRoOiBzdHJpbmcgPSBcIlwiO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgc2VsZi5fY2FjaGUgPSB7fTtcbiAgICAgICAgc2VsZi5fbG9hZGluZ0NhY2hlID0gbmV3IEFycmF5PHN0cmluZz4oKTtcbiAgICAgICAgTGF5YS50aW1lci5sb29wKDEgKiA2MCAqIDEwMDAsIHNlbGYsIHNlbGYuZGVhbFNvdW5kVGltZXIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWkhOeQhumfs+S5kOaWh+S7tueahOa4heeQhlxuICAgICAqL1xuICAgIHByaXZhdGUgZGVhbFNvdW5kVGltZXIoKTogdm9pZCB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgbGV0IGN1cnJUaW1lOiBudW1iZXIgPSBMYXlhLkJyb3dzZXIubm93KCk7XG4gICAgICAgIGxldCBrZXlzID0gT2JqZWN0LmtleXMoc2VsZi5fY2FjaGUpO1xuICAgICAgICBmb3IgKGxldCBpOiBudW1iZXIgPSAwLCBsZW4gPSBrZXlzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICBsZXQga2V5ID0ga2V5c1tpXTtcbiAgICAgICAgICAgIGlmICghc2VsZi5jaGVja0NhbkNsZWFyKGtleSkpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICBpZiAoY3VyclRpbWUgLSBzZWxmLl9jYWNoZVtrZXldID49IFNvdW5kTWdyLkNMRUFSX1RJTUUpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgc2VsZi5fY2FjaGVba2V5XTtcbiAgICAgICAgICAgICAgICBMYXlhLmxvYWRlci5jbGVhclJlcyhrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6I635Y+WU291bmRcbiAgICAgKiBAcGFyYW0ga2V5XG4gICAgICogQHJldHVybnMge2VncmV0LlNvdW5kfVxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRTb3VuZChrZXk6IHN0cmluZyk6IExheWEuU291bmQge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIHNlbGYuX2tleSA9IGtleTtcbiAgICAgICAgbGV0IHZvOiBTb3VuZFZPID0gR2xvYmFsRGF0YS5nZXREYXRhKEdsb2JhbERhdGEuU291bmRWTywgTnVtYmVyKGtleSkpO1xuICAgICAgICBpZiAodm8gPT0gbnVsbCkgcmV0dXJuIG51bGw7XG4gICAgICAgIHNlbGYuc291bmRQYXRoID0gUGF0aENvbmZpZy5TT1VORF9QQVRILnJlcGxhY2UoXCJ7MH1cIiwgdm8uZmlsZSk7XG4gICAgICAgIGxldCBzb3VuZDogTGF5YS5Tb3VuZCA9IExheWEubG9hZGVyLmdldFJlcyhzZWxmLnNvdW5kUGF0aCk7XG4gICAgICAgIGlmIChzb3VuZCkge1xuICAgICAgICAgICAgaWYgKHNlbGYuX2NhY2hlW3NlbGYuc291bmRQYXRoXSkge1xuICAgICAgICAgICAgICAgIHNlbGYuX2NhY2hlW3NlbGYuc291bmRQYXRoXSA9IExheWEuQnJvd3Nlci5ub3coKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChzZWxmLl9sb2FkaW5nQ2FjaGUuaW5kZXhPZihzZWxmLnNvdW5kUGF0aCkgIT0gLTEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc291bmQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzZWxmLl9sb2FkaW5nQ2FjaGUucHVzaChzZWxmLnNvdW5kUGF0aCk7XG4gICAgICAgICAgICBMYXlhLmxvYWRlci5sb2FkKFt7IHVybDogc2VsZi5zb3VuZFBhdGgsIHR5cGU6IExheWEuTG9hZGVyLlNPVU5EIH1dLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHNlbGYsICgpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgaW5kZXg6IG51bWJlciA9IHNlbGYuX2xvYWRpbmdDYWNoZS5pbmRleE9mKHNlbGYuc291bmRQYXRoKTtcbiAgICAgICAgICAgICAgICBpZiAoaW5kZXggIT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fbG9hZGluZ0NhY2hlLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX2NhY2hlW3NlbGYuc291bmRQYXRoXSA9IExheWEuQnJvd3Nlci5ub3coKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5sb2FkZWRQbGF5KHNlbGYuX2tleSwgc2VsZi5zb3VuZFBhdGgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIG51bGwsIGZhbHNlKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNvdW5kO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOi1hOa6kOWKoOi9veWujOaIkOWQjuWkhOeQhuaSreaUvu+8jOWtkOexu+mHjeWGmVxuICAgICAqIEBwYXJhbSBrZXlcbiAgICAgKi9cbiAgICBwdWJsaWMgbG9hZGVkUGxheShrZXk6IHN0cmluZywgc291bmRQYXRoOiBzdHJpbmcpOiB2b2lkIHtcblxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOajgOa1i+S4gOS4quaWh+S7tuaYr+WQpuimgea4hemZpO+8jOWtkOexu+mHjeWGmVxuICAgICAqIEBwYXJhbSBrZXlcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBwdWJsaWMgY2hlY2tDYW5DbGVhcihrZXk6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG59IiwiaW1wb3J0IEJhc2VTb3VuZCBmcm9tIFwiLi9CYXNlU291bmRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU291bmRCRyBleHRlbmRzIEJhc2VTb3VuZCB7XG5cbiAgICBwcml2YXRlIF9jdXJyQmc6IHN0cmluZztcbiAgICBwcml2YXRlIF9jdXJyU291bmQ6IExheWEuU291bmQ7XG4gICAgcHJpdmF0ZSBfY3VyclNvdW5kQ2hhbm5lbDogTGF5YS5Tb3VuZENoYW5uZWw7XG4gICAgcHJpdmF0ZSBfdm9sdW1lOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5fY3VyckJnID0gXCJcIjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlgZzmraLlvZPliY3pn7PkuZBcbiAgICAgKi9cbiAgICBwdWJsaWMgc3RvcCgpOiB2b2lkIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBpZiAoc2VsZi5fY3VyclNvdW5kQ2hhbm5lbCkge1xuICAgICAgICAgICAgc2VsZi5fY3VyclNvdW5kQ2hhbm5lbC5zdG9wKCk7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5fY3VyclNvdW5kQ2hhbm5lbCA9IG51bGw7XG4gICAgICAgIHNlbGYuX2N1cnJTb3VuZCA9IG51bGw7XG4gICAgICAgIHNlbGYuX2N1cnJCZyA9IFwiXCI7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5pKt5pS+5p+Q5Liq6Z+z5LmQXG4gICAgICogQHBhcmFtIGVmZmVjdE5hbWVcbiAgICAgKi9cbiAgICBwdWJsaWMgcGxheShlZmZlY3ROYW1lOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBpZiAoc2VsZi5fY3VyckJnID09IGVmZmVjdE5hbWUpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHNlbGYuc3RvcCgpO1xuICAgICAgICBzZWxmLl9jdXJyQmcgPSBlZmZlY3ROYW1lO1xuICAgICAgICB2YXIgc291bmQ6IExheWEuU291bmQgPSBzZWxmLmdldFNvdW5kKGVmZmVjdE5hbWUpO1xuICAgICAgICBpZiAoc291bmQpIHtcbiAgICAgICAgICAgIHNlbGYucGxheVNvdW5kKHNlbGYuc291bmRQYXRoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOaSreaUvlxuICAgICAqIEBwYXJhbSBzb3VuZFxuICAgICAqL1xuICAgIHByaXZhdGUgcGxheVNvdW5kKHNvdW5kUGF0aDogc3RyaW5nKTogdm9pZCB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgc2VsZi5fY3VyclNvdW5kQ2hhbm5lbCA9IExheWEuU291bmRNYW5hZ2VyLnBsYXlNdXNpYyhzb3VuZFBhdGgsIDApO1xuICAgICAgICBpZiAoc2VsZi5fY3VyclNvdW5kQ2hhbm5lbCkgc2VsZi5fY3VyclNvdW5kQ2hhbm5lbC52b2x1bWUgPSB0aGlzLl92b2x1bWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6K6+572u6Z+z6YePXG4gICAgICogQHBhcmFtIHZvbHVtZVxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRWb2x1bWUodm9sdW1lOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBzZWxmLl92b2x1bWUgPSB2b2x1bWU7XG4gICAgICAgIGlmIChzZWxmLl9jdXJyU291bmRDaGFubmVsKSB7XG4gICAgICAgICAgICBzZWxmLl9jdXJyU291bmRDaGFubmVsLnZvbHVtZSA9IHNlbGYuX3ZvbHVtZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOi1hOa6kOWKoOi9veWujOaIkOWQjuWkhOeQhuaSreaUvlxuICAgICAqIEBwYXJhbSBrZXlcbiAgICAgKi9cbiAgICBwdWJsaWMgbG9hZGVkUGxheShrZXk6IHN0cmluZywgc291bmRQYXRoOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBpZiAoc2VsZi5fY3VyckJnID09IGtleSkge1xuICAgICAgICAgICAgdmFyIHNvdW5kOiBMYXlhLlNvdW5kID0gTGF5YS5sb2FkZXIuZ2V0UmVzKHNvdW5kUGF0aCk7XG4gICAgICAgICAgICBpZiAoc291bmQpIHtcbiAgICAgICAgICAgICAgICBzZWxmLnBsYXlTb3VuZChzb3VuZFBhdGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5qOA5rWL5LiA5Liq5paH5Lu25piv5ZCm6KaB5riF6ZmkXG4gICAgICogQHBhcmFtIGtleVxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIHB1YmxpYyBjaGVja0NhbkNsZWFyKGtleTogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgcmV0dXJuIHNlbGYuX2N1cnJCZyAhPSBrZXk7XG4gICAgfVxufSIsImltcG9ydCBCYXNlU291bmQgZnJvbSBcIi4vQmFzZVNvdW5kXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNvdW5kRWZmZWN0cyBleHRlbmRzIEJhc2VTb3VuZCB7XG5cbiAgICBwcml2YXRlIF92b2x1bWU6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XG5cbiAgICAvKipcbiAgICAgKiDmkq3mlL7kuIDkuKrpn7PmlYhcbiAgICAgKiBAcGFyYW0gZWZmZWN0TmFtZVxuICAgICAqL1xuICAgIHB1YmxpYyBwbGF5KGVmZmVjdElkOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgbGV0IHNvdW5kOiBMYXlhLlNvdW5kID0gdGhpcy5nZXRTb3VuZChlZmZlY3RJZCk7XG4gICAgICAgIGlmIChzb3VuZCkge1xuICAgICAgICAgICAgdGhpcy5wbGF5U291bmQodGhpcy5zb3VuZFBhdGgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5pKt5pS+XG4gICAgICogQHBhcmFtIHNvdW5kXG4gICAgICovXG4gICAgcHJpdmF0ZSBwbGF5U291bmQoc291bmRQYXRoOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgbGV0IGNoYW5uZWw6IExheWEuU291bmRDaGFubmVsID0gTGF5YS5Tb3VuZE1hbmFnZXIucGxheVNvdW5kKHNvdW5kUGF0aCwgMSk7XG4gICAgICAgIGlmIChjaGFubmVsKSBjaGFubmVsLnZvbHVtZSA9IHRoaXMuX3ZvbHVtZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDorr7nva7pn7Pph49cbiAgICAgKiBAcGFyYW0gdm9sdW1lXG4gICAgICovXG4gICAgcHVibGljIHNldFZvbHVtZSh2b2x1bWU6IG51bWJlcik6IHZvaWQge1xuICAgICAgICB0aGlzLl92b2x1bWUgPSB2b2x1bWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6LWE5rqQ5Yqg6L295a6M5oiQ5ZCO5aSE55CG5pKt5pS+XG4gICAgICogQHBhcmFtIGtleVxuICAgICAqL1xuICAgIHB1YmxpYyBsb2FkZWRQbGF5KGtleTogc3RyaW5nLCBzb3VuZFBhdGg6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICBsZXQgc291bmQ6IExheWEuU291bmQgPSBMYXlhLmxvYWRlci5nZXRSZXMoc291bmRQYXRoKTtcbiAgICAgICAgaWYgKHNvdW5kKSB7XG4gICAgICAgICAgICB0aGlzLnBsYXlTb3VuZCh0aGlzLnNvdW5kUGF0aCk7XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IFNvdW5kRWZmZWN0cyBmcm9tIFwiLi9Tb3VuZEVmZmVjdHNcIjtcbmltcG9ydCBTb3VuZEJHIGZyb20gXCIuL1NvdW5kQkdcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU291bmRNZ3Ige1xuXG4gICAgLyoqIOmfs+S5kOaWh+S7tua4heeQhuaXtumXtCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgQ0xFQVJfVElNRTogbnVtYmVyID0gMyAqIDYwICogMTAwMDtcbiAgICBwcml2YXRlIF9lZmZlY3Q6IFNvdW5kRWZmZWN0cztcbiAgICBwcml2YXRlIF9iZzogU291bmRCRztcbiAgICBwcml2YXRlIF9lZmZlY3RPbjogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9iZ09uOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2N1cnJCZzogc3RyaW5nO1xuICAgIHByaXZhdGUgX2JnVm9sdW1lOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfZWZmZWN0Vm9sdW1lOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5fYmdPbiA9IHRydWU7XG4gICAgICAgIHRoaXMuX2VmZmVjdE9uID0gdHJ1ZTtcblxuICAgICAgICB0aGlzLl9iZ1ZvbHVtZSA9IDAuNTtcbiAgICAgICAgdGhpcy5fZWZmZWN0Vm9sdW1lID0gMC41O1xuXG4gICAgICAgIHRoaXMuX2JnID0gbmV3IFNvdW5kQkcoKTtcbiAgICAgICAgdGhpcy5fYmcuc2V0Vm9sdW1lKHRoaXMuX2JnVm9sdW1lKTtcblxuICAgICAgICB0aGlzLl9lZmZlY3QgPSBuZXcgU291bmRFZmZlY3RzKCk7XG4gICAgICAgIHRoaXMuX2VmZmVjdC5zZXRWb2x1bWUodGhpcy5fZWZmZWN0Vm9sdW1lKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmkq3mlL7pn7PmlYhcbiAgICAgKiBAcGFyYW0gZWZmZWN0TmFtZVxuICAgICAqL1xuICAgIHB1YmxpYyBwbGF5RWZmZWN0KGVmZmVjdElkOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgaWYgKCF0aGlzLl9lZmZlY3RPbikgcmV0dXJuO1xuICAgICAgICB0aGlzLl9lZmZlY3QucGxheShlZmZlY3RJZCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5pKt5pS+6IOM5pmv6Z+z5LmQXG4gICAgICogQHBhcmFtIGtleVxuICAgICAqL1xuICAgIHB1YmxpYyBwbGF5QmcoYmdOYW1lOiBzdHJpbmcpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fY3VyckJnID0gYmdOYW1lO1xuICAgICAgICBpZiAoIXRoaXMuX2JnT24pIHJldHVybjtcbiAgICAgICAgdGhpcy5fYmcucGxheShiZ05hbWUpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWBnOatouiDjOaZr+mfs+S5kFxuICAgICAqL1xuICAgIHB1YmxpYyBzdG9wQmcoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX2JnLnN0b3AoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDorr7nva7pn7PmlYjmmK/lkKblvIDlkK9cbiAgICAgKiBAcGFyYW0gJGlzT25cbiAgICAgKi9cbiAgICBwdWJsaWMgc2V0RWZmZWN0T24oJGlzT246IGJvb2xlYW4pOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fZWZmZWN0T24gPSAkaXNPbjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDorr7nva7og4zmma/pn7PkuZDmmK/lkKblvIDlkK9cbiAgICAgKiBAcGFyYW0gJGlzT25cbiAgICAgKi9cbiAgICBwdWJsaWMgc2V0QmdPbigkaXNPbjogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICB0aGlzLl9iZ09uID0gJGlzT247XG4gICAgICAgIGlmICghdGhpcy5fYmdPbikge1xuICAgICAgICAgICAgdGhpcy5zdG9wQmcoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jdXJyQmcpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXlCZyh0aGlzLl9jdXJyQmcpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6K6+572u6IOM5pmv6Z+z5LmQ6Z+z6YePXG4gICAgICogQHBhcmFtIHZvbHVtZVxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRCZ1ZvbHVtZSh2b2x1bWU6IG51bWJlcik6IHZvaWQge1xuICAgICAgICB2b2x1bWUgPSBNYXRoLm1pbih2b2x1bWUsIDEpO1xuICAgICAgICB2b2x1bWUgPSBNYXRoLm1heCh2b2x1bWUsIDApO1xuICAgICAgICB0aGlzLl9iZ1ZvbHVtZSA9IHZvbHVtZTtcbiAgICAgICAgdGhpcy5fYmcuc2V0Vm9sdW1lKHRoaXMuX2JnVm9sdW1lKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDojrflj5bog4zmma/pn7PkuZDpn7Pph49cbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfVxuICAgICAqL1xuICAgIHB1YmxpYyBnZXRCZ1ZvbHVtZSgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5fYmdWb2x1bWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6K6+572u6Z+z5pWI6Z+z6YePXG4gICAgICogQHBhcmFtIHZvbHVtZVxuICAgICAqL1xuICAgIHB1YmxpYyBzZXRFZmZlY3RWb2x1bWUodm9sdW1lOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdm9sdW1lID0gTWF0aC5taW4odm9sdW1lLCAxKTtcbiAgICAgICAgdm9sdW1lID0gTWF0aC5tYXgodm9sdW1lLCAwKTtcbiAgICAgICAgdGhpcy5fZWZmZWN0Vm9sdW1lID0gdm9sdW1lO1xuICAgICAgICB0aGlzLl9lZmZlY3Quc2V0Vm9sdW1lKHRoaXMuX2VmZmVjdFZvbHVtZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6I635Y+W6Z+z5pWI6Z+z6YePXG4gICAgICogQHJldHVybnMge251bWJlcn1cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0RWZmZWN0Vm9sdW1lKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLl9lZmZlY3RWb2x1bWU7XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBiZ09uKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fYmdPbjtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0IGVmZmVjdE9uKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fZWZmZWN0T247XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBTb3VuZE1ncjtcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnMoKTogU291bmRNZ3Ige1xuICAgICAgICBpZiAoU291bmRNZ3IuX2luc3RhbmNlID09IG51bGwpIHtcbiAgICAgICAgICAgIFNvdW5kTWdyLl9pbnN0YW5jZSA9IG5ldyBTb3VuZE1ncigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBTb3VuZE1nci5faW5zdGFuY2U7XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNvdW5kVHlwZSB7XG5cbiAgICAvKiog5Yqg6YCfICovXG4gICAgcHVibGljIHN0YXRpYyBHQU1FX0FDQ0U6IHN0cmluZyA9IFwiMTAwMDFcIjtcbiAgICAvKiog6IOM5pmvICovXG4gICAgcHVibGljIHN0YXRpYyBCR19NVVNJQzogc3RyaW5nID0gXCIxMDAwMlwiO1xuICAgIC8qKiDoi7Hpm4Tov5vlhaXmiJjmlpcgKi9cbiAgICBwdWJsaWMgc3RhdGljIEVOVEVSX0dBTUU6IHN0cmluZyA9IFwiMTAwMDNcIjtcbiAgICAvKiog6YeR5biBICovXG4gICAgcHVibGljIHN0YXRpYyBDT0lOOiBzdHJpbmcgPSBcIjEwMDA0XCI7XG4gICAgLyoqIOaNouS9jSAqL1xuICAgIHB1YmxpYyBzdGF0aWMgRFJBV19IRVJPOiBzdHJpbmcgPSBcIjEwMDA1XCI7XG4gICAgLyoqIOaLm+WLn+iLsembhCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgU1VNTU9OX0hFUk86IHN0cmluZyA9IFwiMTAwMDZcIjtcbiAgICAvKiog6Kej6ZSB5qC85a2QICovXG4gICAgcHVibGljIHN0YXRpYyBVTkxPQ0s6IHN0cmluZyA9IFwiMTAwMDdcIjtcbiAgICAvKiog6Iux6ZuE5Y2H57qnICovXG4gICAgcHVibGljIHN0YXRpYyBVUEdSQURFX0hFUk86IHN0cmluZyA9IFwiMTAwMDhcIjtcbiAgICAvKiog5ZCI5oiQICovXG4gICAgcHVibGljIHN0YXRpYyBNQUtFX0hFUk86IHN0cmluZyA9IFwiMTAwMDlcIjtcbn0iLCJpbXBvcnQgTGF5ZXJNZ3IgZnJvbSBcIi4uL2xheWVyL0xheWVyTWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFsaWduVXRpbHMge1xuXHQvKipcblx0ICog5oqK546w5a6e5a+56LGh6K6+572u5Yiw5bGP5bmV5rC05bmz5bGF5Lit77yM5Z6C55u05bGF5Lit55qE5L2N572u5LiK77yM5L2/55So5YmN6K+356Gu6K6kPGNvZGU+c3ByaXRlPC9jb2RlPuWuvemrmOS4jeS4ujBcblx0ICogQHBhcmFtIHNwcml0ZVxuXHQgKiBAcGFyYW0gZGVsYXlGcmFtZXNcblx0ICogQHBhcmFtIHVzZVJlZ2lzdGVyUG9pbnRcblx0ICpcblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgc2V0VG9TY3JlZW5DZW50ZXIoXG5cdFx0c3ByaXRlOiBMYXlhLlNwcml0ZSxcblx0XHRkZWxheUZyYW1lcz86IG51bWJlcixcblx0XHR1c2VSZWdpc3RlclBvaW50PzogYm9vbGVhblxuXHQpOiB2b2lkIHtcblx0XHRpZiAoZGVsYXlGcmFtZXMpIHtcblx0XHRcdExheWEudGltZXIuZnJhbWVPbmNlKFxuXHRcdFx0XHRkZWxheUZyYW1lcyxcblx0XHRcdFx0QWxpZ25VdGlscyxcblx0XHRcdFx0QWxpZ25VdGlscy5zZXRUb1NjcmVlbkNlbnRlcixcblx0XHRcdFx0W3Nwcml0ZV0sXG5cdFx0XHRcdGZhbHNlXG5cdFx0XHQpO1xuXHRcdH1cblx0XHRpZiAodXNlUmVnaXN0ZXJQb2ludCkge1xuXHRcdFx0c3ByaXRlLnggPSBMYXllck1nci5zdGFnZURlc2lnbldpZHRoICogMC41O1xuXHRcdFx0c3ByaXRlLnkgPSBMYXllck1nci5zdGFnZURlc2lnbkhlaWdodCAqIDAuNTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0c3ByaXRlLnggPSAoTGF5ZXJNZ3Iuc3RhZ2VEZXNpZ25XaWR0aCAtIHNwcml0ZS53aWR0aCkgKiAwLjU7XG5cdFx0XHRzcHJpdGUueSA9IChMYXllck1nci5zdGFnZURlc2lnbkhlaWdodCAtIHNwcml0ZS5oZWlnaHQpICogMC41O1xuXHRcdH1cblxuXHR9XG5cblx0LyoqXG5cdCAqIOaKiueOsOWunuWvueixoeiuvue9ruWIsOWxj+W5leawtOW5s+WxheS4re+8jOWeguebtOWcqDAuNjE455qE6buE6YeR5YiG5Ymy54K55L2N572u5LiK77yM5L2/55So5YmN6K+356Gu6K6kPGNvZGU+c3ByaXRlPC9jb2RlPuWuvemrmOS4jeS4ujBcblx0ICogQHBhcmFtIHNwcml0ZVxuXHQgKiBAcGFyYW0gZGVsYXlGcmFtZXNcblx0ICogQHBhcmFtIHVzZVJlZ2lzdGVyUG9pbnRcblx0ICpcblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgc2V0VG9TY3JlZW5Hb2xkZW5Qb3MoXG5cdFx0c3ByaXRlOiBMYXlhLlNwcml0ZSxcblx0XHRkZWxheUZyYW1lcz86IG51bWJlcixcblx0XHR1c2VSZWdpc3RlclBvaW50PzogYm9vbGVhblxuXHQpOiB2b2lkIHtcblx0XHRpZiAoZGVsYXlGcmFtZXMpIHtcblx0XHRcdExheWEudGltZXIuZnJhbWVPbmNlKFxuXHRcdFx0XHRkZWxheUZyYW1lcyxcblx0XHRcdFx0QWxpZ25VdGlscyxcblx0XHRcdFx0QWxpZ25VdGlscy5zZXRUb1NjcmVlbkdvbGRlblBvcyxcblx0XHRcdFx0W3Nwcml0ZV0sXG5cdFx0XHRcdGZhbHNlXG5cdFx0XHQpO1xuXHRcdH1cblx0XHRpZiAodXNlUmVnaXN0ZXJQb2ludCkge1xuXHRcdFx0c3ByaXRlLnggPSBMYXllck1nci5zdGFnZURlc2lnbldpZHRoICogMC41O1xuXHRcdFx0c3ByaXRlLnkgPSBMYXllck1nci5zdGFnZURlc2lnbkhlaWdodCAqIDAuMzgyO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRzcHJpdGUueCA9IChMYXllck1nci5zdGFnZURlc2lnbldpZHRoIC0gc3ByaXRlLndpZHRoKSAqIDAuNTtcblx0XHRcdHNwcml0ZS55ID0gKExheWVyTWdyLnN0YWdlRGVzaWduSGVpZ2h0IC0gc3ByaXRlLmhlaWdodCkgKiAwLjM4Mjtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICog5LuF5bCG55uu5qCH5a+56LGhdGFyZ2V055qEeOWdkOagh+WSjHnlnZDmoIforr7nva7kuLrliLByZWbnmoTkuK3lv4PjgILvvIjms6jmhI/vvIzlpoLmnpxyZWbmsqHmnInlrr3pq5jlj6/og73kvJrlr7zoh7TmhI/lpJbnmoTpl67popjvvIlcblx0ICogQHBhcmFtIHRhcmdldFxuXHQgKiBAcGFyYW0gcmVmXG5cdCAqXG5cdCAqL1xuXHRwdWJsaWMgc3RhdGljIHNldFRvU3ByaXRlQ2VudGVyKHRhcmdldDogTGF5YS5TcHJpdGUsIHJlZjogTGF5YS5TcHJpdGUpOiB2b2lkIHtcblx0XHRpZiAoIXRhcmdldCB8fCAhcmVmKSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJFaXRoZXIgdGFyZ2V0IG9yIHJlZiBpcyBudWxsLlwiKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LnBvcyhyZWYud2lkdGggKiAwLjUsIHJlZi5oZWlnaHQgKiAwLjUpO1xuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiDku4XlsIbnm67moIflr7nosaF0YXJnZXTmoLnmja7lr7npvZDmlrnlvI/orr7nva7lnZDmoIfjgILku4Xorr7nva545Z2Q5qCH5ZKMeeWdkOagh++8jOW/veeVpeebruagh+WvueixoXRhcmdldOeahOWuvemrmOOAgu+8iOazqOaEj++8jOWmguaenHJlZuayoeacieWuvemrmOWPr+iDveS8muWvvOiHtOaEj+WklueahOmXrumimO+8iVxuXHQgKiBAcGFyYW0gdGFyZ2V0XG5cdCAqIEBwYXJhbSByZWZcblx0ICpcblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgc2V0VG8oXG5cdFx0YWxpZ246IHN0cmluZyxcblx0XHR0YXJnZXQ6IExheWEuU3ByaXRlLFxuXHRcdHJlZjogTGF5YS5TcHJpdGVcblx0KTogdm9pZCB7XG5cdFx0aWYgKGFsaWduID09PSBcImNlbnRlclwiKSB7XG5cdFx0XHRBbGlnblV0aWxzLnNldFRvU3ByaXRlQ2VudGVyKHRhcmdldCwgcmVmKTtcblx0XHR9XG5cdH1cbn1cbiIsIi8qKlxuICog5bmz5Z2H5pWw5bel5YW357G7XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEF2ZXJhZ2VVdGlscyB7XG5cbiAgICBwcml2YXRlIG1heE51bTogbnVtYmVyO1xuICAgIHByaXZhdGUgbnVtczogQXJyYXk8bnVtYmVyPiA9IFtdO1xuICAgIHByaXZhdGUgbnVtc0xlbjogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIG51bVN1bTogbnVtYmVyID0gMDtcblxuICAgIC8qKlxuICAgICAqIOaehOmAoOWHveaVsFxuICAgICAqIEBwYXJhbSAkbWF4TnVtIOWPguS4juiuoeeul+eahOacgOWkp+WAvFxuICAgICAqL1xuICAgIHB1YmxpYyBjb25zdHJ1Y3RvcigkbWF4TnVtOiBudW1iZXIgPSAxMCkge1xuICAgICAgICB0aGlzLm1heE51bSA9ICRtYXhOdW07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5Yqg5YWl5LiA5Liq5YC8XG4gICAgICogQHBhcmFtIHZhbHVlXG4gICAgICovXG4gICAgcHVibGljIHB1c2godmFsdWU6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5udW1zTGVuID4gdGhpcy5tYXhOdW0pIHtcbiAgICAgICAgICAgIHRoaXMubnVtc0xlbi0tO1xuICAgICAgICAgICAgdGhpcy5udW1TdW0gLT0gdGhpcy5udW1zLnNoaWZ0KCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5udW1zLnB1c2godmFsdWUpO1xuICAgICAgICB0aGlzLm51bVN1bSArPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5udW1zTGVuKys7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6I635Y+W5bmz5Z2H5YC8XG4gICAgICogQHJldHVybnMge251bWJlcn1cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0VmFsdWUoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubnVtU3VtIC8gdGhpcy5udW1zTGVuO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOa4heepulxuICAgICAqL1xuICAgIHB1YmxpYyBjbGVhcigpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5udW1zLnNwbGljZSgwKTtcbiAgICAgICAgdGhpcy5udW1zTGVuID0gMDtcbiAgICAgICAgdGhpcy5udW1TdW0gPSAwO1xuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDb2xvclV0aWwge1xuXG4gICAgLyoqXG4gICAgICog5ruk6ZWcXG4gICAgICogQHBhcmFtIHR5cGUgIDHvvJrlj5jmmpcgMu+8muWPmOm7kVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgY3JlYXRlQ29sb3JGaWx0ZXIodHlwZTogbnVtYmVyID0gMCk6IEFycmF5PExheWEuQ29sb3JGaWx0ZXI+IHtcbiAgICAgICAgaWYgKHR5cGUgPT0gMSkgey8v5Y+Y5pqXXG4gICAgICAgICAgICB2YXIgY29sb3JWID0gMC42O1xuICAgICAgICAgICAgdmFyIGNvbG9yTWF0ID1cbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yViwgMCwgMCwgMCwgMCwgLy9SXG4gICAgICAgICAgICAgICAgICAgIDAsIGNvbG9yViwgMCwgMCwgMCwgLy9HXG4gICAgICAgICAgICAgICAgICAgIDAsIDAsIGNvbG9yViwgMCwgMCwgLy9CXG4gICAgICAgICAgICAgICAgICAgIDAsIDAsIDAsIDEsIDAsIC8vQVxuICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICAvL+WIm+W7uuS4gOS4quminOiJsua7pOmVnOWvueixoVxuICAgICAgICAgICAgdmFyIGNvbG9yRmlsdGVyID0gbmV3IExheWEuQ29sb3JGaWx0ZXIoY29sb3JNYXQpO1xuICAgICAgICAgICAgcmV0dXJuIFtjb2xvckZpbHRlcl07XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PSAyKSB7Ly/lj5jpu5FcbiAgICAgICAgICAgIHZhciBjb2xvclYgPSAwLjY7XG4gICAgICAgICAgICB2YXIgY29sb3JNYXQgPVxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgMCwgMCwgMCwgMCwgMCwgLy9SXG4gICAgICAgICAgICAgICAgICAgIDAsIDAsIDAsIDAsIDAsIC8vR1xuICAgICAgICAgICAgICAgICAgICAwLCAwLCAwLCAwLCAwLCAvL0JcbiAgICAgICAgICAgICAgICAgICAgMCwgMCwgMCwgMSwgMCwgLy9BXG4gICAgICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIC8v5Yib5bu65LiA5Liq6aKc6Imy5ruk6ZWc5a+56LGhXG4gICAgICAgICAgICB2YXIgY29sb3JGaWx0ZXIgPSBuZXcgTGF5YS5Db2xvckZpbHRlcihjb2xvck1hdCk7XG4gICAgICAgICAgICByZXR1cm4gW2NvbG9yRmlsdGVyXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuXG59IiwiaW1wb3J0IEhlYWRJdGVtIGZyb20gXCIuLi8uLi9tb2R1bGUvaGFsbC92aWV3L2l0ZW0vSGVhZEl0ZW1cIjtcbmltcG9ydCBBbGlnblV0aWxzIGZyb20gXCIuL0FsaWduVXRpbHNcIjtcbmltcG9ydCBMYXllck1nciBmcm9tIFwiLi4vbGF5ZXIvTGF5ZXJNZ3JcIjtcbmltcG9ydCBCb25lQW5pbSBmcm9tIFwiLi4vYm9uZS9Cb25lQW5pbVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFZmZlY3RVdGlsIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xuXG5cbiAgICAvKiog6aOY5paH5a2XICovXG4gICAgcHVibGljIHN0YXRpYyBwbGF5VGV4dEVmZmVjdChwYXJlbnROb2RlOiBhbnksIGNvbnRlbnQ6IHN0cmluZywgcG9zOiB7IHg6IG51bWJlciwgeTogbnVtYmVyIH0gPSBudWxsKTogdm9pZCB7XG4gICAgICAgIHZhciBjb2luTGFiZWwgPSBuZXcgTGF5YS5MYWJlbCgpO1xuICAgICAgICBjb2luTGFiZWwudGV4dCA9IGNvbnRlbnQ7XG4gICAgICAgIGNvaW5MYWJlbC5mb250U2l6ZSA9IDMwO1xuICAgICAgICBjb2luTGFiZWwuY29sb3IgPSBcIiNmZmYxYmFcIjtcbiAgICAgICAgY29pbkxhYmVsLmFuY2hvclggPSAwLjU7XG4gICAgICAgIGNvaW5MYWJlbC5hbmNob3JZID0gMC41O1xuICAgICAgICBwYXJlbnROb2RlLmFkZENoaWxkKGNvaW5MYWJlbCk7XG4gICAgICAgIGlmIChwb3MpIHtcbiAgICAgICAgICAgIGNvaW5MYWJlbC5wb3MocG9zLngsIHBvcy55KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvaW5MYWJlbC5wb3MocGFyZW50Tm9kZS53aWR0aCAvIDIsIC1wYXJlbnROb2RlLmhlaWdodCAvIDIpO1xuICAgICAgICB9XG4gICAgICAgIExheWEuVHdlZW4udG8oY29pbkxhYmVsLCB7IHg6IGNvaW5MYWJlbC54LCB5OiAoY29pbkxhYmVsLnkgLSA3MCksIGFscGhhOiAwIH0sIDIwMDAsXG4gICAgICAgICAgICBMYXlhLkVhc2UuY3ViaWNJbk91dCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoX2NvaW5MYWJlbDogTGF5YS5Ob2RlKSA9PiB7XG4gICAgICAgICAgICAgICAgX2NvaW5MYWJlbC5yZW1vdmVTZWxmKCk7XG4gICAgICAgICAgICB9LCBbY29pbkxhYmVsXSkpO1xuICAgIH1cblxuICAgIC8qKiDkuKToi7Hpm4TlkIjlubbmlYjmnpwgKi9cbiAgICBwdWJsaWMgc3RhdGljIHBsYXlIZXJvTWVyZ2VFZmZlY3QocGFyZW50Tm9kZTogYW55LCBoZXJvSWQ6IG51bWJlciwgbmV3SGVyb09iajogYW55KTogdm9pZCB7XG4gICAgICAgIC8v5Z+656GA6IqC54K5XG4gICAgICAgIGxldCBlZmZlY3ROb2RlOiBMYXlhLlNwcml0ZSA9IG5ldyBMYXlhLlNwcml0ZSgpO1xuICAgICAgICBwYXJlbnROb2RlLmFkZENoaWxkKGVmZmVjdE5vZGUpO1xuICAgICAgICBsZXQgcG9zID0gbmV3SGVyb09iai5sb2NhbFRvR2xvYmFsKG5ldyBMYXlhLlBvaW50KDAsIDApKTtcbiAgICAgICAgcG9zID0gcGFyZW50Tm9kZS5nbG9iYWxUb0xvY2FsKHBvcyk7XG4gICAgICAgIGVmZmVjdE5vZGUucG9zKHBvcy54LCBwb3MueSk7XG4gICAgICAgIG5ld0hlcm9PYmoudmlzaWJsZSA9IGZhbHNlO1xuXG4gICAgICAgIGxldCBvZmZzZXRYID0gNzA7XG4gICAgICAgIGxldCBsZWZ0SGVhZEl0ZW06IEhlYWRJdGVtID0gTGF5YS5Qb29sLmdldEl0ZW1CeUNsYXNzKFwicF9IZWFkSXRlbVwiLCBIZWFkSXRlbSk7IC8vbmV3IEhlYWRJdGVtKCk7XG4gICAgICAgIGVmZmVjdE5vZGUuYWRkQ2hpbGQobGVmdEhlYWRJdGVtKTtcbiAgICAgICAgbGVmdEhlYWRJdGVtLnVwZGF0ZUhlYWRTa2luKGhlcm9JZCk7XG4gICAgICAgIExheWEuVHdlZW4udG8obGVmdEhlYWRJdGVtLCB7IHg6IC1vZmZzZXRYIH0sIDMwMCwgTGF5YS5FYXNlLmVsYXN0aWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhsZWZ0SGVhZEl0ZW0sIHsgeDogMCB9LCAxMDAsIExheWEuRWFzZS5saW5lYXJJbiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgZWZmZWN0Tm9kZS5yZW1vdmVDaGlsZHJlbigpO1xuICAgICAgICAgICAgICAgIHRoaXMucGxheUNvaW5FZmZlY3QoZWZmZWN0Tm9kZSwgJ2ltYWdlcy9jb21tb24vc3RhcjIucG5nJywgeyB4OiA1MiwgeTogODAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBlZmZlY3ROb2RlLnJlbW92ZVNlbGYoKTtcbiAgICAgICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi5jbGVhclR3ZWVuKGxlZnRIZWFkSXRlbSk7XG4gICAgICAgICAgICAgICAgICAgIGxlZnRIZWFkSXRlbS5yZXNldCgpO1xuICAgICAgICAgICAgICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcihcInBfSGVhZEl0ZW1cIiwgbGVmdEhlYWRJdGVtKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAobmV3SGVyb09iaiAmJiBuZXdIZXJvT2JqLkluZm8uaGVyb0lkID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBuZXdIZXJvT2JqLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfSkpO1xuICAgICAgICAvL+WkjeWItuWTgVxuICAgICAgICBsZXQgY29weUhlYWRJdGVtOiBIZWFkSXRlbSA9IExheWEuUG9vbC5nZXRJdGVtQnlDbGFzcyhcInBfSGVhZEl0ZW1cIiwgSGVhZEl0ZW0pOyAvL25ldyBIZWFkSXRlbSgpO1xuICAgICAgICBsZWZ0SGVhZEl0ZW0uYWRkQ2hpbGQoY29weUhlYWRJdGVtKTtcbiAgICAgICAgY29weUhlYWRJdGVtLnVwZGF0ZUhlYWRTa2luKGhlcm9JZCk7XG4gICAgICAgIGNvcHlIZWFkSXRlbS5wb3MoMCwgMCk7XG4gICAgICAgIExheWEuVHdlZW4udG8oY29weUhlYWRJdGVtLCB7IHg6IG9mZnNldFggKiAyIH0sIDMwMCwgTGF5YS5FYXNlLmVsYXN0aWNPdXQsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhjb3B5SGVhZEl0ZW0sIHsgeDogMCB9LCAxMDAsIExheWEuRWFzZS5saW5lYXJJbiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi5jbGVhclR3ZWVuKGNvcHlIZWFkSXRlbSk7XG4gICAgICAgICAgICAgICAgY29weUhlYWRJdGVtLnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgTGF5YS5Qb29sLnJlY292ZXIoXCJwX0hlYWRJdGVtXCIsIGNvcHlIZWFkSXRlbSk7XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH0pKTtcbiAgICB9XG5cbiAgICAvKiog6aOY6YeR5biBICovXG4gICAgcHVibGljIHN0YXRpYyBwbGF5Q29pbkVmZmVjdChwYXJlbnROb2RlOiBhbnksIGltZ1VybDogc3RyaW5nLCBvZmZzZXQ6IGFueSA9IHsgeDogMCwgeTogMCB9LCBjYWxsYmFjazogYW55ID0gbnVsbCk6IHZvaWQge1xuICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgMTU7IGluZGV4KyspIHtcbiAgICAgICAgICAgIGxldCBpbWdDb2luOiBMYXlhLkltYWdlID0gTGF5YS5Qb29sLmdldEl0ZW1CeUNsYXNzKFwicF9JbWFnZV9zdGFyXCIsIExheWEuSW1hZ2UpO1xuICAgICAgICAgICAgaW1nQ29pbi5ncmFwaGljcy5jbGVhcigpO1xuICAgICAgICAgICAgaW1nQ29pbi5sb2FkSW1hZ2UoaW1nVXJsKTtcbiAgICAgICAgICAgIGltZ0NvaW4uc2NhbGUoMSwgMSk7XG4gICAgICAgICAgICBpbWdDb2luLmFscGhhID0gMTtcbiAgICAgICAgICAgIGltZ0NvaW4ucGl2b3QoaW1nQ29pbi53aWR0aCAvIDIsIGltZ0NvaW4uaGVpZ2h0IC8gMik7XG4gICAgICAgICAgICBwYXJlbnROb2RlLmFkZENoaWxkKGltZ0NvaW4pO1xuICAgICAgICAgICAgdmFyIHJhbmRYID0gTWF0aC5yYW5kb20oKSAtIDAuNTtcbiAgICAgICAgICAgIHZhciByYW5kWSA9IE1hdGgucmFuZG9tKCkgLSAwLjU7XG5cbiAgICAgICAgICAgIHZhciBjaWNsZVggPSAxMCAqIE1hdGguY29zKGluZGV4ICogTWF0aC5QSSAvIDcpICsgMTAgKiByYW5kWDtcbiAgICAgICAgICAgIHZhciBjaWNsZVkgPSAxMCAqIE1hdGguc2luKGluZGV4ICogTWF0aC5QSSAvIDcpICsgMTAgKiByYW5kWTtcbiAgICAgICAgICAgIGltZ0NvaW4ucG9zKHBhcmVudE5vZGUud2lkdGggLyAyICsgY2ljbGVYICsgb2Zmc2V0LngsIHBhcmVudE5vZGUuaGVpZ2h0IC8gMiArIGNpY2xlWSArIG9mZnNldC55KTtcbiAgICAgICAgICAgIHZhciBjb2luUG9zID0geyB4OiAoaW1nQ29pbi54ICsgY2ljbGVYICogNSksIHk6IChpbWdDb2luLnkgKyBjaWNsZVkgKiA1KSB9O1xuXG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKGltZ0NvaW4sIHsgeDogY29pblBvcy54LCB5OiBjb2luUG9zLnksIHNjYWxlWDogMC44LCBzY2FsZVk6IDAuOCwgcm90YXRpb246IChyYW5kWCArIHJhbmRZKSAqIDM2MCB9LCA1MDAsIExheWEuRWFzZS5leHBvT3V0KTtcbiAgICAgICAgICAgIGltZ0NvaW4uZnJhbWVPbmNlKDEwLCB0aGlzLCAoX2NvaW5TcDogTGF5YS5Ob2RlLCBfY29pblBvczogYW55KSA9PiB7XG4gICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhfY29pblNwLCB7IHNjYWxlWDogMCwgc2NhbGVZOiAwLCBhbHBoYTogMC4yLCByb3RhdGlvbjogKHJhbmRYICsgcmFuZFkpICogMzYwIH0sIDEwMDAsXG4gICAgICAgICAgICAgICAgICAgIExheWEuRWFzZS5saW5lYXJOb25lLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIChfY29pblNwOiBMYXlhLk5vZGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jb2luU3AucmVtb3ZlU2VsZigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltZ0NvaW4ucmVtb3ZlQ2hpbGRyZW4oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltZ0NvaW4ucmVtb3ZlU2VsZigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaW1nQ29pbi5zY2FsZSgxLCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltZ0NvaW4uYWxwaGEgPSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgaW1nQ29pbi5yb3RhdGlvbiA9IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcihcInBfSW1hZ2Vfc3RhclwiLCBpbWdDb2luKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgW19jb2luU3BdKSk7XG4gICAgICAgICAgICB9LCBbaW1nQ29pbiwgY29pblBvc10pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOS6uueJqeiHqueZveW8ueahhuaViOaenCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgcGxheURpYWxvZ3VlRWZmZWN0KHBhcmVudE5vZGU6IGFueSwgaW1nVXJsOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZywgcG9zOiB7IHg6IG51bWJlciwgeTogbnVtYmVyIH0gPSBudWxsLCB6T3JkZXI6IG51bWJlciA9IDAsIGlzRmxpcFg6IGJvb2xlYW4gPSBmYWxzZSk6IHZvaWQge1xuICAgICAgICBsZXQgaW1nVGlwczogTGF5YS5JbWFnZSA9IExheWEuUG9vbC5nZXRJdGVtQnlDbGFzcyhcInBfSW1hZ2VcIiwgTGF5YS5JbWFnZSk7XG4gICAgICAgIGltZ1RpcHMuc2tpbiA9IGltZ1VybDtcbiAgICAgICAgaW1nVGlwcy5hbmNob3JYID0gMDtcbiAgICAgICAgaW1nVGlwcy5hbmNob3JZID0gMTtcbiAgICAgICAgcGFyZW50Tm9kZS5hZGRDaGlsZChpbWdUaXBzKTtcbiAgICAgICAgaWYgKHBvcykge1xuICAgICAgICAgICAgaW1nVGlwcy5wb3MocG9zLngsIHBvcy55KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGltZ1RpcHMucG9zKHBhcmVudE5vZGUud2lkdGggLyAyLCAtcGFyZW50Tm9kZS5oZWlnaHQgLyAyKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoek9yZGVyID4gMCkge1xuICAgICAgICAgICAgaW1nVGlwcy56T3JkZXIgPSB6T3JkZXI7XG4gICAgICAgIH1cbiAgICAgICAgLy/po5jmloflrZdcbiAgICAgICAgdmFyIGNvaW5MYWJlbCA9IExheWEuUG9vbC5nZXRJdGVtQnlDbGFzcyhcInBfTGFiZWxcIiwgTGF5YS5MYWJlbCk7XG4gICAgICAgIGNvaW5MYWJlbC50ZXh0ID0gY29udGVudDtcbiAgICAgICAgY29pbkxhYmVsLmZvbnRTaXplID0gMjI7XG4gICAgICAgIGNvaW5MYWJlbC5jb2xvciA9IFwiIzAwMDAwMFwiO1xuICAgICAgICBjb2luTGFiZWwuYW5jaG9yWCA9IDAuNTtcbiAgICAgICAgY29pbkxhYmVsLmFuY2hvclkgPSAwLjU7XG4gICAgICAgIGNvaW5MYWJlbC53aWR0aCA9IDIyMDtcbiAgICAgICAgY29pbkxhYmVsLmhlaWdodCA9IDEwMDtcbiAgICAgICAgY29pbkxhYmVsLndvcmRXcmFwID0gdHJ1ZTtcbiAgICAgICAgY29pbkxhYmVsLnZhbGlnbiA9IFwibWlkZGxlXCI7XG4gICAgICAgIGltZ1RpcHMuYWRkQ2hpbGQoY29pbkxhYmVsKTtcbiAgICAgICAgY29pbkxhYmVsLnBvcyhpbWdUaXBzLndpZHRoICogMC41LCBpbWdUaXBzLmhlaWdodCAqIDAuNDYpO1xuICAgICAgICAvL+mVnOWDj1xuICAgICAgICBpZiAoaXNGbGlwWCkge1xuICAgICAgICAgICAgaW1nVGlwcy5zY2FsZVggPSAtMTtcbiAgICAgICAgICAgIGNvaW5MYWJlbC5zY2FsZVggPSAtMTtcbiAgICAgICAgfVxuICAgICAgICAvL+WKqOeUu1xuICAgICAgICBsZXQgdGltZUxpbmUgPSBuZXcgTGF5YS5UaW1lTGluZSgpO1xuICAgICAgICB0aW1lTGluZS5hZGRMYWJlbChcInRsMVwiLCAwKS5mcm9tKGltZ1RpcHMsIHsgc2NhbGVYOiAwLCBzY2FsZVk6IDAgfSwgMzAwLCBMYXlhLkVhc2UubGluZWFyTm9uZSlcbiAgICAgICAgICAgIC5hZGRMYWJlbChcInRsMlwiLCAzMDApLnRvKGltZ1RpcHMsIHsgYWxwaGE6IDEgfSwgMTIwMCwgTGF5YS5FYXNlLmxpbmVhck5vbmUpXG4gICAgICAgICAgICAuYWRkTGFiZWwoXCJ0bDNcIiwgMTUwMCkudG8oaW1nVGlwcywgeyBhbHBoYTogMCB9LCAxMDAwLCBMYXlhLkVhc2UuY3ViaWNJbk91dClcbiAgICAgICAgdGltZUxpbmUub24oTGF5YS5FdmVudC5DT01QTEVURSwgaW1nVGlwcywgKCkgPT4ge1xuICAgICAgICAgICAgTGF5YS5Qb29sLnJlY292ZXIoXCJwX0xhYmVsXCIsIGNvaW5MYWJlbCk7XG4gICAgICAgICAgICBpbWdUaXBzLnJlbW92ZUNoaWxkcmVuKCk7XG4gICAgICAgICAgICBpbWdUaXBzLnJlbW92ZVNlbGYoKTtcbiAgICAgICAgICAgIGltZ1RpcHMuc2NhbGUoMSwgMSk7XG4gICAgICAgICAgICBpbWdUaXBzLmFscGhhID0gMTtcbiAgICAgICAgICAgIExheWEuUG9vbC5yZWNvdmVyKFwicF9JbWFnZVwiLCBpbWdUaXBzKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRpbWVMaW5lLnBsYXkoMCwgZmFsc2UpO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgcGxheUFjY0VmZmVjdChwYXJlbnROb2RlOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgbGV0IGltZzogTGF5YS5JbWFnZSA9IExheWEuUG9vbC5nZXRJdGVtQnlDbGFzcyhcInBfSW1hZ2VcIiwgTGF5YS5JbWFnZSk7XG4gICAgICAgIGltZy5za2luID0gXCJpbWFnZXMvaGFsbC9hY2NlX2VmZmVjdC5wbmdcIjtcbiAgICAgICAgaW1nLmFuY2hvclggPSBpbWcuYW5jaG9yWSA9IDAuNTtcbiAgICAgICAgaW1nLnNjYWxlKDAsIC0xKTtcbiAgICAgICAgQWxpZ25VdGlscy5zZXRUb1NjcmVlbkdvbGRlblBvcyhpbWcsIDAsIHRydWUpO1xuICAgICAgICBMYXllck1nci5JbnMuc2NyZWVuRWZmZWN0TGF5ZXIuYWRkQ2hpbGQoaW1nKTtcbiAgICAgICAgbGV0IHRpbWVMaW5lID0gbmV3IExheWEuVGltZUxpbmUoKTtcbiAgICAgICAgdGltZUxpbmUuYWRkTGFiZWwoXCJ0bDFcIiwgMCkuZnJvbShpbWcsIHsgc2NhbGVYOiAwLjQsIHNjYWxlWTogMSB9LCAxMDApXG4gICAgICAgICAgICAuYWRkTGFiZWwoXCJ0bDJcIiwgMCkudG8oaW1nLCB7IHNjYWxlWDogMC42NSwgc2NhbGVZOiAtMSB9LCAyMDApXG4gICAgICAgICAgICAuYWRkTGFiZWwoXCJ0bDNcIiwgMCkudG8oaW1nLCB7IHNjYWxlWDogMSwgc2NhbGVZOiAxIH0sIDMwMClcbiAgICAgICAgICAgIC5hZGRMYWJlbChcInRsNFwiLCAwKS50byhpbWcsIHsgc2NhbGVYOiAxLCBzY2FsZVk6IDEgfSwgNTAwKVxuICAgICAgICB0aW1lTGluZS5vbihMYXlhLkV2ZW50LkNPTVBMRVRFLCBpbWcsICgpID0+IHtcbiAgICAgICAgICAgIGltZy5yZW1vdmVTZWxmKCk7XG4gICAgICAgICAgICBpbWcuc2NhbGUoMSwgMSk7XG4gICAgICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcihcInBfSW1hZ2VcIiwgaW1nKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRpbWVMaW5lLnBsYXkoMCwgZmFsc2UpO1xuICAgIH1cblxuICAgIC8qKiDph5HluIHpm6ggKi9cbiAgICBwdWJsaWMgc3RhdGljIHBsYXlDb2luUmFpbkVmZmVjdChpbWdVcmw6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICBsZXQgY29pbkNvdW50ID0gODtcbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGNvaW5Db3VudDsgaW5kZXgrKykge1xuICAgICAgICAgICAgbGV0IGltZ0NvaW46IExheWEuSW1hZ2UgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q2xhc3MoXCJwX0ltYWdlXCIsIExheWEuSW1hZ2UpO1xuICAgICAgICAgICAgaW1nQ29pbi5tb3VzZUVuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgICAgIGltZ0NvaW4uZ3JhcGhpY3MuY2xlYXIoKTtcbiAgICAgICAgICAgIGltZ0NvaW4ubG9hZEltYWdlKGltZ1VybCk7XG4gICAgICAgICAgICBpbWdDb2luLnBpdm90KGltZ0NvaW4ud2lkdGggLyAyLCBpbWdDb2luLmhlaWdodCAvIDIpO1xuICAgICAgICAgICAgTGF5ZXJNZ3IuSW5zLnNjcmVlbkVmZmVjdExheWVyLmFkZENoaWxkKGltZ0NvaW4pO1xuICAgICAgICAgICAgaW1nQ29pbi5wb3MoaW5kZXggKiAoTGF5ZXJNZ3Iuc3RhZ2VEZXNpZ25XaWR0aCAvIGNvaW5Db3VudCkgKyBNYXRoLnJhbmRvbSgpICogMTAwLCBNYXRoLnJhbmRvbSgpICogNTAwIC0gMzAwKTtcbiAgICAgICAgICAgIExheWEuVHdlZW4udG8oaW1nQ29pbiwgeyB4OiBpbWdDb2luLngsIHk6IExheWVyTWdyLnN0YWdlRGVzaWduSGVpZ2h0IH0sIDMwMDAsXG4gICAgICAgICAgICAgICAgTGF5YS5FYXNlLmxpbmVhck5vbmUsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKF9jb2luU3A6IExheWEuTm9kZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBfY29pblNwLnJlbW92ZVNlbGYoKTtcbiAgICAgICAgICAgICAgICAgICAgTGF5YS5Qb29sLnJlY292ZXIoXCJwX0ltYWdlXCIsIF9jb2luU3ApO1xuICAgICAgICAgICAgICAgIH0sIFtpbWdDb2luXSkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHN0YXRpYyBwbGF5SW1hZ2VUZXh0RWZmZWN0KF9wYXJlbnROb2RlOiBhbnksIF9pbWdVcmw6IHN0cmluZywgX2NvbnRlbnQ6IHN0cmluZywgX3BvczogeyB4OiBudW1iZXIsIHk6IG51bWJlciB9ID0gbnVsbCwgX3pPcmRlcjogbnVtYmVyID0gMCk6IHZvaWQge1xuICAgICAgICBsZXQgY29pbkltZzogTGF5YS5JbWFnZSA9IExheWEuUG9vbC5nZXRJdGVtQnlDbGFzcyhcInBfSW1hZ2VcIiwgTGF5YS5JbWFnZSk7XG4gICAgICAgIGNvaW5JbWcuc2tpbiA9IF9pbWdVcmw7XG4gICAgICAgIGNvaW5JbWcuYW5jaG9yWCA9IDAuNTtcbiAgICAgICAgY29pbkltZy5hbmNob3JZID0gMC41O1xuICAgICAgICBfcGFyZW50Tm9kZS5hZGRDaGlsZChjb2luSW1nKTtcbiAgICAgICAgaWYgKF9wb3MpIHtcbiAgICAgICAgICAgIGNvaW5JbWcucG9zKF9wb3MueCwgX3Bvcy55KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvaW5JbWcucG9zKF9wYXJlbnROb2RlLndpZHRoIC8gMiwgLV9wYXJlbnROb2RlLmhlaWdodCAvIDIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChfek9yZGVyID4gMCkge1xuICAgICAgICAgICAgY29pbkltZy56T3JkZXIgPSBfek9yZGVyO1xuICAgICAgICB9XG4gICAgICAgIC8v6aOY5paH5a2XXG4gICAgICAgIHZhciBjb2luTGFiZWwgPSBuZXcgTGF5YS5MYWJlbCgpO1xuICAgICAgICBjb2luTGFiZWwudGV4dCA9IF9jb250ZW50O1xuICAgICAgICBjb2luTGFiZWwuZm9udFNpemUgPSAzMDtcbiAgICAgICAgY29pbkxhYmVsLmNvbG9yID0gXCIjZmZmMWJhXCI7XG4gICAgICAgIGNvaW5MYWJlbC5hbmNob3JZID0gMC41O1xuICAgICAgICBjb2luSW1nLmFkZENoaWxkKGNvaW5MYWJlbCk7XG4gICAgICAgIGNvaW5MYWJlbC5wb3MoY29pbkltZy53aWR0aCwgY29pbkltZy5oZWlnaHQgKiAwLjUpO1xuICAgICAgICAvL+WKqOeUu1xuICAgICAgICBsZXQgdGltZUxpbmUgPSBuZXcgTGF5YS5UaW1lTGluZSgpO1xuICAgICAgICB0aW1lTGluZS5hZGRMYWJlbChcInRsMVwiLCAwKS5mcm9tKGNvaW5JbWcsIHsgc2NhbGVYOiAwLCBzY2FsZVk6IDAsIHk6IChjb2luSW1nLnkgKyAzMCkgfSwgMzAwLCBMYXlhLkVhc2UubGluZWFyTm9uZSlcbiAgICAgICAgICAgIC5hZGRMYWJlbChcInRsMlwiLCA1MDApLnRvKGNvaW5JbWcsIHsgeDogY29pbkltZy54LCB5OiAoY29pbkltZy55IC0gNTApLCBhbHBoYTogMCB9LCAxMjAwLCBMYXlhLkVhc2UuY3ViaWNJbk91dClcbiAgICAgICAgdGltZUxpbmUub24oTGF5YS5FdmVudC5DT01QTEVURSwgY29pbkltZywgKCkgPT4ge1xuICAgICAgICAgICAgY29pbkltZy5yZW1vdmVDaGlsZHJlbigpO1xuICAgICAgICAgICAgY29pbkltZy5yZW1vdmVTZWxmKCk7XG4gICAgICAgICAgICBjb2luSW1nLmFscGhhID0gMTtcbiAgICAgICAgICAgIGNvaW5JbWcuc2NhbGUoMSwgMSk7XG4gICAgICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcihcInBfSW1hZ2VcIiwgY29pbkltZyk7XG4gICAgICAgIH0pO1xuICAgICAgICB0aW1lTGluZS5wbGF5KDAsIGZhbHNlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDmloflrZfmiZPlrZfmnLrmlYjmnpxcbiAgICAgKiBvYmogICAgICAgICAgIOaWh+acrOWvueixoVxuICAgICAqIGNvbnRlbnQgICAgICAg5paH5a2XXG4gICAgICogaW50ZXJ2YWwgICAgICDmiZPlrZfpl7TpmpQg5q+r56eSXG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBwbGF5VHlwZXdyaXRlckVmZmVjdChsYWJlbDogTGF5YS5MYWJlbCwgY29udGVudDogc3RyaW5nID0gXCJcIiwgaW50ZXJ2YWw6IG51bWJlciA9IDUwLCBjYWxsQmFjazogRnVuY3Rpb24gPSBudWxsKTogdm9pZCB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgbGFiZWwudGV4dCA9IFwiXCI7XG4gICAgICAgIGxldCBzdHJBcnI6IHN0cmluZ1tdID0gY29udGVudC5zcGxpdChcIlwiKTtcbiAgICAgICAgbGV0IGxlbjogbnVtYmVyID0gc3RyQXJyLmxlbmd0aDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKGludGVydmFsICogaSwgdGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGxhYmVsLnRleHQgPSBsYWJlbC50ZXh0LmNvbmNhdChzdHJBcnJbaV0pO1xuICAgICAgICAgICAgICAgIGlmICgoaSA+PSBsZW4gLSAxKSAmJiAoY2FsbEJhY2sgIT0gbnVsbCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbEJhY2soKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOm+memqqOeJueaViCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgcGxheUJvbmVFZmZlY3QoYm9uZU5hbWU6IHN0cmluZywgcG9zOiB7IHg6IG51bWJlciwgeTogbnVtYmVyIH0pOiB2b2lkIHtcbiAgICAgICAgbGV0IGJvbmU6IEJvbmVBbmltID0gbmV3IEJvbmVBbmltKGJvbmVOYW1lKTtcbiAgICAgICAgYm9uZS5jb21wbGV0ZUJhY2sgPSAoKSA9PiB7XG4gICAgICAgICAgICBib25lLmRlc3Ryb3koKTtcbiAgICAgICAgfVxuICAgICAgICBib25lLnggPSBwb3MueDtcbiAgICAgICAgYm9uZS55ID0gcG9zLnk7XG4gICAgICAgIExheWVyTWdyLklucy5mbHlMYXllci5hZGRDaGlsZChib25lKTtcbiAgICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWF0aFV0aWwgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XG5cbiAgICAvKiog55Sf5oiQ6ZqP5py65rWu54K55pWw77yM6ZqP5py65pWw6IyD5Zu05YyF5ZCrbWlu5YC877yM5L2G5LiN5YyF5ZCrbWF45YC8ICovXG4gICAgcHVibGljIHN0YXRpYyByYW5nZShtaW46IG51bWJlciwgbWF4OiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pICsgbWluO1xuICAgIH1cblxuICAgIC8qKiDnlJ/miJDpmo/mnLrmlbTmlbDvvIzpmo/mnLrmlbTmlbDojIPlm7TljIXlkKttaW7lgLzlkoxtYXjlgLwgKi9cbiAgICBwdWJsaWMgc3RhdGljIHJhbmdlSW50KG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcik6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluICsgMSkgKyBtaW4pO1xuICAgIH1cblxuICAgIC8qKiDljZXkvY3ovazmjaIgKi9cbiAgICBwdWJsaWMgc3RhdGljIHVuaXRDb252ZXJzaW9uKHZhbHVlOiBudW1iZXIpOiBzdHJpbmcge1xuICAgICAgICBpZiAodmFsdWUgPCAxMDAwMDAwKSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5mbG9vcih2YWx1ZSkudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgPT09IDApIHJldHVybiAnMCc7XG4gICAgICAgIGxldCBrOiBudW1iZXIgPSAxMDAwLCAvLyBvciAxMDI0XG4gICAgICAgICAgICBzaXplcyA9IFsnJywgJ0snLCAnTScsICdHJywgJ1QnLCAnUCcsICdFJywgJ1onLCAnWSddLFxuICAgICAgICAgICAgaSA9IE1hdGguZmxvb3IoTWF0aC5sb2codmFsdWUpIC8gTWF0aC5sb2coaykpO1xuICAgICAgICBsZXQgdW5pdDogc3RyaW5nID0gJyc7XG4gICAgICAgIGlmIChpIDwgc2l6ZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICB1bml0ID0gc2l6ZXNbaV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgbnVtTGVuZ2h0OiBudW1iZXIgPSBpIC0gc2l6ZXMubGVuZ3RoO1xuICAgICAgICAgICAgdW5pdCA9IFN0cmluZy5mcm9tQ2hhckNvZGUoOTcgKyBudW1MZW5naHQgJSAyNik7XG4gICAgICAgICAgICBmb3IgKGxldCBpbmRleDogbnVtYmVyID0gMCwgbGVuOiBudW1iZXIgPSAxICsgTWF0aC5mbG9vcihudW1MZW5naHQgLyA2NSk7IGluZGV4IDwgbGVuOyBpbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgdW5pdCA9IHVuaXQgKyB1bml0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAodmFsdWUgLyBNYXRoLnBvdyhrLCBpKSkudG9QcmVjaXNpb24oMykgKyAnICcgKyB1bml0O1xuICAgIH1cblxuICAgIC8qKiDlrZfnrKbkuLLovazmlbDlrZcgKi9cbiAgICBwdWJsaWMgc3RhdGljIHBhcnNlU3RyaW5nTnVtKF9zdHJOdW06IHN0cmluZyk6IG51bWJlciB7XG4gICAgICAgIGxldCBpbnROdW0gPSBwYXJzZUZsb2F0KF9zdHJOdW0pO1xuICAgICAgICBpZiAoaW50TnVtKSB7XG4gICAgICAgICAgICByZXR1cm4gaW50TnVtO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cblxuICAgIC8qKiDlrZfnrKbkuLLovazmlbTlvaIgKi9cbiAgICBwdWJsaWMgc3RhdGljIHBhcnNlSW50KF9zdHJOdW06IHN0cmluZyk6IG51bWJlciB7XG4gICAgICAgIGxldCBpbnROdW0gPSBwYXJzZUZsb2F0KF9zdHJOdW0pO1xuICAgICAgICBpZiAoaW50TnVtKSB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5mbG9vcihpbnROdW0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgc3BsaXRUb051bWJlcih2YWx1ZSwgc3ByZWxhdG9yOiBzdHJpbmcgPSBcIiNcIik6IG51bWJlcltdIHtcbiAgICAgICAgaWYgKHZhbHVlID09IFwiMFwiKSByZXR1cm4gW107XG4gICAgICAgIGxldCByZXN1bHQ6IG51bWJlcltdID0gW107XG4gICAgICAgIGxldCBzQXJyYXk6IHN0cmluZ1tdID0gdmFsdWUuc3BsaXQoc3ByZWxhdG9yKTtcbiAgICAgICAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IHNBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2gocGFyc2VJbnQoc0FycmF5W2ldKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIHNwbGl0VG9TdHJpbmcodmFsdWUsIHNwcmVsYXRvcjogc3RyaW5nID0gXCIjXCIpOiBhbnlbXSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PSBcIjBcIikgcmV0dXJuIFtdO1xuICAgICAgICBsZXQgcmVzdWx0OiBzdHJpbmdbXSA9IFtdO1xuICAgICAgICBsZXQgc0FycmF5OiBzdHJpbmdbXSA9IHZhbHVlLnNwbGl0KHNwcmVsYXRvcik7XG4gICAgICAgIGZvciAobGV0IGk6IG51bWJlciA9IDA7IGkgPCBzQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHNBcnJheVtpXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc3RhdGljIHJlbW92ZUZyb21BcnJheSh0YXJnZXQ6IGFueSwgYXJyYXk6IGFueVtdKTogYW55W10ge1xuICAgICAgICBsZXQgaW5kZXggPSBhcnJheS5pbmRleE9mKHRhcmdldCk7XG4gICAgICAgIGlmIChpbmRleCA+PSAwKSBhcnJheS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICByZXR1cm4gYXJyYXk7XG4gICAgfVxuXG4gICAgLyoqIOabv+aNouaVsOe7hOS4reeahOaVsOaNriAqL1xuICAgIHB1YmxpYyBzdGF0aWMgcmVwbGFjZUl0ZW1Ub0FycmF5KGFycmF5OiBhbnlbXSwgaW5kZTogbnVtYmVyLCBpdGVtOiBhbnkpIHtcbiAgICAgICAgYXJyYXkuc3BsaWNlKGluZGUsIDEsIGl0ZW0pO1xuICAgIH1cbn0iLCJpbXBvcnQgTGF5ZXIgZnJvbSBcIi4uL2xheWVyL2Jhc2UvTGF5ZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgIGNsYXNzIFBvaW50VXRpbHMge1xuXHQvKipcblx0ICog5oyJ5L2N572u5Y+W5b6X5Lik5Liq54K55LmL6Ze06L+e57q/5LiK5p+Q5Liq54K555qE5L2N572uXG5cdCAqIEBwYXJhbSBzdGFydFB0IOi1t+Wni+eCuVxuXHQgKiBAcGFyYW0gZW5kUHQg57uT5p2f54K5XG5cdCAqIEBwYXJhbSBwb3NpdGlvbiDopoHlj5bngrnnmoTkvY3nva7vvIw8Y29kZT5wb3NpdGlvbjwvY29kZT7nmoTlgLzotormjqXov5Ew77yM5Y+W5Ye655qE54K56LaK6Z2g6L+RPGNvZGU+c3RhcnRQdDwvY29kZT7vvJs8Y29kZT5wb3NpdGlvbjwvY29kZT7nmoTlgLzotormjqXov5Ex77yM5Y+W5Ye655qE54K56LaK6Z2g6L+RPGNvZGU+ZW5kUHQ8L2NvZGU+77ybXG5cdCAqIEByZXR1cm5cblx0ICpcblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgaW50ZXJwb2xhdGUoXG5cdFx0c3RhcnRQdDogTGF5YS5Qb2ludCxcblx0XHRlbmRQdDogTGF5YS5Qb2ludCxcblx0XHRwb3NpdGlvbjogbnVtYmVyXG5cdCk6IExheWEuUG9pbnQge1xuXHRcdHJldHVybiBuZXcgTGF5YS5Qb2ludChcblx0XHRcdHN0YXJ0UHQueCArIChlbmRQdC54IC0gc3RhcnRQdC54KSAqIHBvc2l0aW9uLFxuXHRcdFx0c3RhcnRQdC55ICsgKGVuZFB0LnkgLSBzdGFydFB0LnkpICogcG9zaXRpb25cblx0XHQpO1xuXHR9XG5cdC8qKlxuXHQgKiDorqHnrpfkuKTkuKrngrnkuYvpl7TnmoTot53nprtcblx0ICogQHBhcmFtIHAxIOesrOS4gOS4queCuVxuXHQgKiBAcGFyYW0gcDIg56ys5LqM5Liq54K5XG5cdCAqIEByZXR1cm4g6Led56a7XG5cdCAqXG5cdCAqL1xuXHRwdWJsaWMgc3RhdGljIGRpc3RhbmNlKHAxOiBMYXlhLlBvaW50LCBwMjogTGF5YS5Qb2ludCk6IG51bWJlciB7XG5cdFx0cmV0dXJuIE1hdGguc3FydChcblx0XHRcdChwMS54IC0gcDIueCkgKiAocDEueCAtIHAyLngpICsgKHAxLnkgLSBwMi55KSAqIChwMS55IC0gcDIueSlcblx0XHQpO1xuXHR9XG5cdC8qKlxuXHQgKiDorqHnrpfkuKTnu4TlnZDmoIfkuYvpl7TnmoTot53nprtcblx0ICogQHBhcmFtIHgxIOesrOS4gOS4queCueeahHjlnZDmoIdcblx0ICogQHBhcmFtIHkxIOesrOS4gOS4queCueeahHnlnZDmoIdcblx0ICogQHBhcmFtIHgyIOesrOS6jOS4queCueeahHnlnZDmoIdcblx0ICogQHBhcmFtIHkyIOesrOS6jOS4queCueeahHnlnZDmoIdcblx0ICogQHJldHVybiDot53nprtcblx0ICpcblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgZGlzdGFuY2VCeUF4aXMoXG5cdFx0eDE6IG51bWJlcixcblx0XHR5MTogbnVtYmVyLFxuXHRcdHgyOiBudW1iZXIsXG5cdFx0eTI6IG51bWJlclxuXHQpOiBudW1iZXIge1xuXHRcdHJldHVybiBNYXRoLnNxcnQoKHgxIC0geDIpICogKHgxIC0geDIpICsgKHkxIC0geTIpICogKHkxIC0geTIpKTtcblx0fVxuXG5cdC8qKlxuXHQgKiDojrflvpfku45wMeiHs3Ay55qE5pyd5ZCR77yM5b2TcDHlnKjlt6bkvqfml7bov5Tlm54x77yM5b2TcDHlnKjlj7Pkvqfml7bov5Tlm54tMVxuXHQgKiBAcGFyYW0gcDFcblx0ICogQHBhcmFtIHAyXG5cdCAqIEByZXR1cm5cblx0ICpcblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgZ2V0RGlyZWN0aW9uKHAxOiBMYXlhLlBvaW50LCBwMjogTGF5YS5Qb2ludCk6IG51bWJlciB7XG5cdFx0aWYgKHAxLnggPD0gcDIueCkge1xuXHRcdFx0cmV0dXJuIDE7XG5cdFx0fVxuXHRcdGlmIChwMS54ID4gcDIueCkge1xuXHRcdFx0cmV0dXJuIC0xO1xuXHRcdH1cblx0XHRyZXR1cm4gMTtcblx0fVxuXG5cdC8qKlxuXHQgKiDojrflvpd0YXJnZXTlnKhMYXllck1hbmFnZXLnmoTlhajlsYDlnZDmoIdcblx0ICogQHBhcmFtIHRhcmdldFxuXHQgKiBAcGFyYW0gbW92ZVJpZ2h0Tm93IOaYr+WQpuWQjOaXtuaKinRhcmdldOeahOS9jee9ruenu+WIsOaWsOeahOS9jee9rlxuXHQgKiBAcmV0dXJuXG5cdCAqXG5cdCAqL1xuXHRwdWJsaWMgc3RhdGljIGxvY2FsVG9HbG9iYWwodGFyZ2V0OiBMYXlhLlNwcml0ZSwgbW92ZVJpZ2h0Tm93PzogYm9vbGVhbik6IExheWEuUG9pbnQge1xuXHRcdGxldCBwdDogTGF5YS5Qb2ludCA9IG5ldyBMYXlhLlBvaW50KHRhcmdldC54LCB0YXJnZXQueSk7XG5cdFx0bGV0IHBhcmVudDogTGF5YS5TcHJpdGUgPSB0YXJnZXQucGFyZW50IGFzIExheWEuU3ByaXRlO1xuXHRcdHdoaWxlIChwYXJlbnQgJiYgIShwYXJlbnQgaW5zdGFuY2VvZiBMYXllcikpIHtcblx0XHRcdHB0LnggKz0gcGFyZW50LnggLSBwYXJlbnQucGl2b3RYIC0gKHBhcmVudC5zY3JvbGxSZWN0ID8gcGFyZW50LnNjcm9sbFJlY3QueCA6IDApO1xuXHRcdFx0cHQueSArPSBwYXJlbnQueSAtIHBhcmVudC5waXZvdFkgLSAocGFyZW50LnNjcm9sbFJlY3QgPyBwYXJlbnQuc2Nyb2xsUmVjdC55IDogMCk7XG5cdFx0XHRwYXJlbnQgPSBwYXJlbnQucGFyZW50IGFzIExheWEuU3ByaXRlO1xuXHRcdH1cblx0XHRpZiAobW92ZVJpZ2h0Tm93KSB7XG5cdFx0XHR0YXJnZXQucG9zKHB0LngsIHB0LnkpO1xuXHRcdH1cblx0XHRyZXR1cm4gcHQ7XG5cdH1cblxuICAgIC8qKlxuICAgICAqIOS/neaMgXRhcmdldOWvueixoeeahOWFqOWxgOS9jee9ruS4jeWPmOeahOaDheWGteS4i++8jOiuoeeul3RhcmdldOaYvuekuuWvueixoeWcqOaWsOeahOaYvuekuuWvueixoeWuueWZqOS4reeahOacrOWcsOWdkOagh+S9jee9rlxuICAgICAqIEBwYXJhbSB0YXJnZXRcbiAgICAgKiBAcGFyYW0gbmV3UGFyZW50XG4gICAgICogQHBhcmFtIG1vdmVSaWdodE5vd1xuICAgICAqIEByZXR1cm5cbiAgICAgKlxuICAgICAqL1xuXHRwdWJsaWMgc3RhdGljIHBhcmVudFRvUGFyZW50KFxuXHRcdHRhcmdldDogTGF5YS5TcHJpdGUsXG5cdFx0bmV3UGFyZW50OiBMYXlhLlNwcml0ZSxcblx0XHRtb3ZlUmlnaHROb3c/OiBib29sZWFuXG5cdCk6IExheWEuUG9pbnQge1xuXHRcdGxldCBwdDogTGF5YS5Qb2ludCA9IFBvaW50VXRpbHMubG9jYWxUb0dsb2JhbCh0YXJnZXQpO1xuXHRcdGxldCB6ZXJvUHQ6IExheWEuUG9pbnQgPSBuZXcgTGF5YS5Qb2ludCgpO1xuXHRcdGxldCBwYXJlbnQ6IExheWEuU3ByaXRlID0gbmV3UGFyZW50O1xuXHRcdHdoaWxlIChwYXJlbnQgJiYgIShwYXJlbnQgaW5zdGFuY2VvZiBMYXllcikpIHtcblx0XHRcdHplcm9QdC54ICs9IHBhcmVudC54O1xuXHRcdFx0emVyb1B0LnkgKz0gcGFyZW50Lnk7XG5cdFx0XHRwYXJlbnQgPSBwYXJlbnQucGFyZW50IGFzIExheWEuU3ByaXRlO1xuXHRcdH1cblxuXHRcdHB0LnggPSBwdC54IC0gemVyb1B0Lng7XG5cdFx0cHQueSA9IHB0LnkgLSB6ZXJvUHQueTtcblxuXHRcdGlmIChtb3ZlUmlnaHROb3cpIHtcblx0XHRcdHRhcmdldC5wb3MocHQueCwgcHQueSk7XG5cdFx0fVxuXHRcdHJldHVybiBwdDtcblx0fVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlc1V0aWxzIHtcbiAgICBcbiAgICBwdWJsaWMgc3RhdGljIGxvYWRHcm91cChncm91cDogc3RyaW5nW10sIG9uQ29tcGxldGU6IEZ1bmN0aW9uLCB0aGlzT2JqZWN0OiBhbnkpIHtcbiAgICAgICAgTGF5YS5sb2FkZXIubG9hZCh0aGlzLmNvbWJHcm91cExpc3QoZ3JvdXApLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXNPYmplY3QsIG9uQ29tcGxldGUpKTtcbiAgICB9XG5cbiAgICAvKiog57uE5ZCI6LWE5rqQ57uE5ZCNICovXG4gICAgcHJpdmF0ZSBzdGF0aWMgY29tYkdyb3VwTGlzdChncm91cDogc3RyaW5nW10pOiBhbnlbXSB7XG4gICAgICAgIGxldCBuZXdHcm91cDogYW55W10gPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaTogbnVtYmVyID0gMCwgbGVuOiBudW1iZXIgPSBncm91cC5sZW5ndGg7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgbmV3R3JvdXAucHVzaCh7IHVybDogXCJyZXMvYXRsYXMvaW1hZ2VzL1wiICsgZ3JvdXBbaV0gKyBcIi5hdGxhc1wiLCB0eXBlOiBMYXlhLkxvYWRlci5BVExBUyB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3R3JvdXA7XG4gICAgfVxufSIsImltcG9ydCBIdHRwTWdyIGZyb20gXCIuLi9uZXQvSHR0cE1nclwiO1xuaW1wb3J0IEh0dHBSZXF1ZXN0SGVscGVyIGZyb20gXCIuLi9uZXQvSHR0cFJlcXVlc3RIZWxwZXJcIjtcbmltcG9ydCBQYXRoQ29uZmlnIGZyb20gXCIuLi9jb25maWcvUGF0aENvbmZpZ1wiO1xuaW1wb3J0IFBsYXllck1nciBmcm9tIFwiLi4vcGxheWVyL1BsYXllck1nclwiO1xuaW1wb3J0IEdsb2JhbERhdGEgZnJvbSBcIi4uL2RiL0dsb2JhbERhdGFcIjtcbmltcG9ydCBIZXJvQ29uZmlnVk8gZnJvbSBcIi4uL2RiL3ZvL0hlcm9Db25maWdWT1wiO1xuaW1wb3J0IEhhbGxDb250cm9sIGZyb20gXCIuLi8uLi9tb2R1bGUvaGFsbC9IYWxsQ29udHJvbFwiO1xuaW1wb3J0IEhhbGxNb2RlbCBmcm9tIFwiLi4vLi4vbW9kdWxlL2hhbGwvbW9kZWwvSGFsbE1vZGVsXCI7XG5pbXBvcnQgTWF0aFV0aWwgZnJvbSBcIi4vTWF0aFV0aWxcIjtcbmltcG9ydCBTaGFyZU1nciBmcm9tIFwiLi4vbXNnL1NoYXJlTWdyXCI7XG5pbXBvcnQgRXZlbnRzTWdyIGZyb20gXCIuLi9ldmVudC9FdmVudHNNZ3JcIjtcbmltcG9ydCBFdmVudFR5cGUgZnJvbSBcIi4uL2V2ZW50L0V2ZW50VHlwZVwiO1xuaW1wb3J0IFRpbWVVdGlsIGZyb20gXCIuL1RpbWVVdGlsXCI7XG5pbXBvcnQgR3VpZGVNZ3IgZnJvbSBcIi4uL2d1aWRlL0d1aWRlTWdyXCI7XG5pbXBvcnQgQXBwQ29uZmlnIGZyb20gXCIuLi9jb25maWcvQXBwQ29uZmlnXCI7XG5cbi8qKlxuICog57yT5a2Y5bel5YW3XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0b3JhZ2VVdGlsIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xuXG4gICAgcHJpdmF0ZSBzdGF0aWMgc3RvcmFnZV91c2VyX29sZDogc3RyaW5nID0gJ3VzZXJfZGF0YSc7IC8v5L+d5a2Y5pys5ZywdjEuMFxuICAgIHByaXZhdGUgc3RhdGljIHN0b3JhZ2VfdXNlcjogc3RyaW5nID0gJ3VzZXJfZGF0YV8xMTEnOyAvL+S/neWtmOacrOWcsFxuICAgIHByaXZhdGUgc3RhdGljIGhlcm9fc3RvcmVfa2V5OiBzdHJpbmcgPSBcImNhcl9zdG9yZV9rZXlcIjsgLy/mnKzlnLDkv53lrZjlhbXokKXovabovoZcbiAgICBwcml2YXRlIHN0YXRpYyBzX3ZlcnNpb25fY2xlYXIgPSAnc192ZXJzaW9uX2NsZWFyJzsgLy/niYjmnKzmuIXnkIZcbiAgICBwcml2YXRlIHN0YXRpYyBzX29mZmxpbmVQcml6ZV90aW1lID0gJ3Nfb2ZmbGluZVByaXplX3RpbWUnOyAvL+emu+e6v+WlluWKseaXtumXtFxuICAgIHByaXZhdGUgc3RhdGljIHNfb2ZmbGluZV90aW1lID0gJ3Nfb2ZmbGluZV90aW1lJzsgLy/nprvnur/mnI3liqHlmajml7bpl7RcbiAgICBwcml2YXRlIHN0YXRpYyBfaXNMb2FkU3RvcmFnZTogYm9vbGVhbiA9IGZhbHNlOyAvL+aYr+WQpuW3suWKoOi9veacrOWcsOaVsOaNrlxuICAgIHByaXZhdGUgc3RhdGljIGNhcnBhcmtKc29uUmVjb3JkOiBzdHJpbmcgPSAnJzsgLy/pmLLmraLmj5DkuqTnm7jlkIzmlbDmja7nu5nmnI3liqHlmahcbiAgICBwcml2YXRlIHN0YXRpYyBjYXJzaG9wSnNvblJlY29yZDogc3RyaW5nID0gJyc7IC8v6Ziy5q2i5o+Q5Lqk55u45ZCM5pWw5o2u57uZ5pyN5Yqh5ZmoXG5cbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxuXG4gICAgLyoqIOaWsOiAgeeJiOacrOabtOaWsOajgOa1i++8iOmYsuatouiAgeaVsOaNruimhueblu+8iSAqL1xuICAgIHB1YmxpYyBzdGF0aWMgdmVyc2lvbkNoZWNrKGNhbGxiYWNrOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgbGV0IHRoYXQgPSB0aGlzO1xuICAgICAgICBpZiAoQXBwQ29uZmlnLmlzRGVidWcpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHN0b3JhZ2UgPSB3aW5kb3cubG9jYWxTdG9yYWdlO1xuICAgICAgICBIdHRwTWdyLklucy5yZXF1ZXN0VmVyc2lvbkNoZWNrKChfcmVzOiBhbnkpID0+IHtcbiAgICAgICAgICAgIGlmIChfcmVzICYmIF9yZXMuY2xlYXJfZmxhZykge1xuICAgICAgICAgICAgICAgIC8v5riF55CG6ICB5pWw5o2uXG4gICAgICAgICAgICAgICAgc3RvcmFnZS5zZXRJdGVtKHRoYXQuc192ZXJzaW9uX2NsZWFyLCAndHJ1ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy/kuIrkuIDmrKHorrDlvZXmuIXnkIZcbiAgICAgICAgbGV0IGRhdGFKc29uID0gc3RvcmFnZS5nZXRJdGVtKHRoYXQuc192ZXJzaW9uX2NsZWFyKTtcbiAgICAgICAgaWYgKGRhdGFKc29uKSB7XG4gICAgICAgICAgICAvL+mcgOimgea4heeQhuaVsOaNrlxuICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdFZlcnNpb25DbGVhcigoX3JlczogYW55KSA9PiB7XG4gICAgICAgICAgICAgICAgc3RvcmFnZS5yZW1vdmVJdGVtKHRoYXQuc192ZXJzaW9uX2NsZWFyKTtcbiAgICAgICAgICAgICAgICB0aGF0LmNsZWFyTG9jYWxEYXRhKCk7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDkv53lrZjnvJPlrZjliLDmnKzlnLAgKi9cbiAgICBwdWJsaWMgc3RhdGljIHNhdmVTdG9yYWdlVG9Mb2NhbCh1cGxvYWQ6IGJvb2xlYW4gPSBmYWxzZSk6IHZvaWQge1xuICAgICAgICBpZiAoU3RvcmFnZVV0aWwuX2lzTG9hZFN0b3JhZ2UgPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOacquWQjOatpeacrOWcsC/mnI3liqHlmajmlbDmja5cIik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0gZWxzZSBpZiAoSGFsbENvbnRyb2wuSW5zLklzR3VpZGUpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbG9jYWxEYXRhOiBhbnkgPSB7fTtcbiAgICAgICAgbG9jYWxEYXRhW1widXNlckdvbGRcIl0gPSBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckdvbGQ7XG4gICAgICAgIGxvY2FsRGF0YVtcInVzZXJMZXZlbFwiXSA9IFBsYXllck1nci5JbnMuSW5mby51c2VyTGV2ZWw7XG4gICAgICAgIGxvY2FsRGF0YVtcInVzZXJJZFwiXSA9IFBsYXllck1nci5JbnMuSW5mby51c2VySWQ7XG4gICAgICAgIGxvY2FsRGF0YVtcInVzZXJFeHBcIl0gPSBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckV4cDtcbiAgICAgICAgbG9jYWxEYXRhW1wiQWxsSGVyb3NcIl0gPSBIYWxsQ29udHJvbC5JbnMuTW9kZWwuQWxsSGVyb3M7XG4gICAgICAgIGxvY2FsRGF0YVtcIkJ1eUhlcm9zUmVjb3JkXCJdID0gSGFsbENvbnRyb2wuSW5zLk1vZGVsLkJ1eUhlcm9zUmVjb3JkO1xuICAgICAgICBsb2NhbERhdGFbXCJBbGxIZXJvc1wiXSA9IEhhbGxDb250cm9sLklucy5Nb2RlbC5BbGxIZXJvcztcbiAgICAgICAgbG9jYWxEYXRhW1wiaGVyb0xldmVsXCJdID0gSGFsbENvbnRyb2wuSW5zLk1vZGVsLmhlcm9MZXZlbDtcbiAgICAgICAgbG9jYWxEYXRhW1wiaGVyb0NvdW50XCJdID0gSGFsbENvbnRyb2wuSW5zLk1vZGVsLmhlcm9Db3VudDtcbiAgICAgICAgbG9jYWxEYXRhW1wiZ3VpZGVTdGVwXCJdID0gR3VpZGVNZ3IuSW5zLmd1aWRlU3RlcDtcbiAgICAgICAgbGV0IGRhdGFKc29uID0gSlNPTi5zdHJpbmdpZnkobG9jYWxEYXRhKTtcbiAgICAgICAgaWYgKGRhdGFKc29uKSB7XG4gICAgICAgICAgICBsZXQgc3RvcmFnZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gICAgICAgICAgICBzdG9yYWdlLnNldEl0ZW0oU3RvcmFnZVV0aWwuc3RvcmFnZV91c2VyLCBkYXRhSnNvbik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodXBsb2FkKSB7XG4gICAgICAgICAgICBTdG9yYWdlVXRpbC5yZXF1ZXN0U2F2ZUhlcm9zRGF0YSgpO1xuICAgICAgICAgICAgU3RvcmFnZVV0aWwucmVxdWVzdFNhdmVIZXJvU2hvcERhdGEoKTtcbiAgICAgICAgICAgIFN0b3JhZ2VVdGlsLnJlcXVlc3RTYXZlVXNlckluZm9EYXRhKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog5Y+W5Ye65pys5Zyw5pWw5o2uICovXG4gICAgcHVibGljIHN0YXRpYyBsb2FkU3RvcmFnZShjYWxsYmFjazogYW55KTogdm9pZCB7XG4gICAgICAgIFN0b3JhZ2VVdGlsLl9pc0xvYWRTdG9yYWdlID0gdHJ1ZTtcbiAgICAgICAgbGV0IHN0b3JhZ2UgPSB3aW5kb3cubG9jYWxTdG9yYWdlO1xuICAgICAgICBsZXQgZGF0YUpzb24gPSBzdG9yYWdlLmdldEl0ZW0oU3RvcmFnZVV0aWwuc3RvcmFnZV91c2VyKTtcbiAgICAgICAgaWYgKGRhdGFKc29uKSB7XG4gICAgICAgICAgICBsZXQganNvbk9iaiA9IEpTT04ucGFyc2UoZGF0YUpzb24pO1xuICAgICAgICAgICAgaWYgKGpzb25PYmopIHtcbiAgICAgICAgICAgICAgICBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckdvbGQgPSBqc29uT2JqW1widXNlckdvbGRcIl07XG4gICAgICAgICAgICAgICAgUGxheWVyTWdyLklucy5JbmZvLnVzZXJMZXZlbCA9IGpzb25PYmpbXCJ1c2VyTGV2ZWxcIl07XG4gICAgICAgICAgICAgICAgUGxheWVyTWdyLklucy5JbmZvLnVzZXJJZCA9IGpzb25PYmpbXCJ1c2VySWRcIl07XG4gICAgICAgICAgICAgICAgUGxheWVyTWdyLklucy5JbmZvLnVzZXJFeHAgPSBqc29uT2JqW1widXNlckV4cFwiXTtcbiAgICAgICAgICAgICAgICBIYWxsQ29udHJvbC5JbnMuTW9kZWwuQWxsSGVyb3MgPSBqc29uT2JqW1wiQWxsSGVyb3NcIl07XG4gICAgICAgICAgICAgICAgSGFsbENvbnRyb2wuSW5zLk1vZGVsLkJ1eUhlcm9zUmVjb3JkID0ganNvbk9ialtcIkJ1eUhlcm9zUmVjb3JkXCJdO1xuICAgICAgICAgICAgICAgIEhhbGxDb250cm9sLklucy5Nb2RlbC5oZXJvTGV2ZWwgPSBqc29uT2JqW1wiaGVyb0xldmVsXCJdO1xuICAgICAgICAgICAgICAgIEhhbGxDb250cm9sLklucy5Nb2RlbC5oZXJvQ291bnQgPSBqc29uT2JqW1wiaGVyb0NvdW50XCJdO1xuICAgICAgICAgICAgICAgIEd1aWRlTWdyLklucy5ndWlkZVN0ZXAgPSBqc29uT2JqW1wiZ3VpZGVTdGVwXCJdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uUEMpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL+S7juacjeWKoeWZqOWQjOatpeaVsOaNrlxuICAgICAgICAgICAgbGV0IHNlcnZlckRhdGFQcm9ncmVzcyA9IDM7XG4gICAgICAgICAgICBIdHRwTWdyLklucy5yZXF1ZXN0Q2FycGFya0RhdGEoKHJlczogYW55KSA9PiB7XG4gICAgICAgICAgICAgICAgSGFsbENvbnRyb2wuSW5zLk1vZGVsLkFsbEhlcm9zID0gcmVzO1xuICAgICAgICAgICAgICAgIHNlcnZlckRhdGFQcm9ncmVzcy0tO1xuICAgICAgICAgICAgICAgIGlmIChzZXJ2ZXJEYXRhUHJvZ3Jlc3MgPCAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKHRydWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdENhcnNob3BEYXRhKChyZXM6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgIHNlcnZlckRhdGFQcm9ncmVzcy0tO1xuICAgICAgICAgICAgICAgIEhhbGxDb250cm9sLklucy5Nb2RlbC5CdXlIZXJvc1JlY29yZCA9IHJlcztcbiAgICAgICAgICAgICAgICBpZiAoc2VydmVyRGF0YVByb2dyZXNzIDwgMSkge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayh0cnVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIEh0dHBNZ3IuSW5zLnJlcXVlc3RVc2VySW5mb0RhdGEoKHJlczogYW55KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlcykge1xuICAgICAgICAgICAgICAgICAgICBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlcklkID0gcmVzLmlkO1xuICAgICAgICAgICAgICAgICAgICBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckdvbGQgPSBNYXRoVXRpbC5wYXJzZVN0cmluZ051bShyZXMubW9uZXkpO1xuICAgICAgICAgICAgICAgICAgICBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckRpYW1vbmQgPSBNYXRoVXRpbC5wYXJzZVN0cmluZ051bShyZXMuZGlhbW9uZCk7XG4gICAgICAgICAgICAgICAgICAgIFBsYXllck1nci5JbnMuSW5mby51c2VyTGV2ZWwgPSBNYXRoVXRpbC5wYXJzZUludChyZXMubGV2ZWwpO1xuICAgICAgICAgICAgICAgICAgICBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckV4cCA9IE1hdGhVdGlsLnBhcnNlU3RyaW5nTnVtKHJlcy5leHApO1xuICAgICAgICAgICAgICAgICAgICBIYWxsQ29udHJvbC5JbnMuTW9kZWwuaGVyb0xldmVsID0gTWF0aFV0aWwucGFyc2VJbnQocmVzLmNhcl9sZXZlbCk7XG4gICAgICAgICAgICAgICAgICAgIC8vIEd1aWRlTWdyLklucy5ndWlkZVN0ZXAgPSBNYXRoVXRpbC5wYXJzZUludChyZXMuZ3VpZGVTdGVwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgc2VydmVyRGF0YVByb2dyZXNzLS07XG4gICAgICAgICAgICAgICAgaWYgKHNlcnZlckRhdGFQcm9ncmVzcyA8IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2sodHJ1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvL+i2heaXtuWwneivlemHjeaWsOivt+axglxuICAgICAgICAgICAgTGF5YS5zdGFnZS50aW1lck9uY2UoMTIwMDAsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkBEYXZpZCDotoXml7blsJ3or5Xph43mlrDor7fmsYI6XCIsIHNlcnZlckRhdGFQcm9ncmVzcyk7XG4gICAgICAgICAgICAgICAgaWYgKHNlcnZlckRhdGFQcm9ncmVzcyA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgU3RvcmFnZVV0aWwubG9hZFN0b3JhZ2UoY2FsbGJhY2spO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIC8v6K+35rGC5YiG5Lqr5byA5YWzXG4gICAgICAgIEh0dHBNZ3IuSW5zLnJlcXVlc3RTaGFyZUZsYWcoKHJlczogYW55KSA9PiB7XG4gICAgICAgICAgICBTaGFyZU1nci5JbnMuc2hhcmVTd2l0Y2hPcGVuID0gcmVzO1xuICAgICAgICB9KTtcbiAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdFVzZXJCYXNlRGF0YSgocmVzOiBhbnkpID0+IHtcbiAgICAgICAgICAgIGxldCBtb2RlbDogSGFsbE1vZGVsID0gSGFsbENvbnRyb2wuSW5zLk1vZGVsO1xuICAgICAgICAgICAgaWYgKG1vZGVsKSB7XG4gICAgICAgICAgICAgICAgbW9kZWwuc2hhcmVBZFRpbWVzID0gcmVzLm9wZXJhdGlvbjtcbiAgICAgICAgICAgICAgICBtb2RlbC5zaG93U2hhcmVHaWZ0UmVkUG9pbnQgPSByZXMuc2hhcmVfcmV3YXJkX2ZsYWc7XG4gICAgICAgICAgICAgICAgbW9kZWwuc2hvd0RhaWx5U2lnblJlZFBvaW50ID0gcmVzLnNpZ25fZmxhZztcbiAgICAgICAgICAgICAgICBtb2RlbC5zaG93VGFza1JlZFBvaW50ID0gcmVzLnRhc2tfZmxhZztcbiAgICAgICAgICAgICAgICBtb2RlbC5zaG93THVja1ByaXplUmVkUG9pbnQgPSByZXMucm91bGV0dGVfZmxhZztcbiAgICAgICAgICAgICAgICBtb2RlbC5zaG93Rm9sbG93UmVkUG9pbnQgPSByZXMuZm9sbG93X2ZsYWc7XG4gICAgICAgICAgICAgICAgbW9kZWwuYWR2ZXJ0ID0gcmVzLmFkdmVydDtcbiAgICAgICAgICAgICAgICBtb2RlbC5kaWFtb25kX2FjY2VfbnVtID0gcmVzLmRpYW1vbmRfYWNjZV9udW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgaXNMb2FkU3RvcmFnZSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzTG9hZFN0b3JhZ2U7XG4gICAgfVxuXG4gICAgLyoqIOiLsembhOaVsOaNriAqL1xuICAgIHByaXZhdGUgc3RhdGljIHJlcXVlc3RTYXZlSGVyb3NEYXRhKCk6IHZvaWQge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIGxldCBkYXRhSnNvbiA9IEpTT04uc3RyaW5naWZ5KEhhbGxDb250cm9sLklucy5Nb2RlbC5BbGxIZXJvcyk7XG4gICAgICAgIC8v6Z2e5rOV5pWw5o2u6L+H5rukXG4gICAgICAgIGlmIChkYXRhSnNvbiA9PSBudWxsIHx8IGRhdGFKc29uLmxlbmd0aCA8IDEgfHwgSGFsbENvbnRyb2wuSW5zLk1vZGVsLkFsbEhlcm9zLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfSBlbHNlIGlmIChzZWxmLmNhcnBhcmtKc29uUmVjb3JkID09IGRhdGFKc29uKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImNhcnBhcmtKc29uUmVjb3Jk5pWw5o2u5pyq5Yi35pawXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYuY2FycGFya0pzb25SZWNvcmQgPSBkYXRhSnNvbjtcbiAgICAgICAgbGV0IGRhdGFTdHJpbmcgPSAnaW5mbz0nICsgZGF0YUpzb247XG4gICAgICAgIGNvbnNvbGUubG9nKFwicmVxdWVzdFNhdmVDYXJwYXJrRGF0YTpcIiwgZGF0YVN0cmluZyk7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL3NlYXQvcG9zdCcsXG4gICAgICAgICAgICBtZXRob2Q6ICdQb3N0JyxcbiAgICAgICAgICAgIGRhdGE6IGRhdGFTdHJpbmcsXG4gICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJyZXF1ZXN0U2F2ZUNhcnBhcmtEYXRhMjpcIiwgcmVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqIOiLsembhOWVhuW6l+aVsOaNriAqL1xuICAgIHByaXZhdGUgc3RhdGljIHJlcXVlc3RTYXZlSGVyb1Nob3BEYXRhKCk6IHZvaWQge1xuICAgICAgICBsZXQgZGF0YUpzb24gPSBKU09OLnN0cmluZ2lmeShIYWxsQ29udHJvbC5JbnMuTW9kZWwuQnV5SGVyb3NSZWNvcmQpO1xuICAgICAgICAvL+mdnuazleaVsOaNrui/h+a7pFxuICAgICAgICBpZiAoZGF0YUpzb24gPT0gbnVsbCB8fCBkYXRhSnNvbi5sZW5ndGggPCAxIHx8IEhhbGxDb250cm9sLklucy5Nb2RlbC5CdXlIZXJvc1JlY29yZC5sZW5ndGggPCAxKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5jYXJzaG9wSnNvblJlY29yZCA9PSBkYXRhSnNvbikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJjYXJzaG9wSnNvblJlY29yZOaVsOaNruacquWIt+aWsFwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNhcnNob3BKc29uUmVjb3JkID0gZGF0YUpzb247XG4gICAgICAgIGxldCBkYXRhU3RyaW5nID0gJ2luZm89JyArIGRhdGFKc29uO1xuICAgICAgICBjb25zb2xlLmxvZyhcInJlcXVlc3RTYXZlQ2Fyc2hvcERhdGE6XCIsIGRhdGFTdHJpbmcpO1xuICAgICAgICBsZXQgSHR0cFJlcUhlbHBlciA9IG5ldyBIdHRwUmVxdWVzdEhlbHBlcihQYXRoQ29uZmlnLkFwcFVybCk7XG4gICAgICAgIEh0dHBSZXFIZWxwZXIucmVxdWVzdCh7XG4gICAgICAgICAgICB1cmw6ICd2MS9zaG9wL3Bvc3QnLFxuICAgICAgICAgICAgbWV0aG9kOiAnUG9zdCcsXG4gICAgICAgICAgICBkYXRhOiBkYXRhU3RyaW5nLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicmVxdWVzdFNhdmVDYXJzaG9wRGF0YTI6XCIsIHJlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKiDkv53lrZjnlKjmiLfkv6Hmga/ph5HluIEgKi9cbiAgICBwcml2YXRlIHN0YXRpYyByZXF1ZXN0U2F2ZVVzZXJJbmZvRGF0YSgpOiB2b2lkIHtcbiAgICAgICAgbGV0IGRhdGFTdHJpbmcgPSAnbW9uZXk9JyArIFBsYXllck1nci5JbnMuSW5mby51c2VyR29sZCArXG4gICAgICAgICAgICAnJmNhcl9sZXZlbD0nICsgSGFsbENvbnRyb2wuSW5zLk1vZGVsLmhlcm9MZXZlbCArXG4gICAgICAgICAgICAnJmxldmVsPScgKyBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckxldmVsICtcbiAgICAgICAgICAgICcmZXhwPScgKyBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckV4cCArXG4gICAgICAgICAgICAnJmFzc2V0PScgKyBNYXRoLmZsb29yKFBsYXllck1nci5JbnMuSW5mby51c2VyR29sZCArIEhhbGxDb250cm9sLklucy5Nb2RlbC5oZXJvQWxsQXNzZXQoKSk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOS/neWtmOeUqOaIt+S/oeaBr+mHkeW4gTpcIiwgZGF0YVN0cmluZyk7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL3VzZXJpbmZvL3Bvc3QnLFxuICAgICAgICAgICAgbWV0aG9kOiAnUG9zdCcsXG4gICAgICAgICAgICBkYXRhOiBkYXRhU3RyaW5nLFxuICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOS/neWtmOeUqOaIt+S/oeaBr+mHkeW4gTpcIiwgcmVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmYWlsOiBmdW5jdGlvbiAocmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJARGF2aWQg5L+d5a2Y55So5oi35L+h5oGv6YeR5biB6ZSZ6K+vOlwiLCByZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiog5L+d5a2Y5Yqg6YCf5Ymp5L2Z5pe26Ze0ICovXG4gICAgcHVibGljIHN0YXRpYyBzYXZlQWNjZUxlZnRUaW1lKF9hY2NlTGVmdFRpbWU6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBsZXQgc3RvcmFnZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gICAgICAgIGlmIChfYWNjZUxlZnRUaW1lID4gMCkge1xuICAgICAgICAgICAgc3RvcmFnZS5zZXRJdGVtKEhhbGxDb250cm9sLklucy5Nb2RlbC5zX2FjY2VMZWZ0X3RpbWUsIF9hY2NlTGVmdFRpbWUudG9TdHJpbmcoKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdG9yYWdlLnJlbW92ZUl0ZW0oSGFsbENvbnRyb2wuSW5zLk1vZGVsLnNfYWNjZUxlZnRfdGltZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog6I635Y+W5Yqg6YCf5Ymp5L2Z5pe26Ze0ICovXG4gICAgcHVibGljIHN0YXRpYyBnZXRBY2NlTGVmdFRpbWUoKTogbnVtYmVyIHtcbiAgICAgICAgbGV0IHN0b3JhZ2UgPSB3aW5kb3cubG9jYWxTdG9yYWdlO1xuICAgICAgICBsZXQgZGF0YUpzb24gPSBzdG9yYWdlLmdldEl0ZW0oSGFsbENvbnRyb2wuSW5zLk1vZGVsLnNfYWNjZUxlZnRfdGltZSk7XG4gICAgICAgIGlmIChkYXRhSnNvbikge1xuICAgICAgICAgICAgbGV0IGFjY2VMZWZ0VGltZTogbnVtYmVyID0gTWF0aFV0aWwucGFyc2VJbnQoZGF0YUpzb24pO1xuICAgICAgICAgICAgc3RvcmFnZS5yZW1vdmVJdGVtKEhhbGxDb250cm9sLklucy5Nb2RlbC5zX2FjY2VMZWZ0X3RpbWUpO1xuICAgICAgICAgICAgcmV0dXJuIGFjY2VMZWZ0VGltZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICAvKiog57yT5a2Y5Y2V5Liq6Iux6ZuEICovXG4gICAgcHVibGljIHN0YXRpYyBzYXZlSGVyb1N0b3JlKGhlcm9JZDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGlmIChoZXJvSWQgPCAxKSByZXR1cm47XG4gICAgICAgIGxldCBoZXJvQXJ5OiBudW1iZXJbXSA9IFtdO1xuICAgICAgICBsZXQgc3RvcmFnZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gICAgICAgIGxldCBkYXRhSnNvbiA9IHN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmhlcm9fc3RvcmVfa2V5KTtcbiAgICAgICAgaWYgKGRhdGFKc29uKSB7XG4gICAgICAgICAgICBsZXQganNvbk9iaiA9IEpTT04ucGFyc2UoZGF0YUpzb24pIGFzIEFycmF5PG51bWJlcj47XG4gICAgICAgICAgICBpZiAoanNvbk9iaikge1xuICAgICAgICAgICAgICAgIGhlcm9BcnkgPSBqc29uT2JqO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChoZXJvQXJ5KSB7XG4gICAgICAgICAgICBoZXJvQXJ5LnB1c2goaGVyb0lkKTtcbiAgICAgICAgICAgIGxldCBkYXRhSnNvbiA9IEpTT04uc3RyaW5naWZ5KGhlcm9BcnkpO1xuICAgICAgICAgICAgaWYgKGRhdGFKc29uKSB7XG4gICAgICAgICAgICAgICAgc3RvcmFnZS5zZXRJdGVtKHRoaXMuaGVyb19zdG9yZV9rZXksIGRhdGFKc29uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBFdmVudHNNZ3IuSW5zLmRpc3BhdGNoKEV2ZW50VHlwZS5IRVJPX0JPWCk7XG4gICAgfVxuXG4gICAgLyoqIOWPluWHuue8k+WtmOiLsembhCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgcG9wSGVyb1N0b3JlKGlzUmVtb3ZlOiBib29sZWFuID0gZmFsc2UpOiBudW1iZXIge1xuICAgICAgICBsZXQgc3RvcmFnZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gICAgICAgIGxldCBkYXRhSnNvbiA9IHN0b3JhZ2UuZ2V0SXRlbSh0aGlzLmhlcm9fc3RvcmVfa2V5KTtcbiAgICAgICAgaWYgKGRhdGFKc29uKSB7XG4gICAgICAgICAgICBsZXQganNvbk9iaiA9IEpTT04ucGFyc2UoZGF0YUpzb24pIGFzIEFycmF5PG51bWJlcj47XG4gICAgICAgICAgICBpZiAoanNvbk9iaikge1xuICAgICAgICAgICAgICAgIGxldCBjYXJJZCA9IGpzb25PYmouc2hpZnQoKSBhcyBudW1iZXI7XG4gICAgICAgICAgICAgICAgLy/kv53lrZjnp7vpmaRcbiAgICAgICAgICAgICAgICBpZiAoaXNSZW1vdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGRhdGFKc29uID0gSlNPTi5zdHJpbmdpZnkoanNvbk9iaik7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhSnNvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RvcmFnZS5zZXRJdGVtKHRoaXMuaGVyb19zdG9yZV9rZXksIGRhdGFKc29uKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoY2FySWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhcklkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICAvKiog56a757q/5aWW5YqxICovXG4gICAgcHVibGljIHN0YXRpYyBvZmZsaW5lUHJpemUoKTogbnVtYmVyIHtcbiAgICAgICAgbGV0IHRoYXQgPSB0aGlzO1xuICAgICAgICBsZXQgc3RvcmFnZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gICAgICAgIGxldCBkYXRhSnNvbiA9IHN0b3JhZ2UuZ2V0SXRlbSh0aGF0LnNfb2ZmbGluZVByaXplX3RpbWUpO1xuICAgICAgICBsZXQgb2ZmbGluZVRpbWU6IG51bWJlciA9IE1hdGhVdGlsLnBhcnNlSW50KGRhdGFKc29uKTtcbiAgICAgICAgaWYgKG9mZmxpbmVUaW1lID4gMCkge1xuICAgICAgICAgICAgc3RvcmFnZS5yZW1vdmVJdGVtKHRoYXQuc19vZmZsaW5lUHJpemVfdGltZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG9mZmxpbmVUaW1lO1xuICAgIH1cblxuICAgIC8qKiDmn6Xor6Lnprvnur/lpZblirEgKi9cbiAgICBwdWJsaWMgc3RhdGljIHJlcXVlc3RPZmZsaW5lUHJpemVEYXRhKCk6IHZvaWQge1xuICAgICAgICBsZXQgdGhhdCA9IHRoaXM7XG4gICAgICAgIGxldCBIdHRwUmVxSGVscGVyID0gbmV3IEh0dHBSZXF1ZXN0SGVscGVyKFBhdGhDb25maWcuQXBwVXJsKTtcbiAgICAgICAgSHR0cFJlcUhlbHBlci5yZXF1ZXN0KHtcbiAgICAgICAgICAgIHVybDogJ3YxL2xvZ2luJyxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkBEYXZpZCDmn6Xor6Lnprvnur/lpZblirE6XCIsIHJlcyk7XG4gICAgICAgICAgICAgICAgbGV0IG9mZmxpbmVUaW1lID0gTWF0aFV0aWwucGFyc2VJbnQocmVzLnRpbWUpOyAvL+emu+e6v+aXtumVv1xuICAgICAgICAgICAgICAgIGxldCBsb2dpbl90aW1lID0gTWF0aFV0aWwucGFyc2VJbnQocmVzLmxvZ2luX3RpbWUpOyAvL+eZu+W9leW9k+WJjeacjeWKoeWZqOaXtumXtFxuICAgICAgICAgICAgICAgIGxldCBjdXJfdGltZSA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCkgLyAxMDAwO1xuICAgICAgICAgICAgICAgIFRpbWVVdGlsLmNzX3RpbWVfZGlmZiA9IGxvZ2luX3RpbWUgLSBjdXJfdGltZTtcbiAgICAgICAgICAgICAgICBsZXQgc3RvcmFnZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gICAgICAgICAgICAgICAgbGV0IGRhdGFKc29uID0gc3RvcmFnZS5nZXRJdGVtKHRoYXQuc19vZmZsaW5lX3RpbWUpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6K+75Y+W5pys5Zyw56a757q/OlwiLCBkYXRhSnNvbik7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGFKc29uKSB7XG4gICAgICAgICAgICAgICAgICAgIG9mZmxpbmVUaW1lID0gMDtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGxhc3RfbG9nb3V0X3RpbWUgPSBNYXRoVXRpbC5wYXJzZUludChkYXRhSnNvbik7IC8v5LiK5qyh56a757q/5pe26Ze0XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGxvZ2luX3RpbWUsIGN1cl90aW1lLCBsYXN0X2xvZ291dF90aW1lLCAobG9naW5fdGltZSAtIGxhc3RfbG9nb3V0X3RpbWUpLCBUaW1lVXRpbC5jc190aW1lX2RpZmYpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWlzTmFOKGxhc3RfbG9nb3V0X3RpbWUpICYmIGxvZ2luX3RpbWUgPiBsYXN0X2xvZ291dF90aW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZsaW5lVGltZSA9IGxvZ2luX3RpbWUgLSBsYXN0X2xvZ291dF90aW1lO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHN0b3JhZ2UucmVtb3ZlSXRlbSh0aGF0LnNfb2ZmbGluZV90aW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLnprvnur/lpZblirE6XCIsIG9mZmxpbmVUaW1lKTtcbiAgICAgICAgICAgICAgICBpZiAob2ZmbGluZVRpbWUgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0b3JhZ2Uuc2V0SXRlbSh0aGF0LnNfb2ZmbGluZVByaXplX3RpbWUsIG9mZmxpbmVUaW1lLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgICAgICBFdmVudHNNZ3IuSW5zLmRpc3BhdGNoKEV2ZW50VHlwZS5TSE9XX09GRkxJTkVfUkVXQVJEKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdE5vdGlmeVNlcnZlclByaXplKCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8v5L+d5a2Y56a757q/5pe26Ze0XG4gICAgcHVibGljIHN0YXRpYyBzYXZlT2ZmbGluZVRpbWUoKTogdm9pZCB7XG4gICAgICAgIGxldCB0aGF0ID0gdGhpcztcbiAgICAgICAgbGV0IHN0b3JhZ2UgPSB3aW5kb3cubG9jYWxTdG9yYWdlO1xuICAgICAgICBsZXQgb2ZmbGluZVNlcnZlclRpbWU6IG51bWJlciA9IFRpbWVVdGlsLnNlcnZlclRpbWUoKTtcbiAgICAgICAgc3RvcmFnZS5zZXRJdGVtKHRoYXQuc19vZmZsaW5lX3RpbWUsIG9mZmxpbmVTZXJ2ZXJUaW1lLnRvU3RyaW5nKCkpO1xuICAgIH1cblxuICAgIC8qKiDnp7vpmaTnvJPlrZjmlbDmja4gKi9cbiAgICBwdWJsaWMgc3RhdGljIGNsZWFyTG9jYWxEYXRhKCk6IHZvaWQge1xuICAgICAgICBsZXQgc3RvcmFnZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2U7XG4gICAgICAgIGlmIChzdG9yYWdlKSB7XG4gICAgICAgICAgICBzdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5zdG9yYWdlX3VzZXJfb2xkKTtcbiAgICAgICAgICAgIHN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLnN0b3JhZ2VfdXNlcik7XG4gICAgICAgIH1cbiAgICB9XG59IiwiLypcbiog5a2X5YW4O1xuKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRTRGljdGlvbmFyeTxLVCwgVlQ+e1xuICAgIC8qKlxuICAgICAgKiDlrZflhbjov5nkuKrmlbDmja7nu5PmnoTvvIzlhbbmnKzotKjmmK/kuIDkuKrkuKrplK7lgLzlr7k8a2V5LHZhbHVlPuW9ouaIkOeahOaVsOaNrumbhuWQiO+8jFxuICAgICAgKiDkvYbkuLrkuobog73mn6Xmib7liLDmraPnoa7nmoTmlbDmja7vvIxrZXnlgLzlv4Xpobvkv53or4HllK/kuIDmgKfjgILmiJHku6zlj6/ku6XpgJrov4fkvb/nlKhcbiAgICAgICogVHlwZXNjcmlwdOS4reeahOS4pOS4quaVsOe7hOadpeWIhuWIq+WtmOWCqGtleeWAvOWSjHZhbHVl5YC85p2l5qih5ouf5a6e546w6L+Z56eN57uT5p6E44CCXG4gICAgICAqIOaVsOaNruWtmOWCqOaXtuaKimtleeWSjHZhbHVl5YiG5Yir5a2Y5YKo5Zyo5Lik5Liq5pWw57uE55u45ZCM55qE57Si5byV5L2N572u77yMXG4gICAgICAqIOi/meagt+WcqOafpeaJvuaVsOaNruaXtuWwseWPr+S7pemAmui/h+i/meS4que0ouW8leaKiuaVsOaNruWFs+iBlOi1t+adpe+8jOaJvuWIsOWvueW6lOeahOWAvOOAguOAglxuICAgICAgKiBcbiAgICAgICovXG5cbiAgICBwcml2YXRlIGtleXM6IEtUW10gPSBbXTtcbiAgICBwcml2YXRlIHZhbHVlczogVlRbXSA9IFtdO1xuICAgIHByaXZhdGUgX2xlbjogbnVtYmVyID0gMDtcbiAgICBwdWJsaWMgY29uc3RydWN0b3IoKSB7IH1cblxuICAgIHB1YmxpYyB0b0pzb25PYmplY3QoKTogYW55IHtcbiAgICAgICAgY29uc3QgcmVzdWx0OiBhbnkgPSB7fTtcbiAgICAgICAgcmVzdWx0LmtleXMgPSB0aGlzLmtleXM7XG4gICAgICAgIHJlc3VsdC52YWx1ZXMgPSB0aGlzLnZhbHVlcztcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZnJvbUpzb25PYmplY3Qob2JqOiBhbnkpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5rZXlzID0gb2JqLmtleXM7XG4gICAgICAgIHRoaXMudmFsdWVzID0gb2JqLnZhbHVlcztcbiAgICB9XG5cbiAgICBwdWJsaWMgQWRkKGtleTogYW55LCB2YWx1ZTogYW55KSB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgc2VsZi5rZXlzLnB1c2goa2V5KTtcbiAgICAgICAgc2VsZi52YWx1ZXMucHVzaCh2YWx1ZSk7XG4gICAgICAgIHNlbGYuX2xlbisrO1xuICAgIH1cblxuICAgIHB1YmxpYyBSZW1vdmUoa2V5OiBhbnkpIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBsZXQgaW5kZXggPSBzZWxmLmtleXMuaW5kZXhPZihrZXksIDApO1xuICAgICAgICBpZiAoaW5kZXggIT0gLTEpIHtcbiAgICAgICAgICAgIHNlbGYua2V5cy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICAgICAgc2VsZi52YWx1ZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIHNlbGYuX2xlbi0tO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoq6I635Y+W5a2X5YW45Lit5a+55bqUa2V555qE5YC877yM5LiN5a2Y5Zyo5YiZ6L+U5ZuebnVsbCAqL1xuICAgIHB1YmxpYyBUcnlHZXRWYWx1ZShrZXk6IEtUKTogVlQge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIHZhciBpbmRleCA9IHNlbGYua2V5cy5pbmRleE9mKGtleSwgMCk7XG4gICAgICAgIGlmIChpbmRleCAhPSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIHNlbGYudmFsdWVzW2luZGV4XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgVHJ5R2V0S2V5KHZhbHVlOiBWVCk6IEtUIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICB2YXIgaW5kZXggPSBzZWxmLnZhbHVlcy5pbmRleE9mKHZhbHVlLCAwKTtcbiAgICAgICAgaWYgKGluZGV4ICE9IC0xKSB7XG4gICAgICAgICAgICByZXR1cm4gc2VsZi5rZXlzW2luZGV4XTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLyoqXG4gICAgICog6YCa6L+H5Yik5pat5p2h5Lu26I635Y+W55u45YWz5YiX6KGoXG4gICAgICogQHBhcmFtIHZhbHVlIOWIpOaWreadoeS7tuS+i+Wmgu+8mlxuICAgICAqIHRoaXMuVHJ5R2V0TGlzdEJ5Q29uZGl0aW9uKGZ1bmN0aW9uKFZUKXtcbiAgICAgKiAgICAgIGlmKFZULnh4PT14eCl7XG4gICAgICogICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgKlxuICAgICAqICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAqIH0pO1xuICAgICAqIGNhY2hlLlRyeUdldExpc3RCeUNvbmRpdGlvbigoYmVhbjpUeXBlKT0+YmVhbi54eHg9PXh4eCk7XG4gICAgICog6I635Y+W5YiX6KGo5YWo6YOoY2FjaGUuVHJ5R2V0TGlzdEJ5Q29uZGl0aW9uKChiZWFuOlR5cGUpPT50cnVlKTtcbiAgICAgKi9cbiAgICBwdWJsaWMgVHJ5R2V0TGlzdEJ5Q29uZGl0aW9uKHZhbHVlOiAodmFsdWU6IFZUKSA9PiBib29sZWFuKTogQXJyYXk8VlQ+IHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBsZXQgbGlzdCA9IFtdO1xuICAgICAgICBmb3IgKGxldCBvIG9mIHNlbGYudmFsdWVzKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUobykpIHtcbiAgICAgICAgICAgICAgICBsaXN0W2xpc3QubGVuZ3RoXSA9IG87XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxpc3Q7XG4gICAgfVxuICAgIHB1YmxpYyBUcnlHZXRBbnlCeUNvbmRpdGlvbih2YWx1ZTogKHZhbHVlOiBWVCkgPT4gYm9vbGVhbik6IEFycmF5PFZUPiB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgbGV0IGRpYzogYW55ID0ge307XG4gICAgICAgIGZvciAobGV0IHMgb2Ygc2VsZi5rZXlzKSB7XG4gICAgICAgICAgICB2YXIgaW5kZXggPSBzZWxmLmtleXMuaW5kZXhPZihzLCAwKTtcbiAgICAgICAgICAgIGlmICh2YWx1ZShzZWxmLnZhbHVlc1tpbmRleF0pKSB7XG4gICAgICAgICAgICAgICAgZGljW3NdID0gc2VsZi52YWx1ZXNbaW5kZXhdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaWM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIOmAmui/h+WIpOaWreadoeS7tuiOt+WPluebuOWFs+WIl+ihqFxuICAgICAqIEBwYXJhbSB2YWx1ZSDliKTmlq3mnaHku7bkvovlpoLvvJpcbiAgICAgKiB0aGlzLlRyeUdldExpc3RCeUNvbmRpdGlvbihmdW5jdGlvbihWVCl7XG4gICAgICogICAgICBpZihWVC54eD09eHgpe1xuICAgICAqICAgICAgICAgIHJldHVybiB0cnVlXG4gICAgICpcbiAgICAgKiAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgKiB9KTtcbiAgICAgKiBjYWNoZS5UcnlHZXRMaXN0QnlDb25kaXRpb24oKGJlYW46VHlwZSk9PmJlYW4ueHh4PT14eHgpO1xuICAgICAqIOiOt+WPluWIl+ihqOWFqOmDqGNhY2hlLlRyeUdldExpc3RCeUNvbmRpdGlvbigoYmVhbjpUeXBlKT0+dHJ1ZSk7XG4gICAgICovXG4gICAgcHVibGljIFRyeUdldEtleUxpc3RCeUNvbmRpdGlvbih2YWx1ZTogKHY6IEtUKSA9PiBib29sZWFuKTogQXJyYXk8VlQ+IHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBsZXQgbGlzdCA9IFtdO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNlbGYua2V5cy5sZW5ndGg7IGkrKykge1xuXG4gICAgICAgICAgICBpZiAodmFsdWUoc2VsZi5rZXlzW2ldKSkge1xuICAgICAgICAgICAgICAgIGxpc3RbbGlzdC5sZW5ndGhdID0gc2VsZi52YWx1ZXNbaV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxpc3Q7XG4gICAgfVxuXG4gICAgLyoq5Yik5pat5a2X5YW45Lit5piv5ZCm5a2Y5Zyo5a+55bqUa2V555qE5YC877yM6L+U5ZueYm9vbGVhbiAqL1xuICAgIHB1YmxpYyBDb250YWluc0tleShrZXk6IGFueSk6IGJvb2xlYW4ge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIGxldCBrcyA9IHNlbGYua2V5cztcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrcy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgaWYgKGtzW2ldID09IGtleSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvKiromb3nhLblj6/ku6XpgJrov4fkuIrpnaLnmoRUcnlHZXRWYWx1ZSgp5Ye95pWw6I635Y+W5Yiw5a2X5YW46YeM55qE5byV55So5pWw5o2u77yMXG4gICAgICog5YaN5a+55pWw5o2u6L+b6KGM5L+u5pS55pu05paw77yM5L2G5b2T5pWw5o2u5piv5YC857G75Z6L5pe25piv5peg5rOV5a6e546w5L+u5pS55L+d5a2Y55qE44CCXG4gICAgICog5Li65LqG5pu05pa55L6/55qE5L+u5pS55a2X5YW46YeM55qE5pWw5o2u77yM5aKe5Yqg5LiA5Liq5L+u5pS55pWw5o2u55qE5Ye95pWwOijlubblnKjov5Tlm57lgLzkuK3ov5Tlm57mmK/lkKbkv67mlLnmiJDlip8pICovXG4gICAgcHVibGljIFNldERpY1ZhbHVlKGtleTogYW55LCB2YWx1ZTogYW55KTogYm9vbGVhbiB7XG4gICAgICAgIHZhciBpbmRleCA9IHRoaXMua2V5cy5pbmRleE9mKGtleSwgMCk7XG4gICAgICAgIGlmIChpbmRleCAhPSAtMSkge1xuICAgICAgICAgICAgdGhpcy5rZXlzW2luZGV4XSA9IGtleTtcbiAgICAgICAgICAgIHRoaXMudmFsdWVzW2luZGV4XSA9IHZhbHVlO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5BZGQoa2V5LCB2YWx1ZSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8qKmtleeS4um51bWJlcueahO+8jOWPr+S7peaMieS7juWwj+WIsOWkp+eahOmhuuW6j+mHjeaWsOaOkuW6jyAqL1xuICAgIHB1YmxpYyBTb3J0QnlLZXkoKTogYm9vbGVhbiB7XG4gICAgICAgIGxldCBzZWxmID0gdGhpcztcbiAgICAgICAgZm9yIChsZXQgaiA9IHNlbGYua2V5cy5sZW5ndGggLSAxOyBqID4gMDsgai0tKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGo7IGkrKykge1xuICAgICAgICAgICAgICAgIGlmIChOdW1iZXIoc2VsZi5rZXlzW2ldKSA+IE51bWJlcihzZWxmLmtleXNbaSArIDFdKSkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgdGVtS2V5OiBhbnkgPSBzZWxmLmtleXNbaV07XG4gICAgICAgICAgICAgICAgICAgIGxldCB0ZW1WYWx1ZTogYW55ID0gc2VsZi52YWx1ZXNbaV07XG4gICAgICAgICAgICAgICAgICAgIHNlbGYua2V5c1tpXSA9IHNlbGYua2V5c1tpICsgMV07XG4gICAgICAgICAgICAgICAgICAgIHNlbGYudmFsdWVzW2ldID0gc2VsZi52YWx1ZXNbaSArIDFdO1xuICAgICAgICAgICAgICAgICAgICBzZWxmLmtleXNbaSArIDFdID0gdGVtS2V5O1xuICAgICAgICAgICAgICAgICAgICBzZWxmLnZhbHVlc1tpICsgMV0gPSB0ZW1WYWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcHVibGljIEdldExlbmdodCgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5fbGVuO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRWYWx1ZUJ5SW5kZXgoaW5kZXg6IG51bWJlcik6IFZUIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICBpZiAoaW5kZXggPCAwIHx8IGluZGV4ID49IHNlbGYuX2xlbikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCB2YWx1ZTogVlQgPSBzZWxmLnZhbHVlc1tpbmRleF07XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0S2V5QnlJbmRleChpbmRleDogbnVtYmVyKTogS1Qge1xuICAgICAgICBsZXQgc2VsZiA9IHRoaXM7XG4gICAgICAgIGlmIChpbmRleCA8IDAgfHwgaW5kZXggPj0gc2VsZi5fbGVuKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IHZhbHVlOiBLVCA9IHNlbGYua2V5c1tpbmRleF07XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0VmFsdWVzKCk6IFZUW10ge1xuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZXM7XG4gICAgfVxuICAgIHB1YmxpYyBnZXRrZXlzKCk6IEtUW10ge1xuICAgICAgICByZXR1cm4gdGhpcy5rZXlzO1xuICAgIH1cblxuICAgIHB1YmxpYyBjbGVhcigpOiB2b2lkIHtcbiAgICAgICAgbGV0IHNlbGYgPSB0aGlzO1xuICAgICAgICB3aGlsZSAoc2VsZi5rZXlzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHNlbGYua2V5cy5wb3AoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHdoaWxlIChzZWxmLnZhbHVlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBsZXQgdnQ6IFZUID0gc2VsZi52YWx1ZXMucG9wKCk7XG4gICAgICAgICAgICB2dCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgc2VsZi5rZXlzLmxlbmd0aCA9IDA7XG4gICAgICAgIHNlbGYudmFsdWVzLmxlbmd0aCA9IDA7XG4gICAgICAgIHNlbGYuX2xlbiA9IDA7XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpbWVVdGlsIHtcblxuICAgIHB1YmxpYyBzdGF0aWMgY3NfdGltZV9kaWZmOiBudW1iZXIgPSAwOyAvL+WuouaIt+err+S4juacjeWKoeWZqOaXtumXtOW3rlxuXG4gICAgLyoqIDAwOjAwOjAw5qC85byP5pe26Ze0ICovXG4gICAgcHVibGljIHN0YXRpYyB0aW1lRm9ybWF0U3RyKF90aW1lOiBudW1iZXIsIF9pc0hvdXI6IGJvb2xlYW4gPSBmYWxzZSk6IHN0cmluZyB7XG4gICAgICAgIGxldCBob3VyID0gTWF0aC5mbG9vcihfdGltZSAvIDM2MDApO1xuICAgICAgICBsZXQgbWludXRlID0gTWF0aC5mbG9vcihfdGltZSAvIDYwKSAlIDYwO1xuICAgICAgICBsZXQgc2VjID0gX3RpbWUgJSA2MDtcbiAgICAgICAgaWYgKF9pc0hvdXIpIHtcbiAgICAgICAgICAgIHJldHVybiAoaG91ciA8IDEwID8gKCcwJyArIGhvdXIpIDogaG91cikgKyAnOicgKyAobWludXRlIDwgMTAgPyAoJzAnICsgbWludXRlKSA6IG1pbnV0ZSkgKyAnOicgKyAoc2VjIDwgMTAgPyAoJzAnICsgc2VjKSA6IHNlYyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gKG1pbnV0ZSA8IDEwID8gKCcwJyArIG1pbnV0ZSkgOiBtaW51dGUpICsgJzonICsgKHNlYyA8IDEwID8gKCcwJyArIHNlYykgOiBzZWMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOiOt+WPluacrOWcsOS4juacjeWKoeWZqOaXtumXtOW3rihz5YePYykgKi9cbiAgICBwdWJsaWMgc3RhdGljIGNzRGlmZlRpbWUoKTogbnVtYmVyIHtcbiAgICAgICAgbGV0IHRoYXQgPSB0aGlzO1xuICAgICAgICByZXR1cm4gdGhhdC5jc190aW1lX2RpZmY7XG4gICAgfVxuXG4gICAgLyoqIOiOt+WPluacjeWKoeWZqOW9k+WJjeaXtumXtCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgc2VydmVyVGltZSgpOiBudW1iZXIge1xuICAgICAgICBsZXQgdGhhdCA9IHRoaXM7XG4gICAgICAgIGxldCBjdXJfdGltZTogbnVtYmVyID0gKG5ldyBEYXRlKCkpLmdldFRpbWUoKSAvIDEwMDA7XG4gICAgICAgIHJldHVybiAoY3VyX3RpbWUgKyB0aGF0LmNzRGlmZlRpbWUoKSk7XG4gICAgfVxuXG59IiwiaW1wb3J0IElCYXNlVmlldyBmcm9tIFwiLi9iYXNlL0lCYXNlVmlld1wiO1xuaW1wb3J0IFNtYWxsTG9hZGluZyBmcm9tIFwiLi4vLi4vbW9kdWxlL2xvYWRpbmcvdmlldy9TbWFsbExvYWRpbmdcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmlld01nciB7XG5cbiAgICAvKiog5bey5rOo5YaM55qEVUkgKi9cbiAgICBwcml2YXRlIF92aWV3czogYW55O1xuXG4gICAgLyoqIOW8gOWQr+S4rVVJICovXG4gICAgcHJpdmF0ZSBfb3BlbnM6IEFycmF5PG51bWJlcj47XG5cbiAgICAvKiog5p6E6YCg5Ye95pWwICovXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl92aWV3cyA9IHt9O1xuICAgICAgICB0aGlzLl9vcGVucyA9IFtdO1xuICAgIH1cblxuICAgIC8qKlxuICAqIOmdouadv+azqOWGjFxuICAqIEBwYXJhbSBrZXkg6Z2i5p2/5ZSv5LiA5qCH6K+GXG4gICogQHBhcmFtIHZpZXcg6Z2i5p2/XG4gICovXG4gICAgcHVibGljIHJlZ2lzdGVyKGtleTogbnVtYmVyLCB2aWV3OiBJQmFzZVZpZXcpOiB2b2lkIHtcbiAgICAgICAgaWYgKHZpZXcgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl92aWV3c1trZXldKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fdmlld3Nba2V5XSA9IHZpZXc7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6Z2i5p2/6Kej6Zmk5rOo5YaMXG4gICAgICogQHBhcmFtIGtleVxuICAgICAqL1xuICAgIHB1YmxpYyB1bnJlZ2lzdGVyKGtleTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGlmICghdGhpcy5fdmlld3Nba2V5XSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3ZpZXdzW2tleV0gPSBudWxsO1xuICAgICAgICBkZWxldGUgdGhpcy5fdmlld3Nba2V5XTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiDlvIDlkK/pnaLmnb9cbiAgICAgKiBAcGFyYW0ga2V5IOmdouadv+WUr+S4gOagh+ivhlxuICAgICAqIEBwYXJhbSBwYXJhbSDlj4LmlbBcbiAgICAgKi9cbiAgICBwdWJsaWMgb3BlbihrZXk6IG51bWJlciwgY2FsbGJhY2s6IEZ1bmN0aW9uID0gbnVsbCwgLi4ucGFyYW06IGFueVtdKTogSUJhc2VWaWV3IHtcbiAgICAgICAgdmFyIHZpZXc6IElCYXNlVmlldyA9IHRoaXMuZ2V0VmlldyhrZXkpO1xuICAgICAgICBpZiAodmlldyA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZpZXcuaXNTaG93KCkpIHtcbiAgICAgICAgICAgIHZpZXcuY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgICAgICAgIHZpZXcuaW5pdFVJKCk7XG4gICAgICAgICAgICB2aWV3Lm9wZW4uYXBwbHkodmlldywgcGFyYW0pO1xuICAgICAgICAgICAgdmlldy5pbml0RGF0YSgpO1xuICAgICAgICAgICAgcmV0dXJuIHZpZXc7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodmlldy5pc0luaXQoKSkge1xuICAgICAgICAgICAgdmlldy5hZGRUb1BhcmVudCgpO1xuICAgICAgICAgICAgdmlldy5jYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgICAgICAgICAgdmlldy5pbml0VUkoKTtcbiAgICAgICAgICAgIHZpZXcuYWRkRXZlbnRzKCk7XG4gICAgICAgICAgICB2aWV3Lm9wZW4uYXBwbHkodmlldywgcGFyYW0pO1xuICAgICAgICAgICAgdmlldy5pbml0RGF0YSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgU21hbGxMb2FkaW5nLklucy5zaG93TG9hZGluZygpO1xuICAgICAgICAgICAgdmlldy5sb2FkUmVzb3VyY2UoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHZpZXcuc2V0VmlzaWJsZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgLy8gdmlldy5pbml0VUlWaWV3KCk7XG4gICAgICAgICAgICAgICAgdmlldy5hZGRUb1BhcmVudCgpO1xuICAgICAgICAgICAgfS5iaW5kKHRoaXMpLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmlldy5jYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgICAgICAgICAgICAgIHZpZXcuaW5pdFVJKCk7XG4gICAgICAgICAgICAgICAgdmlldy5hZGRFdmVudHMoKTtcbiAgICAgICAgICAgICAgICB2aWV3Lm9wZW4uYXBwbHkodmlldywgcGFyYW0pO1xuICAgICAgICAgICAgICAgIHZpZXcuaW5pdERhdGEoKTtcbiAgICAgICAgICAgICAgICB2aWV3LnNldFZpc2libGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgU21hbGxMb2FkaW5nLklucy5oaWRlTG9hZGluZygpO1xuICAgICAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX29wZW5zLnB1c2goa2V5KTtcbiAgICAgICAgcmV0dXJuIHZpZXc7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5qC55o2u5ZSv5LiA5qCH6K+G6I635Y+W5LiA5LiqVUnlr7nosaFcbiAgICAgKiBAcGFyYW0ga2V5XG4gICAgICogQHJldHVybnMge2FueX1cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0VmlldyhrZXk6IG51bWJlcik6IElCYXNlVmlldyB7XG4gICAgICAgIHJldHVybiB0aGlzLl92aWV3c1trZXldO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOWFs+mXremdouadv1xuICAgICAqIEBwYXJhbSBrZXkg6Z2i5p2/5ZSv5LiA5qCH6K+GXG4gICAgICogQHBhcmFtIHBhcmFtIOWPguaVsFxuICAgICAqXG4gICAgICovXG4gICAgcHVibGljIGNsb3NlKGtleTogbnVtYmVyLCAuLi5wYXJhbTogYW55W10pOiB2b2lkIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzU2hvdyhrZXkpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdmlldzogSUJhc2VWaWV3ID0gdGhpcy5nZXRWaWV3KGtleSk7XG4gICAgICAgIGlmICh2aWV3ID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciB2aWV3SW5kZXggPSB0aGlzLl9vcGVucy5pbmRleE9mKGtleSk7XG4gICAgICAgIGlmICh2aWV3SW5kZXggPj0gMCkge1xuICAgICAgICAgICAgdGhpcy5fb3BlbnMuc3BsaWNlKHZpZXdJbmRleCwgMSk7XG4gICAgICAgIH1cblxuICAgICAgICB2aWV3LnJlbW92ZUZyb21QYXJlbnQoKTtcbiAgICAgICAgdmlldy5jbG9zZS5hcHBseSh2aWV3LCBwYXJhbSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog5qOA5rWL5LiA5LiqVUnmmK/lkKblvIDlkK/kuK1cbiAgICAgKiBAcGFyYW0ga2V5XG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gICAgcHVibGljIGlzU2hvdyhrZXk6IG51bWJlcik6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fb3BlbnMuaW5kZXhPZihrZXkpICE9IC0xO1xuICAgIH1cblxuICAgIC8qKiDlvZPliY11aeaJk+W8gOaVsOmHjyAqL1xuICAgIHB1YmxpYyBjdXJyT3Blbk51bSgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5fb3BlbnMubGVuZ3RoO1xuICAgIH1cblxuICAgIC8qKiDmuIXnqbrlpITnkIYgKi9cbiAgICBwdWJsaWMgY2xlYXIoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuY2xvc2VBbGwoKTtcbiAgICAgICAgdGhpcy5fdmlld3MgPSB7fTtcbiAgICB9XG5cbiAgICAvKiog5YWz6Zet5omA5pyJ5byA5ZCv5Lit55qEVUkgKi9cbiAgICBwdWJsaWMgY2xvc2VBbGwoKTogdm9pZCB7XG4gICAgICAgIHdoaWxlICh0aGlzLl9vcGVucy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRoaXMuY2xvc2UodGhpcy5fb3BlbnNbMF0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICog6ZSA5q+B5LiA5Liq6Z2i5p2/XG4gICAgICogQHBhcmFtIGtleSDllK/kuIDmoIfor4ZcbiAgICAgKiBAcGFyYW0gbmV3VmlldyDmlrDpnaLmnb9cbiAgICAgKi9cbiAgICBwdWJsaWMgZGVzdHJveShrZXk6IG51bWJlciwgbmV3VmlldzogSUJhc2VWaWV3ID0gbnVsbCk6IHZvaWQge1xuICAgICAgICB2YXIgb2xkVmlldzogSUJhc2VWaWV3ID0gdGhpcy5nZXRWaWV3KGtleSk7XG4gICAgICAgIGlmIChvbGRWaWV3KSB7XG4gICAgICAgICAgICB0aGlzLnVucmVnaXN0ZXIoa2V5KTtcbiAgICAgICAgICAgIG9sZFZpZXcuZGVzdHJveSgpO1xuICAgICAgICAgICAgb2xkVmlldyA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5yZWdpc3RlcihrZXksIG5ld1ZpZXcpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogVmlld01ncjtcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnMoKTogVmlld01nciB7XG4gICAgICAgIGlmIChWaWV3TWdyLl9pbnN0YW5jZSA9PSBudWxsKSB7XG4gICAgICAgICAgICBWaWV3TWdyLl9pbnN0YW5jZSA9IG5ldyBWaWV3TWdyKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFZpZXdNZ3IuX2luc3RhbmNlO1xuICAgIH1cbn0iLCJpbXBvcnQgU2hvcFZpZXcgZnJvbSBcIi4uLy4uL21vZHVsZS9zaG9wL3ZpZXcvU2hvcFZpZXdcIjtcbmltcG9ydCBWaWV3TWdyIGZyb20gXCIuL1ZpZXdNZ3JcIjtcbmltcG9ydCBWaWV3Q29uc3QgZnJvbSBcIi4vY29uc3QvVmlld0NvbnN0XCI7XG5pbXBvcnQgRGlhbW9uZEJ1eVZpZXcgZnJvbSBcIi4uLy4uL21vZHVsZS9jb21tb24vdmlldy9EaWFtb25kQnV5Vmlld1wiO1xuaW1wb3J0IEx1Y2tQcml6ZVZpZXcgZnJvbSBcIi4uLy4uL21vZHVsZS9sdWNrUHJpemUvdmlldy9MdWNrUHJpemVWaWV3XCI7XG5pbXBvcnQgRGF5U2lnblZpZXcgZnJvbSBcIi4uLy4uL21vZHVsZS9kYXlTaWduL3ZpZXcvRGF5U2lnblZpZXdcIjtcbmltcG9ydCBUYXNrVmlldyBmcm9tIFwiLi4vLi4vbW9kdWxlL3Rhc2svdmlldy9UYXNrVmlld1wiO1xuaW1wb3J0IEZvbGxvd1ZpZXcgZnJvbSBcIi4uLy4uL21vZHVsZS9mb2xsb3cvdmlldy9Gb2xsb3dWaWV3XCI7XG5pbXBvcnQgUmFua1ZpZXcgZnJvbSBcIi4uLy4uL21vZHVsZS9yYW5rL3ZpZXcvUmFua1ZpZXdcIjtcbmltcG9ydCBHb2xkTm90RW5vdWdoVmlldyBmcm9tIFwiLi4vLi4vbW9kdWxlL2NvbW1vbi92aWV3L0dvbGROb3RFbm91Z2hWaWV3XCI7XG5pbXBvcnQgTGV2ZWxSZXdhcmRWaWV3IGZyb20gXCIuLi8uLi9tb2R1bGUvY29tbW9uL3ZpZXcvTGV2ZWxSZXdhcmRWaWV3XCI7XG5pbXBvcnQgT2ZmTGluZVJld2FyZFZpZXcgZnJvbSBcIi4uLy4uL21vZHVsZS9jb21tb24vdmlldy9PZmZMaW5lUmV3YXJkVmlld1wiO1xuaW1wb3J0IFVzZXJJbmZvVmlldyBmcm9tIFwiLi4vLi4vbW9kdWxlL2hhbGwvdmlldy9Vc2VySW5mb1ZpZXdcIjtcbmltcG9ydCBOZXdIZXJvVmlldyBmcm9tIFwiLi4vLi4vbW9kdWxlL2hhbGwvdmlldy9OZXdIZXJvVmlld1wiO1xuXG4vKipcbiAqIOeVjOmdouazqOWGjOexu1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWaWV3UmVnaXN0ZXJNZ3Ige1xuXG5cbiAgICAvKiog5Yid5aeL5YyW5rOo5YaM55WM6Z2iICovXG4gICAgcHVibGljIGluaXRSZWdpc3RlclZpZXcoKTogdm9pZCB7XG4gICAgICAgIFZpZXdNZ3IuSW5zLnJlZ2lzdGVyKFZpZXdDb25zdC5TaG9wVmlldywgbmV3IFNob3BWaWV3KCkpO1xuICAgICAgICBWaWV3TWdyLklucy5yZWdpc3RlcihWaWV3Q29uc3QuRGlhbW9uZEJ1eVZpZXcsIG5ldyBEaWFtb25kQnV5VmlldygpKTtcbiAgICAgICAgVmlld01nci5JbnMucmVnaXN0ZXIoVmlld0NvbnN0Lkx1Y2tQcml6ZVZpZXcsIG5ldyBMdWNrUHJpemVWaWV3KCkpO1xuICAgICAgICBWaWV3TWdyLklucy5yZWdpc3RlcihWaWV3Q29uc3QuRGF5U2lnblZpZXcsIG5ldyBEYXlTaWduVmlldygpKTtcbiAgICAgICAgVmlld01nci5JbnMucmVnaXN0ZXIoVmlld0NvbnN0LlRhc2tWaWV3LCBuZXcgVGFza1ZpZXcoKSk7XG4gICAgICAgIFZpZXdNZ3IuSW5zLnJlZ2lzdGVyKFZpZXdDb25zdC5Gb2xsb3dWaWV3LCBuZXcgRm9sbG93VmlldygpKTtcbiAgICAgICAgVmlld01nci5JbnMucmVnaXN0ZXIoVmlld0NvbnN0LlJhbmtWaWV3LCBuZXcgUmFua1ZpZXcoKSk7XG4gICAgICAgIFZpZXdNZ3IuSW5zLnJlZ2lzdGVyKFZpZXdDb25zdC5Hb2xkTm90RW5vdWdoVmlldywgbmV3IEdvbGROb3RFbm91Z2hWaWV3KCkpO1xuICAgICAgICBWaWV3TWdyLklucy5yZWdpc3RlcihWaWV3Q29uc3QuTGV2ZWxSZXdhcmRWaWV3LCBuZXcgTGV2ZWxSZXdhcmRWaWV3KCkpO1xuICAgICAgICBWaWV3TWdyLklucy5yZWdpc3RlcihWaWV3Q29uc3QuT2ZmTGluZVJld2FyZFZpZXcsIG5ldyBPZmZMaW5lUmV3YXJkVmlldygpKTtcbiAgICAgICAgVmlld01nci5JbnMucmVnaXN0ZXIoVmlld0NvbnN0LlVzZXJJbmZvVmlldywgbmV3IFVzZXJJbmZvVmlldygpKTtcbiAgICAgICAgVmlld01nci5JbnMucmVnaXN0ZXIoVmlld0NvbnN0Lk5ld0hlcm9WaWV3LCBuZXcgTmV3SGVyb1ZpZXcoKSk7XG5cbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXRpYyBfaW5zdGFuY2U6IFZpZXdSZWdpc3Rlck1ncjtcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnMoKTogVmlld1JlZ2lzdGVyTWdyIHtcbiAgICAgICAgaWYgKFZpZXdSZWdpc3Rlck1nci5faW5zdGFuY2UgPT0gbnVsbCkge1xuICAgICAgICAgICAgVmlld1JlZ2lzdGVyTWdyLl9pbnN0YW5jZSA9IG5ldyBWaWV3UmVnaXN0ZXJNZ3IoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gVmlld1JlZ2lzdGVyTWdyLl9pbnN0YW5jZTtcbiAgICB9XG59XG4iLCJpbXBvcnQgSUJhc2VWaWV3IGZyb20gXCIuL0lCYXNlVmlld1wiO1xuaW1wb3J0IE1hc2tMYXllciBmcm9tIFwiLi4vLi4vbGF5ZXIvYmFzZS9NYXNrTGF5ZXJcIjtcbmltcG9ydCBBbGlnblV0aWxzIGZyb20gXCIuLi8uLi91dGlscy9BbGlnblV0aWxzXCI7XG5pbXBvcnQgTGF5ZXIgZnJvbSBcIi4uLy4uL2xheWVyL2Jhc2UvTGF5ZXJcIjtcbmltcG9ydCBSZXNVdGlscyBmcm9tIFwiLi4vLi4vdXRpbHMvUmVzVXRpbHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZVZpZXcgZXh0ZW5kcyBMYXlhLlZpZXcgaW1wbGVtZW50cyBJQmFzZVZpZXcge1xuXG4gICAgcHVibGljIGNhbGxiYWNrOiBGdW5jdGlvbjtcbiAgICBwdWJsaWMgaXNSZW1vdmVCYW5uZXI6IGJvb2xlYW4gPSB0cnVlO1xuXG4gICAgcHJpdmF0ZSBfbXlQYXJlbnQ6IGFueTtcbiAgICBwcml2YXRlIF9pc0luaXQ6IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBfcmVzb3VyY2VzOiBzdHJpbmdbXSA9IG51bGw7XG4gICAgcHJpdmF0ZSBfdWk6IGFueTtcbiAgICBwcml2YXRlIF9pc1Nob3dNYXNrOiBib29sZWFuO1xuICAgIHByaXZhdGUgX2RhdGFzOiBhbnlbXTtcblxuICAgIC8qKiDmnoTpgKDlh73mlbAgKi9cbiAgICBwdWJsaWMgY29uc3RydWN0b3IoJGxheWVyOiBMYXllciwgJGNsYXNzOiBhbnksIGlzU2hvd01hc2s6IGJvb2xlYW4gPSB0cnVlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuX215UGFyZW50ID0gJGxheWVyO1xuICAgICAgICB0aGlzLl9pc0luaXQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5faXNTaG93TWFzayA9IGlzU2hvd01hc2s7XG4gICAgICAgIHRoaXMuX3VpID0gJGNsYXNzO1xuICAgICAgICB0aGlzLmluaXRVSVZpZXcoKTtcbiAgICB9XG5cbiAgICAvKiog6I635Y+W5oiR55qE54i257qnICovXG4gICAgcHVibGljIGdldCBteVBhcmVudCgpOiBhbnkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbXlQYXJlbnQ7XG4gICAgfVxuXG4gICAgLyoqIOa3u+WKoOWIsOeItue6pyAqL1xuICAgIHB1YmxpYyBhZGRUb1BhcmVudCgpOiB2b2lkIHtcbiAgICAgICAgQWxpZ25VdGlscy5zZXRUb1NjcmVlbkdvbGRlblBvcyh0aGlzKTtcbiAgICAgICAgaWYgKHRoaXMuX2lzU2hvd01hc2sgJiYgdGhpcy5fbXlQYXJlbnQgaW5zdGFuY2VvZiBNYXNrTGF5ZXIpIHtcbiAgICAgICAgICAgIHRoaXMuX215UGFyZW50LmFkZENoaWxkV2l0aE1hc2tDYWxsKHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUZyb21QYXJlbnQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX215UGFyZW50LmFkZENoaWxkKHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOWIneWni+WMllVJ55WM6Z2iICovXG4gICAgcHVibGljIGluaXRVSVZpZXcoKTogdm9pZCB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB0aGlzLl91aSA9IG5ldyB0aGlzLl91aSgpO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuXG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLmFkZENoaWxkKHRoaXMuX3VpKTtcbiAgICAgICAgICAgIC8vIHRoaXMuc2l6ZSh0aGlzLnVpLndpZHRoLCB0aGlzLnVpLmhlaWdodCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog5LuO54i257qn56e76ZmkICovXG4gICAgcHVibGljIHJlbW92ZUZyb21QYXJlbnQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMucmVtb3ZlU2VsZigpO1xuICAgIH1cblxuICAgIC8qKiDlr7npnaLmnb/ov5vooYzmmL7npLrliJ3lp4vljJbvvIznlKjkuo7lrZDnsbvnu6fmib8gKi9cbiAgICBwdWJsaWMgaW5pdFVJKCk6IHZvaWQge1xuICAgICAgICB0aGlzLl9pc0luaXQgPSB0cnVlO1xuICAgIH1cblxuICAgIC8qKiDlr7npnaLmnb/mlbDmja7nmoTliJ3lp4vljJbvvIznlKjkuo7lrZDnsbvnu6fmib8gKi9cbiAgICBwdWJsaWMgaW5pdERhdGEoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX2lzSW5pdCA9IHRydWU7XG4gICAgfVxuXG4gICAgLyoqIOa3u+WKoOebkeWQrOS6i+S7tiAqL1xuICAgIHB1YmxpYyBhZGRFdmVudHMoKTogdm9pZCB7IH1cblxuICAgIC8qKiDnp7vpmaTnm5HlkKzkuovku7YgKi9cbiAgICBwdWJsaWMgcmVtb3ZlRXZlbnRzKCk6IHZvaWQgeyB9XG5cbiAgICAvKiog5piv5ZCm5bey57uP5Yid5aeL5YyWICovXG4gICAgcHVibGljIGlzSW5pdCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzSW5pdDtcbiAgICB9XG5cbiAgICAvKiog6Z2i5p2/5piv5ZCm5pi+56S6ICovXG4gICAgcHVibGljIGlzU2hvdygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhZ2UgIT0gbnVsbCAmJiB0aGlzLnZpc2libGUgJiYgdGhpcy5fbXlQYXJlbnQuY29udGFpbnModGhpcyk7XG4gICAgfVxuXG4gICAgLyoqIOmdouadv+W8gOWQr+aJp+ihjOWHveaVsO+8jOeUqOS6juWtkOexu+e7p+aJvyAqL1xuICAgIHB1YmxpYyBvcGVuKC4uLnBhcmFtOiBhbnlbXSk6IHZvaWQge1xuICAgICAgICB0aGlzLl9kYXRhcyA9IHBhcmFtO1xuICAgIH1cblxuICAgIC8qKiDorr7nva7mmK/lkKbpmpDol48gKi9cbiAgICBwdWJsaWMgc2V0VmlzaWJsZSh2YWx1ZTogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICB0aGlzLnZpc2libGUgPSB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKiog6K6+572u5Yid5aeL5Yqg6L296LWE5rqQICovXG4gICAgcHVibGljIHNldFJlc291cmNlcyhyZXNvdXJjZXM6IHN0cmluZ1tdKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX3Jlc291cmNlcyA9IHJlc291cmNlcztcbiAgICB9XG5cbiAgICAvKiog5Yqg6L296Z2i5p2/5omA6ZyA6LWE5rqQICovXG4gICAgcHVibGljIGxvYWRSZXNvdXJjZShsb2FkQ29tcGxldGU6IEZ1bmN0aW9uLCBpbml0Q29tcGxldGU6IEZ1bmN0aW9uKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9yZXNvdXJjZXMgJiYgdGhpcy5fcmVzb3VyY2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIFJlc1V0aWxzLmxvYWRHcm91cCh0aGlzLl9yZXNvdXJjZXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICBsb2FkQ29tcGxldGUgJiYgbG9hZENvbXBsZXRlKCk7XG4gICAgICAgICAgICAgICAgaW5pdENvbXBsZXRlICYmIGluaXRDb21wbGV0ZSgpO1xuICAgICAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsb2FkQ29tcGxldGUgJiYgbG9hZENvbXBsZXRlKCk7XG4gICAgICAgICAgICBpbml0Q29tcGxldGUgJiYgaW5pdENvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog6Z2i5p2/5YWz6Zet5omn6KGM5Ye95pWw77yM55So5LqO5a2Q57G757un5om/ICovXG4gICAgcHVibGljIGNsb3NlKC4uLnBhcmFtOiBhbnlbXSk6IHZvaWQge1xuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50cygpO1xuICAgICAgICBpZiAodGhpcy5pc1JlbW92ZUJhbm5lcikge1xuICAgICAgICAgICAgLy8gU0RLTWFuYWdlci5JbnN0YW5jZS5jbG9zZUJhbm5lckFkKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog6ZSA5q+BICovXG4gICAgcHVibGljIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRzKCk7XG4gICAgICAgIHRoaXMuX215UGFyZW50ID0gbnVsbDtcbiAgICAgICAgdGhpcy5fdWkucmVtb3ZlU2VsZigpO1xuICAgICAgICB0aGlzLl91aSA9IG51bGw7XG4gICAgICAgIC8vIFNES01hbmFnZXIuSW5zdGFuY2UuY2xvc2VCYW5uZXJBZCgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgdWkoKTogYW55IHsgcmV0dXJuIHRoaXMuX3VpOyB9XG4gICAgcHVibGljIHNldCB1aSh2YWx1ZTogYW55KSB7IHRoaXMuX3VpID0gdmFsdWU7IH1cblxuICAgIHB1YmxpYyBnZXQgZGF0YXMoKTogYW55W10geyByZXR1cm4gdGhpcy5fZGF0YXM7IH1cbiAgICBwdWJsaWMgc2V0IGRhdGFzKHZhbHVlOiBhbnlbXSkgeyB0aGlzLl9kYXRhcyA9IHZhbHVlOyB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmlld0NvbnN0IHtcbiAgICAvKiog5ZWG5bqXICovXG4gICAgcHVibGljIHN0YXRpYyBTaG9wVmlldzogbnVtYmVyID0gMTAwMDA7XG4gICAgLyoqIOmSu+efs+i0reS5sOeVjOmdoiAqL1xuICAgIHB1YmxpYyBzdGF0aWMgRGlhbW9uZEJ1eVZpZXc6IG51bWJlciA9IDEwMDAxO1xuICAgIC8qKiDovaznm5jmir3lpZbnlYzpnaIgKi9cbiAgICBwdWJsaWMgc3RhdGljIEx1Y2tQcml6ZVZpZXc6IG51bWJlciA9IDEwMDAyO1xuICAgIC8qKiDovaznm5jlpZblirHnlYzpnaIgKi9cbiAgICBwdWJsaWMgc3RhdGljIEx1Y2tQcml6ZVJld2FyZFZpZXc6IG51bWJlciA9IDEwMDAzO1xuICAgIC8qKiDmr4/ml6Xnrb7liLDnlYzpnaIgKi9cbiAgICBwdWJsaWMgc3RhdGljIERheVNpZ25WaWV3OiBudW1iZXIgPSAxMDAwNDtcbiAgICAvKiog5Lu75Yqh55WM6Z2iICovXG4gICAgcHVibGljIHN0YXRpYyBUYXNrVmlldzogbnVtYmVyID0gMTAwMDU7XG4gICAgLyoqIOWFs+azqOacieekvOeVjOmdoiAqL1xuICAgIHB1YmxpYyBzdGF0aWMgRm9sbG93VmlldzogbnVtYmVyID0gMTAwMDY7XG4gICAgLyoqIOaOkuihjOamnCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgUmFua1ZpZXc6IG51bWJlciA9IDEwMDA3O1xuICAgIC8qKiDph5HluIHkuI3otrMgKi9cbiAgICBwdWJsaWMgc3RhdGljIEdvbGROb3RFbm91Z2hWaWV3OiBudW1iZXIgPSAxMDAwODtcbiAgICAvKiog562J57qn56S85YyF55WM6Z2iICovXG4gICAgcHVibGljIHN0YXRpYyBMZXZlbFJld2FyZFZpZXc6IG51bWJlciA9IDEwMDA5O1xuICAgIC8qKiDnprvnur/lpZblirHnlYzpnaIgKi9cbiAgICBwdWJsaWMgc3RhdGljIE9mZkxpbmVSZXdhcmRWaWV3OiBudW1iZXIgPSAxMDAxMDtcbiAgICAvKiog55So5oi35L+h5oGv55WM6Z2iICovXG4gICAgcHVibGljIHN0YXRpYyBVc2VySW5mb1ZpZXc6IG51bWJlciA9IDEwMDExO1xuICAgIC8qKiDmlrDmrablsIbnlYzpnaIgKi9cbiAgICBwdWJsaWMgc3RhdGljIE5ld0hlcm9WaWV3OiBudW1iZXIgPSAxMDAxMjtcblxuXG59IiwiaW1wb3J0IENvbG9yVXRpbCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9Db2xvclV0aWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2NhbGVBbmltU2NyaXB0IHtcblxuICAgIHByaXZhdGUgc2NhbGVCb3g6IExheWEuQm94O1xuICAgIHByaXZhdGUgc2NhbGVPcmdpblZhbHVlOiB7IHg6IG51bWJlciwgeTogbnVtYmVyIH07XG4gICAgcHJpdmF0ZSBpc01vdXNlRG93bjogYm9vbGVhbiA9IGZhbHNlOyAvL+aMieS4i1xuICAgIHByaXZhdGUgaXNNb3VzZU91dDogYm9vbGVhbiA9IGZhbHNlOyAvL+enu+mZpFxuICAgIHByaXZhdGUgX29yaWdpbkFuY2hvcjogTGF5YS5Qb2ludDtcblxuICAgIHB1YmxpYyBzZXQgb3duZXIodmFsdWU6IGFueSkge1xuICAgICAgICB0aGlzLnNjYWxlQm94ID0gdmFsdWU7XG4gICAgICAgIC8v6Ieq5a6a5LmJ55qE6ISa5pys5Lya5pyJ5pe25bqP6Zeu6aKY77yM5omA5Lul5Zyo5q2k5re75Yqg5LiA5Liq5bu25pe2XG4gICAgICAgIHRoaXMuc2NhbGVCb3guZnJhbWVPbmNlKDIsIHRoaXMsIHRoaXMub25Mb2FkZWQpO1xuICAgIH1cbiAgICBwcml2YXRlIG9uTG9hZGVkKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnNjYWxlT3JnaW5WYWx1ZSA9IHsgeDogdGhpcy5zY2FsZUJveC5zY2FsZVgsIHk6IHRoaXMuc2NhbGVCb3guc2NhbGVZIH1cbiAgICAgICAgdGhpcy5zY2FsZUJveC5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMubW91c2VEb3duKTtcbiAgICAgICAgdGhpcy5zY2FsZUJveC5vbihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCB0aGlzLm1vdXNlVXApO1xuICAgICAgICB0aGlzLnNjYWxlQm94Lm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm1vdXNlT3V0KTtcbiAgICB9XG4gICAgcHJpdmF0ZSBtb3VzZURvd24oKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaXNNb3VzZURvd24gPSB0cnVlO1xuICAgICAgICB0aGlzLmlzTW91c2VPdXQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zY2FsZVNtYWxsKCk7XG4gICAgfVxuICAgIHByaXZhdGUgbW91c2VVcCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuaXNNb3VzZURvd24pIHtcbiAgICAgICAgICAgIHRoaXMuc2NhbGVOb3JtYWwoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmlzTW91c2VEb3duID0gZmFsc2U7XG4gICAgfVxuICAgIHByaXZhdGUgbW91c2VPdXQoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmlzTW91c2VEb3duKSB7XG4gICAgICAgICAgICB0aGlzLnNjYWxlTm9ybWFsKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5pc01vdXNlRG93biA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzTW91c2VPdXQgPSB0cnVlO1xuICAgIH1cbiAgICBwcml2YXRlIG1vdXNlTW92ZSgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuaXNNb3VzZU91dCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuaXNIaXQodGhpcy5zY2FsZUJveCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNjYWxlU21hbGwoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zY2FsZU5vcm1hbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHByaXZhdGUgc2NhbGVTbWFsbCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuc2NhbGVCb3gpIHtcbiAgICAgICAgICAgIHRoaXMuc2NhbGVCb3guc2NhbGUodGhpcy5zY2FsZU9yZ2luVmFsdWUueCAqIDAuOTUsIHRoaXMuc2NhbGVPcmdpblZhbHVlLnkgKiAwLjk1KTtcbiAgICAgICAgICAgIHRoaXMuc2NhbGVCb3guZmlsdGVycyA9IENvbG9yVXRpbC5jcmVhdGVDb2xvckZpbHRlcigxKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBwcml2YXRlIHNjYWxlTm9ybWFsKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5zY2FsZUJveCkge1xuICAgICAgICAgICAgdGhpcy5zY2FsZUJveC5zY2FsZSh0aGlzLnNjYWxlT3JnaW5WYWx1ZS54LCB0aGlzLnNjYWxlT3JnaW5WYWx1ZS55KTtcbiAgICAgICAgICAgIHRoaXMuc2NhbGVCb3guZmlsdGVycyA9IFtdO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8v54K55Ye75qOA5rWLXG4gICAgcHJpdmF0ZSBpc0hpdChfY2hlY2tCb3g6IExheWEuQm94LCBfZXh0VzogbnVtYmVyID0gMCwgX2V4dEg6IG51bWJlciA9IDApIHtcbiAgICAgICAgaWYgKF9jaGVja0JveCkge1xuICAgICAgICAgICAgbGV0IHRvdWNoUG9zOiBMYXlhLlBvaW50ID0gX2NoZWNrQm94LmdldE1vdXNlUG9pbnQoKTtcbiAgICAgICAgICAgIGxldCB0b3VjaEFyZWE6IExheWEuUmVjdGFuZ2xlID0gbmV3IExheWEuUmVjdGFuZ2xlKDAgLSBfZXh0VyAvIDIsIDAgLSBfZXh0SCAvIDIsXG4gICAgICAgICAgICAgICAgX2NoZWNrQm94LndpZHRoICsgX2V4dFcsIF9jaGVja0JveC5oZWlnaHQgKyBfZXh0SCk7XG4gICAgICAgICAgICByZXR1cm4gdG91Y2hBcmVhLmNvbnRhaW5zKHRvdWNoUG9zLngsIHRvdWNoUG9zLnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59IiwiaW1wb3J0IEJhc2VWaWV3IGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvYmFzZS9CYXNlVmlld1wiO1xuaW1wb3J0IExheWVyTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2xheWVyL0xheWVyTWdyXCI7XG5pbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBIYWxsQ29udHJvbCBmcm9tIFwiLi4vLi4vaGFsbC9IYWxsQ29udHJvbFwiO1xuaW1wb3J0IE1hdGhVdGlsIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3V0aWxzL01hdGhVdGlsXCI7XG5pbXBvcnQgUGxheWVyTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3BsYXllci9QbGF5ZXJNZ3JcIjtcbmltcG9ydCBIdHRwTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL25ldC9IdHRwTWdyXCI7XG5pbXBvcnQgTXNnTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL21zZy9Nc2dNZ3JcIjtcbmltcG9ydCBIZXJvQ29uZmlnVk8gZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZGIvdm8vSGVyb0NvbmZpZ1ZPXCI7XG5pbXBvcnQgR2xvYmFsRGF0YSBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9kYi9HbG9iYWxEYXRhXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERpYW1vbmRCdXlWaWV3IGV4dGVuZHMgQmFzZVZpZXcge1xuXG4gICAgcHJpdmF0ZSBfZGF0YTogeyB0eXBlOiBzdHJpbmcsIHZhbHVlOiBudW1iZXIgfTtcbiAgICBwcml2YXRlIF9wcmljZTogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF9oZXJvQ29uZmlnOiBIZXJvQ29uZmlnVk87XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoTGF5ZXJNZ3IuSW5zLnN1YkZyYW1lTGF5ZXIsIHVpLm1vZHVsZVZpZXcuY29tbW9uLkRpYW1vbmRCdXlWaWV3VUkpO1xuICAgIH1cblxuICAgIHB1YmxpYyBpbml0RGF0YSgpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIuaW5pdERhdGEoKTtcbiAgICAgICAgdGhpcy5fZGF0YSA9IHRoaXMuZGF0YXNbMF07XG4gICAgICAgIGlmICh0aGlzLl9kYXRhKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fZGF0YS50eXBlID09IFwiaGVyb1wiKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5faGVyb0NvbmZpZyA9IEdsb2JhbERhdGEuZ2V0RGF0YShHbG9iYWxEYXRhLkhlcm9Db25maWdWTywgdGhpcy5fZGF0YS52YWx1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fcHJpY2UgPSBIYWxsQ29udHJvbC5JbnMuTW9kZWwuZ2V0RGlhbW9uZEJ1eUhlcm9QcmljZSh0aGlzLl9kYXRhLnZhbHVlLCBIYWxsQ29udHJvbC5JbnMuTW9kZWwucXVlcnlCdXlIZXJvUmVjb3JkKHRoaXMuX2RhdGEudmFsdWUsIHRydWUpKTtcbiAgICAgICAgICAgICAgICB0aGlzLnVpLnR4dF9kaWFtb25kLnRleHQgPSBNYXRoVXRpbC51bml0Q29udmVyc2lvbih0aGlzLl9wcmljZSk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2hlcm9Db25maWcpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51aS50eHRfdGl0bGUudGV4dCA9IFwi6LSt5LmwXCIgKyB0aGlzLl9oZXJvQ29uZmlnLm5hbWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGFkZEV2ZW50cygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy51aS5idG5fYnV5Lm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25CdXlIYW5kbGVyKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVtb3ZlRXZlbnRzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnVpLmJ0bl9idXkub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25CdXlIYW5kbGVyKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uQnV5SGFuZGxlcigpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuX2RhdGEudHlwZSA9PSBcImhlcm9cIikge1xuICAgICAgICAgICAgdGhpcy5idXlIZXJvSGFuZGxlcigpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBidXlIZXJvSGFuZGxlcigpOiB2b2lkIHtcbiAgICAgICAgbGV0IGhlcm9QcmljZUludCA9IE1hdGguZmxvb3IodGhpcy5fcHJpY2UpO1xuICAgICAgICBpZiAoUGxheWVyTWdyLklucy5JbmZvLnVzZXJEaWFtb25kID49IGhlcm9QcmljZUludCkge1xuICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdERpYW1vbmRCdXlPcmRlcihoZXJvUHJpY2VJbnQsIChyZXM6IGFueSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKEhhbGxDb250cm9sLklucy5jcmVhdGVIZXJvKHRoaXMuX2RhdGEudmFsdWUpID09IG51bGwpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdERpYW1vbmRCdXkocmVzLm9yZGVyX2lkLCAoX3JlczogYW55KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5faGVyb0NvbmZpZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIuatpuWwhui0reS5sOaIkOWKn++8mlwiICsgdGhpcy5faGVyb0NvbmZpZy5uYW1lICsgXCJ4MVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5q2m5bCG6LSt5Lmw5oiQ5YqfXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdERpYW1vbmREYXRhKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+WIt+aWsOa2iOi0ueiusOW9lVxuICAgICAgICAgICAgICAgICAgICAgICAgSGFsbENvbnRyb2wuSW5zLk1vZGVsLnJlZnJlc2hCdXlIZXJvUmVjb3JkKHRoaXMuX2RhdGEudmFsdWUsIHRydWUpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBNc2dNZ3IuSW5zLnNob3dNc2coXCLotK3kubDlpLHotKVcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBNc2dNZ3IuSW5zLnNob3dNc2coXCLlhYPlrp3kuI3otrMs5YGa5Lu75Yqh6aKG5YWD5a6d5ZmiIVwiKVxuICAgICAgICB9XG4gICAgfVxufSIsImltcG9ydCBCYXNlVmlldyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS92aWV3L2Jhc2UvQmFzZVZpZXdcIjtcbmltcG9ydCBMYXllck1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9sYXllci9MYXllck1nclwiO1xuaW1wb3J0IHsgdWkgfSBmcm9tIFwiLi4vLi4vLi4vdWkvbGF5YU1heFVJXCI7XG5pbXBvcnQgSGFsbENvbnRyb2wgZnJvbSBcIi4uLy4uL2hhbGwvSGFsbENvbnRyb2xcIjtcbmltcG9ydCBIZXJvQ29uZmlnVk8gZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZGIvdm8vSGVyb0NvbmZpZ1ZPXCI7XG5pbXBvcnQgTWF0aFV0aWwgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvdXRpbHMvTWF0aFV0aWxcIjtcbmltcG9ydCBTaGFyZU1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9tc2cvU2hhcmVNZ3JcIjtcbmltcG9ydCBNc2dNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvbXNnL01zZ01nclwiO1xuXG4vKipcbiAqIOmHkeW4geS4jei2s+eVjOmdolxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHb2xkTm90RW5vdWdoVmlldyBleHRlbmRzIEJhc2VWaWV3IHtcblxuICAgIHByaXZhdGUgX2dvbGQ6IG51bWJlciA9IDA7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoTGF5ZXJNZ3IuSW5zLnN1YkZyYW1lTGF5ZXIsIHVpLm1vZHVsZVZpZXcuY29tbW9uLkdvbGROb3RFbm91Z2hWaWV3VUkpO1xuICAgIH1cblxuICAgIHB1YmxpYyBpbml0VUkoKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLmluaXRVSSgpO1xuICAgICAgICBsZXQgdm86IEhlcm9Db25maWdWTyA9IEhhbGxDb250cm9sLklucy5Nb2RlbC5nZXRQcmVOZXdIZXJvRGF0YShIYWxsQ29udHJvbC5JbnMuTW9kZWwuaGVyb0xldmVsKTtcbiAgICAgICAgaWYgKHZvKSB7XG4gICAgICAgICAgICBsZXQgcHJpY2U6IG51bWJlciA9IEhhbGxDb250cm9sLklucy5Nb2RlbC5nZXRIZXJvQnV5UHJpY2Uodm8uYnV5UHJpY2UsIEhhbGxDb250cm9sLklucy5Nb2RlbC5xdWVyeUJ1eUhlcm9SZWNvcmQodm8uaWQpKVxuICAgICAgICAgICAgdGhpcy5fZ29sZCA9IHByaWNlICogMC42O1xuICAgICAgICAgICAgdGhpcy51aS50eHRfcHJpY2UudGV4dCA9IE1hdGhVdGlsLnVuaXRDb252ZXJzaW9uKHRoaXMuX2dvbGQpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBpc0FkID0gU2hhcmVNZ3IuSW5zLmlzQWRTdGFnZSgxMik7XG4gICAgICAgIGlmIChpc0FkKSB7XG4gICAgICAgICAgICB0aGlzLnVpLnR4dF9idG4udGV4dCA9IFwi55yL6KeG6aKR6aKG6ZOc6ZKxXCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnVpLnR4dF9idG4udGV4dCA9IFwi5rGC5Yqp576k5Y+L5ZGAIVwiO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudWkudHh0X2xhc3RUaW1lLnZpc2libGUgPSAhaXNBZDtcbiAgICAgICAgaWYgKHRoaXMudWkudHh0X2xhc3RUaW1lLnZpc2libGUpIHtcbiAgICAgICAgICAgIHRoaXMudWkudHh0X2xhc3RUaW1lLnRleHQgPSBcIuS7iuWkqeWJqeS9mVwiICsgU2hhcmVNZ3IuSW5zLmdldFNoYXJlVGltZXMoMTIpICsgXCLmrKFcIjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBhZGRFdmVudHMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudWkuYnRuX2dldC5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uR2V0UmV3YXJkKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVtb3ZlRXZlbnRzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnVpLmJ0bl9nZXQub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25HZXRSZXdhcmQpO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25HZXRSZXdhcmQoKTogdm9pZCB7XG4gICAgICAgIFNoYXJlTWdyLklucy5zaG93U2hhcmVPckFkdigocmVzOiBhbnkpID0+IHtcbiAgICAgICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIuaCqOiOt+W+l+mTnOmSse+8mlwiICsgTnVtYmVyKHRoaXMudWkudHh0X3ByaWNlLnRleHQpKTtcbiAgICAgICAgICAgIEhhbGxDb250cm9sLklucy51cGRhdGVHb2xkKHRoaXMuX2dvbGQsIGZhbHNlKTtcbiAgICAgICAgfSwgMTIsIGZhbHNlLCB0cnVlKTtcbiAgICB9XG59IiwiaW1wb3J0IEJhc2VWaWV3IGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvYmFzZS9CYXNlVmlld1wiO1xuaW1wb3J0IExheWVyTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2xheWVyL0xheWVyTWdyXCI7XG5pbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBMZXZlbFZPIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2RiL3ZvL0xldmVsVk9cIjtcbmltcG9ydCBQbGF5ZXJNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvcGxheWVyL1BsYXllck1nclwiO1xuaW1wb3J0IE1hdGhVdGlsIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3V0aWxzL01hdGhVdGlsXCI7XG5pbXBvcnQgSGFsbENvbnRyb2wgZnJvbSBcIi4uLy4uL2hhbGwvSGFsbENvbnRyb2xcIjtcbmltcG9ydCBFdmVudHNNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZXZlbnQvRXZlbnRzTWdyXCI7XG5pbXBvcnQgRXZlbnRUeXBlIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2V2ZW50L0V2ZW50VHlwZVwiO1xuaW1wb3J0IFZpZXdNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3Evdmlldy9WaWV3TWdyXCI7XG5pbXBvcnQgVmlld0NvbnN0IGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvY29uc3QvVmlld0NvbnN0XCI7XG5pbXBvcnQgU2hhcmVNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvbXNnL1NoYXJlTWdyXCI7XG5pbXBvcnQgU0RLTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL21zZy9TREtNZ3JcIjtcbmltcG9ydCBIdHRwTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL25ldC9IdHRwTWdyXCI7XG5cbi8qKlxuICog562J57qn56S85YyF55WM6Z2iXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExldmVsUmV3YXJkVmlldyBleHRlbmRzIEJhc2VWaWV3IHtcblxuICAgIHByaXZhdGUgX2xldmVsVk86IExldmVsVk87XG4gICAgcHJpdmF0ZSBfZ29sZDogbnVtYmVyO1xuICAgIHByaXZhdGUgX2lzR2V0QWxsUmV3YXJkOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoTGF5ZXJNZ3IuSW5zLnN1YkZyYW1lTGF5ZXIsIHVpLm1vZHVsZVZpZXcuY29tbW9uLkxldmVsUmV3YXJkVmlld1VJKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaW5pdERhdGEoKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLmluaXREYXRhKCk7XG4gICAgICAgIHRoaXMuX2xldmVsVk8gPSB0aGlzLmRhdGFzWzBdO1xuICAgICAgICBpZiAodGhpcy5fbGV2ZWxWTykge1xuXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGluaXRWaWV3KCk6IHZvaWQge1xuICAgICAgICB0aGlzLl9nb2xkID0gTWF0aC5mbG9vcih0aGlzLl9sZXZlbFZPLmdvbGRHaWZ0ICogUGxheWVyTWdyLklucy5JbmZvLnVzZXJJbmNvbWVTZWMpO1xuICAgICAgICBsZXQgZGlhbW9uZDogbnVtYmVyID0gTWF0aC5mbG9vcih0aGlzLl9sZXZlbFZPLmRpYW1vbmRzR2lmdCk7XG4gICAgICAgIGxldCBpc0FkdmFuY2VkID0gZGlhbW9uZCA+IDA7XG4gICAgICAgIGxldCBzaGFyZUl0ZW1zID0gW107XG4gICAgICAgIGxldCBpc0dldFByaXplOiBib29sZWFuID0gZmFsc2U7IC8v5piv5ZCm5bey6aKG5Y+WXG5cbiAgICAgICAgdGhpcy51aS50eHRfbGV2ZWxHaWZ0LnRleHQgPSB0aGlzLl9sZXZlbFZPLmlkICsgXCJcIjtcbiAgICAgICAgdGhpcy51aS50eHRfYWNjLnRleHQgPSBNYXRoLmZsb29yKHRoaXMuX2xldmVsVk8uYWNjU3BlZWRUaW1lKSArIFwiXCI7XG4gICAgICAgIHRoaXMudWkudHh0X2dvbGQudGV4dCA9IE1hdGhVdGlsLnVuaXRDb252ZXJzaW9uKHRoaXMuX2dvbGQpO1xuICAgICAgICB0aGlzLnVpLnR4dF9kaWFtb25kLnRleHQgPSBNYXRoLmZsb29yKHRoaXMuX2xldmVsVk8uZGlhbW9uZHNHaWZ0KSArIFwiXCI7XG5cbiAgICAgICAgdGhpcy51aS5idG5fZ2V0LnRleHQudGV4dCA9IFwi6aKG5Y+WXCI7XG4gICAgICAgIHRoaXMudWkuYnRuX2dldC5kaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgICAgIHRoaXMudWkuYnRuX3NoYXJlLnRleHQudGV4dCA9IFwi54Kr6ICAXCI7XG4gICAgICAgIHRoaXMudWkuYnRuX3NoYXJlLmRpc2FibGVkID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcHVibGljIGFkZEV2ZW50cygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy51aS5idG5fZ2V0Lm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25HZXRSZXdhcmQpO1xuICAgICAgICB0aGlzLnVpLmJ0bl9zaGFyZS5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uR2V0U2hhcmVSZXdhcmQpO1xuICAgIH1cblxuICAgIHB1YmxpYyByZW1vdmVFdmVudHMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudWkuYnRuX2dldC5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkdldFJld2FyZCk7XG4gICAgICAgIHRoaXMudWkuYnRuX3NoYXJlLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uR2V0U2hhcmVSZXdhcmQpO1xuICAgIH1cblxuICAgIC8qKiDmma7pgJrnpLzljIXlpZblirEgKi9cbiAgICBwcml2YXRlIG9uR2V0UmV3YXJkKCk6IHZvaWQge1xuICAgICAgICBpZiAoTWF0aC5mbG9vcih0aGlzLl9sZXZlbFZPLmFjY1NwZWVkVGltZSkgPiAwKSB7XG4gICAgICAgICAgICBFdmVudHNNZ3IuSW5zLmRpc3BhdGNoKEV2ZW50VHlwZS5HQU1FX0FDQ0VfU1RBUlQsIE1hdGguZmxvb3IodGhpcy5fbGV2ZWxWTy5hY2NTcGVlZFRpbWUpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fZ29sZCA+IDApIHtcbiAgICAgICAgICAgIEhhbGxDb250cm9sLklucy51cGRhdGVHb2xkKHRoaXMuX2dvbGQsIGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMuX2dvbGQgPSAwO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudWkuYnRuX2dldC50ZXh0LnRleHQgPSBcIuW3sumihuWPllwiO1xuICAgICAgICB0aGlzLnVpLmJ0bl9nZXQuZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLmNsb3NlVmlldygpO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25HZXRTaGFyZVJld2FyZCgpOiB2b2lkIHtcbiAgICAgICAgU0RLTWdyLklucy5zaG93VmlkZW9BZCgoX3JlczogYW55KSA9PiB7XG4gICAgICAgICAgICBpZiAoX3JlcyAmJiBfcmVzLmlzRW5kZWQgfHwgX3JlcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy51aS5idG5fc2hhcmUudGV4dC50ZXh0ID0gXCLlt7Lpooblj5ZcIjtcbiAgICAgICAgICAgICAgICB0aGlzLnVpLmJ0bl9zaGFyZS5kaXNhYmxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdERpYW1vbmREYXRhKCk7XG4gICAgICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdFNoYXJlQWRGaW5pc2goXCJsZXZlbFJld2FyZFwiLCBfcmVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgLy/ml6Dop4bpopHlm57osINcbiAgICAgICAgICAgIHRoaXMuc2hhcmVHZXRSZXdhcmQoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzaGFyZUdldFJld2FyZCgpOiB2b2lkIHtcbiAgICAgICAgU2hhcmVNZ3IuSW5zLnNob3dTaGFyZU9yQWR2KChyZXM6IGFueSkgPT4ge1xuICAgICAgICAgICAgdGhpcy51aS5idG5fc2hhcmUudGV4dC50ZXh0ID0gXCLlt7Lpooblj5ZcIjtcbiAgICAgICAgICAgIHRoaXMudWkuYnRuX3NoYXJlLmRpc2FibGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIEh0dHBNZ3IuSW5zLnJlcXVlc3REaWFtb25kRGF0YSgpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIHByaXZhdGUgY2xvc2VWaWV3KCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5faXNHZXRBbGxSZXdhcmQpIHtcbiAgICAgICAgICAgIFZpZXdNZ3IuSW5zLmNsb3NlKFZpZXdDb25zdC5MZXZlbFJld2FyZFZpZXcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2lzR2V0QWxsUmV3YXJkID0gdHJ1ZTtcbiAgICB9XG59IiwiaW1wb3J0IEJhc2VWaWV3IGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvYmFzZS9CYXNlVmlld1wiO1xuaW1wb3J0IExheWVyTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2xheWVyL0xheWVyTWdyXCI7XG5pbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBNYXRoVXRpbCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9NYXRoVXRpbFwiO1xuaW1wb3J0IFNoYXJlTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL21zZy9TaGFyZU1nclwiO1xuaW1wb3J0IE1zZ01nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9tc2cvTXNnTWdyXCI7XG5pbXBvcnQgSGFsbENvbnRyb2wgZnJvbSBcIi4uLy4uL2hhbGwvSGFsbENvbnRyb2xcIjtcblxuLyoqXG4gKiDnprvnur/lpZblirHnlYzpnaJcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT2ZmTGluZVJld2FyZFZpZXcgZXh0ZW5kcyBCYXNlVmlldyB7XG5cbiAgICBwcml2YXRlIF9nb2xkOiBudW1iZXIgPSAwO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKExheWVyTWdyLklucy5zdWJGcmFtZUxheWVyLCB1aS5tb2R1bGVWaWV3LmNvbW1vbi5PZmZMaW5lUmV3YXJkVmlld1VJKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaW5pdERhdGEoKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLmluaXREYXRhKCk7XG4gICAgICAgIHRoaXMuX2dvbGQgPSB0aGlzLmRhdGFzWzBdO1xuICAgICAgICB0aGlzLnVpLnR4dF9nb2xkLnRleHQgPSBNYXRoVXRpbC51bml0Q29udmVyc2lvbih0aGlzLl9nb2xkKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkRXZlbnRzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnVpLmJ0bl9nZXQub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkdldFJld2FyZCk7XG4gICAgfVxuXG4gICAgcHVibGljIHJlbW92ZUV2ZW50cygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy51aS5idG5fZ2V0Lm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uR2V0UmV3YXJkKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uR2V0UmV3YXJkKCk6IHZvaWQge1xuICAgICAgICBTaGFyZU1nci5JbnMuc2hvd1NoYXJlT3JBZHYoKCkgPT4ge1xuICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5oKo6I635b6X6ZOc6ZKx77yaXCIgKyBNYXRoVXRpbC51bml0Q29udmVyc2lvbih0aGlzLl9nb2xkKSk7XG4gICAgICAgICAgICBIYWxsQ29udHJvbC5JbnMudXBkYXRlR29sZCh0aGlzLl9nb2xkLCBmYWxzZSk7XG4gICAgICAgIH0sIDEpXG4gICAgfVxufSIsImltcG9ydCB7IHVpIH0gZnJvbSBcIi4uLy4uLy4uL3VpL2xheWFNYXhVSVwiO1xuaW1wb3J0IERheVNpZ25WaWV3IGZyb20gXCIuL0RheVNpZ25WaWV3XCI7XG5pbXBvcnQgSHR0cE1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9uZXQvSHR0cE1nclwiO1xuaW1wb3J0IE1zZ01nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9tc2cvTXNnTWdyXCI7XG5pbXBvcnQgVmlld01nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS92aWV3L1ZpZXdNZ3JcIjtcbmltcG9ydCBWaWV3Q29uc3QgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3Evdmlldy9jb25zdC9WaWV3Q29uc3RcIjtcbmltcG9ydCBFdmVudHNNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZXZlbnQvRXZlbnRzTWdyXCI7XG5pbXBvcnQgRXZlbnRUeXBlIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2V2ZW50L0V2ZW50VHlwZVwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEYXlTaWduSXRlbSBleHRlbmRzIHVpLm1vZHVsZVZpZXcuZGF5U2lnbi5EYXlTaWduSXRlbVVJIHtcblxuXG4gICAgcHJpdmF0ZSBfZGlhbW9uZDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF9kYXk6IG51bWJlciA9IDA7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxuXG4gICAgc2V0IGRhdGFTb3VyY2UodmFsdWU6IGFueSkge1xuICAgICAgICB0aGlzLl9kYXkgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5fZGlhbW9uZCA9IERheVNpZ25WaWV3LlNpZ25EYXRhLnByaXplW1wiZGF5X1wiICsgdGhpcy5fZGF5XTtcbiAgICAgICAgdGhpcy50eHRfdGl0bGUudGV4dCA9IFwi56ysXCIgKyB0aGlzLl9kYXkgKyBcIuWkqVwiO1xuICAgICAgICB0aGlzLnR4dF9kaWFtb25kLnRleHQgPSBcInhcIiArIHRoaXMuX2RpYW1vbmQ7XG4gICAgICAgIGlmICh0aGlzLl9kYXkgPD0gRGF5U2lnblZpZXcuU2lnbkRhdGEuc2lnbi5kYXkpIHtcbiAgICAgICAgICAgIHRoaXMuYnRuX2dldC5za2luID0gXCJpbWFnZXMvZGF5U2lnbi9kYXlfcHJpemVfaXRlbTEucG5nXCI7XG4gICAgICAgICAgICB0aGlzLmltZ0dldC5za2luID0gXCJpbWFnZXMvZGF5U2lnbi9kYXlfcHJpemVfZ2V0LnBuZ1wiO1xuICAgICAgICAgICAgaWYgKHRoaXMuX2RheSA9PSBEYXlTaWduVmlldy5TaWduRGF0YS5zaWduLmRheSAmJiBEYXlTaWduVmlldy5TaWduRGF0YS5zaWduLnN0YXR1cyA9PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pbWdHZXQudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuYnRuX2dldC5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uR2V0UmV3YXJkKTtcbiAgICAgICAgICAgICAgICBFdmVudHNNZ3IuSW5zLmFkZExpc3RlbmVyKEV2ZW50VHlwZS5EQVlTSUdOX1JFV0FSRF9DT01QTEVURSwgdGhpcy5vblJld2FyZEdldENvbXBsZXRlLCB0aGlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgb25HZXRSZXdhcmQoKTogdm9pZCB7XG4gICAgICAgIGlmIChEYXlTaWduVmlldy5TaWduRGF0YSAmJiBEYXlTaWduVmlldy5TaWduRGF0YS5zaWduKSB7XG4gICAgICAgICAgICBsZXQgZGF5OiBudW1iZXIgPSBEYXlTaWduVmlldy5TaWduRGF0YS5zaWduLmRheTtcbiAgICAgICAgICAgIEh0dHBNZ3IuSW5zLnJlcXVlc3REYXlTaWduUHJpemUoZGF5LCAoX3JlcykgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChfcmVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChfcmVzLmNvZGUgPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vblJld2FyZEdldENvbXBsZXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoX3Jlcy5jb2RlID09IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIuS7iuaXpeetvuWIsOWlluWKseW3sumihuWPllwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIuetvuWIsOWlluWKsemihuWPluWksei0pVwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvblJld2FyZEdldENvbXBsZXRlKCk6IHZvaWQge1xuICAgICAgICBIdHRwTWdyLklucy5yZXF1ZXN0RGlhbW9uZERhdGEoKTtcbiAgICAgICAgdGhpcy5pbWdHZXQudmlzaWJsZSA9IHRydWU7XG4gICAgICAgIFZpZXdNZ3IuSW5zLmNsb3NlKFZpZXdDb25zdC5EYXlTaWduVmlldyk7XG4gICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIuetvuWIsOWlluWKsemihuWPluaIkOWKn++8muWFg+WunXhcIiArIHRoaXMuX2RpYW1vbmQpO1xuICAgIH1cbn0iLCJpbXBvcnQgQmFzZVZpZXcgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3Evdmlldy9iYXNlL0Jhc2VWaWV3XCI7XG5pbXBvcnQgTGF5ZXJNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvbGF5ZXIvTGF5ZXJNZ3JcIjtcbmltcG9ydCB7IHVpIH0gZnJvbSBcIi4uLy4uLy4uL3VpL2xheWFNYXhVSVwiO1xuaW1wb3J0IERheVNpZ25JdGVtIGZyb20gXCIuL0RheVNpZ25JdGVtXCI7XG5pbXBvcnQgVmlld01nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS92aWV3L1ZpZXdNZ3JcIjtcbmltcG9ydCBWaWV3Q29uc3QgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3Evdmlldy9jb25zdC9WaWV3Q29uc3RcIjtcbmltcG9ydCBIdHRwTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL25ldC9IdHRwTWdyXCI7XG5pbXBvcnQgTXNnTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL21zZy9Nc2dNZ3JcIjtcbmltcG9ydCBFdmVudHNNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZXZlbnQvRXZlbnRzTWdyXCI7XG5pbXBvcnQgRXZlbnRUeXBlIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2V2ZW50L0V2ZW50VHlwZVwiO1xuXG4vKipcbiAqIOavj+aXpeetvuWIsOeVjOmdolxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEYXlTaWduVmlldyBleHRlbmRzIEJhc2VWaWV3IHtcblxuICAgIHB1YmxpYyBzdGF0aWMgU2lnbkRhdGE6IGFueSA9IG51bGw7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoTGF5ZXJNZ3IuSW5zLmZyYW1lTGF5ZXIsIHVpLm1vZHVsZVZpZXcuZGF5U2lnbi5EYXlTaWduVmlld1VJKTtcbiAgICAgICAgdGhpcy5zZXRSZXNvdXJjZXMoW1wiZGF5U2lnblwiXSk7XG4gICAgfVxuXG4gICAgcHVibGljIGluaXRVSSgpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIuaW5pdFVJKCk7XG5cbiAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdFNpZ25JbmZvKChkYXRhOiBhbnkpID0+IHtcbiAgICAgICAgICAgIERheVNpZ25WaWV3LlNpZ25EYXRhID0gZGF0YTtcbiAgICAgICAgICAgIGlmIChEYXlTaWduVmlldy5TaWduRGF0YSkge1xuICAgICAgICAgICAgICAgIHRoaXMudWkubGlzdHMuYXJyYXkgPSBbMSwgMiwgMywgNCwgNSwgNl07XG4gICAgICAgICAgICAgICAgdGhpcy51aS5saXN0cy5yZW5kZXJIYW5kbGVyID0gTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uTGlzdFJlbmRlciwgbnVsbCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIHRoaXMudWkudHh0X2RpYW1vbmQudGV4dCA9IFwieFwiICsgRGF5U2lnblZpZXcuU2lnbkRhdGEucHJpemVbXCJkYXlfN1wiXTtcbiAgICAgICAgICAgICAgICBpZiAoNyA8PSBEYXlTaWduVmlldy5TaWduRGF0YS5zaWduLmRheSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnVpLmJ0bl9sYXN0R2V0LnNraW4gPSBcImltYWdlcy9kYXlTaWduL2RheV9wcml6ZV9pdGVtMi5wbmdcIjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51aS5pbWdHZXQuc2tpbiA9IFwiaW1hZ2VzL2RheVNpZ24vZGF5X3ByaXplX2dldC5wbmdcIjtcbiAgICAgICAgICAgICAgICAgICAgaWYgKDcgPT0gRGF5U2lnblZpZXcuU2lnbkRhdGEuc2lnbi5kYXkgJiYgRGF5U2lnblZpZXcuU2lnbkRhdGEuc2lnbi5zdGF0dXMgPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51aS5pbWdHZXQudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51aS5idG5fbGFzdEdldC5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uR2V0UmV3YXJkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcHVibGljIGFkZEV2ZW50cygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy51aS5idG5fZ2V0Lm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25HZXRSZXdhcmQpO1xuICAgICAgICB0aGlzLnVpLmJ0bl9jbG9zZS5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uQ2xvc2VIYW5kbGVyKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVtb3ZlRXZlbnRzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnVpLmJ0bl9nZXQub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25HZXRSZXdhcmQpO1xuICAgICAgICB0aGlzLnVpLmJ0bl9sYXN0R2V0Lm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uR2V0UmV3YXJkKTtcbiAgICAgICAgdGhpcy51aS5idG5fY2xvc2Uub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25DbG9zZUhhbmRsZXIpO1xuICAgIH1cblxuICAgIC8qKiDpooblj5blpZblirEgKi9cbiAgICBwcml2YXRlIG9uR2V0UmV3YXJkKCk6IHZvaWQge1xuICAgICAgICBpZiAoRGF5U2lnblZpZXcuU2lnbkRhdGEgJiYgRGF5U2lnblZpZXcuU2lnbkRhdGEuc2lnbikge1xuICAgICAgICAgICAgbGV0IGRheTogbnVtYmVyID0gRGF5U2lnblZpZXcuU2lnbkRhdGEuc2lnbi5kYXk7XG4gICAgICAgICAgICBIdHRwTWdyLklucy5yZXF1ZXN0RGF5U2lnblByaXplKGRheSwgKF9yZXMpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoX3Jlcykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoX3Jlcy5jb2RlID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXkgPCA3KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgRXZlbnRzTWdyLklucy5kaXNwYXRjaChFdmVudFR5cGUuREFZU0lHTl9SRVdBUkRfQ09NUExFVEUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBIdHRwTWdyLklucy5yZXF1ZXN0RGlhbW9uZERhdGEoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVpLmltZ0dldC52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBWaWV3TWdyLklucy5jbG9zZShWaWV3Q29uc3QuRGF5U2lnblZpZXcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIuetvuWIsOWlluWKsemihuWPluaIkOWKn++8muWFg+WunXhcIiArIERheVNpZ25WaWV3LlNpZ25EYXRhLnByaXplW1wiZGF5N1wiXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoX3Jlcy5jb2RlID09IDIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIuS7iuaXpeetvuWIsOWlluWKseW3sumihuWPllwiKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIuetvuWIsOWlluWKsemihuWPluWksei0pVwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkNsb3NlSGFuZGxlcigpOiB2b2lkIHtcbiAgICAgICAgVmlld01nci5JbnMuY2xvc2UoVmlld0NvbnN0LkRheVNpZ25WaWV3KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uTGlzdFJlbmRlcihjZWxsOiBMYXlhLkJveCwgaW5kZXg6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBpZiAoaW5kZXggPiB0aGlzLnVpLmxpc3RzLmFycmF5Lmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBpdGVtOiBEYXlTaWduSXRlbSA9IGNlbGwuZ2V0Q2hpbGRCeU5hbWUoXCJpdGVtXCIpIGFzIERheVNpZ25JdGVtO1xuICAgICAgICBpZiAoaXRlbSkge1xuICAgICAgICAgICAgbGV0IGluZm8gPSB0aGlzLnVpLmxpc3RzLmFycmF5W2luZGV4XTtcbiAgICAgICAgICAgIGl0ZW0uZGF0YVNvdXJjZSA9IGluZm87XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IEJhc2VWaWV3IGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvYmFzZS9CYXNlVmlld1wiO1xuaW1wb3J0IExheWVyTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2xheWVyL0xheWVyTWdyXCI7XG5pbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBWaWV3TWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvVmlld01nclwiO1xuaW1wb3J0IFZpZXdDb25zdCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS92aWV3L2NvbnN0L1ZpZXdDb25zdFwiO1xuaW1wb3J0IEh0dHBNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvbmV0L0h0dHBNZ3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9sbG93VmlldyBleHRlbmRzIEJhc2VWaWV3IHtcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcihMYXllck1nci5JbnMuZnJhbWVMYXllciwgdWkubW9kdWxlVmlldy5mb2xsb3cuRm9sbG93Vmlld1VJKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaW5pdFVJKCk6IHZvaWQge1xuICAgICAgICBzdXBlci5pbml0VUkoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgYWRkRXZlbnRzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnVpLmJ0bl9nZXQub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkdldFJld2FyZCk7XG4gICAgICAgIHRoaXMudWkuYnRuX2Nsb3NlLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25DbG9zZUhhbmRsZXIpO1xuICAgIH1cblxuICAgIHB1YmxpYyByZW1vdmVFdmVudHMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudWkuYnRuX2dldC5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkdldFJld2FyZCk7XG4gICAgICAgIHRoaXMudWkuYnRuX2Nsb3NlLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uQ2xvc2VIYW5kbGVyKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uR2V0UmV3YXJkKCk6IHZvaWQge1xuICAgICAgICBIdHRwTWdyLklucy5yZXF1ZXN0QWNjb3VudFJld2FyZFByaXplKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkNsb3NlSGFuZGxlcigpOiB2b2lkIHtcbiAgICAgICAgVmlld01nci5JbnMuY2xvc2UoVmlld0NvbnN0LkZvbGxvd1ZpZXcpO1xuICAgIH1cbn0iLCJpbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBFZmZlY3RVdGlsIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3V0aWxzL0VmZmVjdFV0aWxcIjtcblxuLyoqXG4gKiDmlrDmiYvmjIflvJXor7Tor53mj5DnpLrmoYZcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR3VpZGVTcGVha1ZpZXcgZXh0ZW5kcyB1aS5tb2R1bGVWaWV3Lmd1aWRlLkd1aWRlU3BlYWtWaWV3VUkge1xuXG4gICAgcHJpdmF0ZSBfY29udGVudDogc3RyaW5nO1xuICAgIHByaXZhdGUgX3NwZWFrQ29tcGxldGU6IEZ1bmN0aW9uXG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG5cbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcbiAgICAgICAgRWZmZWN0VXRpbC5wbGF5VHlwZXdyaXRlckVmZmVjdCh0aGlzLnR4dF9jb250ZW50LCB0aGlzLl9jb250ZW50LCA1MCwgdGhpcy5fc3BlYWtDb21wbGV0ZSk7XG4gICAgfVxuXG4gICAgLyoqIOiuvue9ruivtOivneWGheWuuSAqL1xuICAgIHB1YmxpYyBzZXRTcGVha0NvbnRlbnQoY29udGVudDogc3RyaW5nLCBzcGVha0NvbXBsZXRlOiBGdW5jdGlvbiA9IG51bGwpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fY29udGVudCA9IGNvbnRlbnQ7XG4gICAgICAgIHRoaXMuX3NwZWFrQ29tcGxldGUgPSBzcGVha0NvbXBsZXRlO1xuICAgICAgICBpZiAodGhpcy50eHRfY29udGVudCkge1xuICAgICAgICAgICAgRWZmZWN0VXRpbC5wbGF5VHlwZXdyaXRlckVmZmVjdCh0aGlzLnR4dF9jb250ZW50LCB0aGlzLl9jb250ZW50LCA1MCwgdGhpcy5fc3BlYWtDb21wbGV0ZSk7XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IEhhbGxNb2RlbCBmcm9tIFwiLi9tb2RlbC9IYWxsTW9kZWxcIjtcbmltcG9ydCBIZXJvQ29uZmlnVk8gZnJvbSBcIi4uLy4uL2NvcmVfd3EvZGIvdm8vSGVyb0NvbmZpZ1ZPXCI7XG5pbXBvcnQgR2xvYmFsRGF0YSBmcm9tIFwiLi4vLi4vY29yZV93cS9kYi9HbG9iYWxEYXRhXCI7XG5pbXBvcnQgSGVhZEl0ZW0gZnJvbSBcIi4vdmlldy9pdGVtL0hlYWRJdGVtXCI7XG5pbXBvcnQgTGV2ZWxWTyBmcm9tIFwiLi4vLi4vY29yZV93cS9kYi92by9MZXZlbFZPXCI7XG5pbXBvcnQgUGxheWVyTWdyIGZyb20gXCIuLi8uLi9jb3JlX3dxL3BsYXllci9QbGF5ZXJNZ3JcIjtcbmltcG9ydCBFdmVudHNNZ3IgZnJvbSBcIi4uLy4uL2NvcmVfd3EvZXZlbnQvRXZlbnRzTWdyXCI7XG5pbXBvcnQgRXZlbnRUeXBlIGZyb20gXCIuLi8uLi9jb3JlX3dxL2V2ZW50L0V2ZW50VHlwZVwiO1xuaW1wb3J0IEhhbGxTY2VuZSBmcm9tIFwiLi92aWV3L0hhbGxTY2VuZVwiO1xuaW1wb3J0IFBsYXllckluZm8gZnJvbSBcIi4uLy4uL2NvcmVfd3EvcGxheWVyL2RhdGEvUGxheWVySW5mb1wiO1xuaW1wb3J0IE1hdGhVdGlsIGZyb20gXCIuLi8uLi9jb3JlX3dxL3V0aWxzL01hdGhVdGlsXCI7XG5pbXBvcnQgTXNnTWdyIGZyb20gXCIuLi8uLi9jb3JlX3dxL21zZy9Nc2dNZ3JcIjtcbmltcG9ydCBTdG9yYWdlVXRpbCBmcm9tIFwiLi4vLi4vY29yZV93cS91dGlscy9TdG9yYWdlVXRpbFwiO1xuaW1wb3J0IEhlcm8gZnJvbSBcIi4vaGVyby9IZXJvXCI7XG5pbXBvcnQgU291bmRNZ3IgZnJvbSBcIi4uLy4uL2NvcmVfd3Evc291bmQvU291bmRNZ3JcIjtcbmltcG9ydCBTb3VuZFR5cGUgZnJvbSBcIi4uLy4uL2NvcmVfd3Evc291bmQvU291bmRUeXBlXCI7XG5pbXBvcnQgU2hhcmVNZ3IgZnJvbSBcIi4uLy4uL2NvcmVfd3EvbXNnL1NoYXJlTWdyXCI7XG5pbXBvcnQgVmlld01nciBmcm9tIFwiLi4vLi4vY29yZV93cS92aWV3L1ZpZXdNZ3JcIjtcbmltcG9ydCBWaWV3Q29uc3QgZnJvbSBcIi4uLy4uL2NvcmVfd3Evdmlldy9jb25zdC9WaWV3Q29uc3RcIjtcbmltcG9ydCBFZmZlY3RVdGlsIGZyb20gXCIuLi8uLi9jb3JlX3dxL3V0aWxzL0VmZmVjdFV0aWxcIjtcbmltcG9ydCBHdWlkZU1nciBmcm9tIFwiLi4vLi4vY29yZV93cS9ndWlkZS9HdWlkZU1nclwiO1xuaW1wb3J0IE1hcFZPIGZyb20gXCIuLi8uLi9jb3JlX3dxL2RiL3ZvL01hcFZPXCI7XG5pbXBvcnQgU3lzdGVtVk8gZnJvbSBcIi4uLy4uL2NvcmVfd3EvZGIvdm8vU3lzdGVtVk9cIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGFsbENvbnRyb2wgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XG5cbiAgICBwcml2YXRlIF9tb2RlbDogSGFsbE1vZGVsO1xuICAgIHByaXZhdGUgX2hhbGxTY2VuZTogSGFsbFNjZW5lO1xuICAgIC8qKiDlhbXokKXmu6HluK3liqjnlLsgKi9cbiAgICBwcml2YXRlIF9iYXR0bGVIZXJvVGltZUxpbmU6IExheWEuVGltZUxpbmUgPSBudWxsO1xuICAgIHByaXZhdGUgX2JhdHRsZUhlcm9JbmRleDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF9zdGFydFBvczogeyB4OiBudW1iZXIsIHk6IG51bWJlciB9O1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMuaW5pdE1vZGVsKCk7XG4gICAgfVxuICAgIG9uQXdha2UoKSB7XG4gICAgICAgIHRoaXMuaW5pdE1vZGVsKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpbml0TW9kZWwoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9tb2RlbCA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLl9tb2RlbCA9IG5ldyBIYWxsTW9kZWwoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDotK3kubDoi7Hpm4QgKi9cbiAgICBwdWJsaWMgYnV5SGVybyhoZXJvSW5mbzogSGVyb0NvbmZpZ1ZPKTogdm9pZCB7XG4gICAgICAgIGlmIChoZXJvSW5mbykge1xuICAgICAgICAgICAgbGV0IGJ1eVByaWNlOiBudW1iZXIgPSB0aGlzLl9tb2RlbC5nZXRIZXJvQnV5UHJpY2UoaGVyb0luZm8uYnV5UHJpY2UsIHRoaXMuX21vZGVsLnF1ZXJ5QnV5SGVyb1JlY29yZChoZXJvSW5mby5pZCkpO1xuICAgICAgICAgICAgaWYgKFBsYXllck1nci5JbnMuSW5mby51c2VyR29sZCA+PSBidXlQcmljZSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNyZWF0ZUhlcm8oaGVyb0luZm8uaWQpID09IG51bGwpIHJldHVybjtcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUdvbGQoUGxheWVyTWdyLklucy5JbmZvLnVzZXJHb2xkIC0gYnV5UHJpY2UpO1xuICAgICAgICAgICAgICAgIHRoaXMuX21vZGVsLnJlZnJlc2hCdXlIZXJvUmVjb3JkKGhlcm9JbmZvLmlkKTtcbiAgICAgICAgICAgICAgICBidXlQcmljZSA9IHRoaXMuX21vZGVsLmdldEhlcm9CdXlQcmljZShoZXJvSW5mby5idXlQcmljZSwgdGhpcy5fbW9kZWwucXVlcnlCdXlIZXJvUmVjb3JkKGhlcm9JbmZvLmlkKSk7XG4gICAgICAgICAgICAgICAgdGhpcy5oYWxsU2NlbmUudHh0X3ByaWNlLnRleHQgPSBNYXRoVXRpbC51bml0Q29udmVyc2lvbihidXlQcmljZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5oYWxsU2NlbmUuZnJhbWVPbmNlKDEsIHRoaXMuaGFsbFNjZW5lLCAoKSA9PiB7IHRoaXMuc29ydEhlcm8oKTsgfSk7Ly/oi7Hpm4TmjpLluo9cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKFNoYXJlTWdyLklucy5pc1NoYXJlRW5hYmxlICYmIChTaGFyZU1nci5JbnMuZ2V0QWRUaW1lcygxMikgPiAwIHx8IFNoYXJlTWdyLklucy5nZXRTaGFyZVRpbWVzKDEyKSA+IDApKSB7XG4gICAgICAgICAgICAgICAgICAgIFZpZXdNZ3IuSW5zLm9wZW4oVmlld0NvbnN0LkdvbGROb3RFbm91Z2hWaWV3KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBNc2dNZ3IuSW5zLnNob3dNc2coXCLlvojmirHmrYnvvIzpk5zpkrHkuI3otrNcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOWIm+W7uuiLsembhCAqL1xuICAgIHB1YmxpYyBjcmVhdGVIZXJvKGlkOiBudW1iZXIsIGlzQmFja3dhcmQ6IGJvb2xlYW4gPSBmYWxzZSk6IEhlYWRJdGVtIHtcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMuX21vZGVsLmFsbEhlcm9Db3VudDsgaW5kZXgrKykge1xuICAgICAgICAgICAgbGV0IGN1ckluZGV4ID0gaW5kZXg7XG4gICAgICAgICAgICBpZiAoaXNCYWNrd2FyZCkge1xuICAgICAgICAgICAgICAgIGN1ckluZGV4ID0gdGhpcy5fbW9kZWwuYWxsSGVyb0NvdW50IC0gaW5kZXggLSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IGNlbGwgPSB0aGlzLmhhbGxTY2VuZS5saXN0c19oZWFkLmdldENlbGwoaW5kZXgpO1xuICAgICAgICAgICAgaWYgKGNlbGwpIHtcbiAgICAgICAgICAgICAgICBsZXQgaGVhZEl0ZW06IEhlYWRJdGVtID0gY2VsbC5nZXRDaGlsZEJ5TmFtZShcImhlcm9cIikgYXMgSGVhZEl0ZW07XG4gICAgICAgICAgICAgICAgaWYgKGhlYWRJdGVtICYmIGhlYWRJdGVtLklzRW1wdHkgJiYgIWhlYWRJdGVtLklzTG9jayAmJiAhaGVhZEl0ZW0uSXNCb3gpIHtcbiAgICAgICAgICAgICAgICAgICAgaGVhZEl0ZW0uSW5mby5oZXJvSWQgPSBpZDtcbiAgICAgICAgICAgICAgICAgICAgaGVhZEl0ZW0udXBkYXRlSGVhZFNraW4oaWQsIGN1ckluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgaGVhZEl0ZW0uc2V0U3RhZ2UoMSk7XG4gICAgICAgICAgICAgICAgICAgIC8v6K6+572u5oiY5paX5Lit55qE6Iux6ZuEXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2JhdHRsZUhlcm9JbmRleCsrO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9zdGFydFBvcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHg6IE1hdGhVdGlsLnJhbmdlSW50KDEwLCA1MCkgKyB0aGlzLmhhbGxTY2VuZS53aWR0aCAqIDAuNSAqIE1hdGgucmFuZG9tKCksXG4gICAgICAgICAgICAgICAgICAgICAgICB5OiB0aGlzLmhhbGxTY2VuZS5iZWdpbkV2ZW50Vmlldy55ICsgTWF0aFV0aWwucmFuZ2VJbnQoLTE1MCwgMjAwKS8vMTUwICsgKHRoaXMuaGFsbFNjZW5lLmJlZ2luRXZlbnRWaWV3LmhlaWdodCAtIDMwKSAvIHRoaXMuaGFsbFNjZW5lLmxpc3RzX2hlYWQuYXJyYXkubGVuZ3RoICogdGhpcy5fYmF0dGxlSGVyb0luZGV4XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIEVmZmVjdFV0aWwucGxheUJvbmVFZmZlY3QoXCJ1aV9ib3JuXCIsIHsgeDogdGhpcy5fc3RhcnRQb3MueCAtIDIwLCB5OiB0aGlzLl9zdGFydFBvcy55ICsgMjAwIH0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fYmF0dGxlSGVyb0luZGV4ID49IHRoaXMuaGFsbFNjZW5lLmxpc3RzX2hlYWQuYXJyYXkubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9iYXR0bGVIZXJvSW5kZXggPSAwO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX21vZGVsLmhlcm9Db3VudCArPSAxO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmhhbGxTY2VuZS50aW1lck9uY2UoMTAwLCB0aGlzLmhhbGxTY2VuZSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jcmVhdGVIZXJvQm9uZShoZWFkSXRlbSwgdGhpcy5fc3RhcnRQb3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRCYXR0bGVIZXJvQ291bnQoUGxheWVyTWdyLklucy5JbmZvLnVzZXJSdW5jYXJDb3VudCArIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgU291bmRNZ3IuSW5zLnBsYXlFZmZlY3QoU291bmRUeXBlLlNVTU1PTl9IRVJPKTtcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTYXZlSGVyb0RhdGEoaGVhZEl0ZW0pO1xuICAgICAgICAgICAgICAgICAgICBHdWlkZU1nci5JbnMub25OZXh0U3RlcCgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGVhZEl0ZW07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghaXNCYWNrd2FyZCkge1xuICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5YW16JCl5LiN6LazLOW/q+WOu+WQiOaIkOiLsembhOWTnyFcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgLyoqIOWIm+W7uuiLsembhOm+memqqOWKqOeUuyAqL1xuICAgIHB1YmxpYyBjcmVhdGVIZXJvQm9uZShoZWFkSXRlbTogSGVhZEl0ZW0sIHN0YXJ0UG9zOiB7IHg6IG51bWJlciwgeTogbnVtYmVyIH0pOiB2b2lkIHtcbiAgICAgICAgaGVhZEl0ZW0ucmVtb3ZlQmF0dGxlSGVybygpO1xuICAgICAgICBoZWFkSXRlbS5jcmVhdGVCYXR0bGVIZXJvKHRoaXMuaGFsbFNjZW5lLCBzdGFydFBvcyk7XG4gICAgICAgIHRoaXMuX21vZGVsLmlzX3Jlc2V0X3pvcmRlciA9IHRydWU7XG4gICAgICAgIGlmICh0aGlzLl9tb2RlbC51c2VyQWNjZVZhbHVlID4gMSkge1xuICAgICAgICAgICAgaGVhZEl0ZW0uQmF0dGxlSGVyby5zZXRNb3ZlQWNjZWxlcmF0ZSh0aGlzLl9tb2RlbC51c2VyQWNjZVZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDorr7nva7moLzlrZDmmK/lkKbplIEgKi9cbiAgICBwdWJsaWMgc2V0Q2VsbElzTG9jayhsb2NrSW5kZXg6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5fbW9kZWwuYWxsSGVyb0NvdW50OyBpbmRleCsrKSB7XG4gICAgICAgICAgICBsZXQgY2VsbCA9IHRoaXMuaGFsbFNjZW5lLmxpc3RzX2hlYWQuZ2V0Q2VsbChpbmRleCk7XG4gICAgICAgICAgICBpZiAoY2VsbCkge1xuICAgICAgICAgICAgICAgIGxldCBoZWFkSXRlbTogSGVhZEl0ZW0gPSBjZWxsLmdldENoaWxkQnlOYW1lKFwiaGVyb1wiKSBhcyBIZWFkSXRlbTtcbiAgICAgICAgICAgICAgICBpZiAoaGVhZEl0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgaGVhZEl0ZW0uc2V0TG9jayhpbmRleCA+PSBsb2NrSW5kZXgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDorr7nva7nlKjmiLfnrYnnuqcgKi9cbiAgICBwdWJsaWMgc2V0VXNlckxldmVsKGxldmVsOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgUGxheWVyTWdyLklucy5JbmZvLnVzZXJMZXZlbCA9IGxldmVsO1xuICAgICAgICBFdmVudHNNZ3IuSW5zLmRpc3BhdGNoKEV2ZW50VHlwZS5VUERBVEVfVVNFUl9MRVZFTCk7XG4gICAgICAgIEV2ZW50c01nci5JbnMuZGlzcGF0Y2goRXZlbnRUeXBlLlVQREFURV9TWVNURU1fQlROKTtcbiAgICAgICAgdGhpcy5yZWZyZXNoVXNlckRhdGEoKTtcbiAgICB9XG5cbiAgICAvKiog5Yi35paw55So5oi355u45YWz5pWw5o2uICovXG4gICAgcHJpdmF0ZSByZWZyZXNoVXNlckRhdGEoKTogdm9pZCB7XG4gICAgICAgIGxldCBsZXZlbFZPOiBMZXZlbFZPID0gR2xvYmFsRGF0YS5nZXREYXRhKEdsb2JhbERhdGEuTGV2ZWxWTywgUGxheWVyTWdyLklucy5JbmZvLnVzZXJMZXZlbCk7XG4gICAgICAgIGlmIChsZXZlbFZPKSB7XG4gICAgICAgICAgICB0aGlzLnNldENlbGxJc0xvY2sobGV2ZWxWTy5vcGVuQ2VsbENvdW50KTtcbiAgICAgICAgICAgIHRoaXMuc2V0QmF0dGxlSGVyb0NvdW50TWF4KGxldmVsVk8uYmF0dGxlQ291bnQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOiuvue9rueUqOaIt+e7j+mqjCAqL1xuICAgIHB1YmxpYyBzZXRVc2VyRXhwKHVwRXhwOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgUGxheWVyTWdyLklucy5JbmZvLnVzZXJFeHAgPSB1cEV4cDtcbiAgICAgICAgbGV0IHVwTmVlZGV4cDogbnVtYmVyID0gMDtcbiAgICAgICAgbGV0IG5leHRMZXZlbDogbnVtYmVyID0gUGxheWVyTWdyLklucy5JbmZvLnVzZXJMZXZlbCArIDE7XG4gICAgICAgIGxldCBsZXZlbFZPOiBMZXZlbFZPID0gR2xvYmFsRGF0YS5nZXREYXRhKEdsb2JhbERhdGEuTGV2ZWxWTywgbmV4dExldmVsKTtcbiAgICAgICAgaWYgKGxldmVsVk8pIHtcbiAgICAgICAgICAgIHVwTmVlZGV4cCA9IGxldmVsVk8udXBOZWVkZXhwO1xuICAgICAgICAgICAgbGV0IGV4cCA9IFBsYXllck1nci5JbnMuSW5mby51c2VyRXhwIC0gdXBOZWVkZXhwO1xuICAgICAgICAgICAgaWYgKGV4cCA+PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRVc2VyTGV2ZWwobmV4dExldmVsKTtcbiAgICAgICAgICAgICAgICBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckxldmVsRXh0cmFJbmNvbWUgPSAxICsgbGV2ZWxWTy5leHRyYVByb2R1Y2U7XG4gICAgICAgICAgICAgICAgaWYgKGxldmVsVk8uZ29sZEdpZnQgPiAwKSB7IC8v562J57qn5aWW5YqxXG4gICAgICAgICAgICAgICAgICAgIFZpZXdNZ3IuSW5zLm9wZW4oVmlld0NvbnN0LkxldmVsUmV3YXJkVmlldywgbnVsbCwgbGV2ZWxWTyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5Li75Lq6LOaBreWWnOaCqOWNh+e6p+S6hiFcIik7XG4gICAgICAgICAgICAgICAgICAgIFNvdW5kTWdyLklucy5wbGF5RWZmZWN0KFNvdW5kVHlwZS5VUEdSQURFX0hFUk8pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnNldFVzZXJFeHAoZXhwKTtcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZU1hcERhdGEodHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBFdmVudHNNZ3IuSW5zLmRpc3BhdGNoKEV2ZW50VHlwZS5VUERBVEVfVVNFUl9FWFAsIHVwTmVlZGV4cCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog5pu05paw5Zyw5Zu+5pWw5o2uICovXG4gICAgcHVibGljIHVwZGF0ZU1hcERhdGEoaXNVcExldmVsOiBib29sZWFuID0gZmFsc2UpOiB2b2lkIHtcbiAgICAgICAgLy/mm7TmlrDln47msaDlkI3lrZdcbiAgICAgICAgbGV0IG1hcFZPOiBNYXBWTyA9IEdsb2JhbERhdGEuZ2V0RGF0YShHbG9iYWxEYXRhLk1hcFZPLCBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckxldmVsKTtcbiAgICAgICAgaWYgKG1hcFZPKSB7XG4gICAgICAgICAgICB0aGlzLl9oYWxsU2NlbmUudHh0X21hcE5hbWUudGV4dCA9IG1hcFZPLm5hbWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog5Yi35paw5q+P56eS6YeR5biB5pS255uKICovXG4gICAgcHVibGljIHJlZnJlc2hJbmNvbWVTZWMoKTogdm9pZCB7XG4gICAgICAgIGxldCBpbmNvbWVQZXJTZWMgPSAwO1xuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5fbW9kZWwuYWxsSGVyb0NvdW50OyBpbmRleCsrKSB7XG4gICAgICAgICAgICBsZXQgY2VsbCA9IHRoaXMuaGFsbFNjZW5lLmxpc3RzX2hlYWQuZ2V0Q2VsbChpbmRleCk7XG4gICAgICAgICAgICBpZiAoY2VsbCkge1xuICAgICAgICAgICAgICAgIGxldCBoZWFkSXRlbTogSGVhZEl0ZW0gPSBjZWxsLmdldENoaWxkQnlOYW1lKFwiaGVyb1wiKSBhcyBIZWFkSXRlbTtcbiAgICAgICAgICAgICAgICBpZiAoaGVhZEl0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgaW5jb21lUGVyU2VjICs9IHRoaXMuZ2V0SGVyb0luY29tZVNlY0dvbGQoaGVhZEl0ZW0uSW5mby5oZXJvSWQpICogUGxheWVyTWdyLklucy5JbmZvLnVzZXJFeHRyYUluY29tZSAqIFBsYXllck1nci5JbnMuSW5mby51c2VyQWNjZVZhbHVlICogUGxheWVyTWdyLklucy5JbmZvLnVzZXJMZXZlbEV4dHJhSW5jb21lO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBFdmVudHNNZ3IuSW5zLmRpc3BhdGNoKEV2ZW50VHlwZS5VUERBVEVfSU5DT01FLCBpbmNvbWVQZXJTZWMpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIOabtOaWsOmHkeW4gVxuICAgICAqIEBwYXJhbSBnb2xkIOmHkeW4geaVsOmHj1xuICAgICAqIEBwYXJhbSBpc1RvdGFsIHRydWU65piv5ZCm55u05o6l5pu/5o2i6YeR6aKdICBmYWxzZTrlt67pop1cbiAgICAgKi9cbiAgICBwdWJsaWMgdXBkYXRlR29sZChnb2xkOiBudW1iZXIsIGlzVG90YWw6IGJvb2xlYW4gPSB0cnVlKTogdm9pZCB7XG4gICAgICAgIEV2ZW50c01nci5JbnMuZGlzcGF0Y2goRXZlbnRUeXBlLlVQREFURV9DVVJSRU5DWSwgUGxheWVySW5mby5HT0xELCBnb2xkLCBpc1RvdGFsKTsvL+abtOaWsOeUqOaIt+iOt+W+l+mHkeW4gVxuICAgICAgICB0aGlzLmhhbGxTY2VuZS51cGRhdGVSZWNydWl0RGF0YSgpO1xuICAgIH1cblxuICAgIC8qKiDmm7TmlrDoi7Hpm4TnrYnnuqcgKi9cbiAgICBwdWJsaWMgdXBkYXRlSGVyb0xldmVsKGxldmVsOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICAgICAgaWYgKHRoaXMuX21vZGVsLmhlcm9MZXZlbCA8IHRoaXMuX21vZGVsLmhlcm9NYXhMZXZlbCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX21vZGVsLmhlcm9MZXZlbCA8IGxldmVsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9kZWwuaGVyb0xldmVsID0gbGV2ZWw7XG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5jYWxsTGF0ZXIodGhpcywgU3RvcmFnZVV0aWwuc2F2ZVN0b3JhZ2VUb0xvY2FsLCBbdHJ1ZV0pO1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5bey6L6+5Yiw5pyA6auY57qn5LqG6IC2IVwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgLyoqIOiOt+WPluiLsembhOWQiOaIkOe7j+mqjCAqL1xuICAgIHB1YmxpYyBnZXRIZXJvRXhwKGhlcm9JZDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgICAgbGV0IGhlcm9Db25maWc6IEhlcm9Db25maWdWTyA9IEdsb2JhbERhdGEuZ2V0RGF0YShHbG9iYWxEYXRhLkhlcm9Db25maWdWTywgaGVyb0lkKTtcbiAgICAgICAgaWYgKGhlcm9Db25maWcpIHtcbiAgICAgICAgICAgIHJldHVybiBoZXJvQ29uZmlnLnN5bnRoZXRpY0V4cDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICAvKiog6I635Y+W6Iux6ZuE5q+P56eS5Lqn5Ye66YeR5biBICovXG4gICAgcHVibGljIGdldEhlcm9JbmNvbWVTZWNHb2xkKGhlcm9JZDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgICAgbGV0IGhlcm9Db25maWc6IEhlcm9Db25maWdWTyA9IEdsb2JhbERhdGEuZ2V0RGF0YShHbG9iYWxEYXRhLkhlcm9Db25maWdWTywgaGVyb0lkKTtcbiAgICAgICAgaWYgKGhlcm9Db25maWcpIHtcbiAgICAgICAgICAgIHJldHVybiBoZXJvQ29uZmlnLlBlclNlY0NvaW47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgLyoqIOiOt+WPluiLsembhOS4gOWFseeahOaUtuebiumHkeW4gSAqL1xuICAgIHB1YmxpYyBnZXRIZXJvSW5jb21lVG90YWxHb2xkKGhlcm9JZDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgICAgbGV0IGhlcm9Db25maWc6IEhlcm9Db25maWdWTyA9IEdsb2JhbERhdGEuZ2V0RGF0YShHbG9iYWxEYXRhLkhlcm9Db25maWdWTywgaGVyb0lkKTtcbiAgICAgICAgaWYgKGhlcm9Db25maWcpIHtcbiAgICAgICAgICAgIHJldHVybiBoZXJvQ29uZmlnLnRvdGFsQ29pbjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICAvKiog5piv5ZCm5paw5omLICovXG4gICAgcHVibGljIGdldCBJc0d1aWRlKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fbW9kZWwuaGVyb0xldmVsIDwgMztcbiAgICB9XG5cbiAgICAvKiog5piv5ZCm6KKr54K55Ye7ICovXG4gICAgcHVibGljIGlzSGl0KGNoZWNrT2JqOiBMYXlhLlNwcml0ZSwgZXh0VzogbnVtYmVyID0gMCwgZXh0SDogbnVtYmVyID0gMCkge1xuICAgICAgICBpZiAoY2hlY2tPYmopIHtcbiAgICAgICAgICAgIGxldCB0b3VjaFBvczogTGF5YS5Qb2ludCA9IGNoZWNrT2JqLmdldE1vdXNlUG9pbnQoKTtcbiAgICAgICAgICAgIGxldCB0b3VjaEFyZWE6IExheWEuUmVjdGFuZ2xlID0gbmV3IExheWEuUmVjdGFuZ2xlKDAgLSBleHRXIC8gMiwgMCAtIGV4dEggLyAyLFxuICAgICAgICAgICAgICAgIGNoZWNrT2JqLndpZHRoICsgZXh0VywgY2hlY2tPYmouaGVpZ2h0ICsgZXh0SCk7XG4gICAgICAgICAgICByZXR1cm4gdG91Y2hBcmVhLmNvbnRhaW5zKHRvdWNoUG9zLngsIHRvdWNoUG9zLnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvKiog6Iux6ZuE5oyJ562J57qn5o6S5bqPICovXG4gICAgcHVibGljIHNvcnRIZXJvKCk6IHZvaWQge1xuICAgICAgICBsZXQgaGVyb1NvcnRMaXN0ID0gW107XG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLl9tb2RlbC5hbGxIZXJvQ291bnQ7IGluZGV4KyspIHtcbiAgICAgICAgICAgIGxldCBjZWxsID0gdGhpcy5oYWxsU2NlbmUubGlzdHNfaGVhZC5nZXRDZWxsKGluZGV4KTtcbiAgICAgICAgICAgIGlmIChjZWxsKSB7XG4gICAgICAgICAgICAgICAgbGV0IGhlYWRJdGVtOiBIZWFkSXRlbSA9IGNlbGwuZ2V0Q2hpbGRCeU5hbWUoXCJoZXJvXCIpIGFzIEhlYWRJdGVtO1xuICAgICAgICAgICAgICAgIGlmIChoZWFkSXRlbSAmJiAhaGVhZEl0ZW0uSXNFbXB0eSAmJiAhaGVhZEl0ZW0uSXNCb3ggJiYgIWhlYWRJdGVtLklzTG9jaykge1xuICAgICAgICAgICAgICAgICAgICBsZXQgaGVyb0RhdGEgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZXJvSWQ6IGhlYWRJdGVtLkluZm8uaGVyb0lkLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVyb1N0YWdlOiBoZWFkSXRlbS5IZXJvU3RhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBiYXR0bGVIZXJvOiBoZWFkSXRlbS5CYXR0bGVIZXJvLFxuICAgICAgICAgICAgICAgICAgICAgICAgY3VyckhwOiBoZWFkSXRlbS5ocEJhci52YWx1ZVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICBpZiAoaW5kZXggPCAxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZXJvU29ydExpc3QucHVzaChoZXJvRGF0YSlcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBtYXhDb3VudCA9IGhlcm9Tb3J0TGlzdC5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgbWF4SW5kZXggPSBtYXhDb3VudDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbWF4Q291bnQ7IGorKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChoZXJvU29ydExpc3Rbal0gJiYgaGVyb1NvcnRMaXN0W2pdLmhlcm9JZCA8IGhlYWRJdGVtLkluZm8uaGVyb0lkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heEluZGV4ID0gajtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaGVyb1NvcnRMaXN0LnNwbGljZShtYXhJbmRleCwgMCwgaGVyb0RhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGxldCBoZXJvSW5kZXg6IG51bWJlciA9IDA7XG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLl9tb2RlbC5hbGxIZXJvQ291bnQ7IGluZGV4KyspIHtcbiAgICAgICAgICAgIGxldCBjZWxsID0gdGhpcy5oYWxsU2NlbmUubGlzdHNfaGVhZC5nZXRDZWxsKGluZGV4KTtcbiAgICAgICAgICAgIGlmIChjZWxsKSB7XG4gICAgICAgICAgICAgICAgbGV0IGhlYWRJdGVtOiBIZWFkSXRlbSA9IGNlbGwuZ2V0Q2hpbGRCeU5hbWUoXCJoZXJvXCIpIGFzIEhlYWRJdGVtO1xuICAgICAgICAgICAgICAgIGlmIChoZWFkSXRlbSAmJiAhaGVhZEl0ZW0uSXNCb3ggJiYgIWhlYWRJdGVtLklzTG9jaykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaGVyb0luZGV4ID49IGhlcm9Tb3J0TGlzdC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRJdGVtLnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaGVyb0RhdGEgPSBoZXJvU29ydExpc3RbaGVyb0luZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRJdGVtLnVwZGF0ZUhlYWRTa2luKGhlcm9EYXRhLmhlcm9JZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkSXRlbS5zZXRTdGFnZShoZXJvRGF0YS5oZXJvU3RhZ2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhlYWRJdGVtLkJhdHRsZUhlcm8gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRJdGVtLkJhdHRsZUhlcm8gPSBoZXJvRGF0YS5iYXR0bGVIZXJvO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRJdGVtLmhwQmFyLnZhbHVlID0gaGVyb0RhdGEuY3VyckhwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRJdGVtLmhwQmFyLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaGVyb0luZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTYXZlSGVyb0RhdGEoaGVhZEl0ZW0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDorr7nva7oi7Hpm4TmlbDmja7lubbkv53lrZggKi9cbiAgICBwdWJsaWMgc2V0U2F2ZUhlcm9EYXRhKGhlYWRJdGVtT25lOiBIZWFkSXRlbSwgaGVhZEl0ZW1Ud286IEhlYWRJdGVtID0gbnVsbCk6IHZvaWQge1xuICAgICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5fbW9kZWwuQWxsSGVyb3MpIHtcbiAgICAgICAgICAgIGxldCBlbGVtZW50ID0gdGhpcy5fbW9kZWwuQWxsSGVyb3Nba2V5XTtcbiAgICAgICAgICAgIGlmIChoZWFkSXRlbU9uZSkge1xuICAgICAgICAgICAgICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQuaWQgPT0gaGVhZEl0ZW1PbmUuaGVyb0luZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuaGVyb0lkID0gaGVhZEl0ZW1PbmUuSW5mby5oZXJvSWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy/kuqTmjaLovabovoZcbiAgICAgICAgICAgIGlmIChoZWFkSXRlbVR3bykge1xuICAgICAgICAgICAgICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQuaWQgPT0gaGVhZEl0ZW1Ud28uaGVyb0luZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQuaGVyb0lkID0gaGVhZEl0ZW1Ud28uSW5mby5oZXJvSWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIExheWEudGltZXIuY2FsbExhdGVyKHRoaXMsIFN0b3JhZ2VVdGlsLnNhdmVTdG9yYWdlVG9Mb2NhbCwgW3RydWVdKTtcbiAgICB9XG5cbiAgICAvKiog6K6+572u5oiY5paX6Iux6ZuE55qE5pWw6YePICovXG4gICAgcHVibGljIHNldEJhdHRsZUhlcm9Db3VudCh2YWx1ZTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIFBsYXllck1nci5JbnMuSW5mby51c2VyUnVuY2FyQ291bnQgPSB2YWx1ZTtcbiAgICAgICAgdGhpcy5yZWZyZXNoQmF0dGxlSGVyb0NvdW50KCk7XG4gICAgICAgIHRoaXMucmVmcmVzaEluY29tZVNlYygpO1xuICAgICAgICBTb3VuZE1nci5JbnMucGxheUVmZmVjdChTb3VuZFR5cGUuRU5URVJfR0FNRSk7XG4gICAgfVxuXG4gICAgLyoqIOiuvue9ruaImOaWl+iLsembhOeahOacgOWkp+aVsOmHjyAqL1xuICAgIHB1YmxpYyBzZXRCYXR0bGVIZXJvQ291bnRNYXgodmFsdWU6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlclJ1bmNhckNvdW50TWF4ID0gdmFsdWU7XG4gICAgICAgIHRoaXMucmVmcmVzaEJhdHRsZUhlcm9Db3VudCgpO1xuICAgIH1cblxuICAgIC8qKiDliLfmlrDmiJjmlpfkuK3oi7Hpm4TmlbDph48gKi9cbiAgICBwdWJsaWMgcmVmcmVzaEJhdHRsZUhlcm9Db3VudCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKFBsYXllck1nci5JbnMuSW5mby51c2VyUnVuY2FyQ291bnQgPCBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlclJ1bmNhckNvdW50TWF4KSB7XG4gICAgICAgICAgICBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckV4dHJhSW5jb21lID0gMTtcbiAgICAgICAgICAgIHRoaXMuaGFsbFNjZW5lLnR4dF9iYXR0bGVDb3VudC50ZXh0ID0gUGxheWVyTWdyLklucy5JbmZvLnVzZXJSdW5jYXJDb3VudCArIFwiL1wiICsgUGxheWVyTWdyLklucy5JbmZvLnVzZXJSdW5jYXJDb3VudE1heDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIFBsYXllck1nci5JbnMuSW5mby51c2VyRXh0cmFJbmNvbWUgPSAxLjE7XG4gICAgICAgICAgICB0aGlzLmhhbGxTY2VuZS50eHRfYmF0dGxlQ291bnQudGV4dCA9IFwiKzEwJVwiO1xuICAgICAgICB9XG4gICAgICAgIC8v6LeR6YGT5bey5ruh5pWI5p6cXG4gICAgICAgIGlmICgoUGxheWVyTWdyLklucy5JbmZvLnVzZXJSdW5jYXJDb3VudCA8IFBsYXllck1nci5JbnMuSW5mby51c2VyUnVuY2FyQ291bnRNYXgpKSB7XG4gICAgICAgICAgICB0aGlzLmhhbGxTY2VuZS5pbWdCYXR0bGVDb3VudC5za2luID0gXCJpbWFnZXMvaGFsbC9nYW1lX3J1bm5pbmdfbnVtMS5wbmdcIjtcbiAgICAgICAgICAgIHRoaXMuaGFsbFNjZW5lLnR4dF9iYXR0bGVDb3VudC55ID0gMztcbiAgICAgICAgICAgIHRoaXMuaGFsbFNjZW5lLnR4dF9iYXR0bGVDb3VudC5jb2xvciA9IFwiIzAwMDAwMFwiO1xuICAgICAgICAgICAgLy/lgZzmraLnvKnmlL5cbiAgICAgICAgICAgIGlmICh0aGlzLl9iYXR0bGVIZXJvVGltZUxpbmUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9iYXR0bGVIZXJvVGltZUxpbmUucGF1c2UoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmhhbGxTY2VuZS5pbWdCYXR0bGVDb3VudC5zY2FsZSgxLCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaGFsbFNjZW5lLmltZ0JhdHRsZUNvdW50LnNraW4gPSBcImltYWdlcy9oYWxsL2dhbWVfcnVubmluZ19udW0yLnBuZ1wiO1xuICAgICAgICAgICAgdGhpcy5oYWxsU2NlbmUudHh0X2JhdHRsZUNvdW50LnkgPSAyNTtcbiAgICAgICAgICAgIHRoaXMuaGFsbFNjZW5lLnR4dF9iYXR0bGVDb3VudC5jb2xvciA9IFwiI2IxMWExYVwiO1xuICAgICAgICAgICAgLy/lvIDlp4vnvKnmlL7liqjnlLtcbiAgICAgICAgICAgIGlmICh0aGlzLl9iYXR0bGVIZXJvVGltZUxpbmUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2JhdHRsZUhlcm9UaW1lTGluZSA9IG5ldyBMYXlhLlRpbWVMaW5lKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5fYmF0dGxlSGVyb1RpbWVMaW5lLmFkZExhYmVsKFwic2NhbGUxXCIsIDApLnRvKHRoaXMuaGFsbFNjZW5lLmltZ0JhdHRsZUNvdW50LCB7IHNjYWxlWDogMC45LCBzY2FsZVk6IDAuOSB9LCAzMDApXG4gICAgICAgICAgICAgICAgICAgIC5hZGRMYWJlbChcInNjYWxlMlwiLCAxMDApLnRvKHRoaXMuaGFsbFNjZW5lLmltZ0JhdHRsZUNvdW50LCB7IHNjYWxlWDogMSwgc2NhbGVZOiAxIH0sIDMwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9iYXR0bGVIZXJvVGltZUxpbmUucGxheSgwLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmhhbGxTY2VuZS5pbWdCYXR0bGVHb2xkLnZpc2libGUgPSAhKFBsYXllck1nci5JbnMuSW5mby51c2VyUnVuY2FyQ291bnQgPCBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlclJ1bmNhckNvdW50TWF4KTtcbiAgICAgICAgdGhpcy5oYWxsU2NlbmUuaW1nQmF0dGxlR29sZC54ID0gOTI7XG4gICAgICAgIHRoaXMuaGFsbFNjZW5lLmltZ0JhdHRsZUdvbGQueSA9IDIxO1xuICAgICAgICB0aGlzLmhhbGxTY2VuZS5pbWdCYXR0bGVDb3VudC5hbHBoYSA9IDAuOTtcbiAgICB9XG5cbiAgICAvKiog6K6+572u5oiY5paX6Iux6ZuE5Yqg6YCf5pWI5p6cICovXG4gICAgcHVibGljIHNldEJhdHRsZUhlcm9BY2NlKGFjY1ZhbHVlOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fbW9kZWwudXNlckFjY2VWYWx1ZSA9IGFjY1ZhbHVlO1xuICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5fbW9kZWwuYWxsSGVyb0NvdW50OyBpbmRleCsrKSB7XG4gICAgICAgICAgICBsZXQgY2VsbCA9IHRoaXMuaGFsbFNjZW5lLmxpc3RzX2hlYWQuZ2V0Q2VsbChpbmRleCk7XG4gICAgICAgICAgICBpZiAoY2VsbCkge1xuICAgICAgICAgICAgICAgIGxldCBoZWFkSXRlbTogSGVhZEl0ZW0gPSBjZWxsLmdldENoaWxkQnlOYW1lKFwiaGVyb1wiKSBhcyBIZWFkSXRlbTtcbiAgICAgICAgICAgICAgICBpZiAoaGVhZEl0ZW0gJiYgaGVhZEl0ZW0uSGVyb1N0YWdlID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGJhdHRsZUhlcm86IEhlcm8gPSBoZWFkSXRlbS5CYXR0bGVIZXJvO1xuICAgICAgICAgICAgICAgICAgICBpZiAoYmF0dGxlSGVybykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYmF0dGxlSGVyby5zZXRNb3ZlQWNjZWxlcmF0ZSh0aGlzLl9tb2RlbC51c2VyQWNjZVZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlZnJlc2hJbmNvbWVTZWMoKTtcbiAgICB9XG5cbiAgICAvKiog6I635Y+W5Yqf6IO95byA5pS+5YiX6KGoICovXG4gICAgcHVibGljIGdldFN5c3RlbUJ0bkxpc3QoKTogU3lzdGVtVk9bXSB7XG4gICAgICAgIGxldCBkYXRhczogU3lzdGVtVk9bXSA9IEdsb2JhbERhdGEuZ2V0RGF0YUJ5Q29uZGl0aW9uKEdsb2JhbERhdGEuU3lzdGVtVk8sIChpdGVtOiBTeXN0ZW1WTykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIFBsYXllck1nci5JbnMuSW5mby51c2VyTGV2ZWwgPj0gaXRlbS5vcGVuTGV2ZWw7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoZGF0YXMgJiYgZGF0YXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgZGF0YXMuc29ydCgoaXRlbTE6IFN5c3RlbVZPLCBpdGVtMjogU3lzdGVtVk8pID0+IGl0ZW0xLnNvcnQgLSBpdGVtMi5zb3J0KTtcbiAgICAgICAgICAgIHJldHVybiBkYXRhcztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBzZXQgTW9kZWwodmFsdWU6IEhhbGxNb2RlbCkgeyB0aGlzLl9tb2RlbCA9IHZhbHVlOyB9XG4gICAgZ2V0IE1vZGVsKCk6IEhhbGxNb2RlbCB7IHJldHVybiB0aGlzLl9tb2RlbDsgfVxuXG4gICAgc2V0IGhhbGxTY2VuZSh2YWx1ZTogSGFsbFNjZW5lKSB7XG4gICAgICAgIHRoaXMuX2hhbGxTY2VuZSA9IHZhbHVlO1xuICAgIH1cbiAgICBnZXQgaGFsbFNjZW5lKCk6IEhhbGxTY2VuZSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9oYWxsU2NlbmU7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBIYWxsQ29udHJvbDtcbiAgICBwdWJsaWMgc3RhdGljIGdldCBJbnMoKTogSGFsbENvbnRyb2wge1xuICAgICAgICBpZiAoSGFsbENvbnRyb2wuX2luc3RhbmNlID09IG51bGwpIHtcbiAgICAgICAgICAgIEhhbGxDb250cm9sLl9pbnN0YW5jZSA9IG5ldyBIYWxsQ29udHJvbCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBIYWxsQ29udHJvbC5faW5zdGFuY2U7XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFN5c3RlbUNvbmZpZyB7XG4gICAgLyoqIOetvuWIsCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgU0lHTjogbnVtYmVyID0gMTAwMDE7XG4gICAgLyoqIOaOkuihjOamnCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgUkFOSzogbnVtYmVyID0gMTAwMDI7XG4gICAgLyoqIOi9rOebmCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgTFVDS19QUklaRTogbnVtYmVyID0gMTAwMDM7XG4gICAgLyoqIOS7u+WKoSAqL1xuICAgIHB1YmxpYyBzdGF0aWMgVEFTSzogbnVtYmVyID0gMTAwMDQ7XG4gICAgLyoqIOmCgOivt+acieekvCAqL1xuICAgIHB1YmxpYyBzdGF0aWMgSU5WSVRFOiBudW1iZXIgPSAxMDAwNTtcbiAgICAvKiog5YWz5rOoICovXG4gICAgcHVibGljIHN0YXRpYyBGT0xMT1c6IG51bWJlciA9IDEwMDA2O1xuICAgIC8qKiDmipXor4nlu7rorq4gKi9cbiAgICBwdWJsaWMgc3RhdGljIEZFRURCQUNLOiBudW1iZXIgPSAxMDAwNjtcbn0iLCJpbXBvcnQgQmFzZUNoYXJhY3RlciBmcm9tIFwiLi9iYXNlL0Jhc2VDaGFyYWN0ZXJcIjtcbmltcG9ydCBHbG9iYWxEYXRhIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2RiL0dsb2JhbERhdGFcIjtcbmltcG9ydCBIZXJvVk8gZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZGIvdm8vSGVyb1ZPXCI7XG5pbXBvcnQgUGF0aENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9jb25maWcvUGF0aENvbmZpZ1wiO1xuaW1wb3J0IEVmZmVjdFV0aWwgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvdXRpbHMvRWZmZWN0VXRpbFwiO1xuaW1wb3J0IEhlcm9Db25maWdWTyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9kYi92by9IZXJvQ29uZmlnVk9cIjtcbmltcG9ydCBQb2ludFV0aWxzIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3V0aWxzL1BvaW50VXRpbHNcIjtcbmltcG9ydCBNYXRoVXRpbCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9NYXRoVXRpbFwiO1xuaW1wb3J0IEl0ZW1FeHBsb2RlIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2VmZmVjdC9JdGVtRXhwbG9kZVwiO1xuaW1wb3J0IFBvb2xNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvbXNnL1Bvb2xNZ3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGVybyBleHRlbmRzIEJhc2VDaGFyYWN0ZXIge1xuXG4gICAgcHVibGljIGhlcm9JZDogbnVtYmVyID0gMDtcbiAgICBwdWJsaWMgaHA6IG51bWJlciA9IDY7XG4gICAgcHVibGljIG1heEhwOiBudW1iZXIgPSA2O1xuICAgIHByaXZhdGUgX2hlcm9WTzogSGVyb1ZPO1xuICAgIC8qKiDmmK/lkKbmmL7npLroh6rnmb0gKi9cbiAgICBwcml2YXRlIF9pc1Nob3dEaWFsb2d1ZTogYm9vbGVhbiA9IGZhbHNlO1xuICAgIC8qKiDoh6rnmb3liJfooaggKi9cbiAgICBwcml2YXRlIF9kaWFsb2d1ZUxpc3Q6IEFycmF5PHN0cmluZz4gPSBbXTtcbiAgICAvKiog6Iux6ZuE5qih5Z6L6Lev5b6EICovXG4gICAgcHJpdmF0ZSBfaGVyb1BhdGg6IHN0cmluZyA9ICcnO1xuICAgIC8qKiDlnZDpqpHmqKHlnovot6/lvoQgKi9cbiAgICBwcml2YXRlIF9ob3JzZVBhdGg6IHN0cmluZyA9ICcnO1xuXG4gICAgcHJpdmF0ZSBfaGVyb0JvbmU6IExheWEuU2tlbGV0b24gPSBudWxsO1xuICAgIHByaXZhdGUgX2hvcnNlQm9uZTogTGF5YS5Ta2VsZXRvbiA9IG51bGw7XG4gICAgLyoqIOaUu+WHu+WKqOeUu2tleSAqL1xuICAgIHByaXZhdGUgX2F0a0FuaW1LZXk6IHN0cmluZyA9ICdhdHRhY2snO1xuICAgIHByaXZhdGUgX3dhbGtLZXk6IHN0cmluZyA9IFwid2Fsa1wiO1xuICAgIHByaXZhdGUgX2hlcm9LZXk6IHN0cmluZyA9IFwiaGVyb19rZXlcIjtcbiAgICBwcml2YXRlIF9ob3JzZUtleTogc3RyaW5nID0gXCJob3JzZV9rZXlcIjtcbiAgICAvKiog6aqo6aq85Yqo55S75qih5p2/ICovXG4gICAgcHJpdmF0ZSBfc3BpbmVGYWN0b3J5OiBBcnJheTxMYXlhLlRlbXBsZXQ+ID0gW107XG4gICAgcHJpdmF0ZSBfZW5lbXlNb2RlbFVybEFycmF5OiBBcnJheTxhbnk+ID0gW1xuICAgICAgICB7IGlkOiBcImVuZW15XzFcIiwgaGVyb1VybDogXCJpbWFnZXMvYm9uZUFuaW0vZW5lbXkvYnViaW5nbHYuc2tcIiwgaG9yc2VVcmw6IFwiXCIgfSxcbiAgICAgICAgeyBpZDogXCJlbmVteV8yXCIsIGhlcm9Vcmw6IFwiaW1hZ2VzL2JvbmVBbmltL2VuZW15L2dvbmdiaW5nbHYuc2tcIiwgaG9yc2VVcmw6IFwiXCIgfSxcbiAgICAgICAgeyBpZDogXCJlbmVteV8zXCIsIGhlcm9Vcmw6IFwiaW1hZ2VzL2JvbmVBbmltL2VuZW15L3FpYmluZ2x2LnNrXCIsIGhvcnNlVXJsOiBcIlwiIH0sXG4gICAgXTsgLy/mlYzlhpvmqKHlnotcblxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XG5cbiAgICAvKiog6K6+572u5Lq654mp6b6Z6aqoICovXG4gICAgcHVibGljIHNldENoYXJhY3RlckJvbmUoaWQ6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBzdXBlci5zZXRDaGFyYWN0ZXJCb25lKGlkKTtcbiAgICAgICAgdGhpcy5oZXJvSWQgPSBpZDtcbiAgICAgICAgdGhpcy5faGVyb1ZPID0gR2xvYmFsRGF0YS5nZXREYXRhKEdsb2JhbERhdGEuSGVyb1ZPLCB0aGlzLmhlcm9JZCk7XG4gICAgICAgIGlmICh0aGlzLl9oZXJvVk8pIHtcbiAgICAgICAgICAgIC8v6K6+572u54us55m9XG4gICAgICAgICAgICB0aGlzLl9kaWFsb2d1ZUxpc3QgPSBbdGhpcy5faGVyb1ZPLmRpYWxvZ3VlXTtcbiAgICAgICAgICAgIHRoaXMuX2hlcm9QYXRoID0gdGhpcy5faGVyb1ZPLm1vZGVsSW1nVXJsO1xuICAgICAgICAgICAgaWYgKHRoaXMuX2hlcm9QYXRoICYmIHRoaXMuX2hlcm9QYXRoLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9oZXJvUGF0aCA9IFBhdGhDb25maWcuQk9ORV9QQVRILnJlcGxhY2UoXCJ7MH1cIiwgdGhpcy5faGVyb1BhdGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5faG9yc2VQYXRoID0gdGhpcy5faGVyb1ZPLmhvcnNlID09IFwiMFwiID8gXCJcIiA6IHRoaXMuX2hlcm9WTy5ob3JzZTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9ob3JzZVBhdGggJiYgdGhpcy5faG9yc2VQYXRoLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9ob3JzZVBhdGggPSBQYXRoQ29uZmlnLkJPTkVfUEFUSC5yZXBsYWNlKFwiezB9XCIsIHRoaXMuX2hvcnNlUGF0aCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9hdGtBbmltS2V5ID0gdGhpcy5faGVyb1ZPLmF0a0FuaW1LZXk7XG4gICAgICAgICAgICAvL+enu+mZpOiAgeaooeWei1xuICAgICAgICAgICAgdGhpcy5yZW1vdmVDaGlsZEJ5TmFtZSh0aGlzLl9oZXJvS2V5KTtcbiAgICAgICAgICAgIHRoaXMucmVtb3ZlQ2hpbGRCeU5hbWUodGhpcy5faG9yc2VLZXkpO1xuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IC0xO1xuICAgICAgICAgICAgdGhpcy5jcmVhdGVIZXJvQm9uZSgpO1xuXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog5Yib5bu66Iux6ZuE6b6Z6aqo5Yqo55S7ICovXG4gICAgcHJpdmF0ZSBjcmVhdGVIZXJvQm9uZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5faGVyb0JvbmUgPSBMYXlhLlBvb2wuZ2V0SXRlbUJ5Q2xhc3MoXCJib25lXCIgKyB0aGlzLmhlcm9JZCwgTGF5YS5Ta2VsZXRvbik7XG4gICAgICAgIGlmICh0aGlzLl9oZXJvQm9uZS5uYW1lICE9ICh0aGlzLl9oZXJvS2V5ICsgdGhpcy5oZXJvSWQpKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5faGVyb1BhdGggJiYgdGhpcy5faGVyb1BhdGgubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlU3BpbmVUZW1wbGF0ZSh0aGlzLl9oZXJvUGF0aCwgKHNwaW5lRmFjdG9yeTogTGF5YS5UZW1wbGV0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hlcm9Cb25lID0gc3BpbmVGYWN0b3J5LmJ1aWxkQXJtYXR1cmUoMCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hlcm9Cb25lLm5hbWUgPSB0aGlzLl9oZXJvS2V5ICsgdGhpcy5oZXJvSWQ7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hlcm9Cb25lLnpPcmRlciA9IDE7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hlcm9Cb25lLnBsYXliYWNrUmF0ZSgwLjcpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZENoaWxkKHRoaXMuX2hlcm9Cb25lKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faGVyb0JvbmUucG9zKDUwLCAxNDApO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5faG9yc2VQYXRoID09IG51bGwgfHwgdGhpcy5faG9yc2VQYXRoLmxlbmd0aCA8IDEpIHsvL+ayoeWdkOmqkSzlnZDmoIfkuIvosINcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2hlcm9Cb25lLnkgKz0gNTA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faGVyb0JvbmUucGxheSh0aGlzLl93YWxrS2V5LCB0cnVlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuYWRkQ2hpbGQodGhpcy5faGVyb0JvbmUpO1xuICAgICAgICAgICAgdGhpcy5faGVyb0JvbmUucGxheSh0aGlzLl93YWxrS2V5LCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDliJvlu7rlnZDpqpHpvpnpqqjliqjnlLsgKi9cbiAgICBwcml2YXRlIGNyZWF0ZUhvcnNlQm9uZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5faG9yc2VCb25lID0gTGF5YS5Qb29sLmdldEl0ZW1CeUNsYXNzKFwiaG9yc2VfYm9uZVwiICsgdGhpcy5oZXJvSWQsIExheWEuU2tlbGV0b24pO1xuICAgICAgICBpZiAodGhpcy5faG9yc2VCb25lLm5hbWUgIT0gKHRoaXMuX2hvcnNlS2V5ICsgdGhpcy5oZXJvSWQpKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5faG9yc2VQYXRoICYmIHRoaXMuX2hvcnNlUGF0aC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jcmVhdGVTcGluZVRlbXBsYXRlKHRoaXMuX2hvcnNlUGF0aCwgKF9zcGluZUZhY3Rvcnk6IExheWEuVGVtcGxldCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9ob3JzZUJvbmUgPSBfc3BpbmVGYWN0b3J5LmJ1aWxkQXJtYXR1cmUoMCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hvcnNlQm9uZS5uYW1lID0gdGhpcy5faG9yc2VLZXkgKyB0aGlzLmhlcm9JZDtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faG9yc2VCb25lLnBsYXliYWNrUmF0ZSgwLjcpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmFkZENoaWxkKHRoaXMuX2hvcnNlQm9uZSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hvcnNlQm9uZS5wb3MoNTAsIDE0MCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2hvcnNlQm9uZS5wbGF5KHRoaXMuX3dhbGtLZXksIHRydWUpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5hZGRDaGlsZCh0aGlzLl9ob3JzZUJvbmUpO1xuICAgICAgICAgICAgdGhpcy5faG9yc2VCb25lLnBsYXkodGhpcy5fd2Fsa0tleSwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog5Yqo55S75pKt5pS+54q25oCBICovXG4gICAgcHVibGljIHBsYXlBbmltYXRpb24oc3RhdGU6IG51bWJlciA9IDAsIGNhbGxiYWNrOiBhbnkgPSBudWxsKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlID09IHN0YXRlKSByZXR1cm47XG4gICAgICAgIHRoaXMuc3RhdGUgPSBzdGF0ZTtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUgPT0gMSkge1xuICAgICAgICAgICAgLy/oh6rliqjliIflm57mraXooYxcbiAgICAgICAgICAgIHRoaXMudGltZXJPbmNlKDE4MCwgdGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMucGxheUFuaW1hdGlvbigwKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHRoaXMuX2hlcm9Cb25lKSB0aGlzLl9oZXJvQm9uZS5wbGF5KHRoaXMuX2F0a0FuaW1LZXksIGZhbHNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9oZXJvQm9uZSkgdGhpcy5faGVyb0JvbmUucGxheSh0aGlzLl93YWxrS2V5LCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDliJvlu7rliqjnlLvmqKHniYggKi9cbiAgICBwdWJsaWMgY3JlYXRlU3BpbmVUZW1wbGF0ZSh1cmw6IHN0cmluZywgcGFyc2VDb21wbGV0ZTogYW55KSB7XG4gICAgICAgIGlmICh1cmwgPT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICBsZXQgc3BpbmVGYWN0b3J5ID0gdGhpcy5fc3BpbmVGYWN0b3J5W3VybF07XG4gICAgICAgIGlmIChzcGluZUZhY3RvcnkgPT0gbnVsbCkge1xuICAgICAgICAgICAgc3BpbmVGYWN0b3J5ID0gbmV3IExheWEuVGVtcGxldCgpO1xuICAgICAgICAgICAgc3BpbmVGYWN0b3J5Lm9uKExheWEuRXZlbnQuQ09NUExFVEUsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICBwYXJzZUNvbXBsZXRlICYmIHBhcnNlQ29tcGxldGUoc3BpbmVGYWN0b3J5KTtcbiAgICAgICAgICAgICAgICB0aGlzLl9zcGluZUZhY3RvcnlbdXJsXSA9IHNwaW5lRmFjdG9yeTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc3BpbmVGYWN0b3J5LmxvYWRBbmkodXJsKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhcnNlQ29tcGxldGUgJiYgcGFyc2VDb21wbGV0ZShzcGluZUZhY3RvcnkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOWIt+aWsOaUtuebiuaXtumXtCAqL1xuICAgIHB1YmxpYyByZWZyZXNoSW5jb21lVGltZShhY3RDYWxsYmFjazogYW55ID0gbnVsbCk6IGJvb2xlYW4ge1xuICAgICAgICBpZiAodGhpcy5pbmNvbWVUaW1lID4gMCkge1xuICAgICAgICAgICAgdGhpcy5pbmNvbWVUaW1lIC09IDEgLyB0aGlzLm1vdmVBY2NlbGVyYXRlO1xuICAgICAgICAgICAgLy/kurrnianoh6rnmb1cbiAgICAgICAgICAgIGlmICh0aGlzLl9pc1Nob3dEaWFsb2d1ZSA9PSBmYWxzZSAmJiAodGhpcy5pbmNvbWVUaW1lID4gOTAgJiYgdGhpcy5pbmNvbWVUaW1lIDwgOTEpKSB7XG4gICAgICAgICAgICAgICAgbGV0IGRpYWxvZ3VlSW5kZXg6IG51bWJlciA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSAlICh0aGlzLl9kaWFsb2d1ZUxpc3QubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICBsZXQgZGlhbG9ndWVUZXh0ID0gdGhpcy5fZGlhbG9ndWVMaXN0W2RpYWxvZ3VlSW5kZXhdIGFzIHN0cmluZztcbiAgICAgICAgICAgICAgICBpZiAoTWF0aC5yYW5kb20oKSA8IDAuMSAmJiBkaWFsb2d1ZVRleHQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faXNTaG93RGlhbG9ndWUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBsZXQgaXNGbGlwWDogYm9vbGVhbiA9IHRoaXMueCA+IExheWEuc3RhZ2Uud2lkdGggKiAwLjg7XG4gICAgICAgICAgICAgICAgICAgIGxldCB0eHRQb3MgPSB7IHg6IHRoaXMud2lkdGggLyAyLCB5OiA1MCB9O1xuICAgICAgICAgICAgICAgICAgICAvL+mAgumFjeWkp+WwhuWGm1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNGbGlwWCA9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHh0UG9zLnggKz0gNTA7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5faG9yc2VQYXRoID09IG51bGwgfHwgdGhpcy5faG9yc2VQYXRoLmxlbmd0aCA8IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eHRQb3MueSArPSA2MDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBFZmZlY3RVdGlsLnBsYXlEaWFsb2d1ZUVmZmVjdCh0aGlzLCBcImltYWdlcy9jb21wb25lbnQvZ2FtZV9kaWFsb2d1ZV9mcmFtZS5wbmdcIiwgZGlhbG9ndWVUZXh0LCB0eHRQb3MsIDEsIGlzRmxpcFgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZGVsYXlNb3ZlVGltZSA9IDUwOyAvL+WBnOatouWKqOeUu1xuICAgICAgICAgICAgdGhpcy5zZXRJbmNvbWVUaW1lKCk7ICAgLy/ph43nva7mlLbnm4pcbiAgICAgICAgICAgIHRoaXMuX2lzU2hvd0RpYWxvZ3VlID0gZmFsc2U7XG4gICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMsIHsgeDogKHRoaXMub3JnaW5hbFggKyAxODApIH0sIDUwMCwgTGF5YS5FYXNlLmxpbmVhck5vbmUsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIExheWEuVHdlZW4uY2xlYXJUd2Vlbih0aGlzKTtcbiAgICAgICAgICAgICAgICB0aGlzLnBsYXlBbmltYXRpb24oMSk7XG4gICAgICAgICAgICAgICAgYWN0Q2FsbGJhY2sgJiYgYWN0Q2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMsIHsgeDogdGhpcy5vcmdpbmFsWCB9LCBNYXRoLmFicyh0aGlzLnggLSB0aGlzLm9yZ2luYWxYKSAqIDE1LCBMYXlhLkVhc2UubGluZWFyTm9uZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIExheWEuVHdlZW4uY2xlYXJUd2Vlbih0aGlzKTtcbiAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvKiog5Yib5bu65pS75Ye75a+56LGhICovXG4gICAgcHJpdmF0ZSBfZW5lbXlEYXRhOiBhbnkgPSBudWxsO1xuICAgIHB1YmxpYyBjcmVhdGVBdHRhY2tUYXJnZXQocGFyZW50Tm9kZTogTGF5YS5Ob2RlLCBzdGFydFBvczogTGF5YS5Qb2ludCk6IEJhc2VDaGFyYWN0ZXIge1xuICAgICAgICBpZiAodGhpcy5hdHRhY2tTcHJpdGUgPT0gbnVsbCkge1xuICAgICAgICAgICAgbGV0IGhlcm8gPSBuZXcgSGVybygpO1xuICAgICAgICAgICAgaGVyby5zaXplKDEwMCwgMTAwKTtcbiAgICAgICAgICAgIGhlcm8ucGl2b3QoNTAsIDUwKTtcbiAgICAgICAgICAgIGhlcm8uc2NhbGVYID0gLTE7XG4gICAgICAgICAgICB0aGlzLl9lbmVteURhdGEgPSB0aGlzLl9lbmVteU1vZGVsVXJsQXJyYXlbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApICUgdGhpcy5fZW5lbXlNb2RlbFVybEFycmF5Lmxlbmd0aF07XG4gICAgICAgICAgICBsZXQgYW5pbU5hbWU6IHN0cmluZyA9ICd3YWxrJztcbiAgICAgICAgICAgIGxldCBpc0xvb3A6IGJvb2xlYW4gPSB0cnVlO1xuICAgICAgICAgICAgbGV0IGZyYW1lUmF0ZTogbnVtYmVyID0gMC43O1xuICAgICAgICAgICAgbGV0IGVuZW15ID0gTGF5YS5Qb29sLmdldEl0ZW1CeUNsYXNzKHRoaXMuX2VuZW15RGF0YS5pZCwgTGF5YS5Ta2VsZXRvbik7XG4gICAgICAgICAgICBpZiAoZW5lbXkubmFtZSAhPSB0aGlzLl9lbmVteURhdGEuaWQpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fZW5lbXlEYXRhLmhlcm9VcmwgIT0gXCJcIikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNyZWF0ZVNwaW5lVGVtcGxhdGUodGhpcy5fZW5lbXlEYXRhLmhlcm9VcmwsIChfc3BpbmVGYWN0b3J5OiBMYXlhLlRlbXBsZXQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZW15ID0gX3NwaW5lRmFjdG9yeS5idWlsZEFybWF0dXJlKDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5lbXkubmFtZSA9IHRoaXMuX2VuZW15RGF0YS5pZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZW15LnpPcmRlciA9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbmVteS5wbGF5YmFja1JhdGUoZnJhbWVSYXRlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlcm8uYWRkQ2hpbGQoZW5lbXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5lbXkucG9zKDUwLCAyMDApO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX2VuZW15RGF0YS5ob3JzZVVybCAhPSBcIlwiKSB7Ly/mnInlnZDpqpEs5Z2Q5qCH5LiL6LCDXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5lbXkueSAtPSA1MDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZW15LnBsYXkoYW5pbU5hbWUsIGlzTG9vcCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaGVyby5hZGRDaGlsZChlbmVteSk7XG4gICAgICAgICAgICAgICAgZW5lbXkucGxheShhbmltTmFtZSwgaXNMb29wKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8v5pWM5Lq65Z2Q6aqRXG4gICAgICAgICAgICBsZXQgZW5lbXlIb3JzZSA9IGhlcm8uZ2V0Q2hpbGRCeU5hbWUodGhpcy5faG9yc2VLZXkpIGFzIExheWEuU2tlbGV0b247XG4gICAgICAgICAgICBpZiAoZW5lbXlIb3JzZSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2VuZW15RGF0YS5ob3JzZVVybCAhPSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY3JlYXRlU3BpbmVUZW1wbGF0ZSh0aGlzLl9lbmVteURhdGEuaG9yc2VVcmwsIChfc3BpbmVGYWN0b3J5OiBMYXlhLlRlbXBsZXQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZW15SG9yc2UgPSBfc3BpbmVGYWN0b3J5LmJ1aWxkQXJtYXR1cmUoMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbmVteUhvcnNlLm5hbWUgPSB0aGlzLl9ob3JzZUtleTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVuZW15SG9yc2UucGxheWJhY2tSYXRlKGZyYW1lUmF0ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZXJvLmFkZENoaWxkKGVuZW15SG9yc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5lbXlIb3JzZS5wb3MoNTAsIDE1MCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbmVteUhvcnNlLnBsYXkoYW5pbU5hbWUsIGlzTG9vcCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZW5lbXlIb3JzZS5wbGF5KGFuaW1OYW1lLCBpc0xvb3ApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICBwYXJlbnROb2RlLmFkZENoaWxkKGhlcm8pO1xuICAgICAgICAgICAgICAgIGhlcm8ucG9zKHN0YXJ0UG9zLngsIHN0YXJ0UG9zLnkpO1xuICAgICAgICAgICAgICAgIGxldCBoZXJvSW5mbzogSGVyb0NvbmZpZ1ZPID0gR2xvYmFsRGF0YS5nZXREYXRhKEdsb2JhbERhdGEuSGVyb0NvbmZpZ1ZPLCB0aGlzLmhlcm9JZCk7XG4gICAgICAgICAgICAgICAgaWYgKGhlcm9JbmZvKSB7XG4gICAgICAgICAgICAgICAgICAgIGhlcm8uc2V0TW92ZVNwZWVkUmF0aW8oaGVyb0luZm8uc3BlZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBoZXJvLnpPcmRlciA9IE1hdGguZmxvb3IoaGVyby55KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuYXR0YWNrU3ByaXRlID0gaGVybztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5hdHRhY2tTcHJpdGU7XG4gICAgfVxuXG4gICAgLyoqIOenu+mZpOaUu+WHu+WvueixoSAqL1xuICAgIHB1YmxpYyByZW1vdmVBdHRhY2tUYXJnZXQoaXNLaWxsOiBib29sZWFuID0gZmFsc2UpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuYXR0YWNrU3ByaXRlKSB7XG4gICAgICAgICAgICBpZiAoaXNLaWxsKSB7XG4gICAgICAgICAgICAgICAgbGV0IGhlcm9TcCA9IHRoaXMuYXR0YWNrU3ByaXRlLmdldENoaWxkQnlOYW1lKHRoaXMuX2hlcm9LZXkpIGFzIExheWEuU2tlbGV0b247XG4gICAgICAgICAgICAgICAgaWYgKGhlcm9TcCkgaGVyb1NwLnN0b3AoKTtcbiAgICAgICAgICAgICAgICBsZXQgaG9yc2VTcCA9IHRoaXMuYXR0YWNrU3ByaXRlLmdldENoaWxkQnlOYW1lKHRoaXMuX2hvcnNlS2V5KSBhcyBMYXlhLlNrZWxldG9uO1xuICAgICAgICAgICAgICAgIGlmIChob3JzZVNwKSBob3JzZVNwLnN0b3AoKTtcbiAgICAgICAgICAgICAgICAvL+a4kOmakFxuICAgICAgICAgICAgICAgIGxldCB0YXJnZXRQb3M6IGFueSA9IFBvaW50VXRpbHMubG9jYWxUb0dsb2JhbCh0aGlzLmF0dGFja1Nwcml0ZSk7XG4gICAgICAgICAgICAgICAgRWZmZWN0VXRpbC5wbGF5Qm9uZUVmZmVjdChcInVpX2hpdF8wM1wiLCB7IHg6IHRhcmdldFBvcy54LCB5OiB0YXJnZXRQb3MueSArIDEwMCB9KTtcbiAgICAgICAgICAgICAgICBsZXQgZXhwbG9kZSA9IG5ldyBJdGVtRXhwbG9kZSgpO1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmF0dGFja1Nwcml0ZSAmJiB0aGlzLmF0dGFja1Nwcml0ZS5wYXJlbnQgJiYgZXhwbG9kZSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmF0dGFja1Nwcml0ZS5wYXJlbnQuYWRkQ2hpbGQoZXhwbG9kZS5wbGF5KHRoaXMuYXR0YWNrU3ByaXRlLngsIHRoaXMuYXR0YWNrU3ByaXRlLnkgKyAxMDApLnNjYWxlKDAuOCwgMC44KSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuZnJhbWVMb29wKDEsIHRoaXMsIHRoaXMuYXR0YWNrVGFyZ2V0Rmx5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgYXR0YWNrVGFyZ2V0Rmx5KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmF0dGFja1Nwcml0ZS5yb3RhdGlvbiArPSA3O1xuICAgICAgICB0aGlzLmF0dGFja1Nwcml0ZS54ICs9IE1hdGhVdGlsLnJhbmdlSW50KDUsIDIwKTtcbiAgICAgICAgdGhpcy5hdHRhY2tTcHJpdGUueSAtPSBNYXRoVXRpbC5yYW5nZUludCg1LCAxMCk7XG4gICAgICAgIGlmICh0aGlzLmF0dGFja1Nwcml0ZS55IDw9IC10aGlzLmF0dGFja1Nwcml0ZS5oZWlnaHQpIHtcbiAgICAgICAgICAgIHRoaXMuY2xlYXJUaW1lcih0aGlzLCB0aGlzLmF0dGFja1RhcmdldEZseSk7XG4gICAgICAgICAgICB0aGlzLmF0dGFja1Nwcml0ZS5yZW1vdmVTZWxmKCk7XG4gICAgICAgICAgICBMYXlhLlBvb2wucmVjb3Zlcih0aGlzLl9lbmVteURhdGEuaWQsIHRoaXMuYXR0YWNrU3ByaXRlLmdldENoaWxkQnlOYW1lKHRoaXMuX2VuZW15RGF0YS5pZCkpO1xuICAgICAgICAgICAgdGhpcy5hdHRhY2tTcHJpdGUgPSBudWxsO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGdldCBoZXJvS2V5KCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLl9oZXJvS2V5O1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgaGVyb0JvbmUoKTogTGF5YS5Ta2VsZXRvbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9oZXJvQm9uZTtcbiAgICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZUNoYXJhY3RlciBleHRlbmRzIExheWEuU3ByaXRlIHtcblxuICAgIC8qKiDnp7vliqjmlrnlkJEo6buY6K6k5Y+zLDHkuLrlt6YpICovXG4gICAgcHJvdGVjdGVkIG1vdmVEaXI6IG51bWJlciA9IDA7XG4gICAgLyoqIOW7tui/n+enu+WKqOaXtumXtCAqL1xuICAgIHByb3RlY3RlZCBkZWxheU1vdmVUaW1lOiBudW1iZXIgPSA1O1xuICAgIC8qKiDnp7vliqjpgJ/luqblgI3njocgKi9cbiAgICBwcm90ZWN0ZWQgbW92ZVNwZWVkUmF0aW86IG51bWJlciA9IDE7XG4gICAgLyoqIOenu+WKqOmAn+W6puWKoOmAnyAqL1xuICAgIHByb3RlY3RlZCBtb3ZlQWNjZWxlcmF0ZTogbnVtYmVyID0gMTtcbiAgICAvKiog6buY6K6kMOatpeihjO+8jDHkuLrmlLvlh7sgKi9cbiAgICBwcm90ZWN0ZWQgc3RhdGU6IG51bWJlciA9IC0xO1xuICAgIC8qKiDmlLvlh7vlr7nosaEgKi9cbiAgICBwcm90ZWN0ZWQgYXR0YWNrU3ByaXRlOiBCYXNlQ2hhcmFjdGVyID0gbnVsbDtcbiAgICAvKiog5Yid5aeL5L2N572ueCAqL1xuICAgIHByb3RlY3RlZCBvcmdpbmFsWDogbnVtYmVyID0gMDtcbiAgICAvKiog5bey57uP5bCx5L2N77yM5Y+v5pS75Ye7ICovXG4gICAgcHJvdGVjdGVkIGlzSW5Qb3NpdGlvbjogYm9vbGVhbiA9IGZhbHNlO1xuICAgIC8qKiDoi7Hpm4TmqKHlnovot6/lvoQgKi9cbiAgICBwcm90ZWN0ZWQgaGVyb1BhdGg6IHN0cmluZyA9ICcnO1xuICAgIC8qKiDlnZDpqpHmqKHlnovot6/lvoQgKi9cbiAgICBwcm90ZWN0ZWQgaG9yc2VQYXRoOiBzdHJpbmcgPSAnJztcbiAgICAvKiog5pS75Ye75Yqo55S7a2V5ICovXG4gICAgcHJvdGVjdGVkIGF0a0FuaW1LZXk6IHN0cmluZyA9ICdhdHRhY2snO1xuICAgIC8qKiDmlLbnm4pDRCAqL1xuICAgIHByb3RlY3RlZCBpbmNvbWVUaW1lOiBudW1iZXIgPSAwO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgLyoqIOiuvue9ruS6uueJqem+memqqCAqL1xuICAgIHB1YmxpYyBzZXRDaGFyYWN0ZXJCb25lKGlkOiBudW1iZXIpOiB2b2lkIHtcblxuICAgIH1cblxuICAgIC8qKiDliqjnlLvmkq3mlL7nirbmgIEgKi9cbiAgICBwdWJsaWMgcGxheUFuaW1hdGlvbihzdGF0ZTogbnVtYmVyID0gMCwgY2FsbGJhY2s6IGFueSA9IG51bGwpOiB2b2lkIHtcblxuICAgIH1cblxuICAgIC8qKiDliJvlu7rmlLvlh7vlr7nosaEgKi9cbiAgICBwdWJsaWMgY3JlYXRlQXR0YWNrVGFyZ2V0KHBhcmVudE5vZGU6IExheWEuTm9kZSwgc3RhcnRQb3M6IExheWEuUG9pbnQpOiBCYXNlQ2hhcmFjdGVyIHtcblxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKiog56e76Zmk5pS75Ye75a+56LGhICovXG4gICAgcHVibGljIHJlbW92ZUF0dGFja1RhcmdldChpc0tpbGw6IGJvb2xlYW4gPSBmYWxzZSk6IHZvaWQge1xuXG4gICAgfVxuXG4gICAgLyoqIOenu+WKqCAqL1xuICAgIHB1YmxpYyBwbGF5TW92ZUFjdGlvbigpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5vcmdpbmFsWCA9IHRoaXMueDtcbiAgICAgICAgaWYgKHRoaXMub3JnaW5hbFggPiBMYXlhLnN0YWdlLndpZHRoIC8gMikge1xuICAgICAgICAgICAgLy/lkI7pgIBcbiAgICAgICAgICAgIGxldCBhY3Rpb25TcDogQmFzZUNoYXJhY3RlciA9IHRoaXM7XG4gICAgICAgICAgICB0aGlzLm9yZ2luYWxYID0gTGF5YS5zdGFnZS53aWR0aCAvIDIgLSBNYXRoLnJhbmRvbSgpICogMTAwO1xuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhhY3Rpb25TcCwgeyB4OiB0aGlzLm9yZ2luYWxYIH0sIE1hdGguYWJzKGFjdGlvblNwLnggLSB0aGlzLm9yZ2luYWxYKSAqIDE1LCBMYXlhLkVhc2UubGluZWFyTm9uZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi5jbGVhclR3ZWVuKGFjdGlvblNwKTtcbiAgICAgICAgICAgICAgICB0aGlzLmlzSW5Qb3NpdGlvbiA9IHRydWU7XG4gICAgICAgICAgICB9KSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaXNJblBvc2l0aW9uID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDnp7vliqjmmK/lkKblgZzmraIgKi9cbiAgICBwdWJsaWMgZ2V0IGlzTW92ZVN0b3AoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmRlbGF5TW92ZVRpbWUgPiAwO1xuICAgIH1cblxuICAgIC8qKiDmlLbnm4rlgJLorqHml7YgKi9cbiAgICBwdWJsaWMgc2V0SW5jb21lVGltZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5pbmNvbWVUaW1lID0gNjAgKiB0aGlzLm1vdmVTcGVlZFJhdGlvO1xuICAgIH1cblxuICAgIC8qKiDmlLbnm4rlgJLorqHml7YgKi9cbiAgICBwdWJsaWMgZ2V0IEluY29tZVRpbWUoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW5jb21lVGltZTtcbiAgICB9XG5cbiAgICAvL+aUu+WHu+WvueixoVxuICAgIHB1YmxpYyBnZXQgQXR0YWNrVGFyZ2V0KCk6IEJhc2VDaGFyYWN0ZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5hdHRhY2tTcHJpdGU7XG4gICAgfVxuXG4gICAgcHVibGljIHNldCBBdHRhY2tUYXJnZXQoYXR0YWNrU3A6IEJhc2VDaGFyYWN0ZXIpIHtcbiAgICAgICAgdGhpcy5hdHRhY2tTcHJpdGUgPSBhdHRhY2tTcDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0IElzSW5Qb3NpdGlvbih2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICB0aGlzLmlzSW5Qb3NpdGlvbiA9IHZhbHVlO1xuICAgIH1cbiAgICAvL+aYr+WQpuaUu+WHu+W3suWwseS9jVxuICAgIHB1YmxpYyBnZXQgSXNJblBvc2l0aW9uKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5pc0luUG9zaXRpb247XG4gICAgfVxuXG4gICAgLy/ojrflj5bliJ3lp4vkvY3nva54XG4gICAgcHVibGljIGdldCBPcmdpbmFsWCgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5vcmdpbmFsWDtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2V0TW92ZVNwZWVkUmF0aW8odmFsdWU6IG51bWJlcik6IHZvaWQge1xuICAgICAgICB0aGlzLm1vdmVTcGVlZFJhdGlvID0gdmFsdWU7XG4gICAgfVxuXG4gICAgcHVibGljIHNldE1vdmVBY2NlbGVyYXRlKHZhbHVlOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5tb3ZlQWNjZWxlcmF0ZSA9IDEuMCAvIHZhbHVlO1xuICAgIH1cblxuICAgIC8vIyPotJ3loZ7lsJTmm7Lnur8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcbiAgICAvLyDku6XmjqfliLbngrljcOiuoeeul+absue6v+eCuVxuICAgIHB1YmxpYyBDYWxjdWxhdGVCZWl6ZXIoY3A6IEFycmF5PGFueT4sIG51bU9mUG9pbnRzOiBudW1iZXIpOiBBcnJheTxhbnk+IHtcbiAgICAgICAgdmFyIHQgPSAxLjAgLyAobnVtT2ZQb2ludHMgLSAxKTtcbiAgICAgICAgdmFyIGN1cnZlID0gW107XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtT2ZQb2ludHM7IGkrKykge1xuICAgICAgICAgICAgY3VydmVbaV0gPSB0aGlzLlBvaW50T25DdWJpY0JlemllcihjcCwgaSAqIHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjdXJ2ZTtcbiAgICB9XG4gICAgLy8g5Y+C5pWwMTogNOS4queCueWdkOaghyjotbfngrnvvIzmjqfliLbngrkx77yM5o6n5Yi254K5Mu+8jOe7iOeCuSkgIFxuICAgIC8vIOWPguaVsDI6IDAgPD0gdCA8PSAxICAgXG4gICAgcHJpdmF0ZSBQb2ludE9uQ3ViaWNCZXppZXIoY3A6IEFycmF5PGFueT4sIHQ6IG51bWJlcik6IGFueSB7XG4gICAgICAgIHZhciB0UG9pbnRfeCA9IHRoaXMuTWV0YUNvbXB1dGluZyhjcFswXS54LCBjcFsxXS54LCBjcFsyXS54LCBjcFszXS54LCB0KTtcbiAgICAgICAgdmFyIHRQb2ludF95ID0gdGhpcy5NZXRhQ29tcHV0aW5nKGNwWzBdLnksIGNwWzFdLnksIGNwWzJdLnksIGNwWzNdLnksIHQpO1xuICAgICAgICByZXR1cm4geyB4OiB0UG9pbnRfeCwgeTogdFBvaW50X3kgfTtcbiAgICB9XG4gICAgcHJpdmF0ZSBNZXRhQ29tcHV0aW5nKHAwOiBudW1iZXIsIHAxOiBudW1iZXIsIHAyOiBudW1iZXIsIHAzOiBudW1iZXIsIHQ6IG51bWJlcik6IG51bWJlciB7XG4gICAgICAgIC8vIOaWueazleS4gDogIFxuICAgICAgICB2YXIgYTogbnVtYmVyLCBiOiBudW1iZXIsIGM6IG51bWJlcjtcbiAgICAgICAgdmFyIHRTcXVhcmU6IG51bWJlciwgdEN1YmU6IG51bWJlcjtcbiAgICAgICAgLy8g6K6h566X5aSa6aG55byP57O75pWwXG4gICAgICAgIGMgPSAzLjAgKiAocDEgLSBwMCk7XG4gICAgICAgIGIgPSAzLjAgKiAocDIgLSBwMSkgLSBjO1xuICAgICAgICBhID0gcDMgLSBiIC0gYyAtIHAwO1xuXG4gICAgICAgIC8vIOiuoeeul3TkvY3nva7nmoTngrlcbiAgICAgICAgdFNxdWFyZSA9IHQgKiB0O1xuICAgICAgICB0Q3ViZSA9IHQgKiB0U3F1YXJlO1xuICAgICAgICByZXR1cm4gKGEgKiB0Q3ViZSkgKyAoYiAqIHRTcXVhcmUpICsgKGMgKiB0KSArIHAwO1xuXG4gICAgICAgIC8vIOaWueazleS6jDog5Y6f5aeL55qE5LiJ5qyh5pa55YWs5byPXG4gICAgICAgIC8vICBudW1iZXIgbiA9IDEuMCAtIHQ7XG4gICAgICAgIC8vICByZXR1cm4gbipuKm4qcDAgKyAzLjAqcDEqdCpuKm4gKyAzLjAqcDIqdCp0Km4gKyBwMyp0KnQqdDtcbiAgICB9XG4gICAgLy8jI+i0neWhnuWwlOabsue6vyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xufSIsImltcG9ydCBIZXJvQ29uZmlnVk8gZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZGIvdm8vSGVyb0NvbmZpZ1ZPXCI7XG5pbXBvcnQgR2xvYmFsRGF0YSBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9kYi9HbG9iYWxEYXRhXCI7XG5pbXBvcnQgU3RvcmFnZVV0aWwgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvdXRpbHMvU3RvcmFnZVV0aWxcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGFsbE1vZGVsIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xuXG4gICAgLyoqIOiLsembhOacgOmrmOetiee6pyAqL1xuICAgIHB1YmxpYyBoZXJvTWF4TGV2ZWw6IG51bWJlciA9IDMwO1xuICAgIC8qKiDoi7Hpm4TlkIjmiJDmlbDph48gKi9cbiAgICBwdWJsaWMgaGVyb0NvdW50OiBudW1iZXIgPSAwO1xuICAgIC8qKiDmgLvoi7Hpm4TnmoTmlbDph48gKi9cbiAgICBwdWJsaWMgYWxsSGVyb0NvdW50OiBudW1iZXIgPSAxNTtcbiAgICAvKiog5bGP5bmV5rua5Yqo6YCf5bqmICovXG4gICAgcHVibGljIHZpZXdSb2xsU3BlZXA6IG51bWJlciA9IDI7XG4gICAgLyoqIOavj+WxjyAqL1xuICAgIHB1YmxpYyBmb3JlZ3JvdW5kSW5kZXg6IG51bWJlciA9IDA7XG4gICAgLyoqIOWJjeaZr+avj+Wxj+WuveW6piAqL1xuICAgIHB1YmxpYyBmb3JlZ3JvdW5kV2lkdGg6IG51bWJlciA9IDE5OTE7Ly8zMDM0XG4gICAgLyoqIOavj+WxjyAqL1xuICAgIHB1YmxpYyBmYXJncm91bmRJbmRleDogbnVtYmVyID0gMDtcbiAgICAvKiog6L+c5pmv5q+P5bGP5a695bqmICovXG4gICAgcHVibGljIGZhcmdyb3VuZFdpZHRoOiBudW1iZXIgPSAxOTg2Oy8vMjEzNVxuICAgIC8qKiDmu5rlsY8o5pyA5YmN5pmvKSAqL1xuICAgIHB1YmxpYyB0b3BGb3JlZ3JvdW5kSW5kZXg6IG51bWJlciA9IDA7XG4gICAgLyoqIOavj+Wxj+WuveW6piAqL1xuICAgIHB1YmxpYyB0b3BGb3JlZ3JvdW5kV2lkdGg6IG51bWJlciA9IDc1MDtcbiAgICAvKiog5ZCv5Yqo5Yqg6YCfeDIgKi9cbiAgICBwdWJsaWMgdXNlckFjY2VWYWx1ZTogbnVtYmVyID0gMTtcbiAgICAvKiog5Yqg6YCf5pe26Ze0ICovXG4gICAgcHVibGljIHVzZXJBY2NlVGltZTogbnVtYmVyID0gMDtcbiAgICAvKiog5b2T5YmN6Iux6ZuE5pyA6auY562J57qnICovXG4gICAgcHVibGljIGhlcm9MZXZlbDogbnVtYmVyID0gMTtcbiAgICAvKiog5YiG5Lqr5bm/5ZGK5Y+v54K55Ye75qyh5pWwICovXG4gICAgcHVibGljIHNoYXJlQWRUaW1lczogYW55ID0ge307XG4gICAgLyoqIOW5v+WRiiAqL1xuICAgIHB1YmxpYyBhZHZlcnQ6IEFycmF5PGFueT4gPSBbXTtcbiAgICAvKiog5piv5ZCm5pyJ6KeG6aKR5bm/5ZGKICovXG4gICAgcHVibGljIGhhc1ZpZGVvQWQ6IGJvb2xlYW4gPSB0cnVlO1xuICAgIC8qKiDmr4/ml6XlhYPlrp3liqDpgJ/mrKHmlbAgKi9cbiAgICBwdWJsaWMgZGlhbW9uZF9hY2NlX251bTogbnVtYmVyID0gMDtcbiAgICAvKiog5Yqg6YCf5Ymp5L2Z5pe26Ze0ICovXG4gICAgcHVibGljIHNfYWNjZUxlZnRfdGltZSA9ICdzX2FjY2VMZWZ0X3RpbWUnO1xuICAgIC8qKiDlsYLmrKHph43mi40gKi9cbiAgICBwdWJsaWMgaXNfcmVzZXRfem9yZGVyOiBib29sZWFuID0gZmFsc2U7XG5cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioq57qi54K557O75YiXIHN0YXJ0KioqKioqKioqKioqKioqKioqKioqKioqL1xuICAgIC8qKiDliIbkuqvnpLzljIXnuqLngrkgKi9cbiAgICBwdWJsaWMgc2hvd1NoYXJlR2lmdFJlZFBvaW50OiBib29sZWFuID0gZmFsc2U7XG4gICAgLyoqIOavj+aXpeetvuWIsOe6oueCuSAqL1xuICAgIHB1YmxpYyBzaG93RGFpbHlTaWduUmVkUG9pbnQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICAvKiog5Lu75Yqh57qi54K5ICovXG4gICAgcHVibGljIHNob3dUYXNrUmVkUG9pbnQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICAvKiog6L2s55uY57qi54K5ICovXG4gICAgcHVibGljIHNob3dMdWNrUHJpemVSZWRQb2ludDogYm9vbGVhbiA9IGZhbHNlO1xuICAgIC8qKiDlhbPms6jlpZblirHnuqLngrkgKi9cbiAgICBwdWJsaWMgc2hvd0ZvbGxvd1JlZFBvaW50OiBib29sZWFuID0gZmFsc2U7XG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKue6oueCueezu+WIlyBlbmQqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiAgICAvKiog5omA5pyJ55qE6Iux6ZuE5L+h5oGvIHsgaWQ6IGluZGV4LCBoZXJvSWQ6IDAsIGlzUnVubmluZzogZmFsc2UgfSAqL1xuICAgIHByaXZhdGUgX2FsbEhlcm9zOiB7IGlkOiBudW1iZXIsIGhlcm9JZDogbnVtYmVyLCBpc1J1bm5pbmc6IGJvb2xlYW4gfVtdID0gW107XG4gICAgLyoqIOi0reS5sOiLsembhOiusOW9lSAge2hlcm9JZDogMSwgYnV5VGltZXM6MH0qL1xuICAgIHByaXZhdGUgX2J1eUhlcm9zUmVjb3JkOiB7IGhlcm9JZDogbnVtYmVyLCBidXlUaW1lczogbnVtYmVyLCBkaWFtb25kQnV5VGltZXM6IG51bWJlciB9W10gPSBbXTtcbiAgICAvKipcbiAgICAgKiDoi7Hpm4TliJ3lp4vmtojotLnku7fmoLxcbiAgICAgKiAx44CB5LiA57qn6Iux6ZuE5Y2V5Liq6ZK755+z5a6a5Lu35Li677yaMzZcbiAgICAgKiAy44CB6Iux6ZuE5oiQ5pys6YCS5aKe5Li65LiK5LiA57qn55qEMS4z77yM6LSt5Lmw5qyh5pWw6YCS5aKe5Li65LiK5LiA57qn55qE5LiA54K5MS4xOO+8jOi9pu+8iOmSu+efs+S7t++8iT0zNioxLjNe77yIbi0x77yJXG4gICAgICovXG4gICAgcHJpdmF0ZSBfaGVyb0Jhc2VEaWFtb25kUHJpY2U6IG51bWJlciA9IDM2O1xuXG4gICAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICAvL+WIneWni+WMluiLsembhOS/oeaBr1xuICAgICAgICBpZiAodGhpcy5fYWxsSGVyb3MubGVuZ3RoIDwgMSkge1xuICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMuYWxsSGVyb0NvdW50OyBpbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fYWxsSGVyb3MucHVzaCh7IGlkOiBpbmRleCwgaGVyb0lkOiAwLCBpc1J1bm5pbmc6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOiOt+WPluW9k+WJjeWPr+S7peaLm+WLn+iLsembhOeahOaVsOaNriAqL1xuICAgIHB1YmxpYyBnZXRSZWNydWl0SGVyb0RhdGEoKTogSGVyb0NvbmZpZ1ZPIHtcbiAgICAgICAgbGV0IGhlcm9EYXRhcyA9IEdsb2JhbERhdGEuZ2V0RGF0YUJ5Q29uZGl0aW9uKEdsb2JhbERhdGEuSGVyb0NvbmZpZ1ZPLCAoZGF0YTogSGVyb0NvbmZpZ1ZPKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5oZXJvTGV2ZWwgPj0gZGF0YS51bmxvY2tOZWVkSWQ7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoaGVyb0RhdGFzICYmIGhlcm9EYXRhcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICByZXR1cm4gaGVyb0RhdGFzW2hlcm9EYXRhcy5sZW5ndGggLSAxXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICAvKiog6I635Y+W5pyA5paw5byA6ZSBKOWPr+i0reS5sCnnmoTliY1u5L2N6Iux6ZuE55qE6YWN572uICovXG4gICAgcHVibGljIGdldFByZU5ld0hlcm9EYXRhKHVubG9ja0NhcklkOiBudW1iZXIsIGluZGV4OiBudW1iZXIgPSAwKTogSGVyb0NvbmZpZ1ZPIHtcbiAgICAgICAgbGV0IGhlcm9EYXRhOiBIZXJvQ29uZmlnVk9bXSA9IEdsb2JhbERhdGEuZ2V0QWxsVmFsdWUoR2xvYmFsRGF0YS5IZXJvQ29uZmlnVk8pO1xuICAgICAgICBpZiAoaGVyb0RhdGEpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBoZXJvRGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChoZXJvRGF0YS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBlbGVtZW50ID0gaGVyb0RhdGFba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHVubG9ja0NhcklkIDwgZWxlbWVudC51bmxvY2tOZWVkSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBoZXJvSWQ6IG51bWJlciA9IHBhcnNlSW50KGtleSkgKyBpbmRleDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBHbG9iYWxEYXRhLmdldERhdGEoR2xvYmFsRGF0YS5IZXJvQ29uZmlnVk8sIGhlcm9JZClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICAvKiog6LSt5Lmw5Y2V5Liq6Iux6ZuE5Lu35qC8ICovXG4gICAgcHVibGljIGdldEhlcm9CdXlQcmljZShwcmljZTogbnVtYmVyLCBidXlUaW1lczogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgICAgaWYgKGJ1eVRpbWVzID4gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHByaWNlICogTWF0aC5wb3coMS4xNSwgYnV5VGltZXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcmljZTtcbiAgICB9XG5cbiAgICAvKiog5p+l6K+i6LSt5Lmw6Iux6ZuE6K6w5b2VICovXG4gICAgcHVibGljIHF1ZXJ5QnV5SGVyb1JlY29yZChoZXJvSWQ6IG51bWJlciwgaXNEaWFtb25kOiBib29sZWFuID0gZmFsc2UpOiBudW1iZXIge1xuICAgICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5fYnV5SGVyb3NSZWNvcmQpIHtcbiAgICAgICAgICAgIGxldCBlbGVtZW50ID0gdGhpcy5fYnV5SGVyb3NSZWNvcmRba2V5XTtcbiAgICAgICAgICAgIGlmIChlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuaGVyb0lkID09IGhlcm9JZCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNEaWFtb25kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fYnV5SGVyb3NSZWNvcmRba2V5XS5kaWFtb25kQnV5VGltZXM7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fYnV5SGVyb3NSZWNvcmRba2V5XS5idXlUaW1lcztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICAvKiog5Yi35paw6LSt5Lmw6Iux6ZuE6K6w5b2VICovXG4gICAgcHVibGljIHJlZnJlc2hCdXlIZXJvUmVjb3JkKGhlcm9JZDogbnVtYmVyLCBpc0RpYW1vbmQ6IGJvb2xlYW4gPSBmYWxzZSk6IHZvaWQge1xuICAgICAgICBsZXQgaXNOZXc6IGJvb2xlYW4gPSB0cnVlO1xuICAgICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5fYnV5SGVyb3NSZWNvcmQpIHtcbiAgICAgICAgICAgIGxldCBlbGVtZW50ID0gdGhpcy5fYnV5SGVyb3NSZWNvcmRba2V5XTtcbiAgICAgICAgICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQuaGVyb0lkID09IGhlcm9JZCkge1xuICAgICAgICAgICAgICAgIGlmIChpc0RpYW1vbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fYnV5SGVyb3NSZWNvcmRba2V5XS5kaWFtb25kQnV5VGltZXMrKztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9idXlIZXJvc1JlY29yZFtrZXldLmJ1eVRpbWVzKys7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlzTmV3ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChpc05ldykge1xuICAgICAgICAgICAgaWYgKGlzRGlhbW9uZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2J1eUhlcm9zUmVjb3JkLnB1c2goeyBoZXJvSWQ6IGhlcm9JZCwgYnV5VGltZXM6IDAsIGRpYW1vbmRCdXlUaW1lczogMSB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fYnV5SGVyb3NSZWNvcmQucHVzaCh7IGhlcm9JZDogaGVyb0lkLCBidXlUaW1lczogMSwgZGlhbW9uZEJ1eVRpbWVzOiAwIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIExheWEudGltZXIuY2FsbExhdGVyKHRoaXMsIFN0b3JhZ2VVdGlsLnNhdmVTdG9yYWdlVG9Mb2NhbCwgW3RydWVdKTtcbiAgICB9XG5cbiAgICAvKiog5q+P5pel5YWD5a6d5Yqg6YCf5qyh5pWwICovXG4gICAgcHVibGljIGRpYW1vbmRBY2NlVGltZXMoaXNBZGQ6IGJvb2xlYW4gPSBmYWxzZSk6IG51bWJlciB7XG4gICAgICAgIGxldCBkaWFtb25kQWNjZVRpbWVzID0gdGhpcy5kaWFtb25kX2FjY2VfbnVtO1xuICAgICAgICBpZiAoaXNBZGQpIHtcbiAgICAgICAgICAgIHRoaXMuZGlhbW9uZF9hY2NlX251bSsrO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaWFtb25kQWNjZVRpbWVzO1xuICAgIH1cblxuICAgIC8qKiDpkrvnn7PotK3kubDoi7Hpm4TnmoTku7fmoLwgKi9cbiAgICBwdWJsaWMgZ2V0RGlhbW9uZEJ1eUhlcm9QcmljZShoZXJvSWQ6IG51bWJlciwgYnV5VGltZXM6IG51bWJlcik6IG51bWJlciB7XG4gICAgICAgIGlmIChoZXJvSWQgPCAxKSByZXR1cm4gdGhpcy5faGVyb0Jhc2VEaWFtb25kUHJpY2U7XG4gICAgICAgIHZhciBoZXJvUHJpY2UgPSB0aGlzLl9oZXJvQmFzZURpYW1vbmRQcmljZTtcbiAgICAgICAgdmFyIGZvcmVDYXJJZCA9IDIwO1xuICAgICAgICBpZiAoaGVyb0lkID4gZm9yZUNhcklkKSB7XG4gICAgICAgICAgICBoZXJvUHJpY2UgPSBoZXJvUHJpY2UgKiBNYXRoLnBvdygxLjA4NSwgKGZvcmVDYXJJZCAtIDEpKSAqIE1hdGgucG93KDEuMjUsIChoZXJvSWQgLSBmb3JlQ2FySWQpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGhlcm9QcmljZSA9IGhlcm9QcmljZSAqIE1hdGgucG93KDEuMDg1LCAoaGVyb0lkIC0gMSkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChidXlUaW1lcyA+IDApIHtcbiAgICAgICAgICAgIGhlcm9QcmljZSA9IGhlcm9QcmljZSAqIE1hdGgucG93KDEuMiwgYnV5VGltZXMpO1xuICAgICAgICB9XG4gICAgICAgIGhlcm9QcmljZSA9IE1hdGguY2VpbChoZXJvUHJpY2UpOyAvL+Wbm+iIjeS6lOWFpVxuICAgICAgICByZXR1cm4gaGVyb1ByaWNlO1xuICAgIH1cblxuICAgIC8qKiDorqHnrpfoi7Hpm4TmgLvotYTkuqfvvIjln7rnoYDku7fmoLzvvIkgKi9cbiAgICBwdWJsaWMgaGVyb0FsbEFzc2V0KCk6IG51bWJlciB7XG4gICAgICAgIGxldCBhbGxBc3NldCA9IDA7XG4gICAgICAgIGlmICh0aGlzLl9hbGxIZXJvcyAmJiB0aGlzLl9hbGxIZXJvcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLl9hbGxIZXJvcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlbGVtZW50ICYmIGVsZW1lbnQuaGVyb0lkID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgdm86IEhlcm9Db25maWdWTyA9IEdsb2JhbERhdGEuZ2V0RGF0YShHbG9iYWxEYXRhLkhlcm9Db25maWdWTywgZWxlbWVudC5oZXJvSWQpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodm8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsbEFzc2V0ICs9IHRoaXMuZ2V0SGVyb0J1eVByaWNlKHZvLmJ1eVByaWNlLCB0aGlzLnF1ZXJ5QnV5SGVyb1JlY29yZCh2by5pZCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFsbEFzc2V0O1xuICAgIH1cblxuICAgIHNldCBBbGxIZXJvcyh2YWx1ZTogYW55W10pIHsgdGhpcy5fYWxsSGVyb3MgPSB2YWx1ZTsgfVxuICAgIGdldCBBbGxIZXJvcygpOiBhbnlbXSB7IHJldHVybiB0aGlzLl9hbGxIZXJvczsgfVxuXG4gICAgc2V0IEJ1eUhlcm9zUmVjb3JkKHZhbHVlOiBhbnlbXSkgeyB0aGlzLl9idXlIZXJvc1JlY29yZCA9IHZhbHVlOyB9XG4gICAgLyoqIOi0reS5sOiLsembhOiusOW9lSAge2hlcm9JZDogMSwgYnV5VGltZXM6MH0gKi9cbiAgICBnZXQgQnV5SGVyb3NSZWNvcmQoKTogYW55W10geyByZXR1cm4gdGhpcy5fYnV5SGVyb3NSZWNvcmQ7IH1cblxufVxuIiwiaW1wb3J0IHsgdWkgfSBmcm9tIFwiLi4vLi4vLi4vdWkvbGF5YU1heFVJXCI7XG5pbXBvcnQgRXZlbnRzTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2V2ZW50L0V2ZW50c01nclwiO1xuaW1wb3J0IEV2ZW50VHlwZSBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9ldmVudC9FdmVudFR5cGVcIjtcbmltcG9ydCBQbGF5ZXJNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvcGxheWVyL1BsYXllck1nclwiO1xuaW1wb3J0IFBsYXllckluZm8gZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvcGxheWVyL2RhdGEvUGxheWVySW5mb1wiO1xuaW1wb3J0IE1hdGhVdGlsIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3V0aWxzL01hdGhVdGlsXCI7XG5pbXBvcnQgU3RvcmFnZVV0aWwgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvdXRpbHMvU3RvcmFnZVV0aWxcIjtcbmltcG9ydCBWaWV3TWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvVmlld01nclwiO1xuaW1wb3J0IFZpZXdDb25zdCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS92aWV3L2NvbnN0L1ZpZXdDb25zdFwiO1xuXG4vKipcbiAqIOi0p+W4geeVjOmdolxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDdXJyZW5jeVZpZXcgZXh0ZW5kcyB1aS5tb2R1bGVWaWV3LmhhbGwuQ3VycmVuY3lWaWV3VUkge1xuXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cblxuICAgIG9uQXdha2UoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRzKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhZGRFdmVudHMoKTogdm9pZCB7XG4gICAgICAgIEV2ZW50c01nci5JbnMuYWRkTGlzdGVuZXIoRXZlbnRUeXBlLlVQREFURV9VU0VSX0xFVkVMLCB0aGlzLm9uVXBkYXRlVXNlckxldmVsLCB0aGlzKTtcbiAgICAgICAgRXZlbnRzTWdyLklucy5hZGRMaXN0ZW5lcihFdmVudFR5cGUuVVBEQVRFX0NVUlJFTkNZLCB0aGlzLm9uVXBkYXRlQ3VycmVuY3ksIHRoaXMpO1xuICAgICAgICBFdmVudHNNZ3IuSW5zLmFkZExpc3RlbmVyKEV2ZW50VHlwZS5VUERBVEVfVVNFUl9FWFAsIHRoaXMub25VcGRhdGVVc2VyRXhwLCB0aGlzKTtcbiAgICAgICAgRXZlbnRzTWdyLklucy5hZGRMaXN0ZW5lcihFdmVudFR5cGUuVVBEQVRFX0lOQ09NRSwgdGhpcy5vblVwZGF0ZUluY29tZSwgdGhpcyk7XG4gICAgICAgIHRoaXMuYnRuX3VzZXIub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vblNob3dVc2VySW5mb1ZpZXcpO1xuICAgIH1cblxuICAgIC8qKiDmm7TmlrDnlKjmiLfnrYnnuqcgKi9cbiAgICBwcml2YXRlIG9uVXBkYXRlVXNlckxldmVsKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnR4dF9sZXZlbC50ZXh0ID0gXCJMdi5cIiArIFBsYXllck1nci5JbnMuSW5mby51c2VyTGV2ZWw7XG4gICAgICAgIExheWEudGltZXIuY2FsbExhdGVyKHRoaXMsIFN0b3JhZ2VVdGlsLnNhdmVTdG9yYWdlVG9Mb2NhbCk7XG4gICAgfVxuXG4gICAgLyoqIOabtOaWsOeUqOaIt+e7j+mqjCAqL1xuICAgIHByaXZhdGUgb25VcGRhdGVVc2VyRXhwKHVwTmVlZGV4cDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZXhwQmFyLnZhbHVlID0gKDEgKiBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckV4cCAvIHVwTmVlZGV4cCk7XG4gICAgICAgIExheWEudGltZXIuY2FsbExhdGVyKHRoaXMsIFN0b3JhZ2VVdGlsLnNhdmVTdG9yYWdlVG9Mb2NhbCk7XG4gICAgfVxuXG4gICAgLyoqIOabtOaWsOeUqOaIt+avj+enkuaUtuebiiAqL1xuICAgIHByaXZhdGUgb25VcGRhdGVJbmNvbWUodXNlckluY29tZVNlYzogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIFBsYXllck1nci5JbnMuSW5mby51c2VySW5jb21lU2VjID0gdXNlckluY29tZVNlYztcbiAgICAgICAgdGhpcy50eHRfSW5jb21lLnRleHQgPSBNYXRoVXRpbC51bml0Q29udmVyc2lvbihQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckluY29tZVNlYykgKyBcIi/mr4/np5JcIjtcbiAgICB9XG5cbiAgICAvKiog5pu05paw55So5oi36LSn5biBICovXG4gICAgcHJpdmF0ZSBvblVwZGF0ZUN1cnJlbmN5KHR5cGU6IG51bWJlciwgdmFsdWU6IG51bWJlciwgaXNUb3RhbDogYm9vbGVhbiA9IHRydWUpOiB2b2lkIHtcbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICBjYXNlIFBsYXllckluZm8uR09MRDpcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUdvbGQodmFsdWUsIGlzVG90YWwpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBQbGF5ZXJJbmZvLkRJQU1PTkQ6XG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVEaWFtb25kKHZhbHVlLCBpc1RvdGFsKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDmmL7npLrnlKjmiLfkv6Hmga/nlYzpnaIgKi9cbiAgICBwcml2YXRlIG9uU2hvd1VzZXJJbmZvVmlldygpOiB2b2lkIHtcbiAgICAgICAgVmlld01nci5JbnMub3BlbihWaWV3Q29uc3QuVXNlckluZm9WaWV3KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHVwZGF0ZUdvbGQodmFsdWU6IG51bWJlciwgaXNUb3RhbDogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICBsZXQgaXNJbml0R29sZCA9IChQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckdvbGQgPT0gMCk7XG4gICAgICAgIGlmIChpc1RvdGFsKSB7XG4gICAgICAgICAgICBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckdvbGQgPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIFBsYXllck1nci5JbnMuSW5mby51c2VyR29sZCArPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnR4dF9nb2xkLnRleHQgPSBNYXRoVXRpbC51bml0Q29udmVyc2lvbihQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckdvbGQpO1xuICAgICAgICBpZiAoIWlzSW5pdEdvbGQpIHtcbiAgICAgICAgICAgIExheWEuVHdlZW4uZnJvbSh0aGlzLmltZ0dvbGQsIHsgc2NhbGVYOiAxLjIsIHNjYWxlWTogMS4yIH0sIDMwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7IExheWEuVHdlZW4uY2xlYXJUd2Vlbih0aGlzLmltZ0dvbGQpOyB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgTGF5YS50aW1lci5jYWxsTGF0ZXIodGhpcywgU3RvcmFnZVV0aWwuc2F2ZVN0b3JhZ2VUb0xvY2FsKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHVwZGF0ZURpYW1vbmQodmFsdWU6IG51bWJlciwgaXNUb3RhbDogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICBsZXQgaXNJbml0RGlhbW9uZCA9IChQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckRpYW1vbmQgPT0gMCk7XG4gICAgICAgIGlmIChpc1RvdGFsKSB7XG4gICAgICAgICAgICBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckRpYW1vbmQgPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIFBsYXllck1nci5JbnMuSW5mby51c2VyRGlhbW9uZCArPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnR4dF9kaWFtb25kLnRleHQgPSBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckRpYW1vbmQgKyBcIlwiO1xuICAgICAgICBpZiAoIWlzSW5pdERpYW1vbmQpIHtcbiAgICAgICAgICAgIExheWEuVHdlZW4uZnJvbSh0aGlzLmltZ0RpYW1vbmQsIHsgc2NhbGVYOiAxLjIsIHNjYWxlWTogMS4yIH0sIDMwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7IExheWEuVHdlZW4uY2xlYXJUd2Vlbih0aGlzLmltZ0RpYW1vbmQpOyB9KSk7XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IHsgdWkgfSBmcm9tIFwiLi4vLi4vLi4vdWkvbGF5YU1heFVJXCI7XG5pbXBvcnQgSGFsbENvbnRyb2wgZnJvbSBcIi4uL0hhbGxDb250cm9sXCI7XG5pbXBvcnQgSGVyb0NvbmZpZ1ZPIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2RiL3ZvL0hlcm9Db25maWdWT1wiO1xuaW1wb3J0IFBsYXllck1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9wbGF5ZXIvUGxheWVyTWdyXCI7XG5pbXBvcnQgRWZmZWN0VXRpbCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9FZmZlY3RVdGlsXCI7XG5pbXBvcnQgRXZlbnRzTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2V2ZW50L0V2ZW50c01nclwiO1xuaW1wb3J0IEV2ZW50VHlwZSBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9ldmVudC9FdmVudFR5cGVcIjtcbmltcG9ydCBQbGF5ZXJJbmZvIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3BsYXllci9kYXRhL1BsYXllckluZm9cIjtcbmltcG9ydCBNYXRoVXRpbCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9NYXRoVXRpbFwiO1xuaW1wb3J0IE1zZ01nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9tc2cvTXNnTWdyXCI7XG5pbXBvcnQgSHR0cE1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9uZXQvSHR0cE1nclwiO1xuaW1wb3J0IEhlcm8gZnJvbSBcIi4uL2hlcm8vSGVyb1wiO1xuaW1wb3J0IFNoYXJlTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL21zZy9TaGFyZU1nclwiO1xuaW1wb3J0IExheWVyTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2xheWVyL0xheWVyTWdyXCI7XG5pbXBvcnQgR2FtZUNvbmZpZyBmcm9tIFwiLi4vLi4vLi4vR2FtZUNvbmZpZ1wiO1xuaW1wb3J0IFN0b3JhZ2VVdGlsIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3V0aWxzL1N0b3JhZ2VVdGlsXCI7XG5pbXBvcnQgU291bmRNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3Evc291bmQvU291bmRNZ3JcIjtcbmltcG9ydCBTb3VuZFR5cGUgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3Evc291bmQvU291bmRUeXBlXCI7XG5pbXBvcnQgVmlld1JlZ2lzdGVyTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvVmlld1JlZ2lzdGVyTWdyXCI7XG5pbXBvcnQgVmlld01nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS92aWV3L1ZpZXdNZ3JcIjtcbmltcG9ydCBWaWV3Q29uc3QgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3Evdmlldy9jb25zdC9WaWV3Q29uc3RcIjtcbmltcG9ydCBIZWFkSXRlbSBmcm9tIFwiLi9pdGVtL0hlYWRJdGVtXCI7XG5pbXBvcnQgUG9pbnRVdGlscyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9Qb2ludFV0aWxzXCI7XG5pbXBvcnQgR3VpZGVNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZ3VpZGUvR3VpZGVNZ3JcIjtcbmltcG9ydCBTREtNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvbXNnL1NES01nclwiO1xuaW1wb3J0IEFwcENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9jb25maWcvQXBwQ29uZmlnXCI7XG5pbXBvcnQgSGVyb1RpcHMgZnJvbSBcIi4vSGVyb1RpcHNcIjtcbmltcG9ydCBSZWRQb2ludE1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9tc2cvUmVkUG9pbnRNZ3JcIjtcbmltcG9ydCBTeXN0ZW1CdG4gZnJvbSBcIi4vaXRlbS9TeXN0ZW1CdG5cIjtcbmltcG9ydCBTeXN0ZW1WTyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9kYi92by9TeXN0ZW1WT1wiO1xuaW1wb3J0IFN5c3RlbUNvbmZpZyBmcm9tIFwiLi4vY29uZmlnL1N5c3RlbUNvbmZpZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIYWxsU2NlbmUgZXh0ZW5kcyB1aS5tb2R1bGVWaWV3LmhhbGwuSGFsbFNjZW5lVUkge1xuXG4gICAgcHJpdmF0ZSBfY29udHJvbDogSGFsbENvbnRyb2w7XG4gICAgLyoqIOW9k+WJjeeCueWHu+eahOWktOWDj+anvSAqL1xuICAgIHByaXZhdGUgX2N1cnJIZWFkSXRlbTogSGVhZEl0ZW07XG4gICAgcHJpdmF0ZSBfY29weUhlYWRJdGVtOiBIZWFkSXRlbTtcbiAgICBwcml2YXRlIF9jdXJyQnV5SGVyb0luZm86IEhlcm9Db25maWdWTztcbiAgICBwcml2YXRlIF9iYXR0bGVIZXJvSW5kZXg6IG51bWJlciA9IDA7XG4gICAgcHJpdmF0ZSBfaGVyb1RpcHM6IEhlcm9UaXBzO1xuXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cblxuICAgIG9uQXdha2UoKTogdm9pZCB7XG4gICAgICAgIFNES01nci5JbnMud3hTaG93VXBkYXRlVmVyc2lvblRpcHMoKTtcbiAgICB9XG5cbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcbiAgICAgICAgTGF5ZXJNZ3IuSW5zLmluaXRMYXllcihMYXlhLnN0YWdlLCBHYW1lQ29uZmlnLndpZHRoLCBHYW1lQ29uZmlnLmhlaWdodCk7XG4gICAgICAgIHRoaXMuc2NhbGUoTGF5ZXJNZ3IuYWRhcHRTY2FsZVgsIExheWVyTWdyLmFkYXB0U2NhbGVZKTtcbiAgICAgICAgVmlld1JlZ2lzdGVyTWdyLklucy5pbml0UmVnaXN0ZXJWaWV3KCk7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICB0aGlzLmluaXRVc2VyRGF0YSgpO1xuICAgICAgICB0aGlzLmhhdmVTdG9yZUhlcm8oKTtcbiAgICAgICAgdGhpcy5zaG93U3VycGFzc1ZpZXcoKTtcbiAgICAgICAgdGhpcy5pbml0U3lzdGVtQnRuKCk7XG4gICAgICAgIHRoaXMuaW5pdFJlZFBvaW50KCk7XG4gICAgICAgIHRoaXMuYWRkRXZlbnRzKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLl9jb250cm9sID0gSGFsbENvbnRyb2wuSW5zO1xuICAgICAgICB0aGlzLl9jb250cm9sLmhhbGxTY2VuZSA9IHRoaXM7XG4gICAgICAgIHRoaXMubGlzdHNfaGVhZC52U2Nyb2xsQmFyU2tpbiA9IFwiXCI7XG4gICAgICAgIHRoaXMubGlzdHNfaGVhZC5hcnJheSA9IHRoaXMuX2NvbnRyb2wuTW9kZWwuQWxsSGVyb3M7XG4gICAgICAgIHRoaXMubGlzdHNfaGVhZC5yZW5kZXJIYW5kbGVyID0gTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uTGlzdFJlbmRlciwgbnVsbCwgZmFsc2UpO1xuICAgICAgICB0aGlzLmZvcmVncm91bmRUd28ueCA9IHRoaXMuX2NvbnRyb2wuTW9kZWwuZm9yZWdyb3VuZFdpZHRoO1xuICAgICAgICB0aGlzLmZhcmdyb3VuZFR3by54ID0gdGhpcy5fY29udHJvbC5Nb2RlbC5mYXJncm91bmRXaWR0aDtcbiAgICAgICAgdGhpcy5saXN0X2J0bi5yZW5kZXJIYW5kbGVyID0gTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uUmVuZGVyU3lzdGVtLCBudWxsLCBmYWxzZSk7XG4gICAgICAgIFNvdW5kTWdyLklucy5wbGF5QmcoU291bmRUeXBlLkJHX01VU0lDKTtcbiAgICB9XG5cbiAgICAvKiog5Yid5aeL5YyW55So5oi35pWw5o2uICovXG4gICAgcHJpdmF0ZSBpbml0VXNlckRhdGEoKTogdm9pZCB7XG4gICAgICAgIGlmIChQbGF5ZXJNZ3IuSW5zLkluZm8ud3hVc2VySW5mbykge1xuICAgICAgICAgICAgdGhpcy5pbWdIZWFkLnNraW4gPSBQbGF5ZXJNZ3IuSW5zLkluZm8ud3hVc2VySW5mby5hdmF0YXJVcmw7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fY29udHJvbC5zZXRVc2VyTGV2ZWwoUGxheWVyTWdyLklucy5JbmZvLnVzZXJMZXZlbCk7Ly/nlKjmiLfnrYnnuqdcbiAgICAgICAgdGhpcy5fY29udHJvbC5zZXRVc2VyRXhwKFBsYXllck1nci5JbnMuSW5mby51c2VyRXhwKTsvL+eUqOaIt+e7j+mqjFxuICAgICAgICBFdmVudHNNZ3IuSW5zLmRpc3BhdGNoKEV2ZW50VHlwZS5VUERBVEVfSU5DT01FLCBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckluY29tZVNlYyk7Ly/nlKjmiLfmr4/np5Llj6/ojrflvpfnmoTph5HluIFcbiAgICAgICAgdGhpcy5fY29udHJvbC51cGRhdGVHb2xkKFBsYXllck1nci5JbnMuSW5mby51c2VyR29sZCk7XG4gICAgICAgIEV2ZW50c01nci5JbnMuZGlzcGF0Y2goRXZlbnRUeXBlLlVQREFURV9DVVJSRU5DWSwgUGxheWVySW5mby5ESUFNT05ELCBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckRpYW1vbmQpOy8v5pu05paw55So5oi36I635b6X6ZK755+zXG4gICAgICAgIHRoaXMudXBkYXRlUmVjcnVpdERhdGEoKTtcbiAgICAgICAgdGhpcy5mcmFtZUxvb3AoMSwgdGhpcywgdGhpcy5vblVwZGF0ZUJhdHRsZVZpZXcpO1xuICAgICAgICBTdG9yYWdlVXRpbC5yZXF1ZXN0T2ZmbGluZVByaXplRGF0YSgpO1xuICAgICAgICB0aGlzLl9jb250cm9sLnVwZGF0ZU1hcERhdGEoKTtcbiAgICAgICAgR3VpZGVNZ3IuSW5zLnNldHVwKCk7XG4gICAgfVxuXG4gICAgLyoqIOWIneWni+WMlue6oueCuSAqL1xuICAgIHByaXZhdGUgaW5pdFJlZFBvaW50KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmltZ0ZyZWUudmlzaWJsZSA9IFJlZFBvaW50TWdyLklucy5pc1Nob3dTaG9wUmVkUG9pbnQ7XG4gICAgfVxuXG4gICAgLyoqIOWIneWni+WMluWKn+iDveaMiemSriAqL1xuICAgIHByaXZhdGUgaW5pdFN5c3RlbUJ0bigpOiB2b2lkIHtcbiAgICAgICAgbGV0IGRhdGFzID0gdGhpcy5fY29udHJvbC5nZXRTeXN0ZW1CdG5MaXN0KCk7XG4gICAgICAgIGlmIChkYXRhcyAmJiBkYXRhcy5sZW5ndGggPiAwICYmICh0aGlzLmxpc3RfYnRuLmFycmF5ID09IG51bGwgfHwgZGF0YXMubGVuZ3RoID4gdGhpcy5saXN0X2J0bi5hcnJheS5sZW5ndGgpKSB7XG4gICAgICAgICAgICB0aGlzLmxpc3RfYnRuLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5saXN0X2J0bi5hcnJheSA9IGRhdGFzO1xuICAgICAgICAgICAgUmVkUG9pbnRNZ3IuSW5zLnVwZGF0ZVJlZFBvaW50KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGFkZEV2ZW50cygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5idG5fcmVjcnVpdC5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uQ2xpY2tCdG5IYW5kbGVyKTtcbiAgICAgICAgdGhpcy5idG5fYWNjLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25DbGlja0J0bkhhbmRsZXIpO1xuICAgICAgICB0aGlzLmJ0bl9zaG9wLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25DbGlja0J0bkhhbmRsZXIpO1xuICAgICAgICB0aGlzLmJ0bl9oZXJvU3RvcmUub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkNsaWNrQnRuSGFuZGxlcik7XG4gICAgICAgIHRoaXMubGlzdHNfaGVhZC5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMub25IZXJvU2VsZWN0KTtcblxuICAgICAgICBFdmVudHNNZ3IuSW5zLmFkZExpc3RlbmVyKEV2ZW50VHlwZS5IRVJPX0JPWCwgdGhpcy5vblNob3dIZXJvQm94LCB0aGlzKTtcbiAgICAgICAgRXZlbnRzTWdyLklucy5hZGRMaXN0ZW5lcihFdmVudFR5cGUuR0FNRV9BQ0NFX1NUQVJULCB0aGlzLm9uR2FtZUFjY2UsIHRoaXMpO1xuICAgICAgICBFdmVudHNNZ3IuSW5zLmFkZExpc3RlbmVyKEV2ZW50VHlwZS5TSE9XX09GRkxJTkVfUkVXQVJELCB0aGlzLm9uT2ZmTGluZVJld2FyZCwgdGhpcyk7XG4gICAgICAgIEV2ZW50c01nci5JbnMuYWRkTGlzdGVuZXIoRXZlbnRUeXBlLlVQREFURV9TWVNURU1fQlROLCB0aGlzLm9uVXBkYXRlU3lzdGVtQnRuLCB0aGlzKTtcbiAgICAgICAgRXZlbnRzTWdyLklucy5hZGRMaXN0ZW5lcihFdmVudFR5cGUuT1BFTl9WSUVXLCB0aGlzLm9uT3BlblN5c3RlbVZpZXcsIHRoaXMpO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25PcGVuU3lzdGVtVmlldyhpZDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHN3aXRjaCAoaWQpIHtcbiAgICAgICAgICAgIGNhc2UgU3lzdGVtQ29uZmlnLlNJR046XG4gICAgICAgICAgICAgICAgVmlld01nci5JbnMub3BlbihWaWV3Q29uc3QuRGF5U2lnblZpZXcpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBTeXN0ZW1Db25maWcuUkFOSzpcbiAgICAgICAgICAgICAgICBWaWV3TWdyLklucy5vcGVuKFZpZXdDb25zdC5SYW5rVmlldyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFN5c3RlbUNvbmZpZy5MVUNLX1BSSVpFOlxuICAgICAgICAgICAgICAgIFZpZXdNZ3IuSW5zLm9wZW4oVmlld0NvbnN0Lkx1Y2tQcml6ZVZpZXcpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBTeXN0ZW1Db25maWcuVEFTSzpcbiAgICAgICAgICAgICAgICBWaWV3TWdyLklucy5vcGVuKFZpZXdDb25zdC5UYXNrVmlldyk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFN5c3RlbUNvbmZpZy5JTlZJVEU6XG5cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgU3lzdGVtQ29uZmlnLkZPTExPVzpcbiAgICAgICAgICAgICAgICBWaWV3TWdyLklucy5vcGVuKFZpZXdDb25zdC5Gb2xsb3dWaWV3KTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgU3lzdGVtQ29uZmlnLkZFRURCQUNLOlxuXG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIG9uQ2xpY2tCdG5IYW5kbGVyKGU6IExheWEuRXZlbnQpOiB2b2lkIHtcbiAgICAgICAgaWYgKGUudGFyZ2V0IGluc3RhbmNlb2YgTGF5YS5CdXR0b24pIHtcbiAgICAgICAgICAgIHN3aXRjaCAoZS50YXJnZXQpIHtcbiAgICAgICAgICAgICAgICBjYXNlIHRoaXMuYnRuX3JlY3J1aXQ6Ly/mi5vli5/oi7Hpm4RcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNydWl0SGVybygpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIHRoaXMuYnRuX2FjYzovL+WKoOmAn1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9wZW5HYW1lQWNjKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgdGhpcy5idG5fc2hvcDovL+WVhuW6l1xuICAgICAgICAgICAgICAgICAgICBWaWV3TWdyLklucy5vcGVuKFZpZXdDb25zdC5TaG9wVmlldyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgdGhpcy5idG5faGVyb1N0b3JlOi8v6Iux6ZuE5L+d5a2Y566xXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucG9wSGVyb1N0b3JlKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOaLm+WLn+iLsembhCAqL1xuICAgIHByaXZhdGUgcmVjcnVpdEhlcm8oKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX2N1cnJCdXlIZXJvSW5mbyA9IHRoaXMuX2NvbnRyb2wuTW9kZWwuZ2V0UmVjcnVpdEhlcm9EYXRhKCk7XG4gICAgICAgIGlmICh0aGlzLl9jdXJyQnV5SGVyb0luZm8pIHtcbiAgICAgICAgICAgIHRoaXMuX2NvbnRyb2wuYnV5SGVybyh0aGlzLl9jdXJyQnV5SGVyb0luZm8pO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVSZWNydWl0RGF0YSh0aGlzLl9jdXJyQnV5SGVyb0luZm8pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOabtOaWsOaLm+WLn+iLsembhOaVsOaNriAqL1xuICAgIHB1YmxpYyB1cGRhdGVSZWNydWl0RGF0YShidXlIZXJvSW5mbzogSGVyb0NvbmZpZ1ZPID0gbnVsbCk6IHZvaWQge1xuICAgICAgICBpZiAoYnV5SGVyb0luZm8pIHtcbiAgICAgICAgICAgIHRoaXMuX2N1cnJCdXlIZXJvSW5mbyA9IGJ1eUhlcm9JbmZvO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fY3VyckJ1eUhlcm9JbmZvID0gdGhpcy5fY29udHJvbC5Nb2RlbC5nZXRSZWNydWl0SGVyb0RhdGEoKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgYnV5UHJpY2U6IG51bWJlciA9IHRoaXMuX2NvbnRyb2wuTW9kZWwuZ2V0SGVyb0J1eVByaWNlKHRoaXMuX2N1cnJCdXlIZXJvSW5mby5idXlQcmljZSwgdGhpcy5fY29udHJvbC5Nb2RlbC5xdWVyeUJ1eUhlcm9SZWNvcmQodGhpcy5fY3VyckJ1eUhlcm9JbmZvLmlkKSk7XG4gICAgICAgIHRoaXMudHh0X3ByaWNlLnRleHQgPSBNYXRoVXRpbC51bml0Q29udmVyc2lvbihidXlQcmljZSk7XG4gICAgICAgIGlmIChQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckdvbGQgPCBidXlQcmljZSkge1xuICAgICAgICAgICAgdGhpcy50eHRfcHJpY2UuY29sb3IgPSBcIiNGRjAwMDBcIjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudHh0X3ByaWNlLmNvbG9yID0gXCIjRkZGMUJBXCI7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50eHRfbGV2ZWwudGV4dCA9IFwiTHYuXCIgKyB0aGlzLl9jdXJyQnV5SGVyb0luZm8uaWQ7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkhlcm9TZWxlY3QoZTogTGF5YS5FdmVudCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5fY29weUhlYWRJdGVtKSByZXR1cm47XG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLl9jb250cm9sLk1vZGVsLmFsbEhlcm9Db3VudDsgaW5kZXgrKykge1xuICAgICAgICAgICAgbGV0IGNlbGwgPSB0aGlzLmxpc3RzX2hlYWQuZ2V0Q2VsbChpbmRleCk7XG4gICAgICAgICAgICBpZiAoY2VsbCkge1xuICAgICAgICAgICAgICAgIGxldCBoZWFkSXRlbTogSGVhZEl0ZW0gPSBjZWxsLmdldENoaWxkQnlOYW1lKFwiaGVyb1wiKSBhcyBIZWFkSXRlbTtcbiAgICAgICAgICAgICAgICBpZiAoaGVhZEl0ZW0gJiYgaGVhZEl0ZW0uSXNCYXR0bGUgJiYgIWhlYWRJdGVtLklzQm94ICYmIHRoaXMuX2NvbnRyb2wuaXNIaXQoaGVhZEl0ZW0pKSB7XG4gICAgICAgICAgICAgICAgICAgIGhlYWRJdGVtLnNldFN0YWdlKDIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jdXJySGVhZEl0ZW0gPSBoZWFkSXRlbTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VyckhlYWRJdGVtLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29weUhlYWRJdGVtID0gTGF5YS5Qb29sLmdldEl0ZW1CeUNsYXNzKFwiY29weUhlYWRJdGVtXCIsIEhlYWRJdGVtKTsvLyBuZXcgSGVhZEl0ZW0oKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29weUhlYWRJdGVtLnVwZGF0ZUhlYWRTa2luKGhlYWRJdGVtLkluZm8uaGVyb0lkLCBpbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvcHlIZWFkSXRlbS5waXZvdCgxMjYgLyAyLCAxMjcgLyAyKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29weUhlYWRJdGVtLnpPcmRlciA9IDk5OTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRDaGlsZCh0aGlzLl9jb3B5SGVhZEl0ZW0pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dIZXJvVGlwcygpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb3B5SGVhZEl0ZW0ucG9zKHRoaXMubW91c2VYLCB0aGlzLm1vdXNlWSk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaW1nRGVsZXRlLmFscGhhID0gMS4wO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9uKExheWEuRXZlbnQuTU9VU0VfTU9WRSwgdGhpcywgdGhpcy5vbk1vdXNlSGVhZEl0ZW1Nb3ZlKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vbihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCB0aGlzLm9uTW91c2VIZWFkSXRlbVVwKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbk1vdXNlSGVhZEl0ZW1Nb3ZlKGU6IExheWEuRXZlbnQpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuX2NvcHlIZWFkSXRlbSkge1xuICAgICAgICAgICAgdGhpcy5fY29weUhlYWRJdGVtLnBvcyh0aGlzLm1vdXNlWCwgdGhpcy5tb3VzZVkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbk1vdXNlSGVhZEl0ZW1VcChlOiBMYXlhLkV2ZW50KTogdm9pZCB7XG4gICAgICAgIHRoaXMuaW1nRGVsZXRlLmFscGhhID0gMC41O1xuICAgICAgICBpZiAodGhpcy5fY29weUhlYWRJdGVtKSB7XG4gICAgICAgICAgICB0aGlzLm9mZihMYXlhLkV2ZW50Lk1PVVNFX01PVkUsIHRoaXMsIHRoaXMub25Nb3VzZUhlYWRJdGVtTW92ZSk7XG4gICAgICAgICAgICB0aGlzLm9mZihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCB0aGlzLm9uTW91c2VIZWFkSXRlbVVwKTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jb250cm9sLmlzSGl0KHRoaXMuaW1nRGVsZXRlKSkgey8v5Ye65ZSu6Iux6ZuEXG4gICAgICAgICAgICAgICAgbGV0IHNlbGxQcmljZTogbnVtYmVyID0gdGhpcy5fY3VyckhlYWRJdGVtLmdldFNlbGxQcmljZSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJIZWFkSXRlbS5yZXNldCgpO1xuICAgICAgICAgICAgICAgIEVmZmVjdFV0aWwucGxheUNvaW5FZmZlY3QodGhpcy5pbWdEZWxldGUsICdpbWFnZXMvY29tbW9uL3N0YXIyLnBuZycpO1xuICAgICAgICAgICAgICAgIEVmZmVjdFV0aWwucGxheVRleHRFZmZlY3QodGhpcy5pbWdEZWxldGUsIFwi6YeR5biBK1wiICsgTWF0aFV0aWwudW5pdENvbnZlcnNpb24oc2VsbFByaWNlKSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fY29udHJvbC51cGRhdGVHb2xkKFBsYXllck1nci5JbnMuSW5mby51c2VyR29sZCArIHNlbGxQcmljZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fY29udHJvbC5zZXRTYXZlSGVyb0RhdGEodGhpcy5fY3VyckhlYWRJdGVtKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9jb250cm9sLnNldEJhdHRsZUhlcm9Db3VudChQbGF5ZXJNZ3IuSW5zLkluZm8udXNlclJ1bmNhckNvdW50IC0gMSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJIZWFkSXRlbS5zZXRTdGFnZSgxKTtcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5fY29udHJvbC5Nb2RlbC5hbGxIZXJvQ291bnQ7IGluZGV4KyspIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNlbGwgPSB0aGlzLmxpc3RzX2hlYWQuZ2V0Q2VsbChpbmRleCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjZWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgaGVhZEl0ZW06IEhlYWRJdGVtID0gY2VsbC5nZXRDaGlsZEJ5TmFtZShcImhlcm9cIikgYXMgSGVhZEl0ZW07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaGVhZEl0ZW0gJiYgdGhpcy5fY29udHJvbC5pc0hpdChoZWFkSXRlbSkgJiYgaGVhZEl0ZW0gIT0gdGhpcy5fY3VyckhlYWRJdGVtICYmICFoZWFkSXRlbS5Jc0JveCAmJiAhaGVhZEl0ZW0uSXNMb2NrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGhlcm9JZDogbnVtYmVyID0gaGVhZEl0ZW0uSW5mby5oZXJvSWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhlcm9JZCA9PSB0aGlzLl9jdXJySGVhZEl0ZW0uSW5mby5oZXJvSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhlcm9JZCA+PSB0aGlzLl9jb250cm9sLk1vZGVsLmhlcm9NYXhMZXZlbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5bey6L6+5pyA6auY57qn77yBXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgeyAvL+WQiOW5tuiLsembhFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG5leHRMZXZlbDogbnVtYmVyID0gaGVyb0lkICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBleHA6IG51bWJlciA9IHRoaXMuX2NvbnRyb2wuZ2V0SGVyb0V4cChoZXJvSWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZEl0ZW0udXBkYXRlSGVhZFNraW4obmV4dExldmVsLCBpbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkSXRlbS5yZW1vdmVCYXR0bGVIZXJvKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgc3RhcnRQb3MgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeDogNTAgKyB0aGlzLndpZHRoICogMC41ICogTWF0aC5yYW5kb20oKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5OiB0aGlzLmJlZ2luRXZlbnRWaWV3LnkgLSAxNTAgKyAodGhpcy5iZWdpbkV2ZW50Vmlldy5oZWlnaHQgLSAzMCkgLyB0aGlzLmxpc3RzX2hlYWQuYXJyYXkubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZEl0ZW0uY3JlYXRlQmF0dGxlSGVybyh0aGlzLCBzdGFydFBvcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFZmZlY3RVdGlsLnBsYXlCb25lRWZmZWN0KFwidWlfYm9yblwiLCB7IHg6IHN0YXJ0UG9zLnggLSAyMCwgeTogc3RhcnRQb3MueSArIDIwMCB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJIZWFkSXRlbS5yZXNldCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/lkIjlubbmlYjmnpxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVmZmVjdFV0aWwucGxheUhlcm9NZXJnZUVmZmVjdCh0aGlzLCBoZXJvSWQsIGhlYWRJdGVtKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v5pu05paw6Iux6ZuE562J57qnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fY29udHJvbC51cGRhdGVIZXJvTGV2ZWwobmV4dExldmVsKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFZpZXdNZ3IuSW5zLm9wZW4oVmlld0NvbnN0Lk5ld0hlcm9WaWV3LCBudWxsLCBuZXh0TGV2ZWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNvdW5kTWdyLklucy5wbGF5RWZmZWN0KFNvdW5kVHlwZS5VTkxPQ0spO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTb3VuZE1nci5JbnMucGxheUVmZmVjdChTb3VuZFR5cGUuTUFLRV9IRVJPKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChleHAgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udHJvbC5zZXRVc2VyRXhwKFBsYXllck1nci5JbnMuSW5mby51c2VyRXhwICsgZXhwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgaGVhZEl0ZW1Qb3MgPSBoZWFkSXRlbS5sb2NhbFRvR2xvYmFsKG5ldyBMYXlhLlBvaW50KDAsIDApKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgcG9zOiB7IHg6IG51bWJlciwgeTogbnVtYmVyIH0gPSB7IHg6IGhlYWRJdGVtUG9zLnggKyBoZWFkSXRlbS53aWR0aCAqIDAuNSwgeTogaGVhZEl0ZW1Qb3MueSArIDIgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFZmZlY3RVdGlsLnBsYXlUZXh0RWZmZWN0KHRoaXMsIFwiRXhwK1wiICsgZXhwLCBwb3MpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRJdGVtUG9zID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlUmVjcnVpdERhdGEoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRyb2wucmVmcmVzaEluY29tZVNlYygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udHJvbC5zZXRTYXZlSGVyb0RhdGEoaGVhZEl0ZW0sIHRoaXMuX2N1cnJIZWFkSXRlbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+WIt+aWsOaImOaWl+iLsembhOeahOaVsOmHj1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udHJvbC5zZXRCYXR0bGVIZXJvQ291bnQoUGxheWVyTWdyLklucy5JbmZvLnVzZXJSdW5jYXJDb3VudCAtIDEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdERhaWx5VGFza0RhdGEoMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHdWlkZU1nci5JbnMub25OZXh0U3RlcCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsgICAgLy/kuqTmjaJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGlzRW1wdHk6IGJvb2xlYW4gPSBoZWFkSXRlbS5Jc0VtcHR5O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkSXRlbS51cGRhdGVIZWFkU2tpbih0aGlzLl9jdXJySGVhZEl0ZW0uSW5mby5oZXJvSWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkSXRlbS5zZXRTdGFnZSh0aGlzLl9jdXJySGVhZEl0ZW0uSGVyb1N0YWdlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzRW1wdHkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRyb2wuY3JlYXRlSGVyb0JvbmUoaGVhZEl0ZW0sIHsgeDogdGhpcy5fY3VyckhlYWRJdGVtLkJhdHRsZUhlcm8ueCwgeTogdGhpcy5fY3VyckhlYWRJdGVtLkJhdHRsZUhlcm8ueSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJIZWFkSXRlbS5yZXNldCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VyckhlYWRJdGVtLnVwZGF0ZUhlYWRTa2luKGhlcm9JZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgb2xkQmF0dGxlSGVybyA9IHRoaXMuX2N1cnJIZWFkSXRlbS5CYXR0bGVIZXJvO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VyckhlYWRJdGVtLkJhdHRsZUhlcm8gPSBoZWFkSXRlbS5CYXR0bGVIZXJvO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZEl0ZW0uQmF0dGxlSGVybyA9IG9sZEJhdHRsZUhlcm87XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udHJvbC5zZXRTYXZlSGVyb0RhdGEoaGVhZEl0ZW0sIHRoaXMuX2N1cnJIZWFkSXRlbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNvdW5kTWdyLklucy5wbGF5RWZmZWN0KFNvdW5kVHlwZS5EUkFXX0hFUk8pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMucmVtb3ZlSGVyb1RpcHMoKTtcbiAgICAgICAgICAgIHRoaXMuX2N1cnJIZWFkSXRlbS52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuX2NvcHlIZWFkSXRlbS5yZW1vdmVTZWxmKCk7XG4gICAgICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcihcImNvcHlIZWFkSXRlbVwiLCB0aGlzLl9jb3B5SGVhZEl0ZW0pO1xuICAgICAgICAgICAgdGhpcy5fY29weUhlYWRJdGVtID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDmm7TmlrDmiJjmlpfnlYzpnaIgKi9cbiAgICBwcml2YXRlIG9uVXBkYXRlQmF0dGxlVmlldygpOiB2b2lkIHtcbiAgICAgICAgbGV0IGlzUm9sbFZpZXc6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMuX2NvbnRyb2wuTW9kZWwuYWxsSGVyb0NvdW50OyBpbmRleCsrKSB7XG4gICAgICAgICAgICBsZXQgY2VsbCA9IHRoaXMubGlzdHNfaGVhZC5nZXRDZWxsKGluZGV4KTtcbiAgICAgICAgICAgIGlmIChjZWxsKSB7XG4gICAgICAgICAgICAgICAgbGV0IGhlYWRJdGVtOiBIZWFkSXRlbSA9IGNlbGwuZ2V0Q2hpbGRCeU5hbWUoXCJoZXJvXCIpIGFzIEhlYWRJdGVtO1xuICAgICAgICAgICAgICAgIGlmIChoZWFkSXRlbSAmJiBoZWFkSXRlbS5JbmZvLmhlcm9JZCA+IDAgJiYgIWhlYWRJdGVtLmlzRGllKSB7XG4gICAgICAgICAgICAgICAgICAgIGlzUm9sbFZpZXcgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBsZXQgYmF0dGxlSGVybzogSGVybyA9IGhlYWRJdGVtLkJhdHRsZUhlcm87XG4gICAgICAgICAgICAgICAgICAgIGlmIChiYXR0bGVIZXJvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fY29udHJvbC5Nb2RlbC5pc19yZXNldF96b3JkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYXR0bGVIZXJvLnpPcmRlciA9IE1hdGguZmxvb3IoYmF0dGxlSGVyby55KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5piv5ZCm5pS75Ye75bCx5L2NXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYmF0dGxlSGVyby5Jc0luUG9zaXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYmF0dGxlSGVyby5BdHRhY2tUYXJnZXQgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgcG9zWCA9IGJhdHRsZUhlcm8uT3JnaW5hbFggKyBiYXR0bGVIZXJvLkluY29tZVRpbWUgKiB0aGlzLl9jb250cm9sLk1vZGVsLnZpZXdSb2xsU3BlZXAgKyAzNDA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhdHRsZUhlcm8uY3JlYXRlQXR0YWNrVGFyZ2V0KGJhdHRsZUhlcm8ucGFyZW50LCBuZXcgTGF5YS5Qb2ludChwb3NYLCBiYXR0bGVIZXJvLnkpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYXR0bGVIZXJvLkF0dGFja1RhcmdldC54IC09IHRoaXMuX2NvbnRyb2wuTW9kZWwudmlld1JvbGxTcGVlcCAqIHRoaXMuX2NvbnRyb2wuTW9kZWwudXNlckFjY2VWYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmF0dGxlSGVyby5yZWZyZXNoSW5jb21lVGltZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCB0eHRQb3M6IGFueSA9IHsgeDogYmF0dGxlSGVyby54LCB5OiBiYXR0bGVIZXJvLnkgLSAzMCB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v56e76Zmk5pS75Ye75a+56LGhXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBhdHRhY2tTcCA9IGJhdHRsZUhlcm8uQXR0YWNrVGFyZ2V0IGFzIEhlcm87XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhdHRhY2tTcCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVhZEl0ZW0udXBkYXRlSHAoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR4dFBvcyA9IHsgeDogYXR0YWNrU3AueCAtIDUwLCB5OiBhdHRhY2tTcC55ICsgNTAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmF0dGxlSGVyby5yZW1vdmVBdHRhY2tUYXJnZXQodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IG9idGFpbk1vbmV5OiBudW1iZXIgPSB0aGlzLl9jb250cm9sLmdldEhlcm9JbmNvbWVUb3RhbEdvbGQoaGVhZEl0ZW0uSW5mby5oZXJvSWQpICogUGxheWVyTWdyLklucy5JbmZvLnVzZXJFeHRyYUluY29tZSAqIFBsYXllck1nci5JbnMuSW5mby51c2VyTGV2ZWxFeHRyYUluY29tZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/po5jmlbDlrZdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRWZmZWN0VXRpbC5wbGF5SW1hZ2VUZXh0RWZmZWN0KHRoaXMsIFwiaW1hZ2VzL2NvbW1vbi9jb2luLnBuZ1wiLCBcIitcIiArIE1hdGhVdGlsLnVuaXRDb252ZXJzaW9uKG9idGFpbk1vbmV5KSwgdHh0UG9zLCAxMDAwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udHJvbC51cGRhdGVHb2xkKFBsYXllck1nci5JbnMuSW5mby51c2VyR29sZCArIG9idGFpbk1vbmV5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmRvUm9sbFZpZXcoaXNSb2xsVmlldyk7XG4gICAgfVxuXG4gICAgLyoqIOa7muWKqOWxj+W5lSAqL1xuICAgIHByaXZhdGUgZG9Sb2xsVmlldyhpc1JvbGxWaWV3OiBib29sZWFuKTogdm9pZCB7XG4gICAgICAgIGlmIChpc1JvbGxWaWV3KSB7XG4gICAgICAgICAgICAvL+WJjeaZr+Wxj+W5lVxuICAgICAgICAgICAgdGhpcy5ib3hfZm9yZWdyb3VuZC54IC09IHRoaXMuX2NvbnRyb2wuTW9kZWwudmlld1JvbGxTcGVlcCAqIHRoaXMuX2NvbnRyb2wuTW9kZWwudXNlckFjY2VWYWx1ZTtcbiAgICAgICAgICAgIGxldCBwYWdlSW5kZXg6IG51bWJlciA9IE1hdGguZmxvb3IoLXRoaXMuYm94X2ZvcmVncm91bmQueCAvIHRoaXMuX2NvbnRyb2wuTW9kZWwuZm9yZWdyb3VuZFdpZHRoKTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jb250cm9sLk1vZGVsLmZvcmVncm91bmRJbmRleCAhPSBwYWdlSW5kZXgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jb250cm9sLk1vZGVsLmZvcmVncm91bmRJbmRleCA9IHBhZ2VJbmRleDtcbiAgICAgICAgICAgICAgICB0aGlzLnZpZXdNb3ZlSGFuZGxlcih0aGlzLmZvcmVncm91bmRPbmUsIHRoaXMuZm9yZWdyb3VuZFR3bywgdGhpcy5fY29udHJvbC5Nb2RlbC5mb3JlZ3JvdW5kV2lkdGgsIHBhZ2VJbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL+i/nOaZr+Wxj+W5lVxuICAgICAgICAgICAgdGhpcy5ib3hfZmFyZ3JvdW5kLnggLT0gdGhpcy5fY29udHJvbC5Nb2RlbC52aWV3Um9sbFNwZWVwICogdGhpcy5fY29udHJvbC5Nb2RlbC51c2VyQWNjZVZhbHVlICogMC41O1xuICAgICAgICAgICAgbGV0IGZhclBhZ2VJbmRleDogbnVtYmVyID0gTWF0aC5mbG9vcigtdGhpcy5ib3hfZmFyZ3JvdW5kLnggLyB0aGlzLl9jb250cm9sLk1vZGVsLmZhcmdyb3VuZFdpZHRoKTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jb250cm9sLk1vZGVsLmZhcmdyb3VuZEluZGV4ICE9IGZhclBhZ2VJbmRleCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NvbnRyb2wuTW9kZWwuZmFyZ3JvdW5kSW5kZXggPSBmYXJQYWdlSW5kZXg7XG4gICAgICAgICAgICAgICAgdGhpcy52aWV3TW92ZUhhbmRsZXIodGhpcy5mYXJncm91bmRPbmUsIHRoaXMuZmFyZ3JvdW5kVHdvLCB0aGlzLl9jb250cm9sLk1vZGVsLmZhcmdyb3VuZFdpZHRoLCBmYXJQYWdlSW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy/mnIDliY3mma/lsY/luZVcbiAgICAgICAgICAgIHRoaXMuYm94X29ic3RhY2xlLnggLT0gdGhpcy5fY29udHJvbC5Nb2RlbC52aWV3Um9sbFNwZWVwICogdGhpcy5fY29udHJvbC5Nb2RlbC51c2VyQWNjZVZhbHVlICogMS4yO1xuICAgICAgICAgICAgbGV0IG9ic3RhY2xlUGFnZUluZGV4OiBudW1iZXIgPSBNYXRoLmZsb29yKC10aGlzLmJveF9vYnN0YWNsZS54IC8gdGhpcy5fY29udHJvbC5Nb2RlbC50b3BGb3JlZ3JvdW5kV2lkdGgpO1xuICAgICAgICAgICAgaWYgKHRoaXMuX2NvbnRyb2wuTW9kZWwudG9wRm9yZWdyb3VuZEluZGV4ICE9IG9ic3RhY2xlUGFnZUluZGV4KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fY29udHJvbC5Nb2RlbC50b3BGb3JlZ3JvdW5kSW5kZXggPSBvYnN0YWNsZVBhZ2VJbmRleFxuICAgICAgICAgICAgICAgIHRoaXMudmlld01vdmVIYW5kbGVyKHRoaXMub2JzdGFjbGVPbmUsIHRoaXMub2JzdGFjbGVUd28sIHRoaXMuX2NvbnRyb2wuTW9kZWwudG9wRm9yZWdyb3VuZFdpZHRoLCBvYnN0YWNsZVBhZ2VJbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIHZpZXdNb3ZlSGFuZGxlcihyb2xsVmlld09uZTogYW55LCByb2xsVmlld1R3bzogYW55LCB3aWR0aDogbnVtYmVyLCBwYWdlSW5kZXg6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5fY29udHJvbC5Nb2RlbC52aWV3Um9sbFNwZWVwID4gMCkge1xuICAgICAgICAgICAgLy/lt6bnp7tcbiAgICAgICAgICAgIGlmIChwYWdlSW5kZXggJSAyID09IDApIHtcbiAgICAgICAgICAgICAgICByb2xsVmlld1R3by54ID0gd2lkdGggKiAocGFnZUluZGV4ICsgMSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJvbGxWaWV3T25lLnggPSB3aWR0aCAqIChwYWdlSW5kZXggKyAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8v5Y+z56e7XG4gICAgICAgICAgICBpZiAocGFnZUluZGV4ICUgMiA9PSAwKSB7XG4gICAgICAgICAgICAgICAgcm9sbFZpZXdPbmUueCA9IHdpZHRoICogcGFnZUluZGV4O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByb2xsVmlld1R3by54ID0gd2lkdGggKiBwYWdlSW5kZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIG9uTGlzdFJlbmRlcihjZWxsOiBMYXlhLkJveCwgaW5kZXg6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBpZiAoaW5kZXggPiB0aGlzLmxpc3RzX2hlYWQuYXJyYXkubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGhlYWRJdGVtOiBIZWFkSXRlbSA9IGNlbGwuZ2V0Q2hpbGRCeU5hbWUoXCJoZXJvXCIpIGFzIEhlYWRJdGVtO1xuICAgICAgICBpZiAoaGVhZEl0ZW0pIHtcbiAgICAgICAgICAgIGxldCBpbmZvID0gdGhpcy5saXN0c19oZWFkLmFycmF5W2luZGV4XTtcbiAgICAgICAgICAgIGhlYWRJdGVtLmRhdGFTb3VyY2UgPSBpbmZvO1xuICAgICAgICAgICAgaWYgKGluZm8uaGVyb0lkID4gMCkge1xuICAgICAgICAgICAgICAgIExheWEudGltZXIuZnJhbWVPbmNlKGluZGV4ICsgKE1hdGgucmFuZG9tKCkgKiA0NSksIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fYmF0dGxlSGVyb0luZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgIGxldCBzdGFydFBvcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHg6IE1hdGhVdGlsLnJhbmdlSW50KDEwLCA1MCkgKyB0aGlzLndpZHRoICogMC41ICogTWF0aC5yYW5kb20oKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHk6IHRoaXMuYmVnaW5FdmVudFZpZXcueSArIE1hdGhVdGlsLnJhbmdlSW50KC0xNTAsIDIwMCkvLy0gMTUwICsgKHRoaXMuYmVnaW5FdmVudFZpZXcuaGVpZ2h0IC0gMzApIC8gKHRoaXMubGlzdHNfaGVhZC5hcnJheS5sZW5ndGgpICogdGhpcy5fYmF0dGxlSGVyb0luZGV4XG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIEVmZmVjdFV0aWwucGxheUJvbmVFZmZlY3QoXCJ1aV9ib3JuXCIsIHsgeDogc3RhcnRQb3MueCAtIDIwLCB5OiBzdGFydFBvcy55ICsgMjAwIH0pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnRpbWVyT25jZSgxMDAsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRJdGVtLmNyZWF0ZUJhdHRsZUhlcm8odGhpcywgc3RhcnRQb3MpOyAvL+axvei9puaUvuWFpei3kemBk1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVhZEl0ZW0uc2V0U3RhZ2UoMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9jb250cm9sLk1vZGVsLmlzX3Jlc2V0X3pvcmRlciA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL+WIt+aWsOaImOaWl+iLsembhOeahOaVsOmHj1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29udHJvbC5zZXRCYXR0bGVIZXJvQ291bnQoUGxheWVyTWdyLklucy5JbmZvLnVzZXJSdW5jYXJDb3VudCArIDEpO1xuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOaJk+W8gOa4uOaIj+WKoOmAnyAqL1xuICAgIHByaXZhdGUgb3BlbkdhbWVBY2MoKTogdm9pZCB7XG4gICAgICAgIGxldCBzdGFnZSA9IFNoYXJlTWdyLklucy5zaG93U2hhcmVPckFkdigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnBsYXlBY2NFZmZlY3QoKTtcbiAgICAgICAgfSwgMTAsIGZhbHNlLCB0cnVlKTtcbiAgICB9XG5cbiAgICAvKiog5Yqg6YCf5pWI5p6cICovXG4gICAgcHJpdmF0ZSBwbGF5QWNjRWZmZWN0KF9hY2NlVGltZTogbnVtYmVyID0gOTAsIF9pc0VmZmVjdDogYm9vbGVhbiA9IHRydWUpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuX2NvbnRyb2wuTW9kZWwudXNlckFjY2VUaW1lID4gMSkge1xuICAgICAgICAgICAgdGhpcy5fY29udHJvbC5Nb2RlbC51c2VyQWNjZVRpbWUgKz0gX2FjY2VUaW1lO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYnRuX2FjYy5tb3VzZUVuYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pbWdBY2NlLnZpc2libGUgPSB0cnVlO1xuICAgICAgICB0aGlzLl9jb250cm9sLk1vZGVsLnVzZXJBY2NlVGltZSArPSBfYWNjZVRpbWU7XG4gICAgICAgIGlmIChfaXNFZmZlY3QpIHtcbiAgICAgICAgICAgIEVmZmVjdFV0aWwucGxheUFjY0VmZmVjdCh0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9jb250cm9sLnNldEJhdHRsZUhlcm9BY2NlKDIpO1xuICAgICAgICB0aGlzLnJlZnJlc2hBY2NlVGltZSgpO1xuICAgICAgICB0aGlzLnRpbWVyTG9vcCgxMDAwLCB0aGlzLCB0aGlzLnJlZnJlc2hBY2NlVGltZSk7XG4gICAgICAgIFNvdW5kTWdyLklucy5wbGF5RWZmZWN0KFNvdW5kVHlwZS5HQU1FX0FDQ0UpO1xuICAgIH1cblxuICAgIC8qKiDliLfmlrDliqDpgJ/ml7bpl7QgKi9cbiAgICBwcml2YXRlIHJlZnJlc2hBY2NlVGltZSgpOiB2b2lkIHtcbiAgICAgICAgbGV0IG1pbnV0ZSA9IE1hdGguZmxvb3IodGhpcy5fY29udHJvbC5Nb2RlbC51c2VyQWNjZVRpbWUgLyA2MCk7XG4gICAgICAgIGxldCBzZWMgPSB0aGlzLl9jb250cm9sLk1vZGVsLnVzZXJBY2NlVGltZSAlIDYwO1xuICAgICAgICB0aGlzLnR4dF9hY2NUaW1lcy50ZXh0ID0gKG1pbnV0ZSA8IDEwID8gKCcwJyArIG1pbnV0ZSkgOiBtaW51dGUpICsgJzonICsgKHNlYyA8IDEwID8gKCcwJyArIHNlYykgOiBzZWMpO1xuICAgICAgICBpZiAodGhpcy5fY29udHJvbC5Nb2RlbC51c2VyQWNjZVRpbWUgPiAwKSB7XG4gICAgICAgICAgICB0aGlzLl9jb250cm9sLk1vZGVsLnVzZXJBY2NlVGltZS0tO1xuICAgICAgICAgICAgU3RvcmFnZVV0aWwuc2F2ZUFjY2VMZWZ0VGltZSh0aGlzLl9jb250cm9sLk1vZGVsLnVzZXJBY2NlVGltZSk7XG4gICAgICAgICAgICBFZmZlY3RVdGlsLnBsYXlDb2luUmFpbkVmZmVjdChcImltYWdlcy9jb21tb24vY29pbi5wbmdcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9jb250cm9sLnNldEJhdHRsZUhlcm9BY2NlKDEpO1xuICAgICAgICAgICAgdGhpcy5jbGVhclRpbWVyKHRoaXMsIHRoaXMucmVmcmVzaEFjY2VUaW1lKTtcbiAgICAgICAgICAgIHRoaXMuaW1nQWNjZS52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmJ0bl9hY2MubW91c2VFbmFibGVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDmmL7npLroi7Hpm4Tkv53lrZjnrrEgKi9cbiAgICBwcml2YXRlIG9uU2hvd0hlcm9Cb3goKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYnRuX2hlcm9TdG9yZS52aXNpYmxlID0gdHJ1ZTtcbiAgICB9XG5cbiAgICAvKiog5Y+W5Ye66Iux6ZuE566x5Lit55qE6Iux6ZuEICovXG4gICAgcHJpdmF0ZSBwb3BIZXJvU3RvcmUoKTogdm9pZCB7XG4gICAgICAgIGxldCBoZXJvSWQ6IG51bWJlciA9IFN0b3JhZ2VVdGlsLnBvcEhlcm9TdG9yZSgpO1xuICAgICAgICBpZiAoaGVyb0lkID4gMCkge1xuICAgICAgICAgICAgbGV0IGhlcm86IEhlYWRJdGVtID0gdGhpcy5fY29udHJvbC5jcmVhdGVIZXJvKGhlcm9JZCk7XG4gICAgICAgICAgICBpZiAoaGVybykge1xuICAgICAgICAgICAgICAgIFN0b3JhZ2VVdGlsLnBvcEhlcm9TdG9yZSh0cnVlKTtcbiAgICAgICAgICAgICAgICB0aGlzLmhhdmVTdG9yZUhlcm8oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDmmK/lkKbmi6XmnInnvJPlrZjnmoToi7Hpm4QgKi9cbiAgICBwcml2YXRlIGhhdmVTdG9yZUhlcm8oKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYnRuX2hlcm9TdG9yZS52aXNpYmxlID0gU3RvcmFnZVV0aWwucG9wSGVyb1N0b3JlKCkgPiAwO1xuICAgIH1cblxuICAgIC8qKiDovaznm5jlpZblirHliqDpgJ8gKi9cbiAgICBwcml2YXRlIG9uR2FtZUFjY2UodGltZTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMucGxheUFjY0VmZmVjdCh0aW1lKTtcbiAgICB9XG5cbiAgICAvKiog56a757q/5aWW5YqxICovXG4gICAgcHJpdmF0ZSBvbk9mZkxpbmVSZXdhcmQoKTogdm9pZCB7XG4gICAgICAgIGxldCBvZmZsaW5lUHJpemU6IG51bWJlciA9IFN0b3JhZ2VVdGlsLm9mZmxpbmVQcml6ZSgpO1xuICAgICAgICBpZiAob2ZmbGluZVByaXplID4gMTAgKiA2MCAmJiBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckluY29tZVNlYyA+IDAgJiYgdGhpcy5fY29udHJvbC5Jc0d1aWRlID09IGZhbHNlKSB7XG4gICAgICAgICAgICAvLyAxKSDnprvnur8wLTjlsI/ml7bvvJoxMDAl5pS255uKXG4gICAgICAgICAgICAvLyAyKSA4LTI05bCP5pe277yaOOWwj+aXtjEwMCXmlLbnm4or77yIWC0477yJKjUwJeaUtuebilxuICAgICAgICAgICAgLy8gMykgMjTlsI/ml7bku6XkuIrvvJo45bCP5pe2MTAwJeaUtuebiisxNuWwj+aXtio1MCXmlLbnm4rvvIjmhI/mgJ3lsLHmmK/otoXlh7oyNOWwj+aXtuWQjueahOmDqOWIhuS4jeiuoeeul+aUtuebiu+8iVxuICAgICAgICAgICAgLy8gMjAxODA3MjYt56a757q/5aWW5Yqx6KeE5YiZ5L+u5pS577yaOOWwj+aXtuWGhTEwMCXosIPmlbTkuLoyNSXvvJs45bCP5pe2LTI05bCP5pe2NTAl6LCD5pW05Li6MTAl44CCXG4gICAgICAgICAgICAvLyAyMDE4MDcyOC3nprvnur/lpZblirHlho3pmY3kvY7kuIvvvIzlj6rorqHnrpc45bCP5pe25YaF55qE44CCOOWwj+aXtuS7peWkluS4jee7meWlluWKseOAglxuICAgICAgICAgICAgLy8gMjAxODA4MDYt5pyJ5pS255uK55qE5pyA6ZW/5pe26Ze05pS55Li677yaMuS4quWwj+aXtlxuICAgICAgICAgICAgbGV0IGdvbGQ6IG51bWJlciA9IDA7XG4gICAgICAgICAgICBsZXQgc2Vjb25kRm9ySG91cjogbnVtYmVyID0gNjAgKiA2MDtcbiAgICAgICAgICAgIGxldCBzZWNIb3VyTWF4ID0gMiAqIHNlY29uZEZvckhvdXI7XG4gICAgICAgICAgICBpZiAob2ZmbGluZVByaXplID4gc2VjSG91ck1heCkge1xuICAgICAgICAgICAgICAgIGdvbGQgPSAoc2VjSG91ck1heCAqIFBsYXllck1nci5JbnMuSW5mby51c2VySW5jb21lU2VjKSAqIDAuMDU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGdvbGQgPSAob2ZmbGluZVByaXplICogUGxheWVyTWdyLklucy5JbmZvLnVzZXJJbmNvbWVTZWMpICogMC4wNTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChnb2xkID4gMCkge1xuICAgICAgICAgICAgICAgIGdvbGQgPSBnb2xkICogNDtcbiAgICAgICAgICAgICAgICB0aGlzLl9jb250cm9sLnVwZGF0ZUdvbGQoZ29sZCwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGlmIChQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckxldmVsID4gOCkge1xuICAgICAgICAgICAgICAgICAgICBWaWV3TWdyLklucy5vcGVuKFZpZXdDb25zdC5PZmZMaW5lUmV3YXJkVmlldywgbnVsbCwgZ29sZCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi6I635b6X56a757q/5aWW5YqxOlwiICsgTWF0aFV0aWwudW5pdENvbnZlcnNpb24oZ29sZCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiDmmL7npLroi7Hpm4Tkv6Hmga9UaXBzICovXG4gICAgcHJpdmF0ZSBzaG93SGVyb1RpcHMoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9oZXJvVGlwcyA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLl9oZXJvVGlwcyA9IExheWEuUG9vbC5nZXRJdGVtQnlDbGFzcyhcIkhlcm9UaXBzXCIsIEhlcm9UaXBzKTtcbiAgICAgICAgICAgIHRoaXMuX2hlcm9UaXBzLmRhdGFTb3VyY2UgPSB0aGlzLl9jdXJySGVhZEl0ZW07XG4gICAgICAgICAgICB0aGlzLl9jb3B5SGVhZEl0ZW0uYWRkQ2hpbGQodGhpcy5faGVyb1RpcHMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOenu+mZpOiLsembhOS/oeaBr1RpcHMgKi9cbiAgICBwcml2YXRlIHJlbW92ZUhlcm9UaXBzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmNsZWFyVGltZXIodGhpcywgdGhpcy5zaG93SGVyb1RpcHMpO1xuICAgICAgICBpZiAodGhpcy5faGVyb1RpcHMpIHtcbiAgICAgICAgICAgIHRoaXMuX2hlcm9UaXBzLnJlbW92ZVRpcHMoKTtcbiAgICAgICAgICAgIExheWEuUG9vbC5yZWNvdmVyKFwiSGVyb1RpcHNcIiwgdGhpcy5faGVyb1RpcHMpO1xuICAgICAgICAgICAgdGhpcy5faGVyb1RpcHMgPSBudWxsO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOaYvuekuui2hei2iuWlveWPiyAqL1xuICAgIHByaXZhdGUgc2hvd1N1cnBhc3NWaWV3KCk6IHZvaWQge1xuICAgICAgICBpZiAod2luZG93W1wid3hcIl0pIHtcbiAgICAgICAgICAgIFNES01nci5JbnMud3hTZXRVc2VyQ2xvdWRTdG9yYWdlKCk7XG4gICAgICAgICAgICB0aGlzLnN1cnBhc3NWaWV3LnBvc3RNc2coeyBtZXNzYWdlOiBcInNob3dTdXJwYXNzRnJpZW5kXCIgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIG9uUmVuZGVyU3lzdGVtKGNlbGw6IExheWEuQm94LCBpbmRleDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGlmIChpbmRleCA+IHRoaXMubGlzdF9idG4uYXJyYXkubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGJ0bjogU3lzdGVtQnRuID0gY2VsbC5nZXRDaGlsZEJ5TmFtZShcIml0ZW1cIikgYXMgU3lzdGVtQnRuO1xuICAgICAgICBpZiAoYnRuKSB7XG4gICAgICAgICAgICBidG4uZGF0YVNvdXJjZSA9IHRoaXMubGlzdF9idG4uYXJyYXlbaW5kZXhdO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOabtOaWsOezu+e7n+WKn+iDveaMiemSriAqL1xuICAgIHByaXZhdGUgb25VcGRhdGVTeXN0ZW1CdG4oKTogdm9pZCB7XG4gICAgICAgIHRoaXMuaW5pdFN5c3RlbUJ0bigpO1xuICAgIH1cblxufSIsImltcG9ydCB7IHVpIH0gZnJvbSBcIi4uLy4uLy4uL3VpL2xheWFNYXhVSVwiO1xuaW1wb3J0IFBvaW50VXRpbHMgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvdXRpbHMvUG9pbnRVdGlsc1wiO1xuaW1wb3J0IEhlYWRJdGVtIGZyb20gXCIuL2l0ZW0vSGVhZEl0ZW1cIjtcbmltcG9ydCBMYXllck1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9sYXllci9MYXllck1nclwiO1xuaW1wb3J0IEhlcm9Db25maWdWTyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9kYi92by9IZXJvQ29uZmlnVk9cIjtcbmltcG9ydCBHbG9iYWxEYXRhIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2RiL0dsb2JhbERhdGFcIjtcbmltcG9ydCBCb25lQW5pbSBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9ib25lL0JvbmVBbmltXCI7XG5pbXBvcnQgUGF0aENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9jb25maWcvUGF0aENvbmZpZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIZXJvVGlwcyBleHRlbmRzIHVpLm1vZHVsZVZpZXcuaGFsbC5IZXJvVGlwc1VJIHtcblxuICAgIHByaXZhdGUgX2RhdGE6IEhlYWRJdGVtO1xuICAgIHByaXZhdGUgX2JvbmU6IEJvbmVBbmltO1xuXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cblxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5fZGF0YSkge1xuICAgICAgICAgICAgLy8gbGV0IHBvczogTGF5YS5Qb2ludCA9IFBvaW50VXRpbHMubG9jYWxUb0dsb2JhbCh0aGlzLl9kYXRhKTtcbiAgICAgICAgICAgIC8vIHRoaXMucG9zKHBvcy54LCBwb3MueSk7XG4gICAgICAgICAgICB0aGlzLnBvcyh0aGlzLl9kYXRhLngsIHRoaXMuX2RhdGEueSk7XG4gICAgICAgICAgICBpZiAodGhpcy54IDwgMCkge1xuICAgICAgICAgICAgICAgIHRoaXMueCA9IDA7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMueCA+IExheWVyTWdyLnN0YWdlRGVzaWduV2lkdGgpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnggPSBMYXllck1nci5zdGFnZURlc2lnbldpZHRoIC0gdGhpcy53aWR0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBjb25maWc6IEhlcm9Db25maWdWTyA9IEdsb2JhbERhdGEuZ2V0RGF0YShHbG9iYWxEYXRhLkhlcm9Db25maWdWTywgdGhpcy5fZGF0YS5JbmZvLmhlcm9JZCk7XG4gICAgICAgICAgICBpZiAoY29uZmlnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy50eHRfbmFtZS50ZXh0ID0gY29uZmlnLm5hbWU7XG4gICAgICAgICAgICAgICAgdGhpcy50eHRfc3BlZWQudGV4dCA9IGNvbmZpZy5zcGVlZCArIFwiXCI7XG4gICAgICAgICAgICAgICAgdGhpcy50eHRfc2VjQ29pbi50ZXh0ID0gY29uZmlnLlBlclNlY0NvaW4gKyBcIlwiO1xuICAgICAgICAgICAgICAgIHRoaXMudHh0X3NlbGxQcmljZS50ZXh0ID0gY29uZmlnLnNlbGxQcmljZSArIFwiXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5fZGF0YSAmJiB0aGlzLl9kYXRhLmhlcm9WTykge1xuICAgICAgICAgICAgICAgIHRoaXMuX2JvbmUgPSBuZXcgQm9uZUFuaW0odGhpcy5fZGF0YS5oZXJvVk8ubW9kZWxJbWdVcmwsIHRydWUsIHRydWUpO1xuICAgICAgICAgICAgICAgIHRoaXMuYWRkQ2hpbGQodGhpcy5fYm9uZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fYm9uZS5wb3MoMTc0LCA0MjApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIHJlbW92ZVRpcHMoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9ib25lKSB0aGlzLl9ib25lLmRlc3Ryb3koKTtcbiAgICAgICAgdGhpcy5yZW1vdmVTZWxmKCk7XG4gICAgfVxuXG4gICAgc2V0IGRhdGFTb3VyY2UodmFsdWU6IGFueSkge1xuICAgICAgICB0aGlzLl9kYXRhID0gdmFsdWU7XG4gICAgfVxufSIsImltcG9ydCBCYXNlVmlldyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS92aWV3L2Jhc2UvQmFzZVZpZXdcIjtcbmltcG9ydCBMYXllck1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9sYXllci9MYXllck1nclwiO1xuaW1wb3J0IHsgdWkgfSBmcm9tIFwiLi4vLi4vLi4vdWkvbGF5YU1heFVJXCI7XG5pbXBvcnQgQXBwQ29uZmlnIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2NvbmZpZy9BcHBDb25maWdcIjtcbmltcG9ydCBHbG9iYWxEYXRhIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2RiL0dsb2JhbERhdGFcIjtcbmltcG9ydCBIZXJvVk8gZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZGIvdm8vSGVyb1ZPXCI7XG5pbXBvcnQgQm9uZUFuaW0gZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvYm9uZS9Cb25lQW5pbVwiO1xuaW1wb3J0IEhhbGxDb250cm9sIGZyb20gXCIuLi9IYWxsQ29udHJvbFwiO1xuaW1wb3J0IEhlcm9Db25maWdWTyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9kYi92by9IZXJvQ29uZmlnVk9cIjtcbmltcG9ydCBNYXRoVXRpbCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9NYXRoVXRpbFwiO1xuaW1wb3J0IE1zZ01nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9tc2cvTXNnTWdyXCI7XG5pbXBvcnQgU2hhcmVNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvbXNnL1NoYXJlTWdyXCI7XG5pbXBvcnQgVmlld01nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS92aWV3L1ZpZXdNZ3JcIjtcbmltcG9ydCBWaWV3Q29uc3QgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3Evdmlldy9jb25zdC9WaWV3Q29uc3RcIjtcblxuLyoqXG4gKiDmlrDmrablsIbnlYzpnaJcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV3SGVyb1ZpZXcgZXh0ZW5kcyBCYXNlVmlldyB7XG5cbiAgICBwcml2YXRlIF9oZXJvVk86IEhlcm9WTztcbiAgICBwcml2YXRlIF9oZXJvSW5mbzogSGVyb0NvbmZpZ1ZPO1xuICAgIHByaXZhdGUgX2JvbmU6IEJvbmVBbmltO1xuICAgIHByaXZhdGUgX21vbmV5OiBudW1iZXIgPSAwO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKExheWVyTWdyLklucy5mcmFtZUxheWVyLCB1aS5tb2R1bGVWaWV3LmhhbGwuTmV3SGVyb1ZpZXdVSSk7XG4gICAgfVxuXG4gICAgcHVibGljIGluaXREYXRhKCk6IHZvaWQge1xuICAgICAgICBzdXBlci5pbml0RGF0YSgpO1xuICAgICAgICBpZiAodGhpcy5kYXRhcyAmJiB0aGlzLmRhdGFzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuX2hlcm9WTyA9IEdsb2JhbERhdGEuZ2V0RGF0YShHbG9iYWxEYXRhLkhlcm9WTywgdGhpcy5kYXRhc1swXSk7XG4gICAgICAgICAgICBpZiAodGhpcy5faGVyb1ZPKSB7XG4gICAgICAgICAgICAgICAgdGhpcy51aS50eHRfbmFtZS50ZXh0ID0gdGhpcy5faGVyb1ZPLm5hbWU7XG4gICAgICAgICAgICAgICAgdGhpcy5fYm9uZSA9IG5ldyBCb25lQW5pbSh0aGlzLl9oZXJvVk8ubW9kZWxJbWdVcmwsIHRydWUsIHRydWUpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2JvbmUuY29tcGxldGVCYWNrID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5hZGRDaGlsZCh0aGlzLl9ib25lKTtcbiAgICAgICAgICAgICAgICB0aGlzLl9ib25lLnNjYWxlKDEuNSwgMS41KTtcbiAgICAgICAgICAgICAgICB0aGlzLl9ib25lLnBvcygyMzgsIDQ0NSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9oZXJvSW5mbyA9IEdsb2JhbERhdGEuZ2V0RGF0YShHbG9iYWxEYXRhLkhlcm9Db25maWdWTywgSGFsbENvbnRyb2wuSW5zLk1vZGVsLmhlcm9MZXZlbCk7XG4gICAgICAgICAgICBpZiAodGhpcy5faGVyb0luZm8pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnVpLnR4dF9leHAudGV4dCA9IFwi57uP6aqMOiArXCIgKyB0aGlzLl9oZXJvSW5mby5zeW50aGV0aWNFeHA7XG4gICAgICAgICAgICAgICAgdGhpcy51aS50eHRfaW5jb21lLnRleHQgPSBcIuaUtuebijogK1wiICsgTWF0aFV0aWwudW5pdENvbnZlcnNpb24odGhpcy5faGVyb0luZm8uUGVyU2VjQ29pbikgKyBcIi/np5JcIjtcbiAgICAgICAgICAgICAgICBsZXQgY3VyUHJpY2UgPSBIYWxsQ29udHJvbC5JbnMuTW9kZWwuZ2V0SGVyb0J1eVByaWNlKHRoaXMuX2hlcm9JbmZvLmJ1eVByaWNlLCBIYWxsQ29udHJvbC5JbnMuTW9kZWwucXVlcnlCdXlIZXJvUmVjb3JkKHRoaXMuX2hlcm9JbmZvLmlkKSk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbW9uZXkgPSBjdXJQcmljZSAqIDAuNjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMudWkudHh0X3ByaWNlLnRleHQgPSBcIitcIiArIE1hdGhVdGlsLnVuaXRDb252ZXJzaW9uKHRoaXMuX21vbmV5KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBhZGRFdmVudHMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudWkuYnRuX3Jld2FyZC5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uR2V0UmV3YXJkKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgcmVtb3ZlRXZlbnRzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnVpLmJ0bl9yZXdhcmQub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25HZXRSZXdhcmQpO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25HZXRSZXdhcmQoKTogdm9pZCB7XG4gICAgICAgIGlmIChBcHBDb25maWcuaXNEZWJ1ZyAmJiBMYXlhLkJyb3dzZXIub25QQykge1xuICAgICAgICAgICAgdGhpcy5zZW5kUmV3YXJkKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBTaGFyZU1nci5JbnMuc2hvd1NoYXJlT3JBZHYoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2VuZFJld2FyZCgpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgc2VuZFJld2FyZCgpOiB2b2lkIHtcbiAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5oKo5bey6I635b6X6ZOc6ZKxOlwiICsgTWF0aFV0aWwudW5pdENvbnZlcnNpb24odGhpcy5fbW9uZXkpKTtcbiAgICAgICAgSGFsbENvbnRyb2wuSW5zLnVwZGF0ZUdvbGQodGhpcy5fbW9uZXksIGZhbHNlKTtcbiAgICAgICAgVmlld01nci5JbnMuY2xvc2UoVmlld0NvbnN0Lk5ld0hlcm9WaWV3KTtcbiAgICB9XG5cbiAgICBwdWJsaWMgY2xvc2UoLi4ucGFyYW06IGFueVtdKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLmNsb3NlKHBhcmFtKTtcbiAgICAgICAgdGhpcy5faGVyb1ZPID0gbnVsbDtcbiAgICAgICAgdGhpcy5faGVyb0luZm8gPSBudWxsO1xuICAgICAgICBpZiAodGhpcy5fYm9uZSkgdGhpcy5fYm9uZS5kZXN0cm95KCk7XG4gICAgfVxufSIsImltcG9ydCBCYXNlVmlldyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS92aWV3L2Jhc2UvQmFzZVZpZXdcIjtcbmltcG9ydCBMYXllck1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9sYXllci9MYXllck1nclwiO1xuaW1wb3J0IHsgdWkgfSBmcm9tIFwiLi4vLi4vLi4vdWkvbGF5YU1heFVJXCI7XG5pbXBvcnQgR2xvYmFsRGF0YSBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9kYi9HbG9iYWxEYXRhXCI7XG5pbXBvcnQgUGxheWVyTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3BsYXllci9QbGF5ZXJNZ3JcIjtcbmltcG9ydCBMZXZlbFZPIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2RiL3ZvL0xldmVsVk9cIjtcblxuLyoqXG4gKiDnlKjmiLfkv6Hmga/nlYzpnaJcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm9WaWV3IGV4dGVuZHMgQmFzZVZpZXcge1xuXG4gICAgcHJpdmF0ZSBfbGV2ZWxWTzogTGV2ZWxWTztcbiAgICBwcml2YXRlIF9uZXh0TGV2ZWxWTzogTGV2ZWxWTztcblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcihMYXllck1nci5JbnMuZnJhbWVMYXllciwgdWkubW9kdWxlVmlldy5oYWxsLlVzZXJJbmZvVmlld1VJKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaW5pdERhdGEoKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLmluaXREYXRhKCk7XG4gICAgICAgIHRoaXMuX2xldmVsVk8gPSBHbG9iYWxEYXRhLmdldERhdGEoR2xvYmFsRGF0YS5MZXZlbFZPLCBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckxldmVsKVxuICAgICAgICB0aGlzLl9uZXh0TGV2ZWxWTyA9IEdsb2JhbERhdGEuZ2V0RGF0YShHbG9iYWxEYXRhLkxldmVsVk8sIFBsYXllck1nci5JbnMuSW5mby51c2VyTGV2ZWwgKyAxKTtcbiAgICAgICAgdGhpcy51aS50eHRfdXNlcklkLnRleHQgPSBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlcklkICsgXCJcIjtcblxuICAgICAgICB0aGlzLnVpLmV4cEJhci52YWx1ZSA9ICgxLjAgKiBQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckV4cCAvIHRoaXMuX25leHRMZXZlbFZPLnVwTmVlZGV4cCk7XG4gICAgICAgIHRoaXMudWkudHh0X2V4cC50ZXh0ID0gTWF0aC5mbG9vcihQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckV4cCkgKyBcIi9cIiArIE1hdGguZmxvb3IodGhpcy5fbmV4dExldmVsVk8udXBOZWVkZXhwKTtcbiAgICAgICAgdGhpcy51aS50eHRfcHJpY2UudGV4dCA9IE1hdGguZmxvb3IoMTAwICogdGhpcy5fbGV2ZWxWTy5leHRyYVByb2R1Y2UpICsgXCIlXCI7XG4gICAgICAgIHRoaXMudWkudHh0X2hlcm9Db3VudC50ZXh0ID0gdGhpcy5fbGV2ZWxWTy5vcGVuQ2VsbENvdW50ICsgXCLkuKpcIjtcbiAgICAgICAgdGhpcy51aS50eHRfYmF0dGxlQ291bnQudGV4dCA9IHRoaXMuX2xldmVsVk8uYmF0dGxlQ291bnQgKyBcIuS4qlwiO1xuICAgIH1cbn0iLCJpbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBHbG9iYWxEYXRhIGZyb20gXCIuLi8uLi8uLi8uLi9jb3JlX3dxL2RiL0dsb2JhbERhdGFcIjtcbmltcG9ydCBIZXJvVk8gZnJvbSBcIi4uLy4uLy4uLy4uL2NvcmVfd3EvZGIvdm8vSGVyb1ZPXCI7XG5pbXBvcnQgUGF0aENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vLi4vY29yZV93cS9jb25maWcvUGF0aENvbmZpZ1wiO1xuaW1wb3J0IEhlcm9Db25maWdWTyBmcm9tIFwiLi4vLi4vLi4vLi4vY29yZV93cS9kYi92by9IZXJvQ29uZmlnVk9cIjtcbmltcG9ydCBIZXJvIGZyb20gXCIuLi8uLi9oZXJvL0hlcm9cIjtcbmltcG9ydCBIYWxsQ29udHJvbCBmcm9tIFwiLi4vLi4vSGFsbENvbnRyb2xcIjtcbmltcG9ydCBQbGF5ZXJNZ3IgZnJvbSBcIi4uLy4uLy4uLy4uL2NvcmVfd3EvcGxheWVyL1BsYXllck1nclwiO1xuaW1wb3J0IEd1aWRlTWdyIGZyb20gXCIuLi8uLi8uLi8uLi9jb3JlX3dxL2d1aWRlL0d1aWRlTWdyXCI7XG5pbXBvcnQgRWZmZWN0VXRpbCBmcm9tIFwiLi4vLi4vLi4vLi4vY29yZV93cS91dGlscy9FZmZlY3RVdGlsXCI7XG5pbXBvcnQgSGFsbFNjZW5lIGZyb20gXCIuLi9IYWxsU2NlbmVcIjtcbmltcG9ydCBQb29sTWdyIGZyb20gXCIuLi8uLi8uLi8uLi9jb3JlX3dxL21zZy9Qb29sTWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEhlYWRJdGVtIGV4dGVuZHMgdWkubW9kdWxlVmlldy5oYWxsLml0ZW0uSGVhZEl0ZW1VSSB7XG5cbiAgICBwcml2YXRlIF9pbmZvOiB7IGlkOiBudW1iZXIsIGhlcm9JZDogbnVtYmVyLCBpc1J1bm5pbmc6IGJvb2xlYW4gfTtcbiAgICBwcml2YXRlIF9oZXJvVk86IEhlcm9WTztcbiAgICAvKiog5oiY5paX55qE6Iux6ZuEICovXG4gICAgcHJpdmF0ZSBfYmF0dGxlSGVybzogSGVybyA9IG51bGw7XG4gICAgLyoqIDDnqbosMeaImOaWl+S4rSwy5ouW5YqoLDPlrp3nrrEgKi9cbiAgICBwcml2YXRlIF9zdGFnZTogbnVtYmVyID0gSEVBRF9JVEVNX1NUQUdFLklETEU7XG4gICAgLyoqIOaYr+WQpuS4iumUgSAqL1xuICAgIHByaXZhdGUgX2lzTG9jazogYm9vbGVhbiA9IGZhbHNlO1xuICAgIC8qKiDoi7Hpm4TkvY3nva7kuIvmoIcgKi9cbiAgICBwdWJsaWMgaGVyb0luZGV4OiBudW1iZXIgPSAtMTtcbiAgICBwcml2YXRlIF9yZXZpdmVUaW1lOiBudW1iZXIgPSAwO1xuICAgIHB1YmxpYyBpc0RpZTogYm9vbGVhbiA9IGZhbHNlO1xuXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cblxuICAgIHNldCBkYXRhU291cmNlKHZhbHVlOiBhbnkpIHtcbiAgICAgICAgdGhpcy5faW5mbyA9IHZhbHVlO1xuICAgICAgICB0aGlzLmltZ0hlYWQudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICBpZiAodGhpcy5faW5mbyAmJiB0aGlzLl9pbmZvLmhlcm9JZCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlSGVhZFNraW4odGhpcy5faW5mby5oZXJvSWQpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOabtOaWsOWktOWDjyAqL1xuICAgIHB1YmxpYyB1cGRhdGVIZWFkU2tpbihoZXJvSWQ6IG51bWJlciwgaW5kZXg6IG51bWJlciA9IC0xKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYm94TGV2ZWwudmlzaWJsZSA9IHRoaXMuaW1nSGVhZC52aXNpYmxlID0gaGVyb0lkID4gMDtcbiAgICAgICAgdGhpcy5pbWdMb2NrLnZpc2libGUgPSBoZXJvSWQgPCAwO1xuICAgICAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgICAgICAgdGhpcy5oZXJvSW5kZXggPSBpbmRleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaGVyb0lkID4gMCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2luZm8pIHRoaXMuX2luZm8uaGVyb0lkID0gaGVyb0lkO1xuICAgICAgICAgICAgdGhpcy5faGVyb1ZPID0gR2xvYmFsRGF0YS5nZXREYXRhKEdsb2JhbERhdGEuSGVyb1ZPLCBoZXJvSWQpO1xuICAgICAgICAgICAgaWYgKHRoaXMuX2hlcm9WTykge1xuICAgICAgICAgICAgICAgIHRoaXMuaW1nSGVhZC5za2luID0gUGF0aENvbmZpZy5IRUFEX1BBVEggKyB0aGlzLl9oZXJvVk8uaW1nVXJsO1xuICAgICAgICAgICAgICAgIHRoaXMudHh0X2xldmVsLnRleHQgPSB0aGlzLl9oZXJvVk8uaWQgKyBcIlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOWIm+W7uuaImOaWl+S4reeahOiLsembhCAqL1xuICAgIHB1YmxpYyBjcmVhdGVCYXR0bGVIZXJvKHBhcmVudE5vZGU6IEhhbGxTY2VuZSwgc3RhcnRQb3M6IHsgeDogbnVtYmVyLCB5OiBudW1iZXIgfSk6IEhlcm8ge1xuICAgICAgICBpZiAodGhpcy5fYmF0dGxlSGVybyA9PSBudWxsKSB7XG4gICAgICAgICAgICBsZXQgaGVybyA9IG5ldyBIZXJvKCk7XG4gICAgICAgICAgICBoZXJvLnNldENoYXJhY3RlckJvbmUodGhpcy5faW5mby5oZXJvSWQpO1xuICAgICAgICAgICAgaGVyby5waXZvdCg0MSwgMzUpO1xuICAgICAgICAgICAgaWYgKHBhcmVudE5vZGUpIHtcbiAgICAgICAgICAgICAgICBwYXJlbnROb2RlLmFkZENoaWxkKGhlcm8pO1xuICAgICAgICAgICAgICAgIGhlcm8ucG9zKHN0YXJ0UG9zLngsIHN0YXJ0UG9zLnkpO1xuICAgICAgICAgICAgICAgIGxldCBoZXJvSW5mbzogSGVyb0NvbmZpZ1ZPID0gR2xvYmFsRGF0YS5nZXREYXRhKEdsb2JhbERhdGEuSGVyb0NvbmZpZ1ZPLCB0aGlzLl9pbmZvLmhlcm9JZCk7XG4gICAgICAgICAgICAgICAgaWYgKGhlcm9JbmZvKSB7XG4gICAgICAgICAgICAgICAgICAgIGhlcm8uc2V0TW92ZVNwZWVkUmF0aW8oaGVyb0luZm8uc3BlZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLnRpbWVyT25jZSgyMDAsIHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaGVyby5wbGF5TW92ZUFjdGlvbigpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9iYXR0bGVIZXJvID0gaGVybztcbiAgICAgICAgICAgIHRoaXMuaHBCYXIudmFsdWUgPSBoZXJvLmhwIC8gaGVyby5tYXhIcDtcbiAgICAgICAgICAgIHRoaXMuaHBCYXIudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLnJldml2ZUJhci52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnJldml2ZUJhci52YWx1ZSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX2JhdHRsZUhlcm87XG4gICAgfVxuXG4gICAgLyoqIOabtOaWsOihgOmHjyAqL1xuICAgIHB1YmxpYyB1cGRhdGVIcCh2YWx1ZTogbnVtYmVyID0gMSkge1xuICAgICAgICBpZiAoR3VpZGVNZ3IuSW5zLmlzR3VpZGUgfHwgdGhpcy5fYmF0dGxlSGVybyA9PSBudWxsKSByZXR1cm47XG4gICAgICAgIEVmZmVjdFV0aWwucGxheUJvbmVFZmZlY3QoXCJoaXRfMDFcIiwgeyB4OiB0aGlzLl9iYXR0bGVIZXJvLngsIHk6IHRoaXMuX2JhdHRsZUhlcm8ueSArIDEwMCB9KTtcbiAgICAgICAgdGhpcy5fYmF0dGxlSGVyby5ocCA9IHRoaXMuX2JhdHRsZUhlcm8uaHAgLSB2YWx1ZTtcbiAgICAgICAgdGhpcy5ocEJhci52YWx1ZSA9IHRoaXMuX2JhdHRsZUhlcm8uaHAgLyB0aGlzLl9iYXR0bGVIZXJvLm1heEhwO1xuICAgICAgICBpZiAodGhpcy5ocEJhci52YWx1ZSA8PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmlzRGllID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuX2JhdHRsZUhlcm8uSXNJblBvc2l0aW9uID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLl9iYXR0bGVIZXJvLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgIEhhbGxDb250cm9sLklucy5zZXRCYXR0bGVIZXJvQ291bnQoUGxheWVyTWdyLklucy5JbmZvLnVzZXJSdW5jYXJDb3VudCAtIDEpO1xuICAgICAgICAgICAgdGhpcy5ocEJhci52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnJldml2ZUJhci52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMudGltZXJMb29wKDEwMDAsIHRoaXMsIHRoaXMuaGVyb1Jldml2ZVRpbWUpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBoZXJvUmV2aXZlVGltZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fcmV2aXZlVGltZSArPSAxO1xuICAgICAgICB0aGlzLnJldml2ZUJhci52YWx1ZSA9IHRoaXMuX3Jldml2ZVRpbWUgLyA2O1xuICAgICAgICBpZiAodGhpcy5fcmV2aXZlVGltZSA+PSA2KSB7XG4gICAgICAgICAgICB0aGlzLmNsZWFyVGltZXIodGhpcywgdGhpcy5oZXJvUmV2aXZlVGltZSk7XG4gICAgICAgICAgICB0aGlzLnJldml2ZUJhci52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnJldml2ZUJhci52YWx1ZSA9IDA7XG4gICAgICAgICAgICB0aGlzLl9yZXZpdmVUaW1lID0gMDtcbiAgICAgICAgICAgIGlmICh0aGlzLl9iYXR0bGVIZXJvKSB7XG4gICAgICAgICAgICAgICAgRWZmZWN0VXRpbC5wbGF5Qm9uZUVmZmVjdChcInVpX2Jvcm5cIiwgeyB4OiB0aGlzLl9iYXR0bGVIZXJvLnggLSAyMCwgeTogdGhpcy5fYmF0dGxlSGVyby55ICsgMjAwIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy50aW1lck9uY2UoMTAwLCB0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2JhdHRsZUhlcm8pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fYmF0dGxlSGVyby5ocCA9IHRoaXMuX2JhdHRsZUhlcm8ubWF4SHA7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaHBCYXIudmFsdWUgPSB0aGlzLl9iYXR0bGVIZXJvLm1heEhwO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9iYXR0bGVIZXJvLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9iYXR0bGVIZXJvLklzSW5Qb3NpdGlvbiA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuaHBCYXIudmlzaWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgSGFsbENvbnRyb2wuSW5zLnNldEJhdHRsZUhlcm9Db3VudChQbGF5ZXJNZ3IuSW5zLkluZm8udXNlclJ1bmNhckNvdW50ICsgMSk7XG4gICAgICAgICAgICAgICAgdGhpcy5pc0RpZSA9IGZhbHNlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog56e76Zmk5oiY5paX5Lit55qE6Iux6ZuEICovXG4gICAgcHVibGljIHJlbW92ZUJhdHRsZUhlcm8oKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9iYXR0bGVIZXJvKSB7XG4gICAgICAgICAgICB0aGlzLl9iYXR0bGVIZXJvLnJlbW92ZUF0dGFja1RhcmdldCgpO1xuICAgICAgICAgICAgdGhpcy5fYmF0dGxlSGVyby5yZW1vdmVTZWxmKCk7XG4gICAgICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcihcImJvbmVcIiArIHRoaXMuX2JhdHRsZUhlcm8uaGVyb0lkLCB0aGlzLl9iYXR0bGVIZXJvLmhlcm9Cb25lKTtcbiAgICAgICAgICAgIHRoaXMuX2JhdHRsZUhlcm8gPSBudWxsO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOiOt+WPluaImOaWl+S4reeahOiLsembhCAqL1xuICAgIHB1YmxpYyBnZXQgQmF0dGxlSGVybygpOiBIZXJvIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2JhdHRsZUhlcm87XG4gICAgfVxuXG4gICAgLyoqIOiuvue9ruaImOaWl+S4reeahOiLsembhCAqL1xuICAgIHB1YmxpYyBzZXQgQmF0dGxlSGVybyhiYXR0bGVIZXJvOiBIZXJvKSB7XG4gICAgICAgIHRoaXMuX2JhdHRsZUhlcm8gPSBiYXR0bGVIZXJvO1xuICAgIH1cblxuICAgIC8qKiDoi7Hpm4Tlh7rllK7ku7fmoLwgKi9cbiAgICBwdWJsaWMgZ2V0U2VsbFByaWNlKCk6IG51bWJlciB7XG4gICAgICAgIGlmICh0aGlzLl9oZXJvVk8pIHtcbiAgICAgICAgICAgIGxldCBoZXJvQ29uZmlnVk86IEhlcm9Db25maWdWTyA9IEdsb2JhbERhdGEuZ2V0RGF0YShHbG9iYWxEYXRhLkhlcm9Db25maWdWTywgdGhpcy5faGVyb1ZPLmlkKTtcbiAgICAgICAgICAgIGlmIChoZXJvQ29uZmlnVk8pIHJldHVybiBoZXJvQ29uZmlnVk8uYnV5UHJpY2UgKiAwLjg7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgLyoqIOmHjee9riAqL1xuICAgIHB1YmxpYyByZXNldCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuX2luZm8pIHRoaXMuX2luZm8uaGVyb0lkID0gMDtcbiAgICAgICAgaWYgKHRoaXMuX2hlcm9WTykgdGhpcy5faGVyb1ZPID0gbnVsbDtcbiAgICAgICAgdGhpcy5ocEJhci52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIHRoaXMucmV2aXZlQmFyLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5ocEJhci52YWx1ZSA9IDE7XG4gICAgICAgIHRoaXMucmV2aXZlQmFyLnZhbHVlID0gMDtcbiAgICAgICAgdGhpcy51cGRhdGVIZWFkU2tpbigwKTtcbiAgICAgICAgdGhpcy5zZXRTdGFnZSgwKTtcbiAgICAgICAgdGhpcy5yZW1vdmVCYXR0bGVIZXJvKCk7XG4gICAgfVxuXG4gICAgLyoqIOiuvue9rumUgSAqL1xuICAgIHB1YmxpYyBzZXRMb2NrKGlzTG9jazogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICB0aGlzLl9pc0xvY2sgPSB0aGlzLmltZ0xvY2sudmlzaWJsZSA9IGlzTG9jaztcbiAgICB9XG5cbiAgICAvKiogMOepuiwx5oiY5paX5LitLDLmi5bliqgsM+WuneeusSAqL1xuICAgIHB1YmxpYyBzZXRTdGFnZShzdGFnZTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9pc0xvY2spIHJldHVybjtcbiAgICAgICAgdGhpcy5fc3RhZ2UgPSBzdGFnZTtcbiAgICB9XG5cbiAgICAvKiog5piv5ZCm5Zyo5oiY5paX5LitICovXG4gICAgcHVibGljIGdldCBJc0JhdHRsZSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3N0YWdlID09IEhFQURfSVRFTV9TVEFHRS5CQVRUTEU7XG4gICAgfVxuXG4gICAgLyoqIOaYr+WQpumXsue9riAqL1xuICAgIHB1YmxpYyBnZXQgSXNFbXB0eSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3N0YWdlIDw9IEhFQURfSVRFTV9TVEFHRS5JRExFO1xuICAgIH1cblxuICAgIC8qKiDmmK/lkKblrp3nrrEgKi9cbiAgICBwdWJsaWMgZ2V0IElzQm94KCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3RhZ2UgPT0gSEVBRF9JVEVNX1NUQUdFLkJPWDtcbiAgICB9XG5cbiAgICAvKiog5piv5ZCm5LiK6ZSBICovXG4gICAgcHVibGljIGdldCBJc0xvY2soKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pc0xvY2s7XG4gICAgfVxuXG4gICAgLyoqIDDnqbosMeaImOaWl+S4rSwy5ouW5YqoLDPlrp3nrrEgKi9cbiAgICBnZXQgSGVyb1N0YWdlKCk6IG51bWJlciB7IHJldHVybiB0aGlzLl9zdGFnZTsgfVxuICAgIGdldCBJbmZvKCk6IHsgaWQ6IG51bWJlciwgaGVyb0lkOiBudW1iZXIsIGlzUnVubmluZzogYm9vbGVhbiB9IHsgcmV0dXJuIHRoaXMuX2luZm87IH1cbiAgICBwdWJsaWMgZ2V0IGhlcm9WTygpOiBIZXJvVk8ge1xuICAgICAgICByZXR1cm4gdGhpcy5faGVyb1ZPO1xuICAgIH1cbn1cblxuZW51bSBIRUFEX0lURU1fU1RBR0Uge1xuICAgIC8qKiDnqbrpl7IgKi9cbiAgICBJRExFID0gMCxcbiAgICAvKiog5oiY5paX5LitICovXG4gICAgQkFUVExFLFxuICAgIC8qKiDmi5bliqggKi9cbiAgICBEUk9QLFxuICAgIC8qKiDlrp3nrrEgKi9cbiAgICBCT1hcbn0iLCJpbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBTeXN0ZW1WTyBmcm9tIFwiLi4vLi4vLi4vLi4vY29yZV93cS9kYi92by9TeXN0ZW1WT1wiO1xuaW1wb3J0IEV2ZW50c01nciBmcm9tIFwiLi4vLi4vLi4vLi4vY29yZV93cS9ldmVudC9FdmVudHNNZ3JcIjtcbmltcG9ydCBFdmVudFR5cGUgZnJvbSBcIi4uLy4uLy4uLy4uL2NvcmVfd3EvZXZlbnQvRXZlbnRUeXBlXCI7XG5pbXBvcnQgUGF0aENvbmZpZyBmcm9tIFwiLi4vLi4vLi4vLi4vY29yZV93cS9jb25maWcvUGF0aENvbmZpZ1wiO1xuaW1wb3J0IFN5c3RlbUNvbmZpZyBmcm9tIFwiLi4vLi4vY29uZmlnL1N5c3RlbUNvbmZpZ1wiO1xuaW1wb3J0IFBvaW50VXRpbHMgZnJvbSBcIi4uLy4uLy4uLy4uL2NvcmVfd3EvdXRpbHMvUG9pbnRVdGlsc1wiO1xuaW1wb3J0IFNES01nciBmcm9tIFwiLi4vLi4vLi4vLi4vY29yZV93cS9tc2cvU0RLTWdyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN5c3RlbUJ0biBleHRlbmRzIHVpLm1vZHVsZVZpZXcuaGFsbC5pdGVtLlN5c3RlbUJ0blVJIHtcblxuICAgIHByaXZhdGUgX2luZm86IFN5c3RlbVZPID0gbnVsbDtcblxuICAgIHNldCBkYXRhU291cmNlKHZhbHVlOiBhbnkpIHtcbiAgICAgICAgdGhpcy5faW5mbyA9IHZhbHVlO1xuICAgICAgICBpZiAodGhpcy5faW5mbykge1xuICAgICAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgICAgICAgICB0aGlzLmFkZEV2ZW50cygpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLmltZ1JlblBvaW50LnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5idG5fc3lzdGVtLnNraW4gPSBQYXRoQ29uZmlnLlNZU1RFTV9CVE5fUEFUSC5yZXBsYWNlKFwiezB9XCIsIHRoaXMuX2luZm8uaWNvbik7XG4gICAgICAgIC8v5oqV6K+J5bu66K6u54m55q6K5aSE55CGXG4gICAgICAgIGlmICh0aGlzLl9pbmZvLmlkID09IFN5c3RlbUNvbmZpZy5GRUVEQkFDSykge1xuICAgICAgICAgICAgbGV0IHBvcyA9IFBvaW50VXRpbHMubG9jYWxUb0dsb2JhbCh0aGlzLmJ0bl9zeXN0ZW0pO1xuICAgICAgICAgICAgU0RLTWdyLklucy53eENyZWF0ZUZlZWRiYWNrQnV0dG9uKHtcbiAgICAgICAgICAgICAgICB4OiBwb3MueCwgeTogcG9zLnksXG4gICAgICAgICAgICAgICAgd2lkdGg6IHRoaXMuYnRuX3N5c3RlbS53aWR0aCwgaGVpZ2h0OiB0aGlzLmJ0bl9zeXN0ZW0uaGVpZ2h0XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgYWRkRXZlbnRzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmJ0bl9zeXN0ZW0ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkNsaWNrQnRuKTtcbiAgICAgICAgRXZlbnRzTWdyLklucy5hZGRMaXN0ZW5lcihFdmVudFR5cGUuVVBEQVRFX1NZU1RFTV9SRURfUE9JTlQsIHRoaXMub25VcGRhdGVSZWRQb2ludCwgdGhpcyk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkNsaWNrQnRuKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5faW5mbykge1xuICAgICAgICAgICAgRXZlbnRzTWdyLklucy5kaXNwYXRjaChFdmVudFR5cGUuT1BFTl9WSUVXLCB0aGlzLl9pbmZvLmlkKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQERhdmlkIOWKn+iDveaMiemSrueCueWHu+mUmeivryzmsqHmnInmib7liLBTeXN0ZW3ooajlr7nlupTnmoTlrZfmrrUhXCIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvblVwZGF0ZVJlZFBvaW50KGlkOiBudW1iZXIsIGlzU2hvdzogYm9vbGVhbik6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5faW5mbyAmJiB0aGlzLl9pbmZvLmlkID09IGlkKSB7XG4gICAgICAgICAgICB0aGlzLmltZ1JlblBvaW50LnZpc2libGUgPSBpc1Nob3c7XG4gICAgICAgIH1cbiAgICB9XG5cbn0iLCJpbXBvcnQgTGF5ZXJNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvbGF5ZXIvTGF5ZXJNZ3JcIjtcbmltcG9ydCBSZXNVdGlscyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9SZXNVdGlsc1wiO1xuaW1wb3J0IFBhdGhDb25maWcgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvY29uZmlnL1BhdGhDb25maWdcIjtcbmltcG9ydCBBdmVyYWdlVXRpbHMgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvdXRpbHMvQXZlcmFnZVV0aWxzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNtYWxsTG9hZGluZyBleHRlbmRzIExheWEuU3ByaXRlIHtcblxuICAgIHByaXZhdGUgX2NvbnRlbnQ6IExheWEuU3ByaXRlID0gbnVsbDtcbiAgICBwcml2YXRlIF9zcGVlZDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF91aUNvbnRhaW5lcjogTGF5YS5TcHJpdGU7XG4gICAgcHJpdmF0ZSBfYXZlcmFnZVV0aWxzOiBBdmVyYWdlVXRpbHM7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBpbml0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLl9hdmVyYWdlVXRpbHMgPSBuZXcgQXZlcmFnZVV0aWxzKCk7XG4gICAgICAgIHRoaXMuX3NwZWVkID0gMTAgLyAoMTAwMCAvIDYwKTtcbiAgICAgICAgdGhpcy5fY29udGVudCA9IExheWEuUG9vbC5nZXRJdGVtQnlDbGFzcyhcIlNwcml0ZVwiLCBMYXlhLlNwcml0ZSk7XG4gICAgICAgIHRoaXMuX2NvbnRlbnQuZ3JhcGhpY3MuZHJhd1JlY3QoMCwgMCwgTGF5ZXJNZ3Iuc3RhZ2VEZXNpZ25XaWR0aCwgTGF5ZXJNZ3Iuc3RhZ2VEZXNpZ25IZWlnaHQsIFwiIzAwMDAwMFwiKTtcbiAgICAgICAgdGhpcy5fY29udGVudC5tb3VzZUVuYWJsZWQgPSB0cnVlO1xuXG4gICAgICAgIHRoaXMuX3VpQ29udGFpbmVyID0gTGF5YS5Qb29sLmdldEl0ZW1CeUNsYXNzKFwiU3ByaXRlXCIsIExheWEuU3ByaXRlKTtcblxuICAgICAgICBsZXQgdXJsOiBzdHJpbmcgPSBcImltYWdlcy9jb21tb24vbG9hZF9SZWVsLnBuZ1wiO1xuICAgICAgICBMYXlhLmxvYWRlci5sb2FkKFt7IHVybDogdXJsLCB0eXBlOiBMYXlhLkxvYWRlci5JTUFHRSB9XSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAodGV4dHVyZTogTGF5YS5UZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICBsZXQgaW1nOiBMYXlhLkltYWdlID0gTGF5YS5Qb29sLmdldEl0ZW1CeUNsYXNzKFwiSW1hZ2VcIiwgTGF5YS5JbWFnZSk7XG4gICAgICAgICAgICBpbWcudGV4dHVyZSA9IExheWEubG9hZGVyLmdldFJlcyh1cmwpO1xuICAgICAgICAgICAgaW1nLnggPSAtaW1nLndpZHRoICogMC41O1xuICAgICAgICAgICAgaW1nLnkgPSAtaW1nLmhlaWdodCAqIDAuNTtcbiAgICAgICAgICAgIHRoaXMuX3VpQ29udGFpbmVyLmFkZENoaWxkKGltZyk7XG4gICAgICAgIH0pKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgc2hvd0xvYWRpbmcoKTogdm9pZCB7XG4gICAgICAgIExheWVyTWdyLklucy5zbWFsbExvYWRpbmdMYXllci5hZGRDaGlsZCh0aGlzLl9jb250ZW50KTtcbiAgICAgICAgdGhpcy5mcmFtZUxvb3AoMSwgdGhpcywgdGhpcy5lbnRlckZyYW1lKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgaGlkZUxvYWRpbmcoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9jb250ZW50ICYmIHRoaXMuX2NvbnRlbnQucGFyZW50KSB7XG4gICAgICAgICAgICB0aGlzLl91aUNvbnRhaW5lci5yb3RhdGlvbiA9IDA7XG4gICAgICAgICAgICB0aGlzLl91aUNvbnRhaW5lci5yZW1vdmVDaGlsZHJlbigpO1xuICAgICAgICAgICAgdGhpcy5fdWlDb250YWluZXIucmVtb3ZlU2VsZigpO1xuICAgICAgICAgICAgdGhpcy5fY29udGVudC5yZW1vdmVDaGlsZHJlbigpO1xuICAgICAgICAgICAgdGhpcy5fY29udGVudC5yZW1vdmVTZWxmKCk7XG4gICAgICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcihcIlNwcml0ZVwiLCB0aGlzLl91aUNvbnRhaW5lcik7XG4gICAgICAgICAgICBMYXlhLlBvb2wucmVjb3ZlcihcIlNwcml0ZVwiLCB0aGlzLl9jb250ZW50KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNsZWFyVGltZXIodGhpcywgdGhpcy5lbnRlckZyYW1lKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGVudGVyRnJhbWUodGltZTogbnVtYmVyKSB7XG4gICAgICAgIHRoaXMuX2F2ZXJhZ2VVdGlscy5wdXNoKHRoaXMuX3NwZWVkICogdGltZSk7XG4gICAgICAgIHRoaXMuX3VpQ29udGFpbmVyLnJvdGF0aW9uICs9IHRoaXMuX2F2ZXJhZ2VVdGlscy5nZXRWYWx1ZSgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogU21hbGxMb2FkaW5nO1xuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IElucygpOiBTbWFsbExvYWRpbmcge1xuICAgICAgICBpZiAoU21hbGxMb2FkaW5nLl9pbnN0YW5jZSA9PSBudWxsKSB7XG4gICAgICAgICAgICBTbWFsbExvYWRpbmcuX2luc3RhbmNlID0gbmV3IFNtYWxsTG9hZGluZygpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBTbWFsbExvYWRpbmcuX2luc3RhbmNlO1xuICAgIH1cbn0iLCJpbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBHbG9iYWxEYXRhIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2RiL0dsb2JhbERhdGFcIjtcbmltcG9ydCBBcHBDb25maWcgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvY29uZmlnL0FwcENvbmZpZ1wiO1xuaW1wb3J0IFNES01nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9tc2cvU0RLTWdyXCI7XG5pbXBvcnQgU3RvcmFnZVV0aWwgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvdXRpbHMvU3RvcmFnZVV0aWxcIjtcbmltcG9ydCBNYXRoVXRpbCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9NYXRoVXRpbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2dpblNjZW5lIGV4dGVuZHMgdWkubW9kdWxlVmlldy5sb2dpbi5Mb2dpblNjZW5lVUkge1xuXG4gICAgcHJpdmF0ZSBfYXV0aG9yaXR5U3RhdGU6IG51bWJlciA9IDM7XG4gICAgcHJpdmF0ZSB0aXBzQXJyOiBzdHJpbmdbXSA9IFtcbiAgICAgICAgXCLnrYnlvoXml7bpl7TotorkuYXnprvnur/ph5HluIHotorlpJrlk59cIixcbiAgICAgICAgXCLmraPlnKjlj6zpm4boi7Hpm4TkuIrpmLVcIixcbiAgICAgICAgXCLliKvlv5jmr4/lpKnnmoTlhY3otLnovaznm5jmir3lpZblk59cIixcbiAgICAgICAgXCLnrb7liLDlpKnmlbDotorkuYXlpZblirHotorkuLDnm5t+XCIsXG4gICAgICAgIFwi6YKA6K+35aW95Y+L5Y+s5ZSk6Iux6ZuE77yM6I635Y+W6LaF5aSa5aWW5YqxXCIsXG4gICAgICAgIFwi5q+P5aSp55m76ZmG6YO95pyJ5aSn6YeP56a757q/6YeR5biB6aKG5Y+WXCJcbiAgICBdXG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICB9XG5cbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zaG93U3RhcnR1cGxvZ28oKTtcbiAgICAgICAgdGhpcy5pbml0RGF0YSgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgaW5pdERhdGEoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudHh0X3RpcHMudmlzaWJsZSA9IHRydWU7XG4gICAgICAgIFN0b3JhZ2VVdGlsLnZlcnNpb25DaGVjaygoKSA9PiB7XG4gICAgICAgICAgICBHbG9iYWxEYXRhLklucy5zZXR1cCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgU3RvcmFnZVV0aWwubG9hZFN0b3JhZ2UoKGlzT0s6IGJvb2xlYW4pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzT0spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tBdXRob3JpdHkoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8qKiDmo4Dmn6XmmK/lkKbnlKjmiLfmjojmnYMgKi9cbiAgICBwcml2YXRlIGNoZWNrQXV0aG9yaXR5KCk6IHZvaWQge1xuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uV2VpWGluKSB7XG4gICAgICAgICAgICBTREtNZ3IuSW5zLnd4TG9naW4oKHN0YXRlOiBudW1iZXIpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9hdXRob3JpdHlTdGF0ZSA9IHN0YXRlO1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoc3RhdGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOi8v5bey57uP5o6I5p2DXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnR4dF90aXBzLnRleHQgPSB0aGlzLnRpcHNBcnJbTWF0aFV0aWwucmFuZ2VJbnQoMCwgdGhpcy50aXBzQXJyLmxlbmd0aCAtIDEpXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDI6Ly/mjojmnYPmiJDlip/ov5vlhaXlpKfljoVcbiAgICAgICAgICAgICAgICAgICAgICAgIFNES01nci5JbnMuaW5pdFdYKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmVudGVySGFsbFNjZW5lKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOi8v5rKh5pyJ5o6I5p2DXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnR4dF90aXBzLnRleHQgPSBcIueCueWHu+S7u+aEj+S9jee9rui/m+WFpea4uOaIj1wiO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMub25TaG93QnJlYXRoRWZmZWN0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy50aW1lckxvb3AoMTUwMCwgdGhpcywgdGhpcy5vblNob3dCcmVhdGhFZmZlY3QpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmVudGVySGFsbFNjZW5lKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog6L+b5YWl5aSn5Y6FICovXG4gICAgcHJpdmF0ZSBlbnRlckhhbGxTY2VuZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5yZW1vdmVJbWdTdGFydFR3ZWVuKCk7XG4gICAgICAgIHRoaXMuY2xlYXJUaW1lcih0aGlzLCB0aGlzLm9uU2hvd0JyZWF0aEVmZmVjdCk7XG4gICAgICAgIEFwcENvbmZpZy5IYWxsU2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEFwcENvbmZpZy5IYWxsU2NlbmUpO1xuICAgIH1cblxuICAgIC8qKiDmmL7npLrlvIDmnLrlm74gKi9cbiAgICBwcml2YXRlIHNob3dTdGFydHVwbG9nbygpOiB2b2lkIHtcbiAgICAgICAgLy8gbGV0IHRpbWVMaW5lID0gbmV3IExheWEuVGltZUxpbmUoKTtcbiAgICAgICAgLy8gdGltZUxpbmUuYWRkTGFiZWwoXCJ0bDFcIiwgMCkudG8odGhpcy5pbWdTdGFydCwgeyBhbHBoYTogMSB9LCAyMDAwLCBMYXlhLkVhc2UubGluZWFyTm9uZSlcbiAgICAgICAgLy8gICAgIC5hZGRMYWJlbChcInRsMlwiLCAyMDAwKS50byh0aGlzLmltZ1N0YXJ0LCB7IGFscGhhOiAwIH0sIDIwMCwgTGF5YS5FYXNlLmxpbmVhck5vbmUpO1xuICAgICAgICAvLyB0aW1lTGluZS5vbihMYXlhLkV2ZW50LkNPTVBMRVRFLCB0aGlzLmltZ1N0YXJ0LCAoKSA9PiB7XG4gICAgICAgIC8vICAgICB0aW1lTGluZS5kZXN0cm95KCk7XG4gICAgICAgIC8vICAgICB0aW1lTGluZSA9IG51bGw7XG4gICAgICAgIC8vICAgICB0aGlzLmltZ1N0YXJ0LnJlbW92ZVNlbGYoKTtcbiAgICAgICAgLy8gfSk7XG4gICAgICAgIC8vIHRpbWVMaW5lLnBsYXkoMCwgZmFsc2UpO1xuXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5pbWdTdGFydCwgeyBhbHBoYTogMSB9LCAyMDAwKTtcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLmltZ1N0YXJ0LCB7IGFscGhhOiAwLCBkZWxheTogMjAwMCB9LCAyMDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5yZW1vdmVJbWdTdGFydFR3ZWVuKCk7XG4gICAgICAgIH0pKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHJlbW92ZUltZ1N0YXJ0VHdlZW4oKTogdm9pZCB7XG4gICAgICAgIExheWEuVHdlZW4uY2xlYXJUd2Vlbih0aGlzLmltZ1N0YXJ0KTtcbiAgICAgICAgdGhpcy5pbWdTdGFydC5yZW1vdmVTZWxmKCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvblNob3dCcmVhdGhFZmZlY3QoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLl9hdXRob3JpdHlTdGF0ZSAhPSAzKSB7XG4gICAgICAgICAgICB0aGlzLnR4dF90aXBzLnRleHQgPSB0aGlzLnRpcHNBcnJbTWF0aFV0aWwucmFuZ2VJbnQoMCwgdGhpcy50aXBzQXJyLmxlbmd0aCAtIDEpXTtcbiAgICAgICAgfVxuICAgICAgICBMYXlhLlR3ZWVuLmNsZWFyVHdlZW4odGhpcy50eHRfdGlwcyk7XG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy50eHRfdGlwcywgeyBzY2FsZVg6IDAuOSwgc2NhbGVZOiAwLjkgfSwgOTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgIExheWEuVHdlZW4udG8odGhpcy50eHRfdGlwcywgeyBzY2FsZVg6IDEsIHNjYWxlWTogMSB9LCA5MDApO1xuICAgICAgICB9KSlcbiAgICB9XG59IiwiaW1wb3J0IEJhc2VWaWV3IGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvYmFzZS9CYXNlVmlld1wiO1xuaW1wb3J0IExheWVyTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2xheWVyL0xheWVyTWdyXCI7XG5pbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBIdHRwTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL25ldC9IdHRwTWdyXCI7XG5pbXBvcnQgTWF0aFV0aWwgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvdXRpbHMvTWF0aFV0aWxcIjtcbmltcG9ydCBUaW1lVXRpbCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9UaW1lVXRpbFwiO1xuaW1wb3J0IFBsYXllck1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9wbGF5ZXIvUGxheWVyTWdyXCI7XG5pbXBvcnQgTXNnTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL21zZy9Nc2dNZ3JcIjtcbmltcG9ydCBWaWV3TWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvVmlld01nclwiO1xuaW1wb3J0IFZpZXdDb25zdCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS92aWV3L2NvbnN0L1ZpZXdDb25zdFwiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMdWNrUHJpemVWaWV3IGV4dGVuZHMgQmFzZVZpZXcge1xuXG4gICAgcHJpdmF0ZSBjb3N0RGlhbW9uZDogbnVtYmVyID0gMTIwO1xuICAgIHByaXZhdGUgZnJlZVRpbWVzOiBudW1iZXIgPSAwOyAvL+WFjei0ueasoeaVsFxuICAgIHByaXZhdGUgZnJlZVRpbWU6IG51bWJlciA9IDA7IC8v5YWN6LS55pe26Ze0XG4gICAgcHJpdmF0ZSBuZXh0RnJlZVRpbWU6IG51bWJlciA9IDA7IC8v56a75LiL5qyh5YWN6LS55pe26Ze0XG4gICAgcHJpdmF0ZSBpc1RyeUFnYWluOiBib29sZWFuID0gZmFsc2U7IC8v5YaN5p2l5LiA5qyhXG4gICAgcHJpdmF0ZSBpc0ZyZWVEcmF3aW5nOiBib29sZWFuID0gZmFsc2U7IC8v5piv5ZCm5q2j5Zyo5YWN6LS55oq95aWWXG4gICAgcHJpdmF0ZSBfY3VyclR5cGU6IG51bWJlciA9IC0xO1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKExheWVyTWdyLklucy5mcmFtZUxheWVyLCB1aS5tb2R1bGVWaWV3Lmx1Y2tQcml6ZS5MdWNrUHJpemVWaWV3VUkpO1xuICAgIH1cblxuICAgIHB1YmxpYyBpbml0VUkoKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLmluaXRVSSgpO1xuICAgICAgICB0aGlzLmx1Y2tQcml6ZUluZm8oKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5pbml0VmlldygpO1xuICAgICAgICAgICAgdGhpcy5yZWZyZXNoRGlhbW9udFR4dCgpO1xuICAgICAgICAgICAgdGhpcy50aW1lckxvb3AoMTAwMCwgdGhpcywgdGhpcy5vblRpbWVIYW5kbGVyKTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwcml2YXRlIGx1Y2tQcml6ZUluZm8oY2FsbEJhY2s6IEZ1bmN0aW9uID0gbnVsbCk6IHZvaWQge1xuICAgICAgICBIdHRwTWdyLklucy5yZXF1ZXN0UHJpemVJbmZvKChyZXM6IGFueSkgPT4ge1xuICAgICAgICAgICAgaWYgKHJlcykge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzRnJlZURyYXdpbmcgPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mcmVlVGltZXMgPSBNYXRoVXRpbC5wYXJzZUludChyZXMuZnJlZV9udW0pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmZyZWVUaW1lID0gTWF0aFV0aWwucGFyc2VJbnQocmVzLnJlbWFpbl90aW1lKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uZXh0RnJlZVRpbWUgPSBNYXRoVXRpbC5wYXJzZUludChyZXMubmV4dF9mcmVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5jb3N0RGlhbW9uZCA9IE1hdGhVdGlsLnBhcnNlSW50KHJlcy5yb3VsZXR0ZV9wcmljZSk7XG4gICAgICAgICAgICAgICAgLy/lhY3otLnmrKHmlbDlt7LnlKjlroxcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5mcmVlVGltZXMgPCAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZnJlZVRpbWUgPSAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYWxsQmFjayAmJiBjYWxsQmFjaygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHByaXZhdGUgaW5pdFZpZXcoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudWkudHh0X2Rlcy50ZXh0ID0gXCLljZXmrKHmir3lpZblsIbmtojogJflhYPlrp14XCIgKyB0aGlzLmNvc3REaWFtb25kO1xuICAgIH1cblxuICAgIHByaXZhdGUgcmVmcmVzaERpYW1vbnRUeHQoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmZyZWVUaW1lID4gMCB8fCB0aGlzLmlzVHJ5QWdhaW4pIHtcbiAgICAgICAgICAgIHRoaXMudWkudHh0X2RpYW1vbmQudGV4dCA9IFwi5YWN6LS5XCI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnVpLnR4dF9kaWFtb25kLnRleHQgPSB0aGlzLmNvc3REaWFtb25kICsgXCJcIjtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBhZGRFdmVudHMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudWkuYnRuX3N0YXJ0Lm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25TdGFydEhhbmRsZXIpO1xuICAgIH1cblxuICAgIHB1YmxpYyByZW1vdmVFdmVudHMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudWkuYnRuX3N0YXJ0Lm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uU3RhcnRIYW5kbGVyKTtcbiAgICB9XG5cbiAgICAvKiog5byA5aeL5oq95aWWICovXG4gICAgcHJpdmF0ZSBvblN0YXJ0SGFuZGxlcigpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5zZXRTdGFydEJ0bkVuYWJsZWQoZmFsc2UpO1xuICAgICAgICBpZiAodGhpcy5pc1RyeUFnYWluKSB7Ly/lho3mnaXkuIDmrKFcbiAgICAgICAgICAgIHRoaXMuaXNUcnlBZ2FpbiA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5sdWNrUHJpemVEcmF3UHJpemUoTFVDS19UWVBFLkFHQUlOKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmZyZWVUaW1lcyA+IDApIHtcbiAgICAgICAgICAgIHRoaXMubHVja1ByaXplRHJhd1ByaXplKExVQ0tfVFlQRS5GUkVFKTtcbiAgICAgICAgfSBlbHNlIGlmIChQbGF5ZXJNZ3IuSW5zLkluZm8udXNlckRpYW1vbmQgPj0gdGhpcy5jb3N0RGlhbW9uZCkge1xuICAgICAgICAgICAgdGhpcy5sdWNrUHJpemVEcmF3UHJpemUoTFVDS19UWVBFLkRJQU1PTkQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5YWD5a6d5LiN6LazLOWBmuS7u+WKoemihuWFg+WunSFcIik7XG4gICAgICAgICAgICB0aGlzLnNldFN0YXJ0QnRuRW5hYmxlZCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvblRpbWVIYW5kbGVyKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5mcmVlVGltZSA+IDApIHtcbiAgICAgICAgICAgIHRoaXMudWkudHh0X3RpbWUudGV4dCA9IFwi5YWN6LS55oq95aWW5Ymp5L2Z5pe26Ze0OiBcIiArIFRpbWVVdGlsLnRpbWVGb3JtYXRTdHIodGhpcy5mcmVlVGltZSwgdHJ1ZSk7XG4gICAgICAgICAgICB0aGlzLnVpLnR4dF90aW1lLmNvbG9yID0gXCIjNjZDRDAwXCI7XG4gICAgICAgICAgICB0aGlzLmZyZWVUaW1lLS07XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5uZXh0RnJlZVRpbWUgPiAwKSB7XG4gICAgICAgICAgICB0aGlzLnVpLnR4dF90aW1lLnRleHQgPSBcIuS4i+S4gOasoeWFjei0ueaKveWlluWAkuiuoeaXtjogXCIgKyBUaW1lVXRpbC50aW1lRm9ybWF0U3RyKHRoaXMubmV4dEZyZWVUaW1lLCB0cnVlKTtcbiAgICAgICAgICAgIHRoaXMudWkudHh0X3RpbWUuY29sb3IgPSBcIiNFRTYzNjNcIjtcbiAgICAgICAgICAgIHRoaXMubmV4dEZyZWVUaW1lLS07XG4gICAgICAgICAgICB0aGlzLmZyZWVUaW1lcyA9IDA7IC8v5YWN6LS55qyh5pWw5riF6Zu2XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAodGhpcy51aS50eHRfdGltZS52aXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sdWNrUHJpemVJbmZvKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnVpLnR4dF90aW1lLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICAvL+a2iOiAl+WFg+WunVxuICAgICAgICB0aGlzLnJlZnJlc2hEaWFtb250VHh0KCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBsdWNrUHJpemVEcmF3UHJpemUodHlwZTogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX2N1cnJUeXBlID0gdHlwZTtcbiAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdERyYXdQcml6ZSh0eXBlLCAocmVzOiBhbnkpID0+IHtcbiAgICAgICAgICAgIGlmICghcmVzIHx8IHJlcy5pZCA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJARGF2aWQg5peg5rOV5q2j5bi45oq95aWWIOexu+Wei+S4uu+8mlwiLCB0eXBlKTtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXJ0QnRuRW5hYmxlZCgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBpdGVtSWQ6IG51bWJlciA9IHJlcy5pZDtcbiAgICAgICAgICAgIGxldCByb3RhdGlvbjogbnVtYmVyID0gKDggLSBpdGVtSWQpICogMzYwIC8gOCArIDM2MCAvIDE2O1xuICAgICAgICAgICAgdGhpcy5vblJvdGF0aW9uKDM2MCAqIDcgKyByb3RhdGlvbiwgaXRlbUlkKTtcbiAgICAgICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgTFVDS19UWVBFLkZSRUU6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXNGcmVlRHJhd2luZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZnJlZVRpbWVzLS07XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZnJlZVRpbWUgPSAwO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIExVQ0tfVFlQRS5ESUFNT05EOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZyZWVUaW1lcy0tO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmZyZWVUaW1lID0gMDtcbiAgICAgICAgICAgICAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdERpYW1vbmREYXRhKCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8qKiDovaznm5ggKi9cbiAgICBwcml2YXRlIG9uUm90YXRpb24ocm90YXRpb246IG51bWJlciwgaXRlbUlkOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgbGV0IGZBZGQ6IG51bWJlciA9IDAuMjtcbiAgICAgICAgdGhpcy51aS5pbWdCZy5yb3RhdGlvbiA9IHRoaXMudWkuaW1nQmcucm90YXRpb24gJSAzNjA7XG4gICAgICAgIGlmICh0aGlzLnVpLmltZ0JnLnJvdGF0aW9uID4gcm90YXRpb24pIHtcbiAgICAgICAgICAgIGZBZGQgPSAtZkFkZDtcbiAgICAgICAgfVxuICAgICAgICBsZXQgZkFkZExlbmd0aDogbnVtYmVyID0gMDtcbiAgICAgICAgbGV0IGZUb3RhbExlbmd0aDogbnVtYmVyID0gTWF0aC5hYnMocm90YXRpb24gLSB0aGlzLnVpLmltZ0JnLnJvdGF0aW9uKTtcbiAgICAgICAgbGV0IGFuaW1GdW4gPSAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoZkFkZCA+IDApIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy51aS5pbWdCZy5yb3RhdGlvbiA8IHJvdGF0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBwcm9ncmVzcyA9IGZBZGRMZW5ndGggLyBmVG90YWxMZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIC8v5Yqg6YCfXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm9ncmVzcyA8IDAuMikge1xuICAgICAgICAgICAgICAgICAgICAgICAgZkFkZCArPSAwLjI7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocHJvZ3Jlc3MgPiAwLjYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZBZGQgLT0gMC4xO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChmQWRkIDwgMC4yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmQWRkID0gMC4yO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZBZGRMZW5ndGggKz0gZkFkZDtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51aS5pbWdCZy5yb3RhdGlvbiArPSBmQWRkO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudWkuaW1nQmcucm90YXRpb24gPSByb3RhdGlvbjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51aS5pbWdCZy5jbGVhclRpbWVyKHRoaXMsIGFuaW1GdW4pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXJ0QnRuRW5hYmxlZCgpO1xuICAgICAgICAgICAgICAgICAgICAvL+aYvuekuuWlluWKseeJqeWTgVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dSZXdhcmRWaWV3KGl0ZW1JZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChmQWRkIDwgMCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnVpLmltZ0JnLnJvdGF0aW9uID4gcm90YXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51aS5pbWdCZy5yb3RhdGlvbiArPSBmQWRkO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudWkuaW1nQmcucm90YXRpb24gPSByb3RhdGlvbjtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy51aS5pbWdCZy5jbGVhclRpbWVyKHRoaXMsIGFuaW1GdW4pO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXJ0QnRuRW5hYmxlZCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVpLmltZ0JnLnRpbWVyTG9vcCgxMCwgdGhpcywgYW5pbUZ1bik7XG4gICAgfVxuXG4gICAgLyoqIOaYvuekuuWlluWKseeVjOmdoiAqL1xuICAgIHByaXZhdGUgc2hvd1Jld2FyZFZpZXcoaXRlbUlkOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgVmlld01nci5JbnMub3BlbihWaWV3Q29uc3QuTHVja1ByaXplUmV3YXJkVmlldywgKGZsYWc6IGJvb2xlYW4pID0+IHtcbiAgICAgICAgICAgIGlmIChmbGFnKSB0aGlzLmlzVHJ5QWdhaW4gPSB0cnVlO1xuICAgICAgICB9LCBpdGVtSWQpO1xuICAgICAgICBpZiAodGhpcy5fY3VyclR5cGUgPT0gTFVDS19UWVBFLkZSRUUpIHtcbiAgICAgICAgICAgIHRoaXMuaXNGcmVlRHJhd2luZyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzZXRTdGFydEJ0bkVuYWJsZWQoaXNFbmFibGVkOiBib29sZWFuID0gdHJ1ZSk6IHZvaWQge1xuICAgICAgICB0aGlzLnVpLmJ0bl9zdGFydC5tb3VzZUVuYWJsZWQgPSBpc0VuYWJsZWQ7XG4gICAgfVxufVxuXG5lbnVtIExVQ0tfVFlQRSB7XG4gICAgLyoqIOWFjei0uSAqL1xuICAgIEZSRUUsXG4gICAgLyoqIOmSu+efsyAqL1xuICAgIERJQU1PTkQsXG4gICAgLyoqIOWGjeS4gOasoSAqL1xuICAgIEFHQUlOXG59IiwiaW1wb3J0IHsgdWkgfSBmcm9tIFwiLi4vLi4vLi4vdWkvbGF5YU1heFVJXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJhbmtJdGVtIGV4dGVuZHMgdWkubW9kdWxlVmlldy5yYW5rLlJhbmtJdGVtVUkge1xuXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cblxuICAgIHNldCBkYXRhU291cmNlKHZhbHVlOiBhbnkpIHtcbiAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzLnR4dF9uYW1lLnRleHQgPSB2YWx1ZS5uaWNrX25hbWU7XG4gICAgICAgICAgICB0aGlzLnR4dF9wb3NpdGlvbi50ZXh0ID0gdmFsdWUuY2l0eSA9PSBudWxsID8gXCLngavmmJ9cIiA6IHZhbHVlLmNpdHk7XG4gICAgICAgICAgICB0aGlzLmltZ0hlYWQuc2tpbiA9IHZhbHVlLmF2YXRhcl91cmw7XG4gICAgICAgICAgICB0aGlzLnR4dF9zY29yZS50ZXh0ID0gdmFsdWUud2Vla19vdXRwdXQ7XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IEJhc2VWaWV3IGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvYmFzZS9CYXNlVmlld1wiO1xuaW1wb3J0IExheWVyTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2xheWVyL0xheWVyTWdyXCI7XG5pbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBIdHRwTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL25ldC9IdHRwTWdyXCI7XG5pbXBvcnQgTWF0aFV0aWwgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvdXRpbHMvTWF0aFV0aWxcIjtcbmltcG9ydCBSYW5rSXRlbSBmcm9tIFwiLi9SYW5rSXRlbVwiO1xuaW1wb3J0IFBhdGhDb25maWcgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvY29uZmlnL1BhdGhDb25maWdcIjtcblxuLyoqXG4gKiDmjpLooYzmppxcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmFua1ZpZXcgZXh0ZW5kcyBCYXNlVmlldyB7XG5cbiAgICBwcml2YXRlIGN1clNlbGVjdGVkSW5kZXg6IG51bWJlciA9IC0xO1xuICAgIHByaXZhdGUgaXNXb3JsZFJhbmtpbmc6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICAvKiog5pS255uK5qac5pWw5o2uICovXG4gICAgcHJpdmF0ZSBfaW5jb21lUmFua0RhdGE6IGFueTtcbiAgICAvKiog5LiW55WM5qac5pWw5o2uICovXG4gICAgcHJpdmF0ZSBfd29ybGRSYW5rRGF0YTogYW55O1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKExheWVyTWdyLklucy5mcmFtZUxheWVyLCB1aS5tb2R1bGVWaWV3LnJhbmsuUmFua1ZpZXdVSSk7XG4gICAgfVxuXG4gICAgcHVibGljIGluaXRVSSgpOiB2b2lkIHtcbiAgICAgICAgc3VwZXIuaW5pdFVJKCk7XG4gICAgICAgIHRoaXMudWkubGlzdHMucmVuZGVySGFuZGxlciA9IExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkxpc3RSZW5kZXIsIG51bGwsIGZhbHNlKTtcbiAgICAgICAgdGhpcy5pbml0V29ybGRSYW5rKCk7XG4gICAgfVxuXG4gICAgLyoqIOWIneWni+WMluS4lueVjOamnCAqL1xuICAgIHByaXZhdGUgaW5pdFdvcmxkUmFuaygpOiB2b2lkIHtcbiAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdFdvcmxkUmFua2luZ0RhdGEoKGRhdGE6IGFueSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fd29ybGRSYW5rRGF0YSA9IGRhdGE7XG4gICAgICAgICAgICBpZiAodGhpcy5fd29ybGRSYW5rRGF0YSkge1xuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlUmFua0xpc3QodGhpcy5fd29ybGRSYW5rRGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNob3dNeVdvcmxkUmFuaygpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8qKiDmmL7npLrmiJHnmoTkuJbnlYzmppzmjpLlkI0gKi9cbiAgICBwcml2YXRlIHNob3dNeVdvcmxkUmFuaygpOiB2b2lkIHtcbiAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdE15V29ybGRSYW5rRGF0YSgocmFua051bTogYW55KSA9PiB7XG4gICAgICAgICAgICBpZiAocmFua051bSkge1xuICAgICAgICAgICAgICAgIHRoaXMudWkudHh0X215UmFuay50ZXh0ID0gcmFua051bSArIFwiXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLyoqIOWIneWni+WMluaUtuebiuaOkuihjOamnCAqL1xuICAgIHByaXZhdGUgaW5pdEluY29tZVJhbmsoKTogdm9pZCB7XG4gICAgICAgIEh0dHBNZ3IuSW5zLnJlcXVlc3RJbmNvbWVSYW5raW5nRGF0YSgoZGF0YTogYW55KSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9pbmNvbWVSYW5rRGF0YSA9IGRhdGE7XG4gICAgICAgICAgICBpZiAodGhpcy5faW5jb21lUmFua0RhdGEpIHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5faW5jb21lUmFua0RhdGEgJiYgdGhpcy5faW5jb21lUmFua0RhdGEubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9pbmNvbWVSYW5rRGF0YS5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGFzc2V0OiBudW1iZXIgPSBNYXRoVXRpbC5wYXJzZVN0cmluZ051bShlbGVtZW50LndlZWtfb3V0cHV0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhc3NldCA8IDApIGVsZW1lbnQud2Vla19vdXRwdXQgPSAwO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVSYW5rTGlzdCh0aGlzLl9pbmNvbWVSYW5rRGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnNob3dNeUluY29tZVJhbmsoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqIOaYvuekuuaIkeeahOaUtuebiuamnOaOkuWQjSAqL1xuICAgIHByaXZhdGUgc2hvd015SW5jb21lUmFuaygpOiB2b2lkIHtcbiAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdE15SW5jb21lUmFua0RhdGEoKHJhbmtOdW06IGFueSkgPT4ge1xuICAgICAgICAgICAgaWYgKHJhbmtOdW0pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnVpLnR4dF9teVJhbmsudGV4dCA9IHJhbmtOdW0gKyBcIlwiO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlUmFua0xpc3QocmFua0RhdGE6IGFueSk6IHZvaWQge1xuICAgICAgICB0aGlzLnVpLnR4dF9ub1JhbmsudmlzaWJsZSA9IHRydWU7XG4gICAgICAgIHRoaXMudWkubGlzdHMudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnVpLmltZ015UmFuay52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgIGlmIChyYW5rRGF0YSAmJiByYW5rRGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aGlzLnVpLnR4dF9ub1JhbmsudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy51aS5saXN0cy52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMudWkuaW1nTXlSYW5rLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy51aS5saXN0cy5hcnJheSA9IHJhbmtEYXRhO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGFkZEV2ZW50cygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy51aS50YWJfcmFuay5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uUmFua1RhYik7XG4gICAgfVxuXG4gICAgcHVibGljIHJlbW92ZUV2ZW50cygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy51aS50YWJfcmFuay5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vblJhbmtUYWIpO1xuICAgIH1cblxuICAgIC8qKiB0YWLpgInmi6kgMOS4lueVjOamnC8x5pS255uK5qacICovXG4gICAgcHJpdmF0ZSBvblJhbmtUYWIoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmN1clNlbGVjdGVkSW5kZXggPT0gdGhpcy51aS50YWJfcmFuay5zZWxlY3RlZEluZGV4KSByZXR1cm47XG4gICAgICAgIHRoaXMuY3VyU2VsZWN0ZWRJbmRleCA9IHRoaXMudWkudGFiX3Jhbmsuc2VsZWN0ZWRJbmRleDtcbiAgICAgICAgdGhpcy5pc1dvcmxkUmFua2luZyA9ICgwID09IHRoaXMudWkudGFiX3Jhbmsuc2VsZWN0ZWRJbmRleCk7XG4gICAgICAgIGlmICh0aGlzLmlzV29ybGRSYW5raW5nKSB7ICAvL+S4lueVjOamnFxuICAgICAgICAgICAgdGhpcy51aS5saXN0cy5oZWlnaHQgPSA0NjU7XG4gICAgICAgICAgICB0aGlzLnVpLmxpc3RzLnkgPSA0NTQ7XG4gICAgICAgICAgICB0aGlzLl93b3JsZFJhbmtEYXRhICE9IG51bGwgPyB0aGlzLnVwZGF0ZVJhbmtMaXN0KHRoaXMuX3dvcmxkUmFua0RhdGEpIDogdGhpcy5pbml0V29ybGRSYW5rKCk7XG4gICAgICAgIH0gZWxzZSB7ICAgIC8v5pS255uK5qacXG4gICAgICAgICAgICB0aGlzLnVpLmxpc3RzLmhlaWdodCA9IDczNTtcbiAgICAgICAgICAgIHRoaXMudWkubGlzdHMueSA9IDE4NTtcbiAgICAgICAgICAgIHRoaXMuX2luY29tZVJhbmtEYXRhICE9IG51bGwgPyB0aGlzLnVwZGF0ZVJhbmtMaXN0KHRoaXMuX2luY29tZVJhbmtEYXRhKSA6IHRoaXMuaW5pdEluY29tZVJhbmsoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgb25MaXN0UmVuZGVyKGNlbGw6IExheWEuQm94LCBpbmRleDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGlmIChpbmRleCA+IHRoaXMudWkubGlzdHMuYXJyYXkubGVuZ3RoKSByZXR1cm47XG4gICAgICAgIGxldCBpdGVtOiBSYW5rSXRlbSA9IGNlbGwuZ2V0Q2hpbGRCeU5hbWUoXCJpdGVtXCIpIGFzIFJhbmtJdGVtO1xuICAgICAgICBpZiAoaXRlbSkge1xuICAgICAgICAgICAgaXRlbS5kYXRhU291cmNlID0gdGhpcy51aS5saXN0cy5hcnJheVtpbmRleF07XG4gICAgICAgICAgICBpdGVtLmJveF90aXRsZS52aXNpYmxlID0gdGhpcy5pc1dvcmxkUmFua2luZztcbiAgICAgICAgICAgIGl0ZW0uYm94X3ByaWNlLnZpc2libGUgPSAhdGhpcy5pc1dvcmxkUmFua2luZztcbiAgICAgICAgICAgIGl0ZW0uaW1nUmFuay52aXNpYmxlID0gaW5kZXggPCAzO1xuICAgICAgICAgICAgaWYgKGl0ZW0uaW1nUmFuay52aXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgaXRlbS5pbWdSYW5rLnNraW4gPSBQYXRoQ29uZmlnLlJBTktfUEFUSC5yZXBsYWNlKFwiezB9XCIsIChpbmRleCArIDEpICsgXCJcIik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGl0ZW0udHh0X3JhbmsudGV4dCA9IChpbmRleCArIDEpICsgXCJcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBIZXJvQ29uZmlnVk8gZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZGIvdm8vSGVyb0NvbmZpZ1ZPXCI7XG5pbXBvcnQgSGVyb1ZPIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2RiL3ZvL0hlcm9WT1wiO1xuaW1wb3J0IEdsb2JhbERhdGEgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZGIvR2xvYmFsRGF0YVwiO1xuaW1wb3J0IFBhdGhDb25maWcgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvY29uZmlnL1BhdGhDb25maWdcIjtcbmltcG9ydCBIYWxsQ29udHJvbCBmcm9tIFwiLi4vLi4vaGFsbC9IYWxsQ29udHJvbFwiO1xuaW1wb3J0IENvbG9yVXRpbCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9Db2xvclV0aWxcIjtcbmltcG9ydCBTaGFyZU1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9tc2cvU2hhcmVNZ3JcIjtcbmltcG9ydCBNYXRoVXRpbCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9NYXRoVXRpbFwiO1xuaW1wb3J0IFBsYXllck1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9wbGF5ZXIvUGxheWVyTWdyXCI7XG5pbXBvcnQgTXNnTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL21zZy9Nc2dNZ3JcIjtcbmltcG9ydCBIZWFkSXRlbSBmcm9tIFwiLi4vLi4vaGFsbC92aWV3L2l0ZW0vSGVhZEl0ZW1cIjtcbmltcG9ydCBTdG9yYWdlVXRpbCBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS91dGlscy9TdG9yYWdlVXRpbFwiO1xuaW1wb3J0IFZpZXdNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3Evdmlldy9WaWV3TWdyXCI7XG5pbXBvcnQgVmlld0NvbnN0IGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvY29uc3QvVmlld0NvbnN0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNob3BJdGVtIGV4dGVuZHMgdWkubW9kdWxlVmlldy5zaG9wLlNob3BJdGVtVUkge1xuXG4gICAgcHJpdmF0ZSBfY29uZmlnOiBIZXJvQ29uZmlnVk87XG4gICAgcHJpdmF0ZSBfdm86IEhlcm9WTztcbiAgICBwcml2YXRlIF9maXJzdExvY2tJZDogbnVtYmVyID0gMDtcbiAgICBwcml2YXRlIF9idXlQcmljZTogbnVtYmVyID0gMDtcblxuICAgIGNvbnN0cnVjdG9yKCkgeyBzdXBlcigpOyB9XG5cbiAgICBzZXQgZGF0YVNvdXJjZSh2YWx1ZTogYW55KSB7XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgdGhpcy5fY29uZmlnID0gdmFsdWU7XG4gICAgICAgICAgICB0aGlzLmluaXQoKTtcbiAgICAgICAgICAgIHRoaXMuYWRkRXZlbnRzKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGluaXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuX3ZvID0gR2xvYmFsRGF0YS5nZXREYXRhKEdsb2JhbERhdGEuSGVyb1ZPLCB0aGlzLl9jb25maWcuaWQpO1xuICAgICAgICBpZiAodGhpcy5fdm8pIHtcbiAgICAgICAgICAgIHRoaXMuaW1nSWNvbi5za2luID0gUGF0aENvbmZpZy5IRUFEX1BBVEggKyB0aGlzLl92by5pbWdVcmw7XG4gICAgICAgICAgICBpZiAoSGFsbENvbnRyb2wuSW5zLk1vZGVsLmhlcm9MZXZlbCA8IHRoaXMuX2NvbmZpZy5pZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuaW1nSWNvbi5ncmF5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLmJveE5hbWUudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmltZ0ljb24uZ3JheSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMuYm94TmFtZS52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLnR4dF9sZXZlbC50ZXh0ID0gdGhpcy5fY29uZmlnLmlkICsgXCJcIjtcbiAgICAgICAgICAgICAgICBsZXQgc3RyTmV3TmFtZTogc3RyaW5nID0gJyc7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMuX2NvbmZpZy5uYW1lLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWxlbWVudCA9IHRoaXMuX2NvbmZpZy5uYW1lW2luZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0ck5ld05hbWUgKz0gZWxlbWVudCArICdcXG4nO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMudHh0X25hbWUudGV4dCA9IHN0ck5ld05hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmJ0bl9idXlMb2NrLnZpc2libGUgPSBIYWxsQ29udHJvbC5JbnMuTW9kZWwuaGVyb0xldmVsIDwgdGhpcy5fY29uZmlnLnVubG9ja05lZWRJZDtcbiAgICAgICAgICAgIHRoaXMuYnRuX2J1eS52aXNpYmxlID0gIXRoaXMuYnRuX2J1eUxvY2sudmlzaWJsZTtcbiAgICAgICAgICAgIGlmICh0aGlzLmJ0bl9idXkudmlzaWJsZSAmJiBIYWxsQ29udHJvbC5JbnMuTW9kZWwuaGVyb0xldmVsIDwgdGhpcy5fY29uZmlnLnVubG9ja05lZWRJZCAmJiB0aGlzLl9maXJzdExvY2tJZCA8IDEpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9maXJzdExvY2tJZCA9IHRoaXMuX2NvbmZpZy51bmxvY2tOZWVkSWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5fZmlyc3RMb2NrSWQgPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5idG5fYnV5RGlhbW9uZC52aXNpYmxlID0gdGhpcy5fZmlyc3RMb2NrSWQgPT0gdGhpcy5fY29uZmlnLnVubG9ja05lZWRJZDtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5idG5fYnV5RGlhbW9uZC52aXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlQWR2QnRuKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmJ0bl9idXlEaWFtb25kLnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMudXBkYXRlQnV5UHJpY2UoKTtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlTG9ja0hlcm9CdG4oKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlQnV5UHJpY2UoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmJ0bl9idXkudmlzaWJsZSkge1xuICAgICAgICAgICAgdGhpcy5fYnV5UHJpY2UgPSBIYWxsQ29udHJvbC5JbnMuTW9kZWwuZ2V0SGVyb0J1eVByaWNlKHRoaXMuX2NvbmZpZy5idXlQcmljZSwgSGFsbENvbnRyb2wuSW5zLk1vZGVsLnF1ZXJ5QnV5SGVyb1JlY29yZCh0aGlzLl9jb25maWcuaWQpKTtcbiAgICAgICAgICAgIHRoaXMudHh0X3ByaWNlLnRleHQgPSBNYXRoVXRpbC51bml0Q29udmVyc2lvbih0aGlzLl9idXlQcmljZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGFkZEV2ZW50cygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5idG5fYnV5Lm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25CdXlIZXJvKTtcbiAgICAgICAgdGhpcy5idG5fYWR2Lm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25Mb29rQWR2KTtcbiAgICAgICAgdGhpcy5idG5fYnV5RGlhbW9uZC5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uQnV5RGlhbW9uZEhlcm8pO1xuICAgIH1cblxuICAgIHByaXZhdGUgcmVtb3ZlRXZlbnRzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmJ0bl9idXkub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25CdXlIZXJvKTtcbiAgICAgICAgdGhpcy5idG5fYWR2Lm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uTG9va0Fkdik7XG4gICAgICAgIHRoaXMuYnRuX2J1eURpYW1vbmQub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25CdXlEaWFtb25kSGVybyk7XG4gICAgfVxuXG4gICAgLyoqIOi0reS5sOiLsembhCAqL1xuICAgIHByaXZhdGUgb25CdXlIZXJvKCk6IHZvaWQge1xuICAgICAgICBpZiAoUGxheWVyTWdyLklucy5JbmZvLnVzZXJHb2xkID49IHRoaXMuX2J1eVByaWNlKSB7XG4gICAgICAgICAgICBIYWxsQ29udHJvbC5JbnMuYnV5SGVybyh0aGlzLl9jb25maWcpO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVCdXlQcmljZSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgTXNnTWdyLklucy5zaG93TXNnKFwi5Li75Lq6LOmTnOmSseS4jeWkn+WWlH7lv6vljrvlgZrku7vliqHlkKcuLi5cIik7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKiog55yL6KeG6aKRICovXG4gICAgcHJpdmF0ZSBvbkxvb2tBZHYoKTogdm9pZCB7XG4gICAgICAgIFNoYXJlTWdyLklucy5zaG93U2hhcmVPckFkdigoKSA9PiB7XG4gICAgICAgICAgICBsZXQgaGVybzogSGVhZEl0ZW0gPSBIYWxsQ29udHJvbC5JbnMuY3JlYXRlSGVybyh0aGlzLl9jb25maWcuaWQsIHRydWUpO1xuICAgICAgICAgICAgaWYgKGhlcm8gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIFN0b3JhZ2VVdGlsLnNhdmVIZXJvU3RvcmUodGhpcy5fY29uZmlnLmlkKTtcbiAgICAgICAgICAgICAgICBNc2dNZ3IuSW5zLnNob3dNc2coXCLkuLvkuros5q2m5bCG5bey5omT5YyF5Yiw566x5a2Q6YeM5LqG5ZOmfuiusOW+l+eCueWHu+euseWtkOWWsiFcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUFkdkJ0bigpO1xuICAgICAgICB9LCAxMSwgZmFsc2UsIHRydWUpO1xuICAgIH1cblxuICAgIC8qKiDpkrvnn7PotK3kubDoi7Hpm4QgKi9cbiAgICBwcml2YXRlIG9uQnV5RGlhbW9uZEhlcm8oKTogdm9pZCB7XG4gICAgICAgIFZpZXdNZ3IuSW5zLm9wZW4oVmlld0NvbnN0LkRpYW1vbmRCdXlWaWV3LCBudWxsLCB7IHR5cGU6IFwiaGVyb1wiLCB2YWx1ZTogdGhpcy5fY29uZmlnLmlkIH0pO1xuICAgIH1cblxuICAgIC8qKiDmnKrop6PplIHmjInpkq7lpITnkIYgKi9cbiAgICBwcml2YXRlIHVwZGF0ZUxvY2tIZXJvQnRuKCk6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMuYnRuX2J1eUxvY2sudmlzaWJsZSkgcmV0dXJuO1xuICAgICAgICBsZXQgbG9ja0NvbmZpZzogSGVyb1ZPID0gR2xvYmFsRGF0YS5nZXREYXRhKEdsb2JhbERhdGEuSGVyb1ZPLCB0aGlzLl9jb25maWcudW5sb2NrTmVlZElkKTtcbiAgICAgICAgaWYgKGxvY2tDb25maWcpIHtcbiAgICAgICAgICAgIHRoaXMuaW1nSGVyby5za2luID0gUGF0aENvbmZpZy5IRUFEX1BBVEggKyBsb2NrQ29uZmlnLmltZ1VybDtcbiAgICAgICAgICAgIC8vIGlmICghdGhpcy5pbWdIZXJvLmZpbHRlcnMpIHtcbiAgICAgICAgICAgIC8vICAgICB0aGlzLmltZ0hlcm8uZmlsdGVycyA9IENvbG9yVXRpbC5jcmVhdGVDb2xvckZpbHRlcigyKTtcbiAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgIC8vIHRoaXMuaW1nSGVyby5hbHBoYSA9IDAuNjtcbiAgICAgICAgICAgIHRoaXMudHh0X3VubG9ja0xldmVsLnRleHQgPSB0aGlzLl9jb25maWcudW5sb2NrTmVlZElkICsgXCJcIjtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jb25maWcudW5sb2NrTmVlZElkID49IDEwMDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLnR4dF91bmxvY2tMZXZlbC50ZXh0ID0gXCI/XCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIHVwZGF0ZUFkdkJ0bigpOiB2b2lkIHtcbiAgICAgICAgaWYgKFNoYXJlTWdyLklucy5nZXRBZFRpbWVzKDExKSA8IDEgJiYgU2hhcmVNZ3IuSW5zLmdldFNoYXJlVGltZXMoMTEpIDwgMSkge1xuICAgICAgICAgICAgdGhpcy5idG5fYWR2LnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChTaGFyZU1nci5JbnMuaXNBZFN0YWdlKDExKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuYnRuX2Fkdi5za2luID0gXCJpbWFnZXMvc2hvcC9zaG9wX2ZyZWVfdmlkZW8ucG5nXCI7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuYnRuX2Fkdi5za2luID0gXCJpbWFnZXMvc2hvcC9zaG9wX2ZyZWVfc2hhcmUucG5nXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IEJhc2VWaWV3IGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvYmFzZS9CYXNlVmlld1wiO1xuaW1wb3J0IExheWVyTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL2xheWVyL0xheWVyTWdyXCI7XG5pbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBTaG9wSXRlbSBmcm9tIFwiLi9TaG9wSXRlbVwiO1xuaW1wb3J0IEdsb2JhbERhdGEgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3EvZGIvR2xvYmFsRGF0YVwiO1xuaW1wb3J0IFZpZXdNZ3IgZnJvbSBcIi4uLy4uLy4uL2NvcmVfd3Evdmlldy9WaWV3TWdyXCI7XG5pbXBvcnQgVmlld0NvbnN0IGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL3ZpZXcvY29uc3QvVmlld0NvbnN0XCI7XG5cbi8qKlxuICog5ZWG5bqX55WM6Z2iXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNob3BWaWV3IGV4dGVuZHMgQmFzZVZpZXcge1xuXG4gICAgcHJpdmF0ZSBfY3VyQnV5SW5kZXg6IG51bWJlciA9IDA7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoTGF5ZXJNZ3IuSW5zLmZyYW1lTGF5ZXIsIHVpLm1vZHVsZVZpZXcuc2hvcC5TaG9wVmlld1VJKTtcbiAgICAgICAgdGhpcy5zZXRSZXNvdXJjZXMoW1wic2hvcFwiXSk7XG4gICAgfVxuXG4gICAgLy/liJ3lp4vljJZcbiAgICBwdWJsaWMgaW5pdFVJKCk6IHZvaWQge1xuICAgICAgICBzdXBlci5pbml0VUkoKTtcbiAgICAgICAgbGV0IGxpc3REYXRhcyA9IEdsb2JhbERhdGEuZ2V0QWxsVmFsdWUoR2xvYmFsRGF0YS5IZXJvQ29uZmlnVk8pO1xuICAgICAgICBpZiAobGlzdERhdGFzKSB7XG4gICAgICAgICAgICB0aGlzLnVpLmxpc3RzLnZTY3JvbGxCYXJTa2luID0gXCJcIjtcbiAgICAgICAgICAgIHRoaXMudWkubGlzdHMuYXJyYXkgPSBsaXN0RGF0YXM7XG4gICAgICAgICAgICB0aGlzLnVpLmxpc3RzLnJlbmRlckhhbmRsZXIgPSBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25MaXN0UmVuZGVyLCBudWxsLCBmYWxzZSk7XG4gICAgICAgICAgICB0aGlzLmZyYW1lT25jZSg1LCB0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2N1ckJ1eUluZGV4ID4gMCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnVpLmxpc3RzLnNjcm9sbFRvKHRoaXMuX2N1ckJ1eUluZGV4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqIOa3u+WKoOebkeWQrOS6i+S7tiAqL1xuICAgIHB1YmxpYyBhZGRFdmVudHMoKTogdm9pZCB7XG4gICAgICAgIHRoaXMudWkuYnRuX2Nsb3NlLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25DbG9zZUhhbmRsZXIpO1xuICAgIH1cblxuICAgIC8qKiDnp7vpmaTnm5HlkKzkuovku7YgKi9cbiAgICBwdWJsaWMgcmVtb3ZlRXZlbnRzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLnVpLmJ0bl9jbG9zZS5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkNsb3NlSGFuZGxlcik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkxpc3RSZW5kZXIoY2VsbDogTGF5YS5Cb3gsIGluZGV4OiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgaWYgKGluZGV4ID4gdGhpcy51aS5saXN0cy5hcnJheS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBsZXQgaXRlbTogU2hvcEl0ZW0gPSBjZWxsLmdldENoaWxkQnlOYW1lKFwic2hvcEl0ZW1cIikgYXMgU2hvcEl0ZW07XG4gICAgICAgIGlmIChpdGVtKSB7XG4gICAgICAgICAgICBpdGVtLmRhdGFTb3VyY2UgPSB0aGlzLnVpLmxpc3RzLmFycmF5W2luZGV4XTtcbiAgICAgICAgICAgIGlmIChpdGVtLmJ0bl9idXkudmlzaWJsZSAmJiBpbmRleCA8IHRoaXMudWkubGlzdHMuYXJyYXkubGVuZ3RoIC0gMykge1xuICAgICAgICAgICAgICAgIHRoaXMuX2N1ckJ1eUluZGV4ID0gaW5kZXggLSAyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkNsb3NlSGFuZGxlcigpOiB2b2lkIHtcbiAgICAgICAgVmlld01nci5JbnMuY2xvc2UoVmlld0NvbnN0LlNob3BWaWV3KTtcbiAgICB9XG5cbn0iLCJpbXBvcnQgeyB1aSB9IGZyb20gXCIuLi8uLi8uLi91aS9sYXlhTWF4VUlcIjtcbmltcG9ydCBIdHRwTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL25ldC9IdHRwTWdyXCI7XG5pbXBvcnQgTXNnTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL21zZy9Nc2dNZ3JcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGFza0l0ZW0gZXh0ZW5kcyB1aS5tb2R1bGVWaWV3LnRhc2suVGFza0l0ZW1VSSB7XG5cbiAgICBwcml2YXRlIF9pbmZvOiBhbnk7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHsgc3VwZXIoKTsgfVxuXG4gICAgc2V0IGRhdGFTb3VyY2UodmFsdWU6IGFueSkge1xuICAgICAgICB0aGlzLl9pbmZvID0gdmFsdWU7XG4gICAgICAgIGlmICh0aGlzLl9pbmZvKSB7XG4gICAgICAgICAgICBsZXQgZmluaXNoTnVtOiBudW1iZXIgPSB0aGlzLl9pbmZvLnRhc2tfbnVtIHx8IDA7XG4gICAgICAgICAgICBpZiAoZmluaXNoTnVtID4gdGhpcy5faW5mby5udW0pIHtcbiAgICAgICAgICAgICAgICBmaW5pc2hOdW0gPSB0aGlzLl9pbmZvLm51bTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMudHh0X3RpdGxlLnRleHQgPSB0aGlzLl9pbmZvLnRpdGxlICsgXCIoXCIgKyBmaW5pc2hOdW0gKyBcIi9cIiArIHRoaXMuX2luZm8ubnVtICsgXCIpXCI7XG4gICAgICAgICAgICB0aGlzLnR4dF9kaWFtb25kLnRleHQgPSBcIitcIiArIHRoaXMuX2luZm8ucmV3YXJkO1xuICAgICAgICAgICAgdGhpcy5idG5fZ2V0LnZpc2libGUgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9pbmZvLnRhc2tfc3RhdHVzID4gMCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9pbmZvLnRhc2tfc3RhdHVzID4gMSkgey8v5bey6aKG5Y+WXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYnRuX2dldC52aXNpYmxlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5idG5fZ2V0LmRpc2FibGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmJ0bl9nZXQuZGlzYWJsZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5hZGRFdmVudHMoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgYWRkRXZlbnRzKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmJ0bl9nZXQub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkdldFJld2FyZCk7XG4gICAgICAgIHRoaXMuYnRuX2dvLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25Hb3RvVmlldyk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBvbkdldFJld2FyZCgpOiB2b2lkIHtcbiAgICAgICAgSHR0cE1nci5JbnMucmVxdWVzdFRhc2tQcml6ZSh0aGlzLl9pbmZvLmlkLCAoX3JlczogYW55KSA9PiB7XG4gICAgICAgICAgICBpZiAoX3Jlcykge1xuICAgICAgICAgICAgICAgIHRoaXMuX2luZm8uc3RhdHVzID0gMjtcbiAgICAgICAgICAgICAgICB0aGlzLmJ0bl9nZXQudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIEh0dHBNZ3IuSW5zLnJlcXVlc3REaWFtb25kRGF0YSgpO1xuICAgICAgICAgICAgICAgIE1zZ01nci5JbnMuc2hvd01zZyhcIuS7u+WKoeWlluWKsemihuWPluaIkOWKnyFcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHByaXZhdGUgb25Hb3RvVmlldygpOiB2b2lkIHtcbiAgICAgICAgXG4gICAgfVxufSIsImltcG9ydCBCYXNlVmlldyBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS92aWV3L2Jhc2UvQmFzZVZpZXdcIjtcbmltcG9ydCBMYXllck1nciBmcm9tIFwiLi4vLi4vLi4vY29yZV93cS9sYXllci9MYXllck1nclwiO1xuaW1wb3J0IHsgdWkgfSBmcm9tIFwiLi4vLi4vLi4vdWkvbGF5YU1heFVJXCI7XG5pbXBvcnQgVGFza0l0ZW0gZnJvbSBcIi4vVGFza0l0ZW1cIjtcbmltcG9ydCBIdHRwTWdyIGZyb20gXCIuLi8uLi8uLi9jb3JlX3dxL25ldC9IdHRwTWdyXCI7XG5cbi8qKlxuICog5Lu75Yqh55WM6Z2iXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRhc2tWaWV3IGV4dGVuZHMgQmFzZVZpZXcge1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKExheWVyTWdyLklucy5mcmFtZUxheWVyLCB1aS5tb2R1bGVWaWV3LnRhc2suVGFza1ZpZXdVSSk7XG4gICAgICAgIHRoaXMuc2V0UmVzb3VyY2VzKFtcInRhc2tcIl0pO1xuICAgIH1cblxuICAgIHB1YmxpYyBpbml0VUkoKTogdm9pZCB7XG4gICAgICAgIHN1cGVyLmluaXRVSSgpO1xuICAgICAgICB0aGlzLnVpLnR4dF9ub1Rhc2sudmlzaWJsZSA9IHRydWU7XG4gICAgICAgIHRoaXMudWkubGlzdHMudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICBIdHRwTWdyLklucy5yZXF1ZXN0VGFza0luZm8oKGRhdGE6IGFueSkgPT4ge1xuICAgICAgICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnVpLnR4dF9ub1Rhc2sudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMudWkubGlzdHMuYXJyYXkgPSBkYXRhO1xuICAgICAgICAgICAgICAgIHRoaXMudWkubGlzdHMucmVuZGVySGFuZGxlciA9IExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkxpc3RSZW5kZXIsIG51bGwsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICB0aGlzLnVpLmxpc3RzLnZpc2libGUgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBwcml2YXRlIG9uTGlzdFJlbmRlcihjZWxsOiBMYXlhLkJveCwgaW5kZXg6IG51bWJlcik6IHZvaWQge1xuICAgICAgICBpZiAoaW5kZXggPiB0aGlzLnVpLmxpc3RzLmFycmF5Lmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBpdGVtOiBUYXNrSXRlbSA9IGNlbGwuZ2V0Q2hpbGRCeU5hbWUoXCJpdGVtXCIpIGFzIFRhc2tJdGVtO1xuICAgICAgICBpZiAoaXRlbSkge1xuICAgICAgICAgICAgaXRlbS5kYXRhU291cmNlID0gdGhpcy51aS5saXN0cy5hcnJheVtpbmRleF07XG4gICAgICAgIH1cbiAgICB9XG59IiwiLyoqVGhpcyBjbGFzcyBpcyBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBieSBMYXlhQWlySURFLCBwbGVhc2UgZG8gbm90IG1ha2UgYW55IG1vZGlmaWNhdGlvbnMuICovXG5pbXBvcnQgVmlldz1MYXlhLlZpZXc7XG5pbXBvcnQgRGlhbG9nPUxheWEuRGlhbG9nO1xuaW1wb3J0IFNjZW5lPUxheWEuU2NlbmU7XG52YXIgUkVHOiBGdW5jdGlvbiA9IExheWEuQ2xhc3NVdGlscy5yZWdDbGFzcztcbmV4cG9ydCBtb2R1bGUgdWkubW9kdWxlVmlldy5jb21tb24ge1xyXG4gICAgZXhwb3J0IGNsYXNzIERpYW1vbmRCdXlWaWV3VUkgZXh0ZW5kcyBMYXlhLlZpZXcge1xyXG5cdFx0cHVibGljIGJ0bl9jbG9zZTpMYXlhLkJ1dHRvbjtcblx0XHRwdWJsaWMgdHh0X3RpdGxlOkxheWEuTGFiZWw7XG5cdFx0cHVibGljIGJ0bl9idXk6TGF5YS5CdXR0b247XG5cdFx0cHVibGljIHR4dF9kaWFtb25kOkxheWEuTGFiZWw7XG4gICAgICAgIGNvbnN0cnVjdG9yKCl7IHN1cGVyKCl9XHJcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4oKTp2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuY3JlYXRlQ2hpbGRyZW4oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkU2NlbmUoXCJtb2R1bGVWaWV3L2NvbW1vbi9EaWFtb25kQnV5Vmlld1wiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3LmNvbW1vbi5EaWFtb25kQnV5Vmlld1VJXCIsRGlhbW9uZEJ1eVZpZXdVSSk7XHJcbiAgICBleHBvcnQgY2xhc3MgR29sZE5vdEVub3VnaFZpZXdVSSBleHRlbmRzIExheWEuVmlldyB7XHJcblx0XHRwdWJsaWMgdHh0X3ByaWNlOkxheWEuTGFiZWw7XG5cdFx0cHVibGljIGJ0bl9nZXQ6TGF5YS5CdXR0b247XG5cdFx0cHVibGljIHR4dF9idG46TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgdHh0X2xhc3RUaW1lOkxheWEuTGFiZWw7XG4gICAgICAgIGNvbnN0cnVjdG9yKCl7IHN1cGVyKCl9XHJcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4oKTp2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuY3JlYXRlQ2hpbGRyZW4oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkU2NlbmUoXCJtb2R1bGVWaWV3L2NvbW1vbi9Hb2xkTm90RW5vdWdoVmlld1wiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3LmNvbW1vbi5Hb2xkTm90RW5vdWdoVmlld1VJXCIsR29sZE5vdEVub3VnaFZpZXdVSSk7XHJcbiAgICBleHBvcnQgY2xhc3MgTGV2ZWxSZXdhcmRWaWV3VUkgZXh0ZW5kcyBMYXlhLlZpZXcge1xyXG5cdFx0cHVibGljIHR4dF9sZXZlbEdpZnQ6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgYnRuX2dldDpMYXlhLkJ1dHRvbjtcblx0XHRwdWJsaWMgdHh0X2FjYzpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfZ29sZDpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyBidG5fc2hhcmU6TGF5YS5CdXR0b247XG5cdFx0cHVibGljIHR4dF9kaWFtb25kOkxheWEuTGFiZWw7XG4gICAgICAgIGNvbnN0cnVjdG9yKCl7IHN1cGVyKCl9XHJcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4oKTp2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuY3JlYXRlQ2hpbGRyZW4oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkU2NlbmUoXCJtb2R1bGVWaWV3L2NvbW1vbi9MZXZlbFJld2FyZFZpZXdcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgUkVHKFwidWkubW9kdWxlVmlldy5jb21tb24uTGV2ZWxSZXdhcmRWaWV3VUlcIixMZXZlbFJld2FyZFZpZXdVSSk7XHJcbiAgICBleHBvcnQgY2xhc3MgT2ZmTGluZVJld2FyZFZpZXdVSSBleHRlbmRzIExheWEuVmlldyB7XHJcblx0XHRwdWJsaWMgdHh0X2dvbGQ6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgYnRuX2dldDpMYXlhLkJ1dHRvbjtcbiAgICAgICAgY29uc3RydWN0b3IoKXsgc3VwZXIoKX1cclxuICAgICAgICBjcmVhdGVDaGlsZHJlbigpOnZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5jcmVhdGVDaGlsZHJlbigpO1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRTY2VuZShcIm1vZHVsZVZpZXcvY29tbW9uL09mZkxpbmVSZXdhcmRWaWV3XCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFJFRyhcInVpLm1vZHVsZVZpZXcuY29tbW9uLk9mZkxpbmVSZXdhcmRWaWV3VUlcIixPZmZMaW5lUmV3YXJkVmlld1VJKTtcclxufVxyXG5leHBvcnQgbW9kdWxlIHVpLm1vZHVsZVZpZXcuZGF5U2lnbiB7XHJcbiAgICBleHBvcnQgY2xhc3MgRGF5U2lnbkl0ZW1VSSBleHRlbmRzIExheWEuVmlldyB7XHJcblx0XHRwdWJsaWMgYnRuX2dldDpMYXlhLkJ1dHRvbjtcblx0XHRwdWJsaWMgaW1nR2V0OkxheWEuSW1hZ2U7XG5cdFx0cHVibGljIHR4dF9kaWFtb25kOkxheWEuTGFiZWw7XG5cdFx0cHVibGljIHR4dF90aXRsZTpMYXlhLkxhYmVsO1xuICAgICAgICBjb25zdHJ1Y3RvcigpeyBzdXBlcigpfVxyXG4gICAgICAgIGNyZWF0ZUNoaWxkcmVuKCk6dm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLmNyZWF0ZUNoaWxkcmVuKCk7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZFNjZW5lKFwibW9kdWxlVmlldy9kYXlTaWduL0RheVNpZ25JdGVtXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFJFRyhcInVpLm1vZHVsZVZpZXcuZGF5U2lnbi5EYXlTaWduSXRlbVVJXCIsRGF5U2lnbkl0ZW1VSSk7XHJcbiAgICBleHBvcnQgY2xhc3MgRGF5U2lnblZpZXdVSSBleHRlbmRzIExheWEuVmlldyB7XHJcblx0XHRwdWJsaWMgYnRuX2dldDpMYXlhLkJ1dHRvbjtcblx0XHRwdWJsaWMgYnRuX2xhc3RHZXQ6TGF5YS5CdXR0b247XG5cdFx0cHVibGljIGltZ0dldDpMYXlhLkltYWdlO1xuXHRcdHB1YmxpYyB0eHRfZGlhbW9uZDpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfdGl0bGU6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgYnRuX2Nsb3NlOkxheWEuQnV0dG9uO1xuXHRcdHB1YmxpYyBsaXN0czpMYXlhLkxpc3Q7XG4gICAgICAgIGNvbnN0cnVjdG9yKCl7IHN1cGVyKCl9XHJcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4oKTp2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuY3JlYXRlQ2hpbGRyZW4oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkU2NlbmUoXCJtb2R1bGVWaWV3L2RheVNpZ24vRGF5U2lnblZpZXdcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgUkVHKFwidWkubW9kdWxlVmlldy5kYXlTaWduLkRheVNpZ25WaWV3VUlcIixEYXlTaWduVmlld1VJKTtcclxufVxyXG5leHBvcnQgbW9kdWxlIHVpLm1vZHVsZVZpZXcuZm9sbG93IHtcclxuICAgIGV4cG9ydCBjbGFzcyBGb2xsb3dWaWV3VUkgZXh0ZW5kcyBMYXlhLlNjZW5lIHtcclxuXHRcdHB1YmxpYyBidG5fZ2V0OkxheWEuQnV0dG9uO1xuXHRcdHB1YmxpYyBidG5fY2xvc2U6TGF5YS5CdXR0b247XG4gICAgICAgIGNvbnN0cnVjdG9yKCl7IHN1cGVyKCl9XHJcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4oKTp2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuY3JlYXRlQ2hpbGRyZW4oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkU2NlbmUoXCJtb2R1bGVWaWV3L2ZvbGxvdy9Gb2xsb3dWaWV3XCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFJFRyhcInVpLm1vZHVsZVZpZXcuZm9sbG93LkZvbGxvd1ZpZXdVSVwiLEZvbGxvd1ZpZXdVSSk7XHJcbn1cclxuZXhwb3J0IG1vZHVsZSB1aS5tb2R1bGVWaWV3Lmd1aWRlIHtcclxuICAgIGV4cG9ydCBjbGFzcyBHdWlkZVNwZWFrVmlld1VJIGV4dGVuZHMgTGF5YS5WaWV3IHtcclxuXHRcdHB1YmxpYyB0eHRfY29udGVudDpMYXlhLkxhYmVsO1xuICAgICAgICBjb25zdHJ1Y3RvcigpeyBzdXBlcigpfVxyXG4gICAgICAgIGNyZWF0ZUNoaWxkcmVuKCk6dm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLmNyZWF0ZUNoaWxkcmVuKCk7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZFNjZW5lKFwibW9kdWxlVmlldy9ndWlkZS9HdWlkZVNwZWFrVmlld1wiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3Lmd1aWRlLkd1aWRlU3BlYWtWaWV3VUlcIixHdWlkZVNwZWFrVmlld1VJKTtcclxufVxyXG5leHBvcnQgbW9kdWxlIHVpLm1vZHVsZVZpZXcuaGFsbCB7XHJcbiAgICBleHBvcnQgY2xhc3MgQ3VycmVuY3lWaWV3VUkgZXh0ZW5kcyBMYXlhLlZpZXcge1xyXG5cdFx0cHVibGljIGJ0bl91c2VyOkxheWEuSW1hZ2U7XG5cdFx0cHVibGljIHR4dF9sZXZlbDpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfSW5jb21lOkxheWEuTGFiZWw7XG5cdFx0cHVibGljIGltZ0dvbGQ6TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIHR4dF9nb2xkOkxheWEuTGFiZWw7XG5cdFx0cHVibGljIGltZ0RpYW1vbmQ6TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIHR4dF9kaWFtb25kOkxheWEuTGFiZWw7XG5cdFx0cHVibGljIGV4cEJhcjpMYXlhLlByb2dyZXNzQmFyO1xuICAgICAgICBjb25zdHJ1Y3RvcigpeyBzdXBlcigpfVxyXG4gICAgICAgIGNyZWF0ZUNoaWxkcmVuKCk6dm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLmNyZWF0ZUNoaWxkcmVuKCk7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZFNjZW5lKFwibW9kdWxlVmlldy9oYWxsL0N1cnJlbmN5Vmlld1wiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3LmhhbGwuQ3VycmVuY3lWaWV3VUlcIixDdXJyZW5jeVZpZXdVSSk7XHJcbiAgICBleHBvcnQgY2xhc3MgSGFsbFNjZW5lVUkgZXh0ZW5kcyBMYXlhLlNjZW5lIHtcclxuXHRcdHB1YmxpYyBib3hfZmFyZ3JvdW5kOkxheWEuQm94O1xuXHRcdHB1YmxpYyBmYXJncm91bmRPbmU6TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIGZhcmdyb3VuZFR3bzpMYXlhLlNwcml0ZTtcblx0XHRwdWJsaWMgYm94X2ZvcmVncm91bmQ6TGF5YS5Cb3g7XG5cdFx0cHVibGljIGZvcmVncm91bmRPbmU6TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIGZvcmVncm91bmRUd286TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIGJveF9vYnN0YWNsZTpMYXlhLkJveDtcblx0XHRwdWJsaWMgb2JzdGFjbGVPbmU6TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIG9ic3RhY2xlVHdvOkxheWEuU3ByaXRlO1xuXHRcdHB1YmxpYyBiZWdpbkV2ZW50VmlldzpMYXlhLlZpZXc7XG5cdFx0cHVibGljIGltZ0RlbGV0ZTpMYXlhLlNwcml0ZTtcblx0XHRwdWJsaWMgbWFwX25hbWU6TGF5YS5JbWFnZTtcblx0XHRwdWJsaWMgdHh0X21hcE5hbWU6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgYnRuX3JlY3J1aXQ6TGF5YS5CdXR0b247XG5cdFx0cHVibGljIHR4dF9wcmljZTpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfbGV2ZWw6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgYnRuX2hlcm9TdG9yZTpMYXlhLkJ1dHRvbjtcblx0XHRwdWJsaWMgaW1nQmF0dGxlQ291bnQ6TGF5YS5JbWFnZTtcblx0XHRwdWJsaWMgdHh0X2JhdHRsZUNvdW50OkxheWEuTGFiZWw7XG5cdFx0cHVibGljIGltZ0JhdHRsZUdvbGQ6TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIGJ0bl9hY2M6TGF5YS5CdXR0b247XG5cdFx0cHVibGljIGltZ0FjY1RpcHM6TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIGltZ0FjY2U6TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIHR4dF9hY2NUaW1lczpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyBpbWdBY2NBZHY6TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIGJ0bl9zaG9wOkxheWEuQnV0dG9uO1xuXHRcdHB1YmxpYyBpbWdGcmVlOkxheWEuSW1hZ2U7XG5cdFx0cHVibGljIGltZ0hlYWQ6TGF5YS5JbWFnZTtcblx0XHRwdWJsaWMgbGlzdHNfaGVhZDpMYXlhLkxpc3Q7XG5cdFx0cHVibGljIHN1cnBhc3NWaWV3OmxheWEudWkuV1hPcGVuRGF0YVZpZXdlcjtcblx0XHRwdWJsaWMgbGlzdF9idG46TGF5YS5MaXN0O1xuICAgICAgICBjb25zdHJ1Y3RvcigpeyBzdXBlcigpfVxyXG4gICAgICAgIGNyZWF0ZUNoaWxkcmVuKCk6dm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLmNyZWF0ZUNoaWxkcmVuKCk7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZFNjZW5lKFwibW9kdWxlVmlldy9oYWxsL0hhbGxTY2VuZVwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3LmhhbGwuSGFsbFNjZW5lVUlcIixIYWxsU2NlbmVVSSk7XHJcbiAgICBleHBvcnQgY2xhc3MgSGVyb1RpcHNVSSBleHRlbmRzIExheWEuVmlldyB7XHJcblx0XHRwdWJsaWMgdHh0X25hbWU6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgdHh0X3NlY0NvaW46TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgdHh0X3NlbGxQcmljZTpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfc3BlZWQ6TGF5YS5MYWJlbDtcbiAgICAgICAgY29uc3RydWN0b3IoKXsgc3VwZXIoKX1cclxuICAgICAgICBjcmVhdGVDaGlsZHJlbigpOnZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5jcmVhdGVDaGlsZHJlbigpO1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRTY2VuZShcIm1vZHVsZVZpZXcvaGFsbC9IZXJvVGlwc1wiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3LmhhbGwuSGVyb1RpcHNVSVwiLEhlcm9UaXBzVUkpO1xyXG4gICAgZXhwb3J0IGNsYXNzIE5ld0hlcm9WaWV3VUkgZXh0ZW5kcyBMYXlhLlZpZXcge1xyXG5cdFx0cHVibGljIHR4dF9uYW1lOkxheWEuTGFiZWw7XG5cdFx0cHVibGljIHR4dF9leHA6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgdHh0X2luY29tZTpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyBidG5fcmV3YXJkOkxheWEuQnV0dG9uO1xuXHRcdHB1YmxpYyB0eHRfcHJpY2U6TGF5YS5MYWJlbDtcbiAgICAgICAgY29uc3RydWN0b3IoKXsgc3VwZXIoKX1cclxuICAgICAgICBjcmVhdGVDaGlsZHJlbigpOnZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5jcmVhdGVDaGlsZHJlbigpO1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRTY2VuZShcIm1vZHVsZVZpZXcvaGFsbC9OZXdIZXJvVmlld1wiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3LmhhbGwuTmV3SGVyb1ZpZXdVSVwiLE5ld0hlcm9WaWV3VUkpO1xyXG4gICAgZXhwb3J0IGNsYXNzIFVzZXJJbmZvVmlld1VJIGV4dGVuZHMgTGF5YS5WaWV3IHtcclxuXHRcdHB1YmxpYyBleHBCYXI6TGF5YS5Qcm9ncmVzc0Jhcjtcblx0XHRwdWJsaWMgdHh0X2V4cDpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfcHJpY2U6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgdHh0X2hlcm9Db3VudDpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfYmF0dGxlQ291bnQ6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgdHh0X3VzZXJJZDpMYXlhLkxhYmVsO1xuICAgICAgICBjb25zdHJ1Y3RvcigpeyBzdXBlcigpfVxyXG4gICAgICAgIGNyZWF0ZUNoaWxkcmVuKCk6dm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLmNyZWF0ZUNoaWxkcmVuKCk7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZFNjZW5lKFwibW9kdWxlVmlldy9oYWxsL1VzZXJJbmZvVmlld1wiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3LmhhbGwuVXNlckluZm9WaWV3VUlcIixVc2VySW5mb1ZpZXdVSSk7XHJcbn1cclxuZXhwb3J0IG1vZHVsZSB1aS5tb2R1bGVWaWV3LmhhbGwuaXRlbSB7XHJcbiAgICBleHBvcnQgY2xhc3MgSGVhZEl0ZW1VSSBleHRlbmRzIExheWEuVmlldyB7XHJcblx0XHRwdWJsaWMgaW1nSGVhZDpMYXlhLkltYWdlO1xuXHRcdHB1YmxpYyBpbWdMb2NrOkxheWEuU3ByaXRlO1xuXHRcdHB1YmxpYyByZXZpdmVCYXI6TGF5YS5Qcm9ncmVzc0Jhcjtcblx0XHRwdWJsaWMgaHBCYXI6TGF5YS5Qcm9ncmVzc0Jhcjtcblx0XHRwdWJsaWMgYm94TGV2ZWw6TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIHR4dF9sZXZlbDpMYXlhLkxhYmVsO1xuICAgICAgICBjb25zdHJ1Y3RvcigpeyBzdXBlcigpfVxyXG4gICAgICAgIGNyZWF0ZUNoaWxkcmVuKCk6dm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLmNyZWF0ZUNoaWxkcmVuKCk7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZFNjZW5lKFwibW9kdWxlVmlldy9oYWxsL2l0ZW0vSGVhZEl0ZW1cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgUkVHKFwidWkubW9kdWxlVmlldy5oYWxsLml0ZW0uSGVhZEl0ZW1VSVwiLEhlYWRJdGVtVUkpO1xyXG4gICAgZXhwb3J0IGNsYXNzIFN5c3RlbUJ0blVJIGV4dGVuZHMgTGF5YS5WaWV3IHtcclxuXHRcdHB1YmxpYyBidG5fc3lzdGVtOkxheWEuQnV0dG9uO1xuXHRcdHB1YmxpYyBpbWdSZW5Qb2ludDpMYXlhLlNwcml0ZTtcbiAgICAgICAgY29uc3RydWN0b3IoKXsgc3VwZXIoKX1cclxuICAgICAgICBjcmVhdGVDaGlsZHJlbigpOnZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5jcmVhdGVDaGlsZHJlbigpO1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRTY2VuZShcIm1vZHVsZVZpZXcvaGFsbC9pdGVtL1N5c3RlbUJ0blwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3LmhhbGwuaXRlbS5TeXN0ZW1CdG5VSVwiLFN5c3RlbUJ0blVJKTtcclxufVxyXG5leHBvcnQgbW9kdWxlIHVpLm1vZHVsZVZpZXcubG9naW4ge1xyXG4gICAgZXhwb3J0IGNsYXNzIExvZ2luU2NlbmVVSSBleHRlbmRzIExheWEuU2NlbmUge1xyXG5cdFx0cHVibGljIHR4dF9wcm86TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgaW1nU3RhcnQ6TGF5YS5TcHJpdGU7XG5cdFx0cHVibGljIHR4dF90aXBzOkxheWEuTGFiZWw7XG4gICAgICAgIGNvbnN0cnVjdG9yKCl7IHN1cGVyKCl9XHJcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4oKTp2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuY3JlYXRlQ2hpbGRyZW4oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkU2NlbmUoXCJtb2R1bGVWaWV3L2xvZ2luL0xvZ2luU2NlbmVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgUkVHKFwidWkubW9kdWxlVmlldy5sb2dpbi5Mb2dpblNjZW5lVUlcIixMb2dpblNjZW5lVUkpO1xyXG59XHJcbmV4cG9ydCBtb2R1bGUgdWkubW9kdWxlVmlldy5sdWNrUHJpemUge1xyXG4gICAgZXhwb3J0IGNsYXNzIEx1Y2tQcml6ZVJld2FyZFZpZXdVSSBleHRlbmRzIExheWEuVmlldyB7XHJcblx0XHRwdWJsaWMgaW1nSXRlbUJnOkxheWEuU3ByaXRlO1xuXHRcdHB1YmxpYyBpbWdJY29uOkxheWEuSW1hZ2U7XG5cdFx0cHVibGljIHR4dF9uYW1lOkxheWEuTGFiZWw7XG4gICAgICAgIGNvbnN0cnVjdG9yKCl7IHN1cGVyKCl9XHJcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4oKTp2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuY3JlYXRlQ2hpbGRyZW4oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkU2NlbmUoXCJtb2R1bGVWaWV3L2x1Y2tQcml6ZS9MdWNrUHJpemVSZXdhcmRWaWV3XCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFJFRyhcInVpLm1vZHVsZVZpZXcubHVja1ByaXplLkx1Y2tQcml6ZVJld2FyZFZpZXdVSVwiLEx1Y2tQcml6ZVJld2FyZFZpZXdVSSk7XHJcbiAgICBleHBvcnQgY2xhc3MgTHVja1ByaXplVmlld1VJIGV4dGVuZHMgTGF5YS5WaWV3IHtcclxuXHRcdHB1YmxpYyBpbWdCZzpMYXlhLlNwcml0ZTtcblx0XHRwdWJsaWMgYnRuX3N0YXJ0OkxheWEuQnV0dG9uO1xuXHRcdHB1YmxpYyBpbWdEaWFtb25kOkxheWEuU3ByaXRlO1xuXHRcdHB1YmxpYyB0eHRfZGlhbW9uZDpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfZGVzOkxheWEuTGFiZWw7XG5cdFx0cHVibGljIHR4dF90aW1lOkxheWEuTGFiZWw7XG4gICAgICAgIGNvbnN0cnVjdG9yKCl7IHN1cGVyKCl9XHJcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4oKTp2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuY3JlYXRlQ2hpbGRyZW4oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkU2NlbmUoXCJtb2R1bGVWaWV3L2x1Y2tQcml6ZS9MdWNrUHJpemVWaWV3XCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFJFRyhcInVpLm1vZHVsZVZpZXcubHVja1ByaXplLkx1Y2tQcml6ZVZpZXdVSVwiLEx1Y2tQcml6ZVZpZXdVSSk7XHJcbn1cclxuZXhwb3J0IG1vZHVsZSB1aS5tb2R1bGVWaWV3LnJhbmsge1xyXG4gICAgZXhwb3J0IGNsYXNzIFJhbmtJdGVtVUkgZXh0ZW5kcyBMYXlhLlZpZXcge1xyXG5cdFx0cHVibGljIGltZ0hlYWQ6TGF5YS5JbWFnZTtcblx0XHRwdWJsaWMgaW1nUmFuazpMYXlhLkltYWdlO1xuXHRcdHB1YmxpYyBib3hfcHJpY2U6TGF5YS5Cb3g7XG5cdFx0cHVibGljIHR4dF9zY29yZTpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfcmFuazpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfcG9zaXRpb246TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgdHh0X25hbWU6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgYm94X3RpdGxlOkxheWEuQm94O1xuXHRcdHB1YmxpYyB0eHRfdGl0bGU6TGF5YS5MYWJlbDtcbiAgICAgICAgY29uc3RydWN0b3IoKXsgc3VwZXIoKX1cclxuICAgICAgICBjcmVhdGVDaGlsZHJlbigpOnZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5jcmVhdGVDaGlsZHJlbigpO1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRTY2VuZShcIm1vZHVsZVZpZXcvcmFuay9SYW5rSXRlbVwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3LnJhbmsuUmFua0l0ZW1VSVwiLFJhbmtJdGVtVUkpO1xyXG4gICAgZXhwb3J0IGNsYXNzIFJhbmtWaWV3VUkgZXh0ZW5kcyBMYXlhLlZpZXcge1xyXG5cdFx0cHVibGljIHR4dF9ub1Jhbms6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgbGlzdHM6TGF5YS5MaXN0O1xuXHRcdHB1YmxpYyB0YWJfcmFuazpMYXlhLlRhYjtcblx0XHRwdWJsaWMgaW1nTXlSYW5rOkxheWEuU3ByaXRlO1xuXHRcdHB1YmxpYyB0eHRfbXlSYW5rOkxheWEuTGFiZWw7XG5cdFx0cHVibGljIGltZ0Jhc2U6TGF5YS5TcHJpdGU7XG4gICAgICAgIGNvbnN0cnVjdG9yKCl7IHN1cGVyKCl9XHJcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4oKTp2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuY3JlYXRlQ2hpbGRyZW4oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkU2NlbmUoXCJtb2R1bGVWaWV3L3JhbmsvUmFua1ZpZXdcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgUkVHKFwidWkubW9kdWxlVmlldy5yYW5rLlJhbmtWaWV3VUlcIixSYW5rVmlld1VJKTtcclxufVxyXG5leHBvcnQgbW9kdWxlIHVpLm1vZHVsZVZpZXcuc2hvcCB7XHJcbiAgICBleHBvcnQgY2xhc3MgU2hvcEl0ZW1VSSBleHRlbmRzIExheWEuVmlldyB7XHJcblx0XHRwdWJsaWMgaW1nSWNvbjpMYXlhLkltYWdlO1xuXHRcdHB1YmxpYyBidG5fYnV5RGlhbW9uZDpMYXlhLkJ1dHRvbjtcblx0XHRwdWJsaWMgYnRuX2FkdjpMYXlhLkJ1dHRvbjtcblx0XHRwdWJsaWMgYnRuX2J1eTpMYXlhLkJ1dHRvbjtcblx0XHRwdWJsaWMgdHh0X3ByaWNlOkxheWEuTGFiZWw7XG5cdFx0cHVibGljIGJ0bl9idXlMb2NrOkxheWEuQnV0dG9uO1xuXHRcdHB1YmxpYyBpbWdIZXJvOkxheWEuSW1hZ2U7XG5cdFx0cHVibGljIHR4dF91bmxvY2tMZXZlbDpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyBib3hOYW1lOkxheWEuQm94O1xuXHRcdHB1YmxpYyBpbWdOYW1lOkxheWEuU3ByaXRlO1xuXHRcdHB1YmxpYyB0eHRfbmFtZTpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfbGV2ZWw6TGF5YS5MYWJlbDtcbiAgICAgICAgY29uc3RydWN0b3IoKXsgc3VwZXIoKX1cclxuICAgICAgICBjcmVhdGVDaGlsZHJlbigpOnZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5jcmVhdGVDaGlsZHJlbigpO1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRTY2VuZShcIm1vZHVsZVZpZXcvc2hvcC9TaG9wSXRlbVwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3LnNob3AuU2hvcEl0ZW1VSVwiLFNob3BJdGVtVUkpO1xyXG4gICAgZXhwb3J0IGNsYXNzIFNob3BWaWV3VUkgZXh0ZW5kcyBMYXlhLlZpZXcge1xyXG5cdFx0cHVibGljIGxpc3RzOkxheWEuTGlzdDtcblx0XHRwdWJsaWMgdHh0X2dvbGQ6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgdHh0X2RpYW1vbmQ6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgYnRuX2Nsb3NlOkxheWEuQnV0dG9uO1xuICAgICAgICBjb25zdHJ1Y3RvcigpeyBzdXBlcigpfVxyXG4gICAgICAgIGNyZWF0ZUNoaWxkcmVuKCk6dm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLmNyZWF0ZUNoaWxkcmVuKCk7XHJcbiAgICAgICAgICAgIHRoaXMubG9hZFNjZW5lKFwibW9kdWxlVmlldy9zaG9wL1Nob3BWaWV3XCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFJFRyhcInVpLm1vZHVsZVZpZXcuc2hvcC5TaG9wVmlld1VJXCIsU2hvcFZpZXdVSSk7XHJcbn1cclxuZXhwb3J0IG1vZHVsZSB1aS5tb2R1bGVWaWV3LnRhc2sge1xyXG4gICAgZXhwb3J0IGNsYXNzIFRhc2tJdGVtVUkgZXh0ZW5kcyBMYXlhLlZpZXcge1xyXG5cdFx0cHVibGljIGJ0bl9nZXQ6TGF5YS5CdXR0b247XG5cdFx0cHVibGljIHR4dF90aXRsZTpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfZGlhbW9uZDpMYXlhLkxhYmVsO1xuXHRcdHB1YmxpYyB0eHRfZXh0cmE6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgYnRuX2dvOkxheWEuTGFiZWw7XG4gICAgICAgIGNvbnN0cnVjdG9yKCl7IHN1cGVyKCl9XHJcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4oKTp2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuY3JlYXRlQ2hpbGRyZW4oKTtcclxuICAgICAgICAgICAgdGhpcy5sb2FkU2NlbmUoXCJtb2R1bGVWaWV3L3Rhc2svVGFza0l0ZW1cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgUkVHKFwidWkubW9kdWxlVmlldy50YXNrLlRhc2tJdGVtVUlcIixUYXNrSXRlbVVJKTtcclxuICAgIGV4cG9ydCBjbGFzcyBUYXNrVmlld1VJIGV4dGVuZHMgTGF5YS5WaWV3IHtcclxuXHRcdHB1YmxpYyBsaXN0czpMYXlhLkxpc3Q7XG5cdFx0cHVibGljIHR4dF9ub1Rhc2s6TGF5YS5MYWJlbDtcbiAgICAgICAgY29uc3RydWN0b3IoKXsgc3VwZXIoKX1cclxuICAgICAgICBjcmVhdGVDaGlsZHJlbigpOnZvaWQge1xyXG4gICAgICAgICAgICBzdXBlci5jcmVhdGVDaGlsZHJlbigpO1xyXG4gICAgICAgICAgICB0aGlzLmxvYWRTY2VuZShcIm1vZHVsZVZpZXcvdGFzay9UYXNrVmlld1wiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5tb2R1bGVWaWV3LnRhc2suVGFza1ZpZXdVSVwiLFRhc2tWaWV3VUkpO1xyXG59XHIiXX0=
